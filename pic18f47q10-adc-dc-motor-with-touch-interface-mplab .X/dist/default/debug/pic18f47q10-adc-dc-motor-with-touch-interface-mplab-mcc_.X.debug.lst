

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed May 08 13:37:39 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1,inline
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,inline
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1,inline
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1,inline
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1
   120                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1,inline
   122                           	psect	text104,global,reloc=2,class=CODE,delta=1
   123                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   124                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   125                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   126                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   127   000000                     
   128                           ; Generated 23/02/2024 GMT
   129                           ; 
   130                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   131                           ; All rights reserved.
   132                           ; 
   133                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   134                           ; 
   135                           ; Redistribution and use in source and binary forms, with or without modification, are
   136                           ; permitted provided that the following conditions are met:
   137                           ; 
   138                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   139                           ;        conditions and the following disclaimer.
   140                           ; 
   141                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   142                           ;        of conditions and the following disclaimer in the documentation and/or other
   143                           ;        materials provided with the distribution. Publication is not required when
   144                           ;        this file is used in an embedded application.
   145                           ; 
   146                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   147                           ;        software without specific prior written permission.
   148                           ; 
   149                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   150                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   151                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   152                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   153                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   154                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   155                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   156                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   157                           ; 
   158                           ; 
   159                           ; Code-generator required, PIC18F47Q10 Definitions
   160                           ; 
   161                           ; SFR Addresses
   162   000000                     
   163 ;; Function _TMR2_Start is unused but had its address taken
   164   000000                     
   165 ;; Function _TMR2_Stop is unused but had its address taken
   166   000000                     
   167 ;; Function _TMR2_PeriodCountSet is unused but had its address taken
   168   000000                     
   169 ;; Function _TMR2_DefaultOverflowCallback is unused but had its address taken
   170   000000                     
   171 ;; Function _TMR2_Tasks is unused but had its address taken
   172   000000                     
   173 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   174   000000                     
   175 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
   176   000000                     
   177 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
   178   000000                     
   179                           	psect	idataBANK0
   180   003BAA                     __pidataBANK0:
   181                           	callstack 0
   182                           
   183                           ;initializer for _Button_StateMachine
   184   003BAA  16                 	db	low _Button_State_Initializing
   185   003BAB  28                 	db	high _Button_State_Initializing
   186   003BAC  00                 	db	low (_Button_State_Initializing shr (0+16))
   187   003BAD  4A                 	db	low _Button_State_NotPressed
   188   003BAE  15                 	db	high _Button_State_NotPressed
   189   003BAF  00                 	db	low (_Button_State_NotPressed shr (0+16))
   190   003BB0  36                 	db	low _Button_State_Pressed
   191   003BB1  24                 	db	high _Button_State_Pressed
   192   003BB2  00                 	db	low (_Button_State_Pressed shr (0+16))
   193                           
   194                           ;initializer for _freq_hop
   195   003BB3  00                 	db	0
   196   003BB4  1E                 	db	30
   197   003BB5  3C                 	db	60
   198                           
   199                           ;initializer for _callback_sampled
   200   003BB6  E4                 	db	low _Sensor_DefaultCallback
   201   003BB7  3D                 	db	high _Sensor_DefaultCallback
   202   003BB8  00                 	db	low (_Sensor_DefaultCallback shr (0+16))
   203                           
   204                           ;initializer for _callback_released
   205   003BB9  E2                 	db	low _Slider_DefaultCallback
   206   003BBA  3D                 	db	high _Slider_DefaultCallback
   207   003BBB  00                 	db	low (_Slider_DefaultCallback shr (0+16))
   208                           
   209                           ;initializer for _callback_pressed@mtouch_slider$F1529
   210   003BBC  E2                 	db	low _Slider_DefaultCallback
   211   003BBD  3D                 	db	high _Slider_DefaultCallback
   212   003BBE  00                 	db	low (_Slider_DefaultCallback shr (0+16))
   213                           
   214                           ;initializer for _callback_position_changed
   215   003BBF  E2                 	db	low _Slider_DefaultCallback
   216   003BC0  3D                 	db	high _Slider_DefaultCallback
   217   003BC1  00                 	db	low (_Slider_DefaultCallback shr (0+16))
   218                           
   219                           ;initializer for _callback_notPressed
   220   003BC2  E6                 	db	low _Button_DefaultCallback
   221   003BC3  3D                 	db	high _Button_DefaultCallback
   222   003BC4  00                 	db	low (_Button_DefaultCallback shr (0+16))
   223                           
   224                           ;initializer for _callback_pressed
   225   003BC5  E6                 	db	low _Button_DefaultCallback
   226   003BC6  3D                 	db	high _Button_DefaultCallback
   227   003BC7  00                 	db	low (_Button_DefaultCallback shr (0+16))
   228                           
   229                           	psect	idataBANK1
   230   003D12                     __pidataBANK1:
   231                           	callstack 0
   232                           
   233                           ;initializer for _mtouch_slider
   234   003D12  00                 	db	0
   235   003D13  00                 	db	0
   236   003D14  02                 	db	2
   237   003D15  03                 	db	3
   238   003D16  81                 	db	129
   239   003D17  08                 	db	8
   240   003D18  0064               	dw	100
   241   003D1A  00                 	db	0
   242   003D1B  00                 	db	0
   243   003D1C  0000               	dw	0
   244   003D1E  0000               	dw	0
   245   003D20  0000               	dw	0
   246   003D22  00                 	db	0
   247                           
   248                           	psect	smallconst
   249   000F00                     __psmallconst:
   250                           	callstack 0
   251   000F00  00                 	db	0
   252   000F01                     _Timer2:
   253                           	callstack 0
   254   000F01  4A                 	db	low _TMR2_Initialize
   255   000F02  3A                 	db	high _TMR2_Initialize
   256   000F03  00                 	db	low (_TMR2_Initialize shr (0+16))
   257   000F04  00                 	db	0
   258   000F05  00                 	db	0
   259   000F06  00                 	db	0
   260   000F07  00                 	db	0
   261   000F08  00                 	db	0
   262   000F09  00                 	db	0
   263   000F0A  00                 	db	0
   264   000F0B  00                 	db	0
   265   000F0C  00                 	db	0
   266   000F0D  24                 	db	low _TMR2_OverflowCallbackRegister
   267   000F0E  3D                 	db	high _TMR2_OverflowCallbackRegister
   268   000F0F  00                 	db	low (_TMR2_OverflowCallbackRegister shr (0+16))
   269   000F10  00                 	db	0
   270   000F11  00                 	db	0
   271   000F12  00                 	db	0
   272   000F13                     __end_of_Timer2:
   273                           	callstack 0
   274   000F13                     _mtouch_button_init:
   275                           	callstack 0
   276   000F13  00                 	db	0
   277   000F14  00                 	db	0
   278   000F15  00                 	db	0
   279   000F16  00                 	db	0
   280   000F17  0000               	dw	0
   281   000F19  0000               	dw	0
   282   000F1B  0000               	dw	0
   283   000F1D  00                 	db	0
   284   000F1E  0000               	dw	0
   285   000F20  0000               	dw	0
   286   000F22  64                 	db	100
   287   000F23  01                 	db	1
   288   000F24  01                 	db	1
   289   000F25  01                 	db	1
   290   000F26  00                 	db	0
   291   000F27  00                 	db	0
   292   000F28  0000               	dw	0
   293   000F2A  0000               	dw	0
   294   000F2C  0000               	dw	0
   295   000F2E  00                 	db	0
   296   000F2F  0000               	dw	0
   297   000F31  0000               	dw	0
   298   000F33  64                 	db	100
   299   000F34  01                 	db	1
   300   000F35  02                 	db	2
   301   000F36  02                 	db	2
   302   000F37  00                 	db	0
   303   000F38  01                 	db	1
   304   000F39  0000               	dw	0
   305   000F3B  0000               	dw	0
   306   000F3D  0000               	dw	0
   307   000F3F  00                 	db	0
   308   000F40  0000               	dw	0
   309   000F42  0000               	dw	0
   310   000F44  64                 	db	100
   311   000F45  01                 	db	1
   312   000F46  03                 	db	3
   313   000F47  03                 	db	3
   314   000F48  00                 	db	0
   315   000F49  01                 	db	1
   316   000F4A  0000               	dw	0
   317   000F4C  0000               	dw	0
   318   000F4E  0000               	dw	0
   319   000F50  00                 	db	0
   320   000F51  0000               	dw	0
   321   000F53  0000               	dw	0
   322   000F55  64                 	db	100
   323   000F56  01                 	db	1
   324   000F57  04                 	db	4
   325   000F58  04                 	db	4
   326   000F59  00                 	db	0
   327   000F5A  01                 	db	1
   328   000F5B  0000               	dw	0
   329   000F5D  0000               	dw	0
   330   000F5F  0000               	dw	0
   331   000F61  00                 	db	0
   332   000F62  0000               	dw	0
   333   000F64  0000               	dw	0
   334   000F66  64                 	db	100
   335   000F67  01                 	db	1
   336   000F68                     __end_of_mtouch_button_init:
   337                           	callstack 0
   338   000F68                     _mtouch_sensor_init:
   339                           	callstack 0
   340   000F68  00                 	db	0
   341   000F69  02                 	db	2
   342   000F6A  C0                 	db	192
   343   000F6B  40                 	db	64
   344   000F6C  0020               	dw	32
   345   000F6E  00                 	db	0
   346   000F6F  0000               	dw	0
   347   000F71  00                 	db	0
   348   000F72  01                 	db	1
   349   000F73  1F                 	db	31
   350   000F74  C0                 	db	192
   351   000F75  40                 	db	64
   352   000F76  0020               	dw	32
   353   000F78  00                 	db	0
   354   000F79  0000               	dw	0
   355   000F7B  00                 	db	0
   356   000F7C  02                 	db	2
   357   000F7D  0C                 	db	12
   358   000F7E  C0                 	db	192
   359   000F7F  40                 	db	64
   360   000F80  0020               	dw	32
   361   000F82  00                 	db	0
   362   000F83  0000               	dw	0
   363   000F85  00                 	db	0
   364   000F86  03                 	db	3
   365   000F87  05                 	db	5
   366   000F88  C0                 	db	192
   367   000F89  40                 	db	64
   368   000F8A  0020               	dw	32
   369   000F8C  00                 	db	0
   370   000F8D  0000               	dw	0
   371   000F8F  00                 	db	0
   372   000F90  04                 	db	4
   373   000F91  04                 	db	4
   374   000F92  C0                 	db	192
   375   000F93  40                 	db	64
   376   000F94  0020               	dw	32
   377   000F96  00                 	db	0
   378   000F97  0000               	dw	0
   379   000F99  00                 	db	0
   380   000F9A                     __end_of_mtouch_sensor_init:
   381                           	callstack 0
   382   000000                     _IOCEF	set	3874
   383   000000                     _IOCEN	set	3875
   384   000000                     _IOCEP	set	3876
   385   000000                     _IOCCF	set	3861
   386   000000                     _IOCCN	set	3862
   387   000000                     _IOCCP	set	3863
   388   000000                     _IOCBF	set	3853
   389   000000                     _IOCBN	set	3854
   390   000000                     _IOCBP	set	3855
   391   000000                     _INLVLE	set	3877
   392   000000                     _INLVLD	set	3869
   393   000000                     _INLVLC	set	3864
   394   000000                     _INLVLB	set	3856
   395   000000                     _SLRCONE	set	3878
   396   000000                     _SLRCOND	set	3870
   397   000000                     _SLRCONC	set	3865
   398   000000                     _SLRCONB	set	3857
   399   000000                     _ODCONE	set	3879
   400   000000                     _ODCOND	set	3871
   401   000000                     _ODCONC	set	3866
   402   000000                     _ODCONB	set	3858
   403   000000                     _WPUE	set	3880
   404   000000                     _WPUD	set	3872
   405   000000                     _WPUC	set	3867
   406   000000                     _WPUB	set	3859
   407   000000                     _ANSELE	set	3881
   408   000000                     _ANSELD	set	3873
   409   000000                     _ANSELC	set	3868
   410   000000                     _ANSELB	set	3860
   411   000000                     _T2CON	set	4028
   412   000000                     _ADERRL	set	3945
   413   000000                     _ADERRH	set	3946
   414   000000                     _ADPREVL	set	3932
   415   000000                     _ADPREVH	set	3933
   416   000000                     _ADFLTRL	set	3949
   417   000000                     _ADFLTRH	set	3950
   418   000000                     _ADACCL	set	3947
   419   000000                     _ADACCH	set	3948
   420   000000                     _ADCNT	set	3938
   421   000000                     _ADRESL	set	3934
   422   000000                     _ADRESH	set	3935
   423   000000                     _ADACQ	set	3927
   424   000000                     _ADCON0	set	3931
   425   000000                     _ADCLK	set	3922
   426   000000                     _ADSTAT	set	3936
   427   000000                     _ADCON3	set	3926
   428   000000                     _ADCON2	set	3925
   429   000000                     _ADPRE	set	3929
   430   000000                     _ADSTPTH	set	3940
   431   000000                     _ADUTHH	set	3944
   432   000000                     _ADUTHL	set	3943
   433   000000                     _ADLTHH	set	3942
   434   000000                     _OSCTUNE	set	3800
   435   000000                     _OSCFRQ	set	3801
   436   000F9A  00                 	db	0	; dummy byte at the end
   437   000000                     
   438                           	psect	nvBANK0
   439   0000FA                     __pnvBANK0:
   440                           	callstack 0
   441   0000FA                     _TMR2_OverflowCallback:
   442                           	callstack 0
   443   0000FA                     	ds	3
   444   0000FD                     _ADCC_ADTI_InterruptHandler:
   445                           	callstack 0
   446   0000FD                     	ds	3
   447   000000                     _ADCON1bits	set	3924
   448   000000                     _ADCON2bits	set	3925
   449   000000                     _ADCON3bits	set	3926
   450   000000                     _ADCON0bits	set	3931
   451   000000                     _ADFLTR	set	3949
   452   000000                     _ADACC	set	3947
   453   000000                     _LATBbits	set	3971
   454   000000                     _LATCbits	set	3972
   455   000000                     _LATDbits	set	3973
   456   000000                     _TRISBbits	set	3976
   457   000000                     _TRISDbits	set	3978
   458   000000                     _TRISAbits	set	3975
   459   000000                     _PR2	set	4027
   460   000000                     _TMR2	set	4026
   461   000000                     _T2CONbits	set	4028
   462   000000                     _T2RSTbits	set	4031
   463   000000                     _T2HLTbits	set	4029
   464   000000                     _ADSTATbits	set	3936
   465   000000                     _GIE	set	32663
   466   000000                     _PIE0bits	set	3773
   467   000000                     _PIE1bits	set	3774
   468   000000                     _PIR1bits	set	3782
   469   000000                     _OSCCON1	set	3795
   470   000000                     _OSCCON3	set	3797
   471   000000                     _OSCEN	set	3799
   472   000000                     _RA3PPS	set	3813
   473   000000                     _INLVLA	set	3848
   474   000000                     _SLRCONA	set	3849
   475   000000                     _ODCONA	set	3850
   476   000000                     _WPUA	set	3851
   477   000000                     _ANSELA	set	3852
   478   000000                     _ADACT	set	3921
   479   000000                     _ADREF	set	3923
   480   000000                     _ADCON1	set	3924
   481   000000                     _ADCAP	set	3928
   482   000000                     _ADPCH	set	3930
   483   000000                     _ADRPT	set	3937
   484   000000                     _ADSTPTL	set	3939
   485   000000                     _ADLTHL	set	3941
   486   000000                     _PIR4bits	set	3785
   487   000000                     _PIR0bits	set	3781
   488   000000                     _LATA	set	3970
   489   000000                     _T2TMR	set	4026
   490   000000                     _T2PR	set	4027
   491   000000                     _T2HLT	set	4029
   492   000000                     _T2CLKCON	set	4030
   493   000000                     _INTCONbits	set	4082
   494   000000                     _T2RST	set	4031
   495   000000                     _PWM4DCL	set	3999
   496   000000                     _PWM4DCH	set	4000
   497   000000                     _PWM4CON	set	4001
   498   000000                     _CCPTMRSbits	set	4013
   499   000000                     _TRISE	set	3979
   500   000000                     _TRISD	set	3978
   501   000000                     _TRISC	set	3977
   502   000000                     _TRISB	set	3976
   503   000000                     _TRISA	set	3975
   504   000000                     _LATE	set	3974
   505   000000                     _LATD	set	3973
   506   000000                     _LATC	set	3972
   507   000000                     _LATB	set	3971
   508   000000                     _IOCAF	set	3845
   509   000000                     _IOCAN	set	3846
   510   000000                     _IOCAP	set	3847
   511                           
   512                           ; #config settings
   513                           
   514                           	psect	cinit
   515   0031EE                     __pcinit:
   516                           	callstack 0
   517   0031EE                     start_initialization:
   518                           	callstack 0
   519   0031EE                     __initialization:
   520                           	callstack 0
   521                           
   522                           ; Initialize objects allocated to BANK1 (17 bytes)
   523                           ; load TBLPTR registers with __pidataBANK1
   524   0031EE  0E12               	movlw	low __pidataBANK1
   525   0031F0  6EF6               	movwf	tblptrl,c
   526   0031F2  0E3D               	movlw	high __pidataBANK1
   527   0031F4  6EF7               	movwf	tblptrh,c
   528   0031F6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   529   0031F8  6EF8               	movwf	tblptru,c
   530   0031FA  EE01  F055         	lfsr	0,__pdataBANK1
   531   0031FE  EE10 F011          	lfsr	1,17
   532   003202                     copy_data0:
   533   003202  0009               	tblrd		*+
   534   003204  CFF5 FFEE          	movff	tablat,postinc0
   535   003208  50E5               	movf	postdec1,w,c
   536   00320A  50E1               	movf	fsr1l,w,c
   537   00320C  E1FA               	bnz	copy_data0
   538                           
   539                           ; Initialize objects allocated to BANK0 (30 bytes)
   540                           ; load TBLPTR registers with __pidataBANK0
   541   00320E  0EAA               	movlw	low __pidataBANK0
   542   003210  6EF6               	movwf	tblptrl,c
   543   003212  0E3B               	movlw	high __pidataBANK0
   544   003214  6EF7               	movwf	tblptrh,c
   545   003216  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   546   003218  6EF8               	movwf	tblptru,c
   547   00321A  EE00  F0CD         	lfsr	0,__pdataBANK0
   548   00321E  EE10 F01E          	lfsr	1,30
   549   003222                     copy_data1:
   550   003222  0009               	tblrd		*+
   551   003224  CFF5 FFEE          	movff	tablat,postinc0
   552   003228  50E5               	movf	postdec1,w,c
   553   00322A  50E1               	movf	fsr1l,w,c
   554   00322C  E1FA               	bnz	copy_data1
   555                           
   556                           ; Clear objects allocated to BANK1 (85 bytes)
   557   00322E  EE01  F000         	lfsr	0,__pbssBANK1
   558   003232  0E55               	movlw	85
   559   003234                     clear_0:
   560   003234  6AEE               	clrf	postinc0,c
   561   003236  06E8               	decf	wreg,f,c
   562   003238  E1FD               	bnz	clear_0
   563                           
   564                           ; Clear objects allocated to BANK0 (109 bytes)
   565   00323A  EE00  F060         	lfsr	0,__pbssBANK0
   566   00323E  0E6D               	movlw	109
   567   003240                     clear_1:
   568   003240  6AEE               	clrf	postinc0,c
   569   003242  06E8               	decf	wreg,f,c
   570   003244  E1FD               	bnz	clear_1
   571                           
   572                           ; Clear objects allocated to COMRAM (24 bytes)
   573   003246  EE00  F033         	lfsr	0,__pbssCOMRAM
   574   00324A  0E18               	movlw	24
   575   00324C                     clear_2:
   576   00324C  6AEE               	clrf	postinc0,c
   577   00324E  06E8               	decf	wreg,f,c
   578   003250  E1FD               	bnz	clear_2
   579   003252                     end_of_initialization:
   580                           	callstack 0
   581   003252                     __end_of__initialization:
   582                           	callstack 0
   583   003252  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   584   003254  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   585   003256  0100               	movlb	0
   586   003258  EF37  F01C         	goto	_main	;jump to C main() function
   587                           
   588                           	psect	bssCOMRAM
   589   000033                     __pbssCOMRAM:
   590                           	callstack 0
   591   000033                     _motorState:
   592                           	callstack 0
   593   000033                     	ds	2
   594   000035                     _state:
   595                           	callstack 0
   596   000035                     	ds	2
   597   000037                     _middle_signal:
   598                           	callstack 0
   599   000037                     	ds	2
   600   000039                     _right_signal:
   601                           	callstack 0
   602   000039                     	ds	2
   603   00003B                     _left_signal:
   604                           	callstack 0
   605   00003B                     	ds	2
   606   00003D                     _resol_value:
   607                           	callstack 0
   608   00003D                     	ds	2
   609   00003F                     _buttonNo:
   610                           	callstack 0
   611   00003F                     	ds	1
   612   000040                     _sample_delay:
   613                           	callstack 0
   614   000040                     	ds	1
   615   000041                     _freq_index:
   616                           	callstack 0
   617   000041                     	ds	1
   618   000042                     _lowpowerActivated:
   619                           	callstack 0
   620   000042                     	ds	1
   621   000043                     _scanInterrupted:
   622                           	callstack 0
   623   000043                     	ds	1
   624   000044                     _sampling_flag:
   625                           	callstack 0
   626   000044                     	ds	1
   627   000045                     _currentScanSensor:
   628                           	callstack 0
   629   000045                     	ds	1
   630   000046                     _wheel_sensor_middle_channel_zero:
   631                           	callstack 0
   632   000046                     	ds	1
   633   000047                     _middle_node:
   634                           	callstack 0
   635   000047                     	ds	1
   636   000048                     _mtouch_request_init:
   637                           	callstack 0
   638   000048                     	ds	1
   639   000049                     _mtouch_time_toScan:
   640                           	callstack 0
   641   000049                     	ds	1
   642   00004A                     _resol_bits:
   643                           	callstack 0
   644   00004A                     	ds	1
   645                           
   646                           	psect	bssBANK0
   647   000060                     __pbssBANK0:
   648                           	callstack 0
   649   000060                     _sensor_medianBuffer:
   650                           	callstack 0
   651   000060                     	ds	30
   652   00007E                     _packet_sample:
   653                           	callstack 0
   654   00007E                     	ds	10
   655   000088                     medianFilter@bufferIndex:
   656                           	callstack 0
   657   000088                     	ds	5
   658   00008D                     _BUTTON:
   659                           	callstack 0
   660   00008D                     	ds	4
   661   000091                     _INT2_InterruptHandler:
   662                           	callstack 0
   663   000091                     	ds	3
   664   000094                     _INT1_InterruptHandler:
   665                           	callstack 0
   666   000094                     	ds	3
   667   000097                     _INT0_InterruptHandler:
   668                           	callstack 0
   669   000097                     	ds	3
   670   00009A                     _sliderGroupStatus:
   671                           	callstack 0
   672   00009A                     	ds	1
   673   00009B                     _mtouch_sensor:
   674                           	callstack 0
   675   00009B                     	ds	50
   676                           
   677                           	psect	dataBANK0
   678   0000CD                     __pdataBANK0:
   679                           	callstack 0
   680   0000CD                     _Button_StateMachine:
   681                           	callstack 0
   682   0000CD                     	ds	9
   683   0000D6                     _freq_hop:
   684                           	callstack 0
   685   0000D6                     	ds	3
   686   0000D9                     _callback_sampled:
   687                           	callstack 0
   688   0000D9                     	ds	3
   689   0000DC                     _callback_released:
   690                           	callstack 0
   691   0000DC                     	ds	3
   692   0000DF                     _callback_pressed@mtouch_slider$F1529:
   693                           	callstack 0
   694   0000DF                     	ds	3
   695   0000E2                     _callback_position_changed:
   696                           	callstack 0
   697   0000E2                     	ds	3
   698   0000E5                     _callback_notPressed:
   699                           	callstack 0
   700   0000E5                     	ds	3
   701   0000E8                     _callback_pressed:
   702                           	callstack 0
   703   0000E8                     	ds	3
   704                           
   705                           	psect	bssBANK1
   706   000100                     __pbssBANK1:
   707                           	callstack 0
   708   000100                     _mtouch_button:
   709                           	callstack 0
   710   000100                     	ds	85
   711                           
   712                           	psect	dataBANK1
   713   000155                     __pdataBANK1:
   714                           	callstack 0
   715   000155                     _mtouch_slider:
   716                           	callstack 0
   717   000155                     	ds	17
   718                           
   719                           	psect	cstackBANK1
   720   000166                     __pcstackBANK1:
   721                           	callstack 0
   722   000166                     calculate_position@position:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x0
   726   000166                     	ds	2
   727   000168                     calculate_position@filtered_position:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x2
   731   000168                     	ds	2
   732   00016A                     calculate_position@raw_position:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x4
   736   00016A                     	ds	2
   737   00016C                     Slider_Service@group_status:
   738                           	callstack 0
   739                           
   740                           ; 1 bytes @ 0x6
   741   00016C                     	ds	1
   742   00016D                     Slider_Service@valid_contact_found:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x7
   746   00016D                     	ds	1
   747   00016E                     Slider_Service@position:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x8
   751   00016E                     	ds	2
   752   000170                     Slider_Service@status:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0xA
   756   000170                     	ds	1
   757   000171                     Slider_Service@segment:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0xB
   761   000171                     	ds	2
   762   000173                     Slider_Service@sliderName:
   763                           	callstack 0
   764                           
   765                           ; 1 bytes @ 0xD
   766   000173                     	ds	1
   767   000174                     Slider_Service@slider:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0xE
   771   000174                     	ds	2
   772                           
   773                           	psect	cstackBANK0
   774   0000EB                     __pcstackBANK0:
   775                           	callstack 0
   776   0000EB                     MTOUCH_Button_ServiceAll@button:
   777                           	callstack 0
   778   0000EB                     calculate_raw_position@ref_node:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x0
   782   0000EB                     	ds	1
   783   0000EC                     calculate_raw_position@deadband_set:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x1
   787   0000EC                     	ds	2
   788   0000EE                     calculate_raw_position@interpolation_scale:
   789                           	callstack 0
   790                           
   791                           ; 1 bytes @ 0x3
   792   0000EE                     	ds	1
   793   0000EF                     calculate_raw_position@deadband:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x4
   797   0000EF                     	ds	2
   798   0000F1                     calculate_raw_position@interpolation_bits:
   799                           	callstack 0
   800                           
   801                           ; 1 bytes @ 0x6
   802   0000F1                     	ds	1
   803   0000F2                     calculate_raw_position@size:
   804                           	callstack 0
   805                           
   806                           ; 1 bytes @ 0x7
   807   0000F2                     	ds	1
   808   0000F3                     calculate_raw_position@position:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x8
   812   0000F3                     	ds	2
   813   0000F5                     ??_Slider_Service:
   814                           
   815                           ; 1 bytes @ 0xA
   816   0000F5                     	ds	4
   817   0000F9                     MTOUCH_Slider_ServiceAll@slider:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0xE
   821   0000F9                     	ds	1
   822                           
   823                           	psect	cstackCOMRAM
   824   000001                     __pcstackCOMRAM:
   825                           	callstack 0
   826   000001                     ?_abs:
   827                           	callstack 0
   828   000001                     Sensor_setCalibrated@sensor:
   829                           	callstack 0
   830   000001                     Sensor_setSampled@sensor:
   831                           	callstack 0
   832   000001                     i2Sensor_SetTrisBit@TrisBit:
   833                           	callstack 0
   834   000001                     i2MTOUCH_Sensor_isEnabled@sensor:
   835                           	callstack 0
   836   000001                     i2Sensor_isCalibrated@sensor:
   837                           	callstack 0
   838   000001                     i2Sensor_isCalibratingAcqTime@sensor:
   839                           	callstack 0
   840   000001                     i2MTOUCH_Sensor_wasSampled@sensor:
   841                           	callstack 0
   842   000001                     abs@a:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x0
   846   000001                     	ds	1
   847   000002                     ??i2_Sensor_SetTrisBit:
   848   000002                     
   849                           ; 1 bytes @ 0x1
   850   000002                     	ds	1
   851   000003                     ??_abs:
   852                           
   853                           ; 1 bytes @ 0x2
   854   000003                     	ds	1
   855   000004                     i2Sensor_SetTrisBit@sensor:
   856                           	callstack 0
   857                           
   858                           ; 1 bytes @ 0x3
   859   000004                     	ds	1
   860   000005                     ??i2_Sensor_scheduleNextScan:
   861                           
   862                           ; 1 bytes @ 0x4
   863   000005                     	ds	4
   864   000009                     i2Sensor_scheduleNextScan@state:
   865                           	callstack 0
   866                           
   867                           ; 1 bytes @ 0x8
   868   000009                     	ds	1
   869   00000A                     i2Sensor_scheduleNextScan@skipScan:
   870                           	callstack 0
   871                           
   872                           ; 1 bytes @ 0x9
   873   00000A                     	ds	1
   874   00000B                     i2Sensor_scheduleNextScan@sensor:
   875                           	callstack 0
   876                           
   877                           ; 1 bytes @ 0xA
   878   00000B                     	ds	1
   879   00000C                     ??_MTOUCH_Sensor_Service:
   880                           
   881                           ; 1 bytes @ 0xB
   882   00000C                     	ds	2
   883   00000E                     MTOUCH_Sensor_Service@sensor:
   884                           	callstack 0
   885                           
   886                           ; 1 bytes @ 0xD
   887   00000E                     	ds	1
   888   00000F                     ??_INTERRUPT_InterruptManager:
   889                           
   890                           ; 1 bytes @ 0xE
   891   00000F                     	ds	6
   892   000015                     ??_ProcessButtonRelease:
   893   000015                     ?_MTOUCH_Sensor_RawSample_Get:
   894                           	callstack 0
   895   000015                     ?_medianFilter:
   896                           	callstack 0
   897   000015                     ?_GetMotorSpeed:
   898                           	callstack 0
   899   000015                     ?_Button_Unscaled_Deviation_Get:
   900                           	callstack 0
   901   000015                     ?_divide:
   902                           	callstack 0
   903   000015                     ?_get_difference:
   904                           	callstack 0
   905   000015                     ?_MTOUCH_Slider_Position_Get:
   906                           	callstack 0
   907   000015                     MTOUCH_Button_Deviation_Get@name:
   908                           	callstack 0
   909   000015                     Slider_Initialize@sliderName:
   910                           	callstack 0
   911   000015                     Sensor_SetTrisBit@TrisBit:
   912                           	callstack 0
   913   000015                     MTOUCH_Sensor_Enable@sensor:
   914                           	callstack 0
   915   000015                     MTOUCH_Sensor_isEnabled@sensor:
   916                           	callstack 0
   917   000015                     MTOUCH_Sensor_Calibrate@sensor:
   918                           	callstack 0
   919   000015                     MTOUCH_Sensor_isCalibrated@sensor:
   920                           	callstack 0
   921   000015                     Sensor_isCalibrated@sensor:
   922                           	callstack 0
   923   000015                     Sensor_isCalibratingAcqTime@sensor:
   924                           	callstack 0
   925   000015                     MTOUCH_Sensor_wasSampled@sensor:
   926                           	callstack 0
   927   000015                     Sensor_Sampled_Reset@sensor:
   928                           	callstack 0
   929   000015                     Button_Tick_helper@button:
   930                           	callstack 0
   931   000015                     Button_Deviation_Update@button:
   932                           	callstack 0
   933   000015                     Button_Unscaled_Deviation_Get@button:
   934                           	callstack 0
   935   000015                     Button_Baseline_Update@button:
   936                           	callstack 0
   937   000015                     divide@numerator:
   938                           	callstack 0
   939   000015                     get_difference@slider:
   940                           	callstack 0
   941   000015                     PWM4_LoadDutyValue@dutyValue:
   942                           	callstack 0
   943   000015                     GetMotorSpeed@adcVal:
   944                           	callstack 0
   945   000015                     memcpy@d1:
   946                           	callstack 0
   947   000015                     ADCC_SetADTIInterruptHandler@InterruptHandler:
   948                           	callstack 0
   949   000015                     TMR2_OverflowCallbackRegister@InterruptHandler:
   950                           	callstack 0
   951   000015                     INT0_SetInterruptHandler@InterruptHandler:
   952                           	callstack 0
   953   000015                     INT1_SetInterruptHandler@InterruptHandler:
   954                           	callstack 0
   955   000015                     INT2_SetInterruptHandler@InterruptHandler:
   956                           	callstack 0
   957   000015                     MTOUCH_Button_SetNotPressedCallback@callback:
   958                           	callstack 0
   959   000015                     MTOUCH_Slider_SetPositionChangedCallback@callback:
   960                           	callstack 0
   961                           
   962                           ; 3 bytes @ 0x14
   963   000015                     	ds	1
   964   000016                     ??_MTOUCH_Sensor_Sampled_ResetAll:
   965   000016                     ??_Sensor_SetTrisBit:
   966   000016                     ?_Slider_FindMiddle:
   967                           	callstack 0
   968   000016                     ?_Slider_FindLeft:
   969                           	callstack 0
   970   000016                     ?_Slider_FindRight:
   971                           	callstack 0
   972   000016                     MTOUCH_Button_Initialize@name:
   973                           	callstack 0
   974   000016                     MTOUCH_Button_isPressed@name:
   975                           	callstack 0
   976   000016                     MTOUCH_Sensor_Initialize@sensor:
   977                           	callstack 0
   978   000016                     Slider_FindMiddle@slider:
   979                           	callstack 0
   980   000016                     Slider_FindLeft@slider:
   981                           	callstack 0
   982   000016                     Slider_FindRight@slider:
   983                           	callstack 0
   984   000016                     Slider_Initialize@slider:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x15
   988   000016                     	ds	1
   989   000017                     ??_Button_Deviation_Update:
   990   000017                     ??_Button_Baseline_Update:
   991   000017                     ??_medianFilter:
   992   000017                     ??_Button_Unscaled_Deviation_Get:
   993   000017                     ??_PWM4_LoadDutyValue:
   994   000017                     MTOUCH_Slider_Position_Get@sliderName:
   995                           	callstack 0
   996   000017                     MTOUCH_Sensor_RawSample_Get@name:
   997                           	callstack 0
   998   000017                     MTOUCH_Sensor_Sampled_ResetAll@sensor:
   999                           	callstack 0
  1000   000017                     ProcessButtonRelease@button:
  1001                           	callstack 0
  1002   000017                     memcpy@s1:
  1003                           	callstack 0
  1004   000017                     MTOUCH_Button_Initialize@button:
  1005                           	callstack 0
  1006   000017                     divide@denominator:
  1007                           	callstack 0
  1008   000017                     get_difference@previous_position:
  1009                           	callstack 0
  1010   000017                     GetMotorSpeed@retVal:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x16
  1014   000017                     	ds	1
  1015   000018                     ??_Slider_FindMiddle:
  1016   000018                     ??_Slider_FindLeft:
  1017   000018                     ??_Slider_FindRight:
  1018   000018                     MTOUCH_Slider_InitializeAll@slider:
  1019                           	callstack 0
  1020   000018                     Sensor_SetTrisBit@sensor:
  1021                           	callstack 0
  1022   000018                     Button_Reading_Update_Helper@button:
  1023                           	callstack 0
  1024   000018                     Button_Baseline_Initialize@button:
  1025                           	callstack 0
  1026   000018                     memcpy@n:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x17
  1030   000018                     	ds	1
  1031   000019                     ??_ApplicationTask:
  1032   000019                     ??_Sensor_scheduleNextScan:
  1033   000019                     MTOUCH_Button_Tick@i:
  1034                           	callstack 0
  1035   000019                     divide@exponent:
  1036                           	callstack 0
  1037   000019                     Slider_FindLeft@ref_node:
  1038                           	callstack 0
  1039   000019                     get_difference@current_position:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x18
  1043   000019                     	ds	1
  1044   00001A                     ??_Button_Baseline_Initialize:
  1045   00001A                     ??_Button_Reading_Update_Helper:
  1046   00001A                     memcpy@tmp:
  1047                           	callstack 0
  1048   00001A                     divide@result:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x19
  1052   00001A                     	ds	1
  1053   00001B                     ??_get_difference:
  1054   00001B                     medianFilter@sensor:
  1055                           	callstack 0
  1056   00001B                     ApplicationTask@motorSpeed:
  1057                           	callstack 0
  1058   00001B                     memcpy@d:
  1059                           	callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x1A
  1062   00001B                     	ds	1
  1063   00001C                     ?_interpolate:
  1064                           	callstack 0
  1065   00001C                     Sensor_RawSample_Update@sensor:
  1066                           	callstack 0
  1067   00001C                     Button_Reading_Update@button:
  1068                           	callstack 0
  1069   00001C                     interpolate@delta1:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x1B
  1073   00001C                     	ds	1
  1074   00001D                     Sensor_scheduleNextScan@state:
  1075                           	callstack 0
  1076   00001D                     memcpy@s:
  1077                           	callstack 0
  1078   00001D                     Button_Check_AKS_Block@button:
  1079                           	callstack 0
  1080   00001D                     Slider_FindMiddle@channelDelta:
  1081                           	callstack 0
  1082   00001D                     Sensor_RawSample_Update@result:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x1C
  1086   00001D                     	ds	1
  1087   00001E                     MTOUCH_Button_InitializeAll@button:
  1088                           	callstack 0
  1089   00001E                     MTOUCH_Sensor_InitializeAll@sensor:
  1090                           	callstack 0
  1091   00001E                     Sensor_scheduleNextScan@skipScan:
  1092                           	callstack 0
  1093   00001E                     get_difference@rollover_threshold:
  1094                           	callstack 0
  1095   00001E                     interpolate@delta2:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x1D
  1099   00001E                     	ds	1
  1100   00001F                     ??_Button_Check_AKS_Block:
  1101   00001F                     Slider_FindRight@ref_node:
  1102                           	callstack 0
  1103   00001F                     Sensor_scheduleNextScan@sensor:
  1104                           	callstack 0
  1105   00001F                     MTOUCH_Sensor_postAcquisitionProcess@name:
  1106                           	callstack 0
  1107   00001F                     Slider_FindMiddle@maximumDelta:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x1E
  1111   00001F                     	ds	1
  1112   000020                     MTOUCH_Sensor_isSamplingComplete@sensor:
  1113                           	callstack 0
  1114   000020                     get_difference@diff:
  1115                           	callstack 0
  1116   000020                     interpolate@delta3:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x1F
  1120   000020                     	ds	1
  1121   000021                     Slider_FindMiddle@i:
  1122                           	callstack 0
  1123   000021                     Button_Check_AKS_Block@surplus_deviation_this_button:
  1124                           	callstack 0
  1125   000021                     Button_Deviation_Update@deviation:
  1126                           	callstack 0
  1127                           
  1128                           ; 4 bytes @ 0x20
  1129   000021                     	ds	1
  1130   000022                     ?_positional_hysteresis:
  1131                           	callstack 0
  1132   000022                     ?_moving_average_filter:
  1133                           	callstack 0
  1134   000022                     ?_calculate_contact_size:
  1135                           	callstack 0
  1136   000022                     interpolate@num_bits:
  1137                           	callstack 0
  1138   000022                     positional_hysteresis@slider:
  1139                           	callstack 0
  1140   000022                     moving_average_filter@slider:
  1141                           	callstack 0
  1142   000022                     calculate_contact_size@slider:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x21
  1146   000022                     	ds	1
  1147   000023                     ??_interpolate:
  1148   000023                     Button_Check_AKS_Block@currentAKSGroup:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x22
  1152   000023                     	ds	1
  1153   000024                     ??_calculate_contact_size:
  1154   000024                     Button_Check_AKS_Block@surplus_deviation_check_button:
  1155                           	callstack 0
  1156   000024                     positional_hysteresis@current_position:
  1157                           	callstack 0
  1158   000024                     moving_average_filter@current_position:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x23
  1162   000024                     	ds	2
  1163   000026                     ??_positional_hysteresis:
  1164   000026                     ??_moving_average_filter:
  1165   000026                     Button_Check_AKS_Block@check_button:
  1166                           	callstack 0
  1167   000026                     calculate_contact_size@contact_size:
  1168                           	callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x25
  1171   000026                     	ds	1
  1172   000027                     interpolate@rtnval:
  1173                           	callstack 0
  1174                           
  1175                           ; 2 bytes @ 0x26
  1176   000027                     	ds	1
  1177   000028                     Button_State_Initializing@button:
  1178                           	callstack 0
  1179   000028                     Button_State_NotPressed@button:
  1180                           	callstack 0
  1181   000028                     Button_State_Pressed@button:
  1182                           	callstack 0
  1183   000028                     moving_average_filter@filtered_position:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x27
  1187   000028                     	ds	1
  1188   000029                     ?_calculate_raw_position:
  1189                           	callstack 0
  1190   000029                     positional_hysteresis@previous_position:
  1191                           	callstack 0
  1192   000029                     calculate_raw_position@slider:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x28
  1196   000029                     	ds	1
  1197   00002A                     ??_Button_State_Initializing:
  1198   00002A                     ??_Button_State_NotPressed:
  1199   00002A                     ??_Button_State_Pressed:
  1200   00002A                     moving_average_filter@previous_position:
  1201                           	callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x29
  1204   00002A                     	ds	1
  1205   00002B                     ??_calculate_raw_position:
  1206   00002B                     positional_hysteresis@filtered_position:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x2A
  1210   00002B                     	ds	1
  1211   00002C                     moving_average_filter@dist_temp:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x2B
  1215   00002C                     	ds	1
  1216   00002D                     positional_hysteresis@hyst_width:
  1217                           	callstack 0
  1218                           
  1219                           ; 1 bytes @ 0x2C
  1220   00002D                     	ds	1
  1221   00002E                     positional_hysteresis@polarity:
  1222                           	callstack 0
  1223   00002E                     moving_average_filter@distance:
  1224                           	callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x2D
  1227   00002E                     	ds	1
  1228   00002F                     positional_hysteresis@distance:
  1229                           	callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x2E
  1232   00002F                     	ds	1
  1233   000030                     Button_Service@name:
  1234                           	callstack 0
  1235                           
  1236                           ; 1 bytes @ 0x2F
  1237   000030                     	ds	1
  1238   000031                     ?_calculate_position:
  1239                           	callstack 0
  1240   000031                     Button_Service@button:
  1241                           	callstack 0
  1242   000031                     calculate_position@slider:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x30
  1246   000031                     	ds	2
  1247   000033                     
  1248                           ; 1 bytes @ 0x32
  1249 ;;
  1250 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1251 ;;
  1252 ;; *************** function _main *****************
  1253 ;; Defined at:
  1254 ;;		line 36 in file "main.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;		None
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;		None
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      void 
  1261 ;; Registers used:
  1262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1272 ;;Total ram usage:        0 bytes
  1273 ;; Hardware stack levels required when called: 13
  1274 ;; This function calls:
  1275 ;;		_ApplicationTask
  1276 ;;		_MTOUCH_Button_SetNotPressedCallback
  1277 ;;		_MTOUCH_Service_Mainloop
  1278 ;;		_MTOUCH_Slider_SetPositionChangedCallback
  1279 ;;		_SYSTEM_Initialize
  1280 ;; This function is called by:
  1281 ;;		Startup code after reset
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text0
  1286   00386E                     __ptext0:
  1287                           	callstack 0
  1288   00386E                     _main:
  1289                           	callstack 18
  1290   00386E                     
  1291                           ;main.c: 38:     SYSTEM_Initialize();
  1292   00386E  ECE4  F01D         	call	_SYSTEM_Initialize	;wreg free
  1293   003872                     
  1294                           ;main.c: 45:     (INTCONbits.GIE = 1);
  1295   003872  8EF2               	bsf	242,7,c	;volatile
  1296   003874                     
  1297                           ;main.c: 51:     (INTCONbits.PEIE = 1);
  1298   003874  8CF2               	bsf	242,6,c	;volatile
  1299   003876                     
  1300                           ;main.c: 57:     MTOUCH_Button_SetNotPressedCallback(ProcessButtonRelease);
  1301   003876  0EE6               	movlw	low _ProcessButtonRelease
  1302   003878  6E15               	movwf	MTOUCH_Button_SetNotPressedCallback@callback^0,c
  1303   00387A  0E35               	movlw	high _ProcessButtonRelease
  1304   00387C  6E16               	movwf	(MTOUCH_Button_SetNotPressedCallback@callback+1)^0,c
  1305   00387E  0E00               	movlw	low (_ProcessButtonRelease shr (0+16))
  1306   003880  6E17               	movwf	(MTOUCH_Button_SetNotPressedCallback@callback+2)^0,c
  1307   003882  ECC3  F01E         	call	_MTOUCH_Button_SetNotPressedCallback	;wreg free
  1308   003886                     
  1309                           ;main.c: 58:     MTOUCH_Slider_SetPositionChangedCallback(ProcessSliderChange);
  1310   003886  0E9A               	movlw	low _ProcessSliderChange
  1311   003888  6E15               	movwf	MTOUCH_Slider_SetPositionChangedCallback@callback^0,c
  1312   00388A  0E3C               	movlw	high _ProcessSliderChange
  1313   00388C  6E16               	movwf	(MTOUCH_Slider_SetPositionChangedCallback@callback+1)^0,c
  1314   00388E  0E00               	movlw	low (_ProcessSliderChange shr (0+16))
  1315   003890  6E17               	movwf	(MTOUCH_Slider_SetPositionChangedCallback@callback+2)^0,c
  1316   003892  ECAE  F01E         	call	_MTOUCH_Slider_SetPositionChangedCallback	;wreg free
  1317   003896                     l6704:
  1318                           
  1319                           ;main.c: 60:     {;main.c: 62:         MTOUCH_Service_Mainloop();
  1320   003896  EC54  F01A         	call	_MTOUCH_Service_Mainloop	;wreg free
  1321   00389A                     
  1322                           ;main.c: 64:         ApplicationTask();
  1323   00389A  EC75  F00C         	call	_ApplicationTask	;wreg free
  1324   00389E  EF4B  F01C         	goto	l6704
  1325   0038A2  EF4B  F000         	goto	start
  1326   0038A6                     __end_of_main:
  1327                           	callstack 0
  1328                           
  1329 ;; *************** function _SYSTEM_Initialize *****************
  1330 ;; Defined at:
  1331 ;;		line 36 in file "mcc_generated_files/system/src/system.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;		None
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;		None
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1349 ;;Total ram usage:        0 bytes
  1350 ;; Hardware stack levels used: 1
  1351 ;; Hardware stack levels required when called: 10
  1352 ;; This function calls:
  1353 ;;		_ADCC_Initialize
  1354 ;;		_CLOCK_Initialize
  1355 ;;		_INTERRUPT_Initialize
  1356 ;;		_MTOUCH_Initialize
  1357 ;;		_PIN_MANAGER_Initialize
  1358 ;;		_PWM4_Initialize
  1359 ;;		_TMR2_Initialize
  1360 ;; This function is called by:
  1361 ;;		_main
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text1
  1366   003BC8                     __ptext1:
  1367                           	callstack 0
  1368   003BC8                     _SYSTEM_Initialize:
  1369                           	callstack 20
  1370   003BC8                     
  1371                           ;mcc_generated_files/system/src/system.c: 38:     CLOCK_Initialize();
  1372   003BC8  EC67  F01E         	call	_CLOCK_Initialize	;wreg free
  1373                           
  1374                           ;mcc_generated_files/system/src/system.c: 39:     PIN_MANAGER_Initialize();
  1375   003BCC  EC19  F016         	call	_PIN_MANAGER_Initialize	;wreg free
  1376   003BD0                     
  1377                           ;mcc_generated_files/system/src/system.c: 40:     ADCC_Initialize();
  1378   003BD0  EC2E  F019         	call	_ADCC_Initialize	;wreg free
  1379   003BD4                     
  1380                           ;mcc_generated_files/system/src/system.c: 41:     PWM4_Initialize();
  1381   003BD4  EC73  F01E         	call	_PWM4_Initialize	;wreg free
  1382                           
  1383                           ;mcc_generated_files/system/src/system.c: 42:     TMR2_Initialize();
  1384   003BD8  EC25  F01D         	call	_TMR2_Initialize	;wreg free
  1385   003BDC                     
  1386                           ;mcc_generated_files/system/src/system.c: 43:     MTOUCH_Initialize();
  1387   003BDC  EC7E  F01E         	call	_MTOUCH_Initialize	;wreg free
  1388   003BE0                     
  1389                           ;mcc_generated_files/system/src/system.c: 44:     INTERRUPT_Initialize();
  1390   003BE0  EC63  F01B         	call	_INTERRUPT_Initialize	;wreg free
  1391   003BE4  0012               	return		;funcret
  1392   003BE6                     __end_of_SYSTEM_Initialize:
  1393                           	callstack 0
  1394                           
  1395 ;; *************** function _TMR2_Initialize *****************
  1396 ;; Defined at:
  1397 ;;		line 57 in file "mcc_generated_files/timer/src/tmr2.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;		None
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      void 
  1404 ;; Registers used:
  1405 ;;		wreg, status,2, status,0, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1415 ;;Total ram usage:        0 bytes
  1416 ;; Hardware stack levels used: 1
  1417 ;; Hardware stack levels required when called: 7
  1418 ;; This function calls:
  1419 ;;		_TMR2_OverflowCallbackRegister
  1420 ;; This function is called by:
  1421 ;;		_SYSTEM_Initialize
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text2
  1426   003A4A                     __ptext2:
  1427                           	callstack 0
  1428   003A4A                     _TMR2_Initialize:
  1429                           	callstack 22
  1430   003A4A                     
  1431                           ;mcc_generated_files/timer/src/tmr2.c: 61:     T2CLKCON = 0x1;
  1432   003A4A  0E01               	movlw	1
  1433   003A4C  6EBE               	movwf	190,c	;volatile
  1434                           
  1435                           ;mcc_generated_files/timer/src/tmr2.c: 63:     T2HLT = 0x0;
  1436   003A4E  0E00               	movlw	0
  1437   003A50  6EBD               	movwf	189,c	;volatile
  1438                           
  1439                           ;mcc_generated_files/timer/src/tmr2.c: 65:     T2RST = 0x0;
  1440   003A52  0E00               	movlw	0
  1441   003A54  6EBF               	movwf	191,c	;volatile
  1442                           
  1443                           ;mcc_generated_files/timer/src/tmr2.c: 67:     T2PR = 0xC7;
  1444   003A56  0EC7               	movlw	199
  1445   003A58  6EBB               	movwf	187,c	;volatile
  1446                           
  1447                           ;mcc_generated_files/timer/src/tmr2.c: 69:     T2TMR = 0x0;
  1448   003A5A  0E00               	movlw	0
  1449   003A5C  6EBA               	movwf	186,c	;volatile
  1450   003A5E                     
  1451                           ;mcc_generated_files/timer/src/tmr2.c: 72:     TMR2_OverflowCallbackRegister(TMR2_Defaul
      +                          tOverflowCallback);
  1452   003A5E  0E00               	movlw	0
  1453   003A60  6E15               	movwf	TMR2_OverflowCallbackRegister@InterruptHandler^0,c
  1454   003A62  0E00               	movlw	0
  1455   003A64  6E16               	movwf	(TMR2_OverflowCallbackRegister@InterruptHandler+1)^0,c
  1456   003A66  0E00               	movlw	0
  1457   003A68  6E17               	movwf	(TMR2_OverflowCallbackRegister@InterruptHandler+2)^0,c
  1458   003A6A  EC92  F01E         	call	_TMR2_OverflowCallbackRegister	;wreg free
  1459   003A6E                     
  1460                           ;mcc_generated_files/timer/src/tmr2.c: 75:     PIR4bits.TMR2IF = 0;
  1461   003A6E  010E               	movlb	14	; () banked
  1462   003A70  93C9               	bcf	201,1,b	;volatile
  1463   003A72                     
  1464                           ; BSR set to: 14
  1465                           ;mcc_generated_files/timer/src/tmr2.c: 77:     T2CON = 0x80;
  1466   003A72  0E80               	movlw	128
  1467   003A74  6EBC               	movwf	188,c	;volatile
  1468   003A76                     
  1469                           ; BSR set to: 14
  1470   003A76  0012               	return		;funcret
  1471   003A78                     __end_of_TMR2_Initialize:
  1472                           	callstack 0
  1473                           
  1474 ;; *************** function _TMR2_OverflowCallbackRegister *****************
  1475 ;; Defined at:
  1476 ;;		line 122 in file "mcc_generated_files/timer/src/tmr2.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
  1479 ;;		 -> TMR2_DefaultOverflowCallback(1), 
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;		None
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      void 
  1484 ;; Registers used:
  1485 ;;		wreg, status,2, status,0
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1491 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1494 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1495 ;;Total ram usage:        3 bytes
  1496 ;; Hardware stack levels used: 1
  1497 ;; Hardware stack levels required when called: 6
  1498 ;; This function calls:
  1499 ;;		Nothing
  1500 ;; This function is called by:
  1501 ;;		_TMR2_Initialize
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           	psect	text3
  1506   003D24                     __ptext3:
  1507                           	callstack 0
  1508   003D24                     _TMR2_OverflowCallbackRegister:
  1509                           	callstack 22
  1510   003D24                     
  1511                           ;mcc_generated_files/timer/src/tmr2.c: 122: void TMR2_OverflowCallbackRegister(void (* I
      +                          nterruptHandler)(void));mcc_generated_files/timer/src/tmr2.c: 123: {;mcc_generated_files
      +                          /timer/src/tmr2.c: 124:    TMR2_OverflowCallback = InterruptHandler;
  1512   003D24  C015  F0FA         	movff	TMR2_OverflowCallbackRegister@InterruptHandler,_TMR2_OverflowCallback
  1513   003D28  C016  F0FB         	movff	TMR2_OverflowCallbackRegister@InterruptHandler+1,_TMR2_OverflowCallback+1
  1514   003D2C  C017  F0FC         	movff	TMR2_OverflowCallbackRegister@InterruptHandler+2,_TMR2_OverflowCallback+2
  1515   003D30  0012               	return		;funcret
  1516   003D32                     __end_of_TMR2_OverflowCallbackRegister:
  1517                           	callstack 0
  1518                           
  1519 ;; *************** function _PWM4_Initialize *****************
  1520 ;; Defined at:
  1521 ;;		line 45 in file "mcc_generated_files/pwm/src/pwm4.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;		None
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;		None
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg, status,2
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1539 ;;Total ram usage:        0 bytes
  1540 ;; Hardware stack levels used: 1
  1541 ;; Hardware stack levels required when called: 6
  1542 ;; This function calls:
  1543 ;;		Nothing
  1544 ;; This function is called by:
  1545 ;;		_SYSTEM_Initialize
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text4
  1550   003CE6                     __ptext4:
  1551                           	callstack 0
  1552   003CE6                     _PWM4_Initialize:
  1553                           	callstack 23
  1554   003CE6                     
  1555                           ;mcc_generated_files/pwm/src/pwm4.c: 49:     CCPTMRSbits.P4TSEL = 0x1;
  1556   003CE6  50AD               	movf	173,w,c	;volatile
  1557   003CE8  0B3F               	andlw	-193
  1558   003CEA  0940               	iorlw	64
  1559   003CEC  6EAD               	movwf	173,c	;volatile
  1560                           
  1561                           ;mcc_generated_files/pwm/src/pwm4.c: 52:     PWM4CON = 0x80;
  1562   003CEE  0E80               	movlw	128
  1563   003CF0  6EA1               	movwf	161,c	;volatile
  1564                           
  1565                           ;mcc_generated_files/pwm/src/pwm4.c: 55:     PWM4DCH = 0x0;
  1566   003CF2  0E00               	movlw	0
  1567   003CF4  6EA0               	movwf	160,c	;volatile
  1568                           
  1569                           ;mcc_generated_files/pwm/src/pwm4.c: 58:     PWM4DCL = 0x0;
  1570   003CF6  0E00               	movlw	0
  1571   003CF8  6E9F               	movwf	159,c	;volatile
  1572   003CFA  0012               	return		;funcret
  1573   003CFC                     __end_of_PWM4_Initialize:
  1574                           	callstack 0
  1575                           
  1576 ;; *************** function _PIN_MANAGER_Initialize *****************
  1577 ;; Defined at:
  1578 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;		None
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		wreg, status,2
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1596 ;;Total ram usage:        0 bytes
  1597 ;; Hardware stack levels used: 1
  1598 ;; Hardware stack levels required when called: 6
  1599 ;; This function calls:
  1600 ;;		Nothing
  1601 ;; This function is called by:
  1602 ;;		_SYSTEM_Initialize
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text5
  1607   002C32                     __ptext5:
  1608                           	callstack 0
  1609   002C32                     _PIN_MANAGER_Initialize:
  1610                           	callstack 23
  1611   002C32                     
  1612                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  1613   002C32  0E00               	movlw	0
  1614   002C34  6E82               	movwf	130,c	;volatile
  1615                           
  1616                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  1617   002C36  0E00               	movlw	0
  1618   002C38  6E83               	movwf	131,c	;volatile
  1619                           
  1620                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  1621   002C3A  0E00               	movlw	0
  1622   002C3C  6E84               	movwf	132,c	;volatile
  1623                           
  1624                           ;mcc_generated_files/system/src/pins.c: 46:     LATD = 0x0;
  1625   002C3E  0E00               	movlw	0
  1626   002C40  6E85               	movwf	133,c	;volatile
  1627                           
  1628                           ;mcc_generated_files/system/src/pins.c: 47:     LATE = 0x0;
  1629   002C42  0E00               	movlw	0
  1630   002C44  6E86               	movwf	134,c	;volatile
  1631                           
  1632                           ;mcc_generated_files/system/src/pins.c: 52:     TRISA = 0xF7;
  1633   002C46  0EF7               	movlw	247
  1634   002C48  6E87               	movwf	135,c	;volatile
  1635                           
  1636                           ;mcc_generated_files/system/src/pins.c: 53:     TRISB = 0xF9;
  1637   002C4A  0EF9               	movlw	249
  1638   002C4C  6E88               	movwf	136,c	;volatile
  1639                           
  1640                           ;mcc_generated_files/system/src/pins.c: 54:     TRISC = 0xF;
  1641   002C4E  0E0F               	movlw	15
  1642   002C50  6E89               	movwf	137,c	;volatile
  1643                           
  1644                           ;mcc_generated_files/system/src/pins.c: 55:     TRISD = 0x8F;
  1645   002C52  0E8F               	movlw	143
  1646   002C54  6E8A               	movwf	138,c	;volatile
  1647                           
  1648                           ;mcc_generated_files/system/src/pins.c: 56:     TRISE = 0x7;
  1649   002C56  0E07               	movlw	7
  1650   002C58  6E8B               	movwf	139,c	;volatile
  1651   002C5A                     
  1652                           ;mcc_generated_files/system/src/pins.c: 61:     ANSELA = 0xFF;
  1653   002C5A  010F               	movlb	15	; () banked
  1654   002C5C  690C               	setf	12,b	;volatile
  1655                           
  1656                           ;mcc_generated_files/system/src/pins.c: 62:     ANSELB = 0xF9;
  1657   002C5E  0EF9               	movlw	249
  1658   002C60  6F14               	movwf	20,b	;volatile
  1659                           
  1660                           ;mcc_generated_files/system/src/pins.c: 63:     ANSELC = 0xF;
  1661   002C62  0E0F               	movlw	15
  1662   002C64  6F1C               	movwf	28,b	;volatile
  1663                           
  1664                           ;mcc_generated_files/system/src/pins.c: 64:     ANSELD = 0x8F;
  1665   002C66  0E8F               	movlw	143
  1666   002C68  6F21               	movwf	33,b	;volatile
  1667                           
  1668                           ;mcc_generated_files/system/src/pins.c: 65:     ANSELE = 0x7;
  1669   002C6A  0E07               	movlw	7
  1670   002C6C  6F29               	movwf	41,b	;volatile
  1671                           
  1672                           ;mcc_generated_files/system/src/pins.c: 70:     WPUA = 0x0;
  1673   002C6E  0E00               	movlw	0
  1674   002C70  6F0B               	movwf	11,b	;volatile
  1675                           
  1676                           ;mcc_generated_files/system/src/pins.c: 71:     WPUB = 0x0;
  1677   002C72  0E00               	movlw	0
  1678   002C74  6F13               	movwf	19,b	;volatile
  1679                           
  1680                           ;mcc_generated_files/system/src/pins.c: 72:     WPUC = 0x0;
  1681   002C76  0E00               	movlw	0
  1682   002C78  6F1B               	movwf	27,b	;volatile
  1683                           
  1684                           ;mcc_generated_files/system/src/pins.c: 73:     WPUD = 0x0;
  1685   002C7A  0E00               	movlw	0
  1686   002C7C  6F20               	movwf	32,b	;volatile
  1687                           
  1688                           ;mcc_generated_files/system/src/pins.c: 74:     WPUE = 0x0;
  1689   002C7E  0E00               	movlw	0
  1690   002C80  6F28               	movwf	40,b	;volatile
  1691                           
  1692                           ;mcc_generated_files/system/src/pins.c: 79:     ODCONA = 0x0;
  1693   002C82  0E00               	movlw	0
  1694   002C84  6F0A               	movwf	10,b	;volatile
  1695                           
  1696                           ;mcc_generated_files/system/src/pins.c: 80:     ODCONB = 0x0;
  1697   002C86  0E00               	movlw	0
  1698   002C88  6F12               	movwf	18,b	;volatile
  1699                           
  1700                           ;mcc_generated_files/system/src/pins.c: 81:     ODCONC = 0x0;
  1701   002C8A  0E00               	movlw	0
  1702   002C8C  6F1A               	movwf	26,b	;volatile
  1703                           
  1704                           ;mcc_generated_files/system/src/pins.c: 82:     ODCOND = 0x0;
  1705   002C8E  0E00               	movlw	0
  1706   002C90  6F1F               	movwf	31,b	;volatile
  1707                           
  1708                           ;mcc_generated_files/system/src/pins.c: 83:     ODCONE = 0x0;
  1709   002C92  0E00               	movlw	0
  1710   002C94  6F27               	movwf	39,b	;volatile
  1711   002C96                     
  1712                           ; BSR set to: 15
  1713                           ;mcc_generated_files/system/src/pins.c: 88:     SLRCONA = 0xFF;
  1714   002C96  6909               	setf	9,b	;volatile
  1715   002C98                     
  1716                           ; BSR set to: 15
  1717                           ;mcc_generated_files/system/src/pins.c: 89:     SLRCONB = 0xFF;
  1718   002C98  6911               	setf	17,b	;volatile
  1719   002C9A                     
  1720                           ; BSR set to: 15
  1721                           ;mcc_generated_files/system/src/pins.c: 90:     SLRCONC = 0xFF;
  1722   002C9A  6919               	setf	25,b	;volatile
  1723   002C9C                     
  1724                           ; BSR set to: 15
  1725                           ;mcc_generated_files/system/src/pins.c: 91:     SLRCOND = 0xFF;
  1726   002C9C  691E               	setf	30,b	;volatile
  1727                           
  1728                           ;mcc_generated_files/system/src/pins.c: 92:     SLRCONE = 0x7;
  1729   002C9E  0E07               	movlw	7
  1730   002CA0  6F26               	movwf	38,b	;volatile
  1731   002CA2                     
  1732                           ; BSR set to: 15
  1733                           ;mcc_generated_files/system/src/pins.c: 97:     INLVLA = 0xFF;
  1734   002CA2  6908               	setf	8,b	;volatile
  1735   002CA4                     
  1736                           ; BSR set to: 15
  1737                           ;mcc_generated_files/system/src/pins.c: 98:     INLVLB = 0xFF;
  1738   002CA4  6910               	setf	16,b	;volatile
  1739   002CA6                     
  1740                           ; BSR set to: 15
  1741                           ;mcc_generated_files/system/src/pins.c: 99:     INLVLC = 0xFF;
  1742   002CA6  6918               	setf	24,b	;volatile
  1743   002CA8                     
  1744                           ; BSR set to: 15
  1745                           ;mcc_generated_files/system/src/pins.c: 100:     INLVLD = 0xFF;
  1746   002CA8  691D               	setf	29,b	;volatile
  1747                           
  1748                           ;mcc_generated_files/system/src/pins.c: 101:     INLVLE = 0xF;
  1749   002CAA  0E0F               	movlw	15
  1750   002CAC  6F25               	movwf	37,b	;volatile
  1751                           
  1752                           ;mcc_generated_files/system/src/pins.c: 109:     RA3PPS = 0x08;
  1753   002CAE  0E08               	movlw	8
  1754   002CB0  010E               	movlb	14	; () banked
  1755   002CB2  6FE5               	movwf	229,b	;volatile
  1756                           
  1757                           ;mcc_generated_files/system/src/pins.c: 114:     IOCAP = 0x0;
  1758   002CB4  0E00               	movlw	0
  1759   002CB6  010F               	movlb	15	; () banked
  1760   002CB8  6F07               	movwf	7,b	;volatile
  1761                           
  1762                           ;mcc_generated_files/system/src/pins.c: 115:     IOCAN = 0x0;
  1763   002CBA  0E00               	movlw	0
  1764   002CBC  6F06               	movwf	6,b	;volatile
  1765                           
  1766                           ;mcc_generated_files/system/src/pins.c: 116:     IOCAF = 0x0;
  1767   002CBE  0E00               	movlw	0
  1768   002CC0  6F05               	movwf	5,b	;volatile
  1769                           
  1770                           ;mcc_generated_files/system/src/pins.c: 117:     IOCBP = 0x0;
  1771   002CC2  0E00               	movlw	0
  1772   002CC4  6F0F               	movwf	15,b	;volatile
  1773                           
  1774                           ;mcc_generated_files/system/src/pins.c: 118:     IOCBN = 0x0;
  1775   002CC6  0E00               	movlw	0
  1776   002CC8  6F0E               	movwf	14,b	;volatile
  1777                           
  1778                           ;mcc_generated_files/system/src/pins.c: 119:     IOCBF = 0x0;
  1779   002CCA  0E00               	movlw	0
  1780   002CCC  6F0D               	movwf	13,b	;volatile
  1781                           
  1782                           ;mcc_generated_files/system/src/pins.c: 120:     IOCCP = 0x0;
  1783   002CCE  0E00               	movlw	0
  1784   002CD0  6F17               	movwf	23,b	;volatile
  1785                           
  1786                           ;mcc_generated_files/system/src/pins.c: 121:     IOCCN = 0x0;
  1787   002CD2  0E00               	movlw	0
  1788   002CD4  6F16               	movwf	22,b	;volatile
  1789                           
  1790                           ;mcc_generated_files/system/src/pins.c: 122:     IOCCF = 0x0;
  1791   002CD6  0E00               	movlw	0
  1792   002CD8  6F15               	movwf	21,b	;volatile
  1793                           
  1794                           ;mcc_generated_files/system/src/pins.c: 123:     IOCEP = 0x0;
  1795   002CDA  0E00               	movlw	0
  1796   002CDC  6F24               	movwf	36,b	;volatile
  1797                           
  1798                           ;mcc_generated_files/system/src/pins.c: 124:     IOCEN = 0x0;
  1799   002CDE  0E00               	movlw	0
  1800   002CE0  6F23               	movwf	35,b	;volatile
  1801                           
  1802                           ;mcc_generated_files/system/src/pins.c: 125:     IOCEF = 0x0;
  1803   002CE2  0E00               	movlw	0
  1804   002CE4  6F22               	movwf	34,b	;volatile
  1805   002CE6                     
  1806                           ; BSR set to: 15
  1807   002CE6  0012               	return		;funcret
  1808   002CE8                     __end_of_PIN_MANAGER_Initialize:
  1809                           	callstack 0
  1810                           
  1811 ;; *************** function _INTERRUPT_Initialize *****************
  1812 ;; Defined at:
  1813 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, status,0, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1831 ;;Total ram usage:        0 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 7
  1834 ;; This function calls:
  1835 ;;		_INT0_SetInterruptHandler
  1836 ;;		_INT1_SetInterruptHandler
  1837 ;;		_INT2_SetInterruptHandler
  1838 ;; This function is called by:
  1839 ;;		_SYSTEM_Initialize
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           	psect	text6
  1844   0036C6                     __ptext6:
  1845                           	callstack 0
  1846   0036C6                     _INTERRUPT_Initialize:
  1847                           	callstack 22
  1848   0036C6                     
  1849                           ;mcc_generated_files/system/src/interrupt.c: 45:     INTCONbits.IPEN = 0;
  1850   0036C6  9AF2               	bcf	242,5,c	;volatile
  1851                           
  1852                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIR0bits.INT0IF = 0);
  1853   0036C8  010E               	movlb	14	; () banked
  1854   0036CA  91C5               	bcf	197,0,b	;volatile
  1855                           
  1856                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCONbits.INT0EDG = 1);
  1857   0036CC  80F2               	bsf	242,0,c	;volatile
  1858   0036CE                     
  1859                           ; BSR set to: 14
  1860                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
  1861   0036CE  0E00               	movlw	0
  1862   0036D0  6E15               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  1863   0036D2  0E00               	movlw	0
  1864   0036D4  6E16               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  1865   0036D6  0E00               	movlw	0
  1866   0036D8  6E17               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)^0,c
  1867   0036DA  ECA7  F01E         	call	_INT0_SetInterruptHandler	;wreg free
  1868   0036DE                     
  1869                           ;mcc_generated_files/system/src/interrupt.c: 57:     (PIR0bits.INT1IF = 0);
  1870   0036DE  010E               	movlb	14	; () banked
  1871   0036E0  93C5               	bcf	197,1,b	;volatile
  1872   0036E2                     
  1873                           ; BSR set to: 14
  1874                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCONbits.INT1EDG = 1);
  1875   0036E2  82F2               	bsf	242,1,c	;volatile
  1876                           
  1877                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
  1878   0036E4  0E00               	movlw	0
  1879   0036E6  6E15               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  1880   0036E8  0E00               	movlw	0
  1881   0036EA  6E16               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  1882   0036EC  0E00               	movlw	0
  1883   0036EE  6E17               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)^0,c
  1884   0036F0  ECA0  F01E         	call	_INT1_SetInterruptHandler	;wreg free
  1885   0036F4                     
  1886                           ;mcc_generated_files/system/src/interrupt.c: 65:     (PIR0bits.INT2IF = 0);
  1887   0036F4  010E               	movlb	14	; () banked
  1888   0036F6  95C5               	bcf	197,2,b	;volatile
  1889   0036F8                     
  1890                           ; BSR set to: 14
  1891                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCONbits.INT2EDG = 1);
  1892   0036F8  84F2               	bsf	242,2,c	;volatile
  1893                           
  1894                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
  1895   0036FA  0E00               	movlw	0
  1896   0036FC  6E15               	movwf	INT2_SetInterruptHandler@InterruptHandler^0,c
  1897   0036FE  0E00               	movlw	0
  1898   003700  6E16               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
  1899   003702  0E00               	movlw	0
  1900   003704  6E17               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)^0,c
  1901   003706  EC99  F01E         	call	_INT2_SetInterruptHandler	;wreg free
  1902   00370A  0012               	return		;funcret
  1903   00370C                     __end_of_INTERRUPT_Initialize:
  1904                           	callstack 0
  1905                           
  1906 ;; *************** function _INT2_SetInterruptHandler *****************
  1907 ;; Defined at:
  1908 ;;		line 174 in file "mcc_generated_files/system/src/interrupt.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
  1911 ;;		 -> INT2_DefaultInterruptHandler(1), 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;		None
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      void 
  1916 ;; Registers used:
  1917 ;;		wreg, status,2, status,0
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1923 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1926 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1927 ;;Total ram usage:        3 bytes
  1928 ;; Hardware stack levels used: 1
  1929 ;; Hardware stack levels required when called: 6
  1930 ;; This function calls:
  1931 ;;		Nothing
  1932 ;; This function is called by:
  1933 ;;		_INTERRUPT_Initialize
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text7
  1938   003D32                     __ptext7:
  1939                           	callstack 0
  1940   003D32                     _INT2_SetInterruptHandler:
  1941                           	callstack 22
  1942   003D32                     
  1943                           ;mcc_generated_files/system/src/interrupt.c: 175:     INT2_InterruptHandler = InterruptH
      +                          andler;
  1944   003D32  C015  F091         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  1945   003D36  C016  F092         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  1946   003D3A  C017  F093         	movff	INT2_SetInterruptHandler@InterruptHandler+2,_INT2_InterruptHandler+2
  1947   003D3E  0012               	return		;funcret
  1948   003D40                     __end_of_INT2_SetInterruptHandler:
  1949                           	callstack 0
  1950                           
  1951 ;; *************** function _INT1_SetInterruptHandler *****************
  1952 ;; Defined at:
  1953 ;;		line 148 in file "mcc_generated_files/system/src/interrupt.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
  1956 ;;		 -> INT1_DefaultInterruptHandler(1), 
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;		None
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		wreg, status,2, status,0
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1968 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1971 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1972 ;;Total ram usage:        3 bytes
  1973 ;; Hardware stack levels used: 1
  1974 ;; Hardware stack levels required when called: 6
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		_INTERRUPT_Initialize
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text8
  1983   003D40                     __ptext8:
  1984                           	callstack 0
  1985   003D40                     _INT1_SetInterruptHandler:
  1986                           	callstack 22
  1987   003D40                     
  1988                           ;mcc_generated_files/system/src/interrupt.c: 149:     INT1_InterruptHandler = InterruptH
      +                          andler;
  1989   003D40  C015  F094         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  1990   003D44  C016  F095         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  1991   003D48  C017  F096         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
  1992   003D4C  0012               	return		;funcret
  1993   003D4E                     __end_of_INT1_SetInterruptHandler:
  1994                           	callstack 0
  1995                           
  1996 ;; *************** function _INT0_SetInterruptHandler *****************
  1997 ;; Defined at:
  1998 ;;		line 122 in file "mcc_generated_files/system/src/interrupt.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
  2001 ;;		 -> INT0_DefaultInterruptHandler(1), 
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;		None
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      void 
  2006 ;; Registers used:
  2007 ;;		wreg, status,2, status,0
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2013 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2016 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2017 ;;Total ram usage:        3 bytes
  2018 ;; Hardware stack levels used: 1
  2019 ;; Hardware stack levels required when called: 6
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_INTERRUPT_Initialize
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text9
  2028   003D4E                     __ptext9:
  2029                           	callstack 0
  2030   003D4E                     _INT0_SetInterruptHandler:
  2031                           	callstack 22
  2032   003D4E                     
  2033                           ;mcc_generated_files/system/src/interrupt.c: 123:     INT0_InterruptHandler = InterruptH
      +                          andler;
  2034   003D4E  C015  F097         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  2035   003D52  C016  F098         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  2036   003D56  C017  F099         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
  2037   003D5A  0012               	return		;funcret
  2038   003D5C                     __end_of_INT0_SetInterruptHandler:
  2039                           	callstack 0
  2040                           
  2041 ;; *************** function _CLOCK_Initialize *****************
  2042 ;; Defined at:
  2043 ;;		line 37 in file "mcc_generated_files/system/src/clock.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;		None
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;		None
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		wreg, status,2
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2061 ;;Total ram usage:        0 bytes
  2062 ;; Hardware stack levels used: 1
  2063 ;; Hardware stack levels required when called: 6
  2064 ;; This function calls:
  2065 ;;		Nothing
  2066 ;; This function is called by:
  2067 ;;		_SYSTEM_Initialize
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           	psect	text10
  2072   003CCE                     __ptext10:
  2073                           	callstack 0
  2074   003CCE                     _CLOCK_Initialize:
  2075                           	callstack 23
  2076   003CCE                     
  2077                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON1 = 0x60;
  2078   003CCE  0E60               	movlw	96
  2079   003CD0  010E               	movlb	14	; () banked
  2080   003CD2  6FD3               	movwf	211,b	;volatile
  2081                           
  2082                           ;mcc_generated_files/system/src/clock.c: 43:     OSCCON3 = 0x0;
  2083   003CD4  0E00               	movlw	0
  2084   003CD6  6FD5               	movwf	213,b	;volatile
  2085                           
  2086                           ;mcc_generated_files/system/src/clock.c: 45:     OSCEN = 0x0;
  2087   003CD8  0E00               	movlw	0
  2088   003CDA  6FD7               	movwf	215,b	;volatile
  2089                           
  2090                           ;mcc_generated_files/system/src/clock.c: 47:     OSCFRQ = 0x6;
  2091   003CDC  0E06               	movlw	6
  2092   003CDE  6FD9               	movwf	217,b	;volatile
  2093                           
  2094                           ;mcc_generated_files/system/src/clock.c: 49:     OSCTUNE = 0x0;
  2095   003CE0  0E00               	movlw	0
  2096   003CE2  6FD8               	movwf	216,b	;volatile
  2097   003CE4                     
  2098                           ; BSR set to: 14
  2099   003CE4  0012               	return		;funcret
  2100   003CE6                     __end_of_CLOCK_Initialize:
  2101                           	callstack 0
  2102                           
  2103 ;; *************** function _ADCC_Initialize *****************
  2104 ;; Defined at:
  2105 ;;		line 47 in file "mcc_generated_files/adc/src/adcc.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;		None
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;		None
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      void 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0, cstack
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2123 ;;Total ram usage:        0 bytes
  2124 ;; Hardware stack levels used: 1
  2125 ;; Hardware stack levels required when called: 7
  2126 ;; This function calls:
  2127 ;;		_ADCC_SetADTIInterruptHandler
  2128 ;; This function is called by:
  2129 ;;		_SYSTEM_Initialize
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text11
  2134   00325C                     __ptext11:
  2135                           	callstack 0
  2136   00325C                     _ADCC_Initialize:
  2137                           	callstack 22
  2138   00325C                     
  2139                           ;mcc_generated_files/adc/src/adcc.c: 51:     ADLTHL = 0x0;
  2140   00325C  0E00               	movlw	0
  2141   00325E  6E65               	movwf	101,c	;volatile
  2142                           
  2143                           ;mcc_generated_files/adc/src/adcc.c: 53:     ADLTHH = 0x0;
  2144   003260  0E00               	movlw	0
  2145   003262  6E66               	movwf	102,c	;volatile
  2146                           
  2147                           ;mcc_generated_files/adc/src/adcc.c: 55:     ADUTHL = 0x0;
  2148   003264  0E00               	movlw	0
  2149   003266  6E67               	movwf	103,c	;volatile
  2150                           
  2151                           ;mcc_generated_files/adc/src/adcc.c: 57:     ADUTHH = 0x0;
  2152   003268  0E00               	movlw	0
  2153   00326A  6E68               	movwf	104,c	;volatile
  2154                           
  2155                           ;mcc_generated_files/adc/src/adcc.c: 59:     ADSTPTL = 0x0;
  2156   00326C  0E00               	movlw	0
  2157   00326E  6E63               	movwf	99,c	;volatile
  2158                           
  2159                           ;mcc_generated_files/adc/src/adcc.c: 61:     ADSTPTH = 0x0;
  2160   003270  0E00               	movlw	0
  2161   003272  6E64               	movwf	100,c	;volatile
  2162                           
  2163                           ;mcc_generated_files/adc/src/adcc.c: 63:     ADRPT = 0x0;
  2164   003274  0E00               	movlw	0
  2165   003276  6E61               	movwf	97,c	;volatile
  2166                           
  2167                           ;mcc_generated_files/adc/src/adcc.c: 65:     ADPCH = 0x0;
  2168   003278  0E00               	movlw	0
  2169   00327A  010F               	movlb	15	; () banked
  2170   00327C  6F5A               	movwf	90,b	;volatile
  2171                           
  2172                           ;mcc_generated_files/adc/src/adcc.c: 67:     ADCAP = 0x0;
  2173   00327E  0E00               	movlw	0
  2174   003280  6F58               	movwf	88,b	;volatile
  2175                           
  2176                           ;mcc_generated_files/adc/src/adcc.c: 69:     ADPRE = 0x0;
  2177   003282  0E00               	movlw	0
  2178   003284  6F59               	movwf	89,b	;volatile
  2179                           
  2180                           ;mcc_generated_files/adc/src/adcc.c: 71:     ADCON1 = 0x0;
  2181   003286  0E00               	movlw	0
  2182   003288  6F54               	movwf	84,b	;volatile
  2183                           
  2184                           ;mcc_generated_files/adc/src/adcc.c: 73:     ADCON2 = 0x0;
  2185   00328A  0E00               	movlw	0
  2186   00328C  6F55               	movwf	85,b	;volatile
  2187                           
  2188                           ;mcc_generated_files/adc/src/adcc.c: 75:     ADCON3 = 0x0;
  2189   00328E  0E00               	movlw	0
  2190   003290  6F56               	movwf	86,b	;volatile
  2191                           
  2192                           ;mcc_generated_files/adc/src/adcc.c: 77:     ADSTAT = 0x0;
  2193   003292  0E00               	movlw	0
  2194   003294  6E60               	movwf	96,c	;volatile
  2195                           
  2196                           ;mcc_generated_files/adc/src/adcc.c: 79:     ADREF = 0x0;
  2197   003296  0E00               	movlw	0
  2198   003298  6F53               	movwf	83,b	;volatile
  2199                           
  2200                           ;mcc_generated_files/adc/src/adcc.c: 81:     ADACT = 0x0;
  2201   00329A  0E00               	movlw	0
  2202   00329C  6F51               	movwf	81,b	;volatile
  2203                           
  2204                           ;mcc_generated_files/adc/src/adcc.c: 83:     ADCLK = 0x1;
  2205   00329E  0E01               	movlw	1
  2206   0032A0  6F52               	movwf	82,b	;volatile
  2207                           
  2208                           ;mcc_generated_files/adc/src/adcc.c: 85:     ADCON0 = 0x85;
  2209   0032A2  0E85               	movlw	133
  2210   0032A4  6F5B               	movwf	91,b	;volatile
  2211                           
  2212                           ;mcc_generated_files/adc/src/adcc.c: 87:     ADACQ = 0x0;
  2213   0032A6  0E00               	movlw	0
  2214   0032A8  6F57               	movwf	87,b	;volatile
  2215   0032AA                     
  2216                           ; BSR set to: 15
  2217                           ;mcc_generated_files/adc/src/adcc.c: 90:     PIR1bits.ADIF = 0;
  2218   0032AA  010E               	movlb	14	; () banked
  2219   0032AC  91C6               	bcf	198,0,b	;volatile
  2220   0032AE                     
  2221                           ; BSR set to: 14
  2222                           ;mcc_generated_files/adc/src/adcc.c: 93:     PIR1bits.ADTIF = 0;
  2223   0032AE  93C6               	bcf	198,1,b	;volatile
  2224   0032B0                     
  2225                           ; BSR set to: 14
  2226                           ;mcc_generated_files/adc/src/adcc.c: 95:     ADCC_SetADTIInterruptHandler(ADCC_DefaultAD
      +                          TI_ISR);
  2227   0032B0  0EEA               	movlw	low _ADCC_DefaultADTI_ISR
  2228   0032B2  6E15               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler^0,c
  2229   0032B4  0E3D               	movlw	high _ADCC_DefaultADTI_ISR
  2230   0032B6  6E16               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)^0,c
  2231   0032B8  0E00               	movlw	low (_ADCC_DefaultADTI_ISR shr (0+16))
  2232   0032BA  6E17               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)^0,c
  2233   0032BC  ECB5  F01E         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2234   0032C0                     
  2235                           ;mcc_generated_files/adc/src/adcc.c: 97:     PIE1bits.ADTIE = 1;
  2236   0032C0  010E               	movlb	14	; () banked
  2237   0032C2  83BE               	bsf	190,1,b	;volatile
  2238   0032C4                     
  2239                           ; BSR set to: 14
  2240   0032C4  0012               	return		;funcret
  2241   0032C6                     __end_of_ADCC_Initialize:
  2242                           	callstack 0
  2243                           
  2244 ;; *************** function _MTOUCH_Slider_SetPositionChangedCallback *****************
  2245 ;; Defined at:
  2246 ;;		line 1000 in file "mcc_generated_files/touch/mtouch_slider.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  callback        3   20[COMRAM] PTR FTN(enum E13201,)voi
  2249 ;;		 -> ProcessSliderChange(1), 
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;		None
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  1    wreg      void 
  2254 ;; Registers used:
  2255 ;;		wreg, status,2, status,0
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2261 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2264 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2265 ;;Total ram usage:        3 bytes
  2266 ;; Hardware stack levels used: 1
  2267 ;; Hardware stack levels required when called: 6
  2268 ;; This function calls:
  2269 ;;		Nothing
  2270 ;; This function is called by:
  2271 ;;		_main
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text12
  2276   003D5C                     __ptext12:
  2277                           	callstack 0
  2278   003D5C                     _MTOUCH_Slider_SetPositionChangedCallback:
  2279                           	callstack 24
  2280   003D5C                     
  2281                           ;mcc_generated_files/touch/mtouch_slider.c: 1000: void MTOUCH_Slider_SetPositionChangedC
      +                          allback(void (*callback)(enum mtouch_slider_names));mcc_generated_files/touch/mtouch_sli
      +                          der.c: 1001: {;mcc_generated_files/touch/mtouch_slider.c: 1002:     callback_position_ch
      +                          anged = callback;
  2282   003D5C  C015  F0E2         	movff	MTOUCH_Slider_SetPositionChangedCallback@callback,_callback_position_changed
  2283   003D60  C016  F0E3         	movff	MTOUCH_Slider_SetPositionChangedCallback@callback+1,_callback_position_changed+1
  2284   003D64  C017  F0E4         	movff	MTOUCH_Slider_SetPositionChangedCallback@callback+2,_callback_position_changed+2
  2285   003D68  0012               	return		;funcret
  2286   003D6A                     __end_of_MTOUCH_Slider_SetPositionChangedCallback:
  2287                           	callstack 0
  2288                           
  2289 ;; *************** function _MTOUCH_Service_Mainloop *****************
  2290 ;; Defined at:
  2291 ;;		line 98 in file "mcc_generated_files/touch/mtouch.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;		None
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;		None
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  1    wreg      _Bool 
  2298 ;; Registers used:
  2299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2309 ;;Total ram usage:        0 bytes
  2310 ;; Hardware stack levels used: 1
  2311 ;; Hardware stack levels required when called: 12
  2312 ;; This function calls:
  2313 ;;		_MTOUCH_Button_ServiceAll
  2314 ;;		_MTOUCH_Initialize
  2315 ;;		_MTOUCH_Sensor_SampleAll
  2316 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  2317 ;;		_MTOUCH_Slider_ServiceAll
  2318 ;;		_MTOUCH_Tick
  2319 ;;		_MTOUCH_needReburst
  2320 ;; This function is called by:
  2321 ;;		_main
  2322 ;;		_touch_example
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text13
  2327   0034A8                     __ptext13:
  2328                           	callstack 0
  2329   0034A8                     _MTOUCH_Service_Mainloop:
  2330                           	callstack 18
  2331   0034A8                     
  2332                           ;mcc_generated_files/touch/mtouch.c: 100:     if(mtouch_request_init)
  2333   0034A8  5048               	movf	_mtouch_request_init^0,w,c
  2334   0034AA  B4D8               	btfsc	status,2,c
  2335   0034AC  EF5A  F01A         	goto	u6291
  2336   0034B0  EF5C  F01A         	goto	u6290
  2337   0034B4                     u6291:
  2338   0034B4  EF60  F01A         	goto	l6642
  2339   0034B8                     u6290:
  2340   0034B8                     
  2341                           ;mcc_generated_files/touch/mtouch.c: 101:     {;mcc_generated_files/touch/mtouch.c: 102:
      +                                   MTOUCH_Initialize();
  2342   0034B8  EC7E  F01E         	call	_MTOUCH_Initialize	;wreg free
  2343   0034BC                     
  2344                           ;mcc_generated_files/touch/mtouch.c: 103:         mtouch_request_init = 0;
  2345   0034BC  0E00               	movlw	0
  2346   0034BE  6E48               	movwf	_mtouch_request_init^0,c
  2347   0034C0                     l6642:
  2348                           
  2349                           ;mcc_generated_files/touch/mtouch.c: 106:     mtouch_time_toScan = 1;
  2350   0034C0  0E01               	movlw	1
  2351   0034C2  6E49               	movwf	_mtouch_time_toScan^0,c
  2352   0034C4                     
  2353                           ;mcc_generated_files/touch/mtouch.c: 109:     {;mcc_generated_files/touch/mtouch.c: 110:
      +                                       if(MTOUCH_Sensor_SampleAll() == 0)
  2354   0034C4  EC7B  F01D         	call	_MTOUCH_Sensor_SampleAll	;wreg free
  2355   0034C8  0900               	iorlw	0
  2356   0034CA  A4D8               	btfss	status,2,c
  2357   0034CC  EF6A  F01A         	goto	u6301
  2358   0034D0  EF6C  F01A         	goto	u6300
  2359   0034D4                     u6301:
  2360   0034D4  EF6F  F01A         	goto	l6652
  2361   0034D8                     u6300:
  2362   0034D8                     
  2363                           ;mcc_generated_files/touch/mtouch.c: 111:             {;mcc_generated_files/touch/mtouch
      +                          .c: 112:                 return 0;
  2364   0034D8  0E00               	movlw	0
  2365   0034DA  EF7B  F01A         	goto	l38
  2366   0034DE                     l6652:
  2367                           
  2368                           ;mcc_generated_files/touch/mtouch.c: 114:             MTOUCH_Button_ServiceAll();
  2369   0034DE  ECC4  F01D         	call	_MTOUCH_Button_ServiceAll	;wreg free
  2370                           
  2371                           ;mcc_generated_files/touch/mtouch.c: 115:             MTOUCH_Slider_ServiceAll();
  2372   0034E2  EC68  F01D         	call	_MTOUCH_Slider_ServiceAll	;wreg free
  2373   0034E6                     
  2374                           ;mcc_generated_files/touch/mtouch.c: 116:             mtouch_time_toScan = MTOUCH_needRe
      +                          burst();
  2375   0034E6  ECED  F01E         	call	_MTOUCH_needReburst	;wreg free
  2376   0034EA  6E49               	movwf	_mtouch_time_toScan^0,c
  2377   0034EC                     
  2378                           ;mcc_generated_files/touch/mtouch.c: 117:             MTOUCH_Sensor_Sampled_ResetAll();
  2379   0034EC  EC1A  F01B         	call	_MTOUCH_Sensor_Sampled_ResetAll	;wreg free
  2380   0034F0                     
  2381                           ;mcc_generated_files/touch/mtouch.c: 118:             MTOUCH_Tick();
  2382   0034F0  ECDE  F01E         	call	_MTOUCH_Tick	;wreg free
  2383   0034F4                     
  2384                           ;mcc_generated_files/touch/mtouch.c: 119:             return 1;
  2385   0034F4  0E01               	movlw	1
  2386   0034F6                     l38:
  2387   0034F6  0012               	return		;funcret
  2388   0034F8                     __end_of_MTOUCH_Service_Mainloop:
  2389                           	callstack 0
  2390                           
  2391 ;; *************** function _MTOUCH_needReburst *****************
  2392 ;; Defined at:
  2393 ;;		line 142 in file "mcc_generated_files/touch/mtouch.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;		None
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;  needReburst     1    0        _Bool 
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      _Bool 
  2400 ;; Registers used:
  2401 ;;		wreg
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2411 ;;Total ram usage:        0 bytes
  2412 ;; Hardware stack levels used: 1
  2413 ;; Hardware stack levels required when called: 6
  2414 ;; This function calls:
  2415 ;;		Nothing
  2416 ;; This function is called by:
  2417 ;;		_MTOUCH_Service_Mainloop
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           	psect	text14
  2422   003DDA                     __ptext14:
  2423                           	callstack 0
  2424   003DDA                     _MTOUCH_needReburst:
  2425                           	callstack 23
  2426   003DDA                     
  2427                           ;mcc_generated_files/touch/mtouch.c: 146:     return needReburst;
  2428   003DDA  0E00               	movlw	0
  2429   003DDC  0012               	return		;funcret
  2430   003DDE                     __end_of_MTOUCH_needReburst:
  2431                           	callstack 0
  2432                           
  2433 ;; *************** function _MTOUCH_Tick *****************
  2434 ;; Defined at:
  2435 ;;		line 132 in file "mcc_generated_files/touch/mtouch.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;		None
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;		None
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  1    wreg      void 
  2442 ;; Registers used:
  2443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2453 ;;Total ram usage:        0 bytes
  2454 ;; Hardware stack levels used: 1
  2455 ;; Hardware stack levels required when called: 8
  2456 ;; This function calls:
  2457 ;;		_MTOUCH_Button_Tick
  2458 ;; This function is called by:
  2459 ;;		_MTOUCH_Service_Mainloop
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text15
  2464   003DBC                     __ptext15:
  2465                           	callstack 0
  2466   003DBC                     _MTOUCH_Tick:
  2467                           	callstack 21
  2468   003DBC                     
  2469                           ;mcc_generated_files/touch/mtouch.c: 134:     MTOUCH_Button_Tick();
  2470   003DBC  EC3C  F01D         	call	_MTOUCH_Button_Tick	;wreg free
  2471   003DC0  0012               	return		;funcret
  2472   003DC2                     __end_of_MTOUCH_Tick:
  2473                           	callstack 0
  2474                           
  2475 ;; *************** function _MTOUCH_Button_Tick *****************
  2476 ;; Defined at:
  2477 ;;		line 347 in file "mcc_generated_files/touch/mtouch_button.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;		None
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;  i               1   24[COMRAM] unsigned char 
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2494 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2495 ;;Total ram usage:        1 bytes
  2496 ;; Hardware stack levels used: 1
  2497 ;; Hardware stack levels required when called: 7
  2498 ;; This function calls:
  2499 ;;		_Button_Tick_helper
  2500 ;; This function is called by:
  2501 ;;		_MTOUCH_Tick
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           	psect	text16
  2506   003A78                     __ptext16:
  2507                           	callstack 0
  2508   003A78                     _MTOUCH_Button_Tick:
  2509                           	callstack 21
  2510   003A78                     
  2511                           ;mcc_generated_files/touch/mtouch_button.c: 349:     uint8_t i;;mcc_generated_files/touc
      +                          h/mtouch_button.c: 350:     for (i = 0; i < 5u; i++)
  2512   003A78  0E00               	movlw	0
  2513   003A7A  6E19               	movwf	MTOUCH_Button_Tick@i^0,c
  2514   003A7C                     l6478:
  2515                           
  2516                           ;mcc_generated_files/touch/mtouch_button.c: 351:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 352:         Button_Tick_helper(&mtouch_button[i]);
  2517   003A7C  5019               	movf	MTOUCH_Button_Tick@i^0,w,c
  2518   003A7E  0D11               	mullw	17
  2519   003A80  0E00               	movlw	low _mtouch_button
  2520   003A82  24F3               	addwf	243,w,c
  2521   003A84  6E15               	movwf	Button_Tick_helper@button^0,c
  2522   003A86  0E01               	movlw	high _mtouch_button
  2523   003A88  20F4               	addwfc	prodh,w,c
  2524   003A8A  6E16               	movwf	(Button_Tick_helper@button+1)^0,c
  2525   003A8C  EC97  F019         	call	_Button_Tick_helper	;wreg free
  2526   003A90                     
  2527                           ;mcc_generated_files/touch/mtouch_button.c: 353:     }
  2528   003A90  2A19               	incf	MTOUCH_Button_Tick@i^0,f,c
  2529   003A92  0E04               	movlw	4
  2530   003A94  6419               	cpfsgt	MTOUCH_Button_Tick@i^0,c
  2531   003A96  EF4F  F01D         	goto	u6051
  2532   003A9A  EF51  F01D         	goto	u6050
  2533   003A9E                     u6051:
  2534   003A9E  EF3E  F01D         	goto	l6478
  2535   003AA2                     u6050:
  2536   003AA2  0012               	return		;funcret
  2537   003AA4                     __end_of_MTOUCH_Button_Tick:
  2538                           	callstack 0
  2539                           
  2540 ;; *************** function _Button_Tick_helper *****************
  2541 ;; Defined at:
  2542 ;;		line 355 in file "mcc_generated_files/touch/mtouch_button.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  button          2   20[COMRAM] PTR struct .
  2545 ;;		 -> mtouch_button(85), 
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;		None
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  1    wreg      void 
  2550 ;; Registers used:
  2551 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2559 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2560 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2561 ;;Total ram usage:        4 bytes
  2562 ;; Hardware stack levels used: 1
  2563 ;; Hardware stack levels required when called: 6
  2564 ;; This function calls:
  2565 ;;		Nothing
  2566 ;; This function is called by:
  2567 ;;		_MTOUCH_Button_Tick
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           	psect	text17
  2572   00332E                     __ptext17:
  2573                           	callstack 0
  2574   00332E                     _Button_Tick_helper:
  2575                           	callstack 21
  2576   00332E                     
  2577                           ;mcc_generated_files/touch/mtouch_button.c: 355: static void Button_Tick_helper(mtouch_b
      +                          utton_t* button);mcc_generated_files/touch/mtouch_button.c: 356: {;mcc_generated_files/t
      +                          ouch/mtouch_button.c: 358:     if ((button->state) == MTOUCH_BUTTON_STATE_pressed)
  2578   00332E  EE20 F002          	lfsr	2,2
  2579   003332  5015               	movf	Button_Tick_helper@button^0,w,c
  2580   003334  26D9               	addwf	fsr2l,f,c
  2581   003336  5016               	movf	(Button_Tick_helper@button+1)^0,w,c
  2582   003338  22DA               	addwfc	fsr2h,f,c
  2583   00333A  0E02               	movlw	2
  2584   00333C  18DE               	xorwf	postinc2,w,c
  2585   00333E  A4D8               	btfss	status,2,c
  2586   003340  EFA4  F019         	goto	u5871
  2587   003344  EFA6  F019         	goto	u5870
  2588   003348                     u5871:
  2589   003348  EFC8  F019         	goto	l529
  2590   00334C                     u5870:
  2591   00334C                     
  2592                           ;mcc_generated_files/touch/mtouch_button.c: 359:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 360:         (button->counter)++;
  2593   00334C  EE20 F00B          	lfsr	2,11
  2594   003350  5015               	movf	Button_Tick_helper@button^0,w,c
  2595   003352  26D9               	addwf	fsr2l,f,c
  2596   003354  5016               	movf	(Button_Tick_helper@button+1)^0,w,c
  2597   003356  22DA               	addwfc	fsr2h,f,c
  2598   003358  2ADE               	incf	postinc2,f,c
  2599   00335A  0E00               	movlw	0
  2600   00335C  22DD               	addwfc	postdec2,f,c
  2601                           
  2602                           ;mcc_generated_files/touch/mtouch_button.c: 361:         if (button->counter == (mtouch_
      +                          button_statecounter_t)0)
  2603   00335E  EE20 F00B          	lfsr	2,11
  2604   003362  5015               	movf	Button_Tick_helper@button^0,w,c
  2605   003364  26D9               	addwf	fsr2l,f,c
  2606   003366  5016               	movf	(Button_Tick_helper@button+1)^0,w,c
  2607   003368  22DA               	addwfc	fsr2h,f,c
  2608   00336A  50DE               	movf	postinc2,w,c
  2609   00336C  10DE               	iorwf	postinc2,w,c
  2610   00336E  A4D8               	btfss	status,2,c
  2611   003370  EFBC  F019         	goto	u5881
  2612   003374  EFBE  F019         	goto	u5880
  2613   003378                     u5881:
  2614   003378  EFC8  F019         	goto	l529
  2615   00337C                     u5880:
  2616   00337C                     
  2617                           ;mcc_generated_files/touch/mtouch_button.c: 362:         {;mcc_generated_files/touch/mto
      +                          uch_button.c: 363:             button->counter = (mtouch_button_statecounter_t)0xFFFF;
  2618   00337C  EE20 F00B          	lfsr	2,11
  2619   003380  5015               	movf	Button_Tick_helper@button^0,w,c
  2620   003382  26D9               	addwf	fsr2l,f,c
  2621   003384  5016               	movf	(Button_Tick_helper@button+1)^0,w,c
  2622   003386  22DA               	addwfc	fsr2h,f,c
  2623   003388  0EFF               	movlw	255
  2624   00338A  6EDE               	movwf	postinc2,c
  2625   00338C  0EFF               	movlw	255
  2626   00338E  6EDD               	movwf	postdec2,c
  2627   003390                     l529:
  2628   003390  0012               	return		;funcret
  2629   003392                     __end_of_Button_Tick_helper:
  2630                           	callstack 0
  2631                           
  2632 ;; *************** function _MTOUCH_Slider_ServiceAll *****************
  2633 ;; Defined at:
  2634 ;;		line 980 in file "mcc_generated_files/touch/mtouch_slider.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  slider          1   14[BANK0 ] enum E13201
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2649 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2651 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2652 ;;Total ram usage:        1 bytes
  2653 ;; Hardware stack levels used: 1
  2654 ;; Hardware stack levels required when called: 11
  2655 ;; This function calls:
  2656 ;;		_Slider_Service
  2657 ;; This function is called by:
  2658 ;;		_MTOUCH_Service_Mainloop
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text18
  2663   003AD0                     __ptext18:
  2664                           	callstack 0
  2665   003AD0                     _MTOUCH_Slider_ServiceAll:
  2666                           	callstack 18
  2667   003AD0                     
  2668                           ;mcc_generated_files/touch/mtouch_slider.c: 982:     enum mtouch_slider_names slider;;mc
      +                          c_generated_files/touch/mtouch_slider.c: 985:     sliderGroupStatus = 0u;
  2669   003AD0  0E00               	movlw	0
  2670   003AD2  0100               	movlb	0	; () banked
  2671   003AD4  6F9A               	movwf	_sliderGroupStatus& (0+255),b
  2672                           
  2673                           ;mcc_generated_files/touch/mtouch_slider.c: 987:     for (slider = 0u; slider < 1u; slid
      +                          er++)
  2674   003AD6  0E00               	movlw	0
  2675   003AD8  6FF9               	movwf	MTOUCH_Slider_ServiceAll@slider& (0+255),b
  2676   003ADA                     l6628:
  2677                           
  2678                           ; BSR set to: 0
  2679                           ;mcc_generated_files/touch/mtouch_slider.c: 988:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 989:         Slider_Service(slider);
  2680   003ADA  51F9               	movf	MTOUCH_Slider_ServiceAll@slider& (0+255),w,b
  2681   003ADC  EC44  F009         	call	_Slider_Service
  2682   003AE0                     
  2683                           ;mcc_generated_files/touch/mtouch_slider.c: 990:     }
  2684   003AE0  0100               	movlb	0	; () banked
  2685   003AE2  2BF9               	incf	MTOUCH_Slider_ServiceAll@slider& (0+255),f,b
  2686   003AE4                     
  2687                           ; BSR set to: 0
  2688   003AE4  51F9               	movf	MTOUCH_Slider_ServiceAll@slider& (0+255),w,b
  2689   003AE6  B4D8               	btfsc	status,2,c
  2690   003AE8  EF78  F01D         	goto	u6281
  2691   003AEC  EF7A  F01D         	goto	u6280
  2692   003AF0                     u6281:
  2693   003AF0  EF6D  F01D         	goto	l6628
  2694   003AF4                     u6280:
  2695   003AF4                     
  2696                           ; BSR set to: 0
  2697   003AF4  0012               	return		;funcret
  2698   003AF6                     __end_of_MTOUCH_Slider_ServiceAll:
  2699                           	callstack 0
  2700                           
  2701 ;; *************** function _Slider_Service *****************
  2702 ;; Defined at:
  2703 ;;		line 690 in file "mcc_generated_files/touch/mtouch_slider.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;  sliderName      1    wreg     enum E13201
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;  sliderName      1   13[BANK1 ] enum E13201
  2708 ;;  slider          2   14[BANK1 ] PTR struct .
  2709 ;;		 -> mtouch_slider(17), 
  2710 ;;  segment         2   11[BANK1 ] unsigned short 
  2711 ;;  position        2    8[BANK1 ] unsigned short 
  2712 ;;  status          1   10[BANK1 ] unsigned char 
  2713 ;;  valid_contac    1    7[BANK1 ] unsigned char 
  2714 ;;  group_status    1    6[BANK1 ] unsigned char 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2725 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2726 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2727 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2728 ;;Total ram usage:       14 bytes
  2729 ;; Hardware stack levels used: 1
  2730 ;; Hardware stack levels required when called: 10
  2731 ;; This function calls:
  2732 ;;		_MTOUCH_Button_isPressed
  2733 ;;		_ProcessSliderChange
  2734 ;;		_Slider_DefaultCallback
  2735 ;;		_calculate_contact_size
  2736 ;;		_calculate_position
  2737 ;; This function is called by:
  2738 ;;		_MTOUCH_Slider_ServiceAll
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742                           	psect	text19
  2743   001288                     __ptext19:
  2744                           	callstack 0
  2745   001288                     _Slider_Service:
  2746                           	callstack 18
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;incstack = 0
  2750                           ;Slider_Service@sliderName stored from wreg
  2751   001288  0101               	movlb	1	; () banked
  2752   00128A  6F73               	movwf	Slider_Service@sliderName& (0+255),b
  2753   00128C                     
  2754                           ;mcc_generated_files/touch/mtouch_slider.c: 690: static void Slider_Service(enum mtouch_
      +                          slider_names sliderName);mcc_generated_files/touch/mtouch_slider.c: 691: {;mcc_generated
      +                          _files/touch/mtouch_slider.c: 693:     uint16_t segment, position;;mcc_generated_files/t
      +                          ouch/mtouch_slider.c: 694:     uint8_t status = 0u, group_status = 0u;
  2755   00128C  0E00               	movlw	0
  2756   00128E  0101               	movlb	1	; () banked
  2757   001290  6F70               	movwf	Slider_Service@status& (0+255),b
  2758   001292  0E00               	movlw	0
  2759   001294  6F6C               	movwf	Slider_Service@group_status& (0+255),b
  2760                           
  2761                           ;mcc_generated_files/touch/mtouch_slider.c: 695:     uint8_t valid_contact_found = 0u;
  2762   001296  0E00               	movlw	0
  2763   001298  6F6D               	movwf	Slider_Service@valid_contact_found& (0+255),b
  2764   00129A                     
  2765                           ; BSR set to: 1
  2766                           ;mcc_generated_files/touch/mtouch_slider.c: 697:     if (sliderName < 1u)
  2767   00129A  5173               	movf	Slider_Service@sliderName& (0+255),w,b
  2768   00129C  A4D8               	btfss	status,2,c
  2769   00129E  EF53  F009         	goto	u6101
  2770   0012A2  EF55  F009         	goto	u6100
  2771   0012A6                     u6101:
  2772   0012A6  EFA4  F00A         	goto	l820
  2773   0012AA                     u6100:
  2774   0012AA                     
  2775                           ; BSR set to: 1
  2776                           ;mcc_generated_files/touch/mtouch_slider.c: 698:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 700:         mtouch_slider_t* slider = &mtouch_slider[sliderName];
  2777   0012AA  5173               	movf	Slider_Service@sliderName& (0+255),w,b
  2778   0012AC  0D11               	mullw	17
  2779   0012AE  0E55               	movlw	low _mtouch_slider
  2780   0012B0  24F3               	addwf	243,w,c
  2781   0012B2  6F74               	movwf	Slider_Service@slider& (0+255),b
  2782   0012B4  0E01               	movlw	high _mtouch_slider
  2783   0012B6  20F4               	addwfc	prodh,w,c
  2784   0012B8  6F75               	movwf	(Slider_Service@slider+1)& (0+255),b
  2785   0012BA                     
  2786                           ; BSR set to: 1
  2787                           ;mcc_generated_files/touch/mtouch_slider.c: 702:         if ((slider->type <= MTOUCH_TYP
      +                          E_WHEEL) || (slider->resolDeadband <= 0xCFu))
  2788   0012BA  EE20 F001          	lfsr	2,1
  2789   0012BE  5174               	movf	Slider_Service@slider& (0+255),w,b
  2790   0012C0  26D9               	addwf	fsr2l,f,c
  2791   0012C2  5175               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2792   0012C4  22DA               	addwfc	fsr2h,f,c
  2793   0012C6  0E01               	movlw	1
  2794   0012C8  64DF               	cpfsgt	indf2,c
  2795   0012CA  EF69  F009         	goto	u6111
  2796   0012CE  EF6B  F009         	goto	u6110
  2797   0012D2                     u6111:
  2798   0012D2  EF79  F009         	goto	l6510
  2799   0012D6                     u6110:
  2800   0012D6                     
  2801                           ; BSR set to: 1
  2802   0012D6  EE20 F004          	lfsr	2,4
  2803   0012DA  5174               	movf	Slider_Service@slider& (0+255),w,b
  2804   0012DC  26D9               	addwf	fsr2l,f,c
  2805   0012DE  5175               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2806   0012E0  22DA               	addwfc	fsr2h,f,c
  2807   0012E2  0ED0               	movlw	208
  2808   0012E4  60DF               	cpfslt	indf2,c
  2809   0012E6  EF77  F009         	goto	u6121
  2810   0012EA  EF79  F009         	goto	u6120
  2811   0012EE                     u6121:
  2812   0012EE  EFA4  F00A         	goto	l820
  2813   0012F2                     u6120:
  2814   0012F2                     l6510:
  2815                           
  2816                           ; BSR set to: 1
  2817                           ;mcc_generated_files/touch/mtouch_slider.c: 703:         {;mcc_generated_files/touch/mto
      +                          uch_slider.c: 705:             resol_bits = (slider->resolDeadband & 0xF0u) >> 4u;
  2818   0012F2  EE20 F004          	lfsr	2,4
  2819   0012F6  5174               	movf	Slider_Service@slider& (0+255),w,b
  2820   0012F8  26D9               	addwf	fsr2l,f,c
  2821   0012FA  5175               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2822   0012FC  22DA               	addwfc	fsr2h,f,c
  2823   0012FE  50DF               	movf	indf2,w,c
  2824   001300  0100               	movlb	0	; () banked
  2825   001302  6FF5               	movwf	??_Slider_Service& (0+255),b
  2826   001304  39F5               	swapf	??_Slider_Service& (0+255),w,b
  2827   001306  0B0F               	andlw	15
  2828   001308  0B0F               	andlw	15
  2829   00130A  6E4A               	movwf	_resol_bits^0,c
  2830   00130C                     
  2831                           ; BSR set to: 0
  2832                           ;mcc_generated_files/touch/mtouch_slider.c: 706:             resol_value = (uint16_t) ((
      +                          uint16_t) 1u << resol_bits);
  2833   00130C  C04A  F0F5         	movff	_resol_bits,??_Slider_Service
  2834   001310  0E01               	movlw	1
  2835   001312  6FF6               	movwf	(??_Slider_Service+1)& (0+255),b
  2836   001314  0E00               	movlw	0
  2837   001316  6FF7               	movwf	(??_Slider_Service+2)& (0+255),b
  2838   001318  2BF5               	incf	??_Slider_Service& (0+255),f,b
  2839   00131A  EF92  F009         	goto	u6134
  2840   00131E                     u6135:
  2841   00131E  90D8               	bcf	status,0,c
  2842   001320  37F6               	rlcf	(??_Slider_Service+1)& (0+255),f,b
  2843   001322  37F7               	rlcf	(??_Slider_Service+2)& (0+255),f,b
  2844   001324                     u6134:
  2845   001324  2FF5               	decfsz	??_Slider_Service& (0+255),f,b
  2846   001326  EF8F  F009         	goto	u6135
  2847   00132A  C0F6  F03D         	movff	??_Slider_Service+1,_resol_value
  2848   00132E  C0F7  F03E         	movff	??_Slider_Service+2,_resol_value+1
  2849   001332                     
  2850                           ;mcc_generated_files/touch/mtouch_slider.c: 709:             slider->contactSize = calcu
      +                          late_contact_size(slider);
  2851   001332  C174  F022         	movff	Slider_Service@slider,calculate_contact_size@slider
  2852   001336  C175  F023         	movff	Slider_Service@slider+1,calculate_contact_size@slider+1
  2853   00133A  EC81  F017         	call	_calculate_contact_size	;wreg free
  2854   00133E  0101               	movlb	1	; () banked
  2855   001340  EE20 F00E          	lfsr	2,14
  2856   001344  5174               	movf	Slider_Service@slider& (0+255),w,b
  2857   001346  26D9               	addwf	fsr2l,f,c
  2858   001348  5175               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2859   00134A  22DA               	addwfc	fsr2h,f,c
  2860   00134C  C022  FFDE         	movff	?_calculate_contact_size,postinc2
  2861   001350  C023  FFDD         	movff	?_calculate_contact_size+1,postdec2
  2862   001354                     
  2863                           ; BSR set to: 1
  2864                           ;mcc_generated_files/touch/mtouch_slider.c: 711:             if (slider->contactSize >= 
      +                          slider->contactThreshold)
  2865   001354  EE20 F006          	lfsr	2,6
  2866   001358  5174               	movf	Slider_Service@slider& (0+255),w,b
  2867   00135A  26D9               	addwf	fsr2l,f,c
  2868   00135C  5175               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2869   00135E  22DA               	addwfc	fsr2h,f,c
  2870   001360  EE10 F00E          	lfsr	1,14
  2871   001364  5174               	movf	Slider_Service@slider& (0+255),w,b
  2872   001366  26E1               	addwf	fsr1l,f,c
  2873   001368  5175               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2874   00136A  22E2               	addwfc	fsr1h,f,c
  2875   00136C  50DE               	movf	postinc2,w,c
  2876   00136E  5CE6               	subwf	postinc1,w,c
  2877   001370  50DE               	movf	postinc2,w,c
  2878   001372  58E6               	subwfb	postinc1,w,c
  2879   001374  A0D8               	btfss	status,0,c
  2880   001376  EFBF  F009         	goto	u6141
  2881   00137A  EFC1  F009         	goto	u6140
  2882   00137E                     u6141:
  2883   00137E  EF22  F00A         	goto	l6534
  2884   001382                     u6140:
  2885   001382                     
  2886                           ; BSR set to: 1
  2887                           ;mcc_generated_files/touch/mtouch_slider.c: 712:             {;mcc_generated_files/touch
      +                          /mtouch_slider.c: 714:                 if ((slider->sliderStatus & (uint8_t)((uint8_t)3u
      +                          <<0u)) == MTOUCH_SLIDER_STATE_pressed)
  2888   001382  EE20 F010          	lfsr	2,16
  2889   001386  5174               	movf	Slider_Service@slider& (0+255),w,b
  2890   001388  26D9               	addwf	fsr2l,f,c
  2891   00138A  5175               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2892   00138C  22DA               	addwfc	fsr2h,f,c
  2893   00138E  50DF               	movf	indf2,w,c
  2894   001390  0B03               	andlw	3
  2895   001392  0A02               	xorlw	2
  2896   001394  A4D8               	btfss	status,2,c
  2897   001396  EFCF  F009         	goto	u6151
  2898   00139A  EFD1  F009         	goto	u6150
  2899   00139E                     u6151:
  2900   00139E  EFD5  F009         	goto	l6522
  2901   0013A2                     u6150:
  2902   0013A2                     
  2903                           ; BSR set to: 1
  2904                           ;mcc_generated_files/touch/mtouch_slider.c: 715:                 {;mcc_generated_files/t
      +                          ouch/mtouch_slider.c: 716:                     valid_contact_found = 1u;
  2905   0013A2  0E01               	movlw	1
  2906   0013A4  6F6D               	movwf	Slider_Service@valid_contact_found& (0+255),b
  2907                           
  2908                           ;mcc_generated_files/touch/mtouch_slider.c: 717:                 }
  2909   0013A6  EF22  F00A         	goto	l6534
  2910   0013AA                     l6522:
  2911                           
  2912                           ; BSR set to: 1
  2913                           ;mcc_generated_files/touch/mtouch_slider.c: 719:                 {;mcc_generated_files/t
      +                          ouch/mtouch_slider.c: 721:                     segment = slider->startSegment;
  2914   0013AA  EE20 F002          	lfsr	2,2
  2915   0013AE  5174               	movf	Slider_Service@slider& (0+255),w,b
  2916   0013B0  26D9               	addwf	fsr2l,f,c
  2917   0013B2  5175               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2918   0013B4  22DA               	addwfc	fsr2h,f,c
  2919   0013B6  50DF               	movf	indf2,w,c
  2920   0013B8  0100               	movlb	0	; () banked
  2921   0013BA  6FF5               	movwf	??_Slider_Service& (0+255),b
  2922   0013BC  51F5               	movf	??_Slider_Service& (0+255),w,b
  2923   0013BE  0101               	movlb	1	; () banked
  2924   0013C0  6F71               	movwf	Slider_Service@segment& (0+255),b
  2925   0013C2  6B72               	clrf	(Slider_Service@segment+1)& (0+255),b
  2926   0013C4                     l6524:
  2927                           
  2928                           ; BSR set to: 1
  2929                           ;mcc_generated_files/touch/mtouch_slider.c: 723:                     {;mcc_generated_fil
      +                          es/touch/mtouch_slider.c: 724:                         if (MTOUCH_Button_isPressed(segme
      +                          nt))
  2930   0013C4  5171               	movf	Slider_Service@segment& (0+255),w,b
  2931   0013C6  EC86  F01B         	call	_MTOUCH_Button_isPressed
  2932   0013CA  0900               	iorlw	0
  2933   0013CC  B4D8               	btfsc	status,2,c
  2934   0013CE  EFEB  F009         	goto	u6161
  2935   0013D2  EFED  F009         	goto	u6160
  2936   0013D6                     u6161:
  2937   0013D6  EFF5  F009         	goto	l6530
  2938   0013DA                     u6160:
  2939   0013DA                     
  2940                           ;mcc_generated_files/touch/mtouch_slider.c: 725:                         {;mcc_generated
      +                          _files/touch/mtouch_slider.c: 727:                             valid_contact_found = 1u;
  2941   0013DA  0E01               	movlw	1
  2942   0013DC  0101               	movlb	1	; () banked
  2943   0013DE  6F6D               	movwf	Slider_Service@valid_contact_found& (0+255),b
  2944   0013E0                     
  2945                           ; BSR set to: 1
  2946                           ;mcc_generated_files/touch/mtouch_slider.c: 728:                             callback_pr
      +                          essed(sliderName);
  2947   0013E0  5173               	movf	Slider_Service@sliderName& (0+255),w,b
  2948   0013E2  ECF1  F01E         	call	_Slider_DefaultCallback
  2949                           
  2950                           ;mcc_generated_files/touch/mtouch_slider.c: 729:                             break;
  2951   0013E6  EF22  F00A         	goto	l6534
  2952   0013EA                     l6530:
  2953                           
  2954                           ;mcc_generated_files/touch/mtouch_slider.c: 733:                         segment = segme
      +                          nt + 1u;
  2955   0013EA  0E01               	movlw	1
  2956   0013EC  0101               	movlb	1	; () banked
  2957   0013EE  2571               	addwf	Slider_Service@segment& (0+255),w,b
  2958   0013F0  6F71               	movwf	Slider_Service@segment& (0+255),b
  2959   0013F2  0E00               	movlw	0
  2960   0013F4  2172               	addwfc	(Slider_Service@segment+1)& (0+255),w,b
  2961   0013F6  6F72               	movwf	(Slider_Service@segment+1)& (0+255),b
  2962   0013F8                     
  2963                           ; BSR set to: 1
  2964                           ;mcc_generated_files/touch/mtouch_slider.c: 735:                     }
  2965   0013F8  EE20 F002          	lfsr	2,2
  2966   0013FC  5174               	movf	Slider_Service@slider& (0+255),w,b
  2967   0013FE  26D9               	addwf	fsr2l,f,c
  2968   001400  5175               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2969   001402  22DA               	addwfc	fsr2h,f,c
  2970   001404  50DF               	movf	indf2,w,c
  2971   001406  0100               	movlb	0	; () banked
  2972   001408  6FF5               	movwf	??_Slider_Service& (0+255),b
  2973   00140A  6BF6               	clrf	(??_Slider_Service+1)& (0+255),b
  2974   00140C  0101               	movlb	1	; () banked
  2975   00140E  EE20 F003          	lfsr	2,3
  2976   001412  5174               	movf	Slider_Service@slider& (0+255),w,b
  2977   001414  26D9               	addwf	fsr2l,f,c
  2978   001416  5175               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2979   001418  22DA               	addwfc	fsr2h,f,c
  2980   00141A  50DF               	movf	indf2,w,c
  2981   00141C  0100               	movlb	0	; () banked
  2982   00141E  6FF7               	movwf	(??_Slider_Service+2)& (0+255),b
  2983   001420  51F7               	movf	(??_Slider_Service+2)& (0+255),w,b
  2984   001422  27F5               	addwf	??_Slider_Service& (0+255),f,b
  2985   001424  0E00               	movlw	0
  2986   001426  23F6               	addwfc	(??_Slider_Service+1)& (0+255),f,b
  2987   001428  51F5               	movf	??_Slider_Service& (0+255),w,b
  2988   00142A  0101               	movlb	1	; () banked
  2989   00142C  5D71               	subwf	Slider_Service@segment& (0+255),w,b
  2990   00142E  0100               	movlb	0	; () banked
  2991   001430  51F6               	movf	(??_Slider_Service+1)& (0+255),w,b
  2992   001432  0101               	movlb	1	; () banked
  2993   001434  5972               	subwfb	(Slider_Service@segment+1)& (0+255),w,b
  2994   001436  A0D8               	btfss	status,0,c
  2995   001438  EF20  F00A         	goto	u6171
  2996   00143C  EF22  F00A         	goto	u6170
  2997   001440                     u6171:
  2998   001440  EFE2  F009         	goto	l6524
  2999   001444                     u6170:
  3000   001444                     l6534:
  3001                           
  3002                           ;mcc_generated_files/touch/mtouch_slider.c: 744:             if (0u == valid_contact_fou
      +                          nd)
  3003   001444  0101               	movlb	1	; () banked
  3004   001446  516D               	movf	Slider_Service@valid_contact_found& (0+255),w,b
  3005   001448  A4D8               	btfss	status,2,c
  3006   00144A  EF29  F00A         	goto	u6181
  3007   00144E  EF2B  F00A         	goto	u6180
  3008   001452                     u6181:
  3009   001452  EF5A  F00A         	goto	l6544
  3010   001456                     u6180:
  3011   001456                     
  3012                           ; BSR set to: 1
  3013                           ;mcc_generated_files/touch/mtouch_slider.c: 745:             {;mcc_generated_files/touch
      +                          /mtouch_slider.c: 747:                 slider->contactSize = 0u;
  3014   001456  EE20 F00E          	lfsr	2,14
  3015   00145A  5174               	movf	Slider_Service@slider& (0+255),w,b
  3016   00145C  26D9               	addwf	fsr2l,f,c
  3017   00145E  5175               	movf	(Slider_Service@slider+1)& (0+255),w,b
  3018   001460  22DA               	addwfc	fsr2h,f,c
  3019   001462  6ADE               	clrf	postinc2,c
  3020   001464  6ADD               	clrf	postdec2,c
  3021                           
  3022                           ;mcc_generated_files/touch/mtouch_slider.c: 749:                 if ((slider->sliderStat
      +                          us & (uint8_t)((uint8_t)3u<<0u)) == MTOUCH_SLIDER_STATE_pressed)
  3023   001466  EE20 F010          	lfsr	2,16
  3024   00146A  5174               	movf	Slider_Service@slider& (0+255),w,b
  3025   00146C  26D9               	addwf	fsr2l,f,c
  3026   00146E  5175               	movf	(Slider_Service@slider+1)& (0+255),w,b
  3027   001470  22DA               	addwfc	fsr2h,f,c
  3028   001472  50DF               	movf	indf2,w,c
  3029   001474  0B03               	andlw	3
  3030   001476  0A02               	xorlw	2
  3031   001478  A4D8               	btfss	status,2,c
  3032   00147A  EF41  F00A         	goto	u6191
  3033   00147E  EF43  F00A         	goto	u6190
  3034   001482                     u6191:
  3035   001482  EF50  F00A         	goto	l6542
  3036   001486                     u6190:
  3037   001486                     
  3038                           ; BSR set to: 1
  3039                           ;mcc_generated_files/touch/mtouch_slider.c: 750:                 {;mcc_generated_files/t
      +                          ouch/mtouch_slider.c: 751:                     slider->sliderStatus = MTOUCH_SLIDER_STAT
      +                          E_notPressed;
  3040   001486  EE20 F010          	lfsr	2,16
  3041   00148A  5174               	movf	Slider_Service@slider& (0+255),w,b
  3042   00148C  26D9               	addwf	fsr2l,f,c
  3043   00148E  5175               	movf	(Slider_Service@slider+1)& (0+255),w,b
  3044   001490  22DA               	addwfc	fsr2h,f,c
  3045   001492  0E01               	movlw	1
  3046   001494  6EDF               	movwf	indf2,c
  3047   001496                     
  3048                           ; BSR set to: 1
  3049                           ;mcc_generated_files/touch/mtouch_slider.c: 752:                     callback_released(s
      +                          liderName);
  3050   001496  5173               	movf	Slider_Service@sliderName& (0+255),w,b
  3051   001498  ECF1  F01E         	call	_Slider_DefaultCallback
  3052                           
  3053                           ;mcc_generated_files/touch/mtouch_slider.c: 753:                 }
  3054   00149C  EF95  F00A         	goto	l6558
  3055   0014A0                     l6542:
  3056                           
  3057                           ; BSR set to: 1
  3058                           ;mcc_generated_files/touch/mtouch_slider.c: 755:                 {;mcc_generated_files/t
      +                          ouch/mtouch_slider.c: 756:                     slider->sliderStatus = MTOUCH_SLIDER_STAT
      +                          E_notPressed;
  3059   0014A0  EE20 F010          	lfsr	2,16
  3060   0014A4  5174               	movf	Slider_Service@slider& (0+255),w,b
  3061   0014A6  26D9               	addwf	fsr2l,f,c
  3062   0014A8  5175               	movf	(Slider_Service@slider+1)& (0+255),w,b
  3063   0014AA  22DA               	addwfc	fsr2h,f,c
  3064   0014AC  0E01               	movlw	1
  3065   0014AE  6EDF               	movwf	indf2,c
  3066   0014B0  EF95  F00A         	goto	l6558
  3067   0014B4                     l6544:
  3068                           
  3069                           ; BSR set to: 1
  3070                           ;mcc_generated_files/touch/mtouch_slider.c: 760:             {;mcc_generated_files/touch
      +                          /mtouch_slider.c: 762:                 position = calculate_position(slider);
  3071   0014B4  C174  F031         	movff	Slider_Service@slider,calculate_position@slider
  3072   0014B8  C175  F032         	movff	Slider_Service@slider+1,calculate_position@slider+1
  3073   0014BC  ECD6  F017         	call	_calculate_position	;wreg free
  3074   0014C0  C031  F16E         	movff	?_calculate_position,Slider_Service@position
  3075   0014C4  C032  F16F         	movff	?_calculate_position+1,Slider_Service@position+1
  3076   0014C8                     
  3077                           ;mcc_generated_files/touch/mtouch_slider.c: 765:                 if (slider->sliderPosit
      +                          ion != position)
  3078   0014C8  0101               	movlb	1	; () banked
  3079   0014CA  EE20 F00C          	lfsr	2,12
  3080   0014CE  5174               	movf	Slider_Service@slider& (0+255),w,b
  3081   0014D0  26D9               	addwf	fsr2l,f,c
  3082   0014D2  5175               	movf	(Slider_Service@slider+1)& (0+255),w,b
  3083   0014D4  22DA               	addwfc	fsr2h,f,c
  3084   0014D6  516E               	movf	Slider_Service@position& (0+255),w,b
  3085   0014D8  18DE               	xorwf	postinc2,w,c
  3086   0014DA  E109               	bnz	u6200
  3087   0014DC  516F               	movf	(Slider_Service@position+1)& (0+255),w,b
  3088   0014DE  18DE               	xorwf	postinc2,w,c
  3089   0014E0  B4D8               	btfsc	status,2,c
  3090   0014E2  EF75  F00A         	goto	u6201
  3091   0014E6  EF77  F00A         	goto	u6200
  3092   0014EA                     u6201:
  3093   0014EA  EF92  F00A         	goto	l6554
  3094   0014EE                     u6200:
  3095   0014EE                     
  3096                           ; BSR set to: 1
  3097                           ;mcc_generated_files/touch/mtouch_slider.c: 766:                 {;mcc_generated_files/t
      +                          ouch/mtouch_slider.c: 767:                     status |= (uint8_t)((uint8_t)1u<<2u);
  3098   0014EE  8570               	bsf	Slider_Service@status& (0+255),2,b
  3099   0014F0                     
  3100                           ; BSR set to: 1
  3101                           ;mcc_generated_files/touch/mtouch_slider.c: 768:                     slider->sliderPosit
      +                          ion = position;
  3102   0014F0  EE20 F00C          	lfsr	2,12
  3103   0014F4  5174               	movf	Slider_Service@slider& (0+255),w,b
  3104   0014F6  26D9               	addwf	fsr2l,f,c
  3105   0014F8  5175               	movf	(Slider_Service@slider+1)& (0+255),w,b
  3106   0014FA  22DA               	addwfc	fsr2h,f,c
  3107   0014FC  C16E  FFDE         	movff	Slider_Service@position,postinc2
  3108   001500  C16F  FFDD         	movff	Slider_Service@position+1,postdec2
  3109   001504                     
  3110                           ; BSR set to: 1
  3111                           ;mcc_generated_files/touch/mtouch_slider.c: 769:                     callback_position_c
      +                          hanged(sliderName);
  3112   001504  D802               	call	u6218
  3113   001506  EF92  F00A         	goto	u6219
  3114   00150A                     u6218:
  3115   00150A  0005               	push	
  3116   00150C  6EFA               	movwf	pclath,c
  3117   00150E  0100               	movlb	0	; () banked
  3118   001510  51E2               	movf	_callback_position_changed& (0+255),w,b
  3119   001512  6EFD               	movwf	tosl,c
  3120   001514  51E3               	movf	(_callback_position_changed+1)& (0+255),w,b
  3121   001516  6EFE               	movwf	tosh,c
  3122   001518  51E4               	movf	(_callback_position_changed+2)& (0+255),w,b
  3123   00151A  6EFF               	movwf	tosu,c
  3124   00151C  50FA               	movf	pclath,w,c
  3125   00151E  0101               	movlb	1	; () banked
  3126   001520  5173               	movf	Slider_Service@sliderName& (0+255),w,b
  3127   001522  0012               	return		;indir
  3128   001524                     u6219:
  3129   001524                     l6554:
  3130                           
  3131                           ;mcc_generated_files/touch/mtouch_slider.c: 773:                 status |= MTOUCH_SLIDER
      +                          _STATE_pressed;
  3132   001524  0101               	movlb	1	; () banked
  3133   001526  8370               	bsf	Slider_Service@status& (0+255),1,b
  3134   001528                     
  3135                           ; BSR set to: 1
  3136                           ;mcc_generated_files/touch/mtouch_slider.c: 775:                 status |= (uint8_t)((ui
      +                          nt8_t)1u<<7u);
  3137   001528  8F70               	bsf	Slider_Service@status& (0+255),7,b
  3138   00152A                     l6558:
  3139                           
  3140                           ;mcc_generated_files/touch/mtouch_slider.c: 779:             slider->sliderStatus = stat
      +                          us;
  3141   00152A  0101               	movlb	1	; () banked
  3142   00152C  EE20 F010          	lfsr	2,16
  3143   001530  5174               	movf	Slider_Service@slider& (0+255),w,b
  3144   001532  26D9               	addwf	fsr2l,f,c
  3145   001534  5175               	movf	(Slider_Service@slider+1)& (0+255),w,b
  3146   001536  22DA               	addwfc	fsr2h,f,c
  3147   001538  C170  FFDF         	movff	Slider_Service@status,indf2
  3148   00153C                     
  3149                           ; BSR set to: 1
  3150                           ;mcc_generated_files/touch/mtouch_slider.c: 781:             group_status |= (uint8_t) (
      +                          status & ((uint8_t)((uint8_t)1u<<7u) | MTOUCH_SLIDER_STATE_pressed));
  3151   00153C  5170               	movf	Slider_Service@status& (0+255),w,b
  3152   00153E  0B82               	andlw	130
  3153   001540  136C               	iorwf	Slider_Service@group_status& (0+255),f,b
  3154   001542                     
  3155                           ; BSR set to: 1
  3156                           ;mcc_generated_files/touch/mtouch_slider.c: 783:             sliderGroupStatus |= group_
      +                          status;
  3157   001542  516C               	movf	Slider_Service@group_status& (0+255),w,b
  3158   001544  0100               	movlb	0	; () banked
  3159   001546  139A               	iorwf	_sliderGroupStatus& (0+255),f,b
  3160   001548                     l820:
  3161   001548  0012               	return		;funcret
  3162   00154A                     __end_of_Slider_Service:
  3163                           	callstack 0
  3164                           
  3165 ;; *************** function _calculate_position *****************
  3166 ;; Defined at:
  3167 ;;		line 658 in file "mcc_generated_files/touch/mtouch_slider.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  slider          2   48[COMRAM] PTR struct .
  3170 ;;		 -> mtouch_slider(17), 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  raw_position    2    4[BANK1 ] unsigned short 
  3173 ;;  filtered_pos    2    2[BANK1 ] unsigned short 
  3174 ;;  position        2    0[BANK1 ] unsigned short 
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  2   48[COMRAM] unsigned short 
  3177 ;; Registers used:
  3178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3185 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3187 ;;      Totals:         2       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3188 ;;Total ram usage:        8 bytes
  3189 ;; Hardware stack levels used: 1
  3190 ;; Hardware stack levels required when called: 9
  3191 ;; This function calls:
  3192 ;;		_calculate_raw_position
  3193 ;;		_moving_average_filter
  3194 ;;		_positional_hysteresis
  3195 ;; This function is called by:
  3196 ;;		_Slider_Service
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text20
  3201   002FAC                     __ptext20:
  3202                           	callstack 0
  3203   002FAC                     _calculate_position:
  3204                           	callstack 18
  3205   002FAC                     
  3206                           ;mcc_generated_files/touch/mtouch_slider.c: 658: static uint16_t calculate_position(mtou
      +                          ch_slider_t* slider);mcc_generated_files/touch/mtouch_slider.c: 659: {;mcc_generated_fil
      +                          es/touch/mtouch_slider.c: 660:     uint16_t raw_position, filtered_position, position;;m
      +                          cc_generated_files/touch/mtouch_slider.c: 663:     raw_position = calculate_raw_position
      +                          (slider);
  3207   002FAC  C031  F029         	movff	calculate_position@slider,calculate_raw_position@slider
  3208   002FB0  C032  F02A         	movff	calculate_position@slider+1,calculate_raw_position@slider+1
  3209   002FB4  ECCE  F007         	call	_calculate_raw_position
  3210   002FB8  C029  F16A         	movff	?_calculate_raw_position,calculate_position@raw_position
  3211   002FBC  C02A  F16B         	movff	?_calculate_raw_position+1,calculate_position@raw_position+1
  3212   002FC0                     
  3213                           ;mcc_generated_files/touch/mtouch_slider.c: 666:     if ((slider->sliderStatus & (uint8_
      +                          t)((uint8_t)3u<<0u)) != MTOUCH_SLIDER_STATE_pressed)
  3214   002FC0  EE20 F010          	lfsr	2,16
  3215   002FC4  5031               	movf	calculate_position@slider^0,w,c
  3216   002FC6  26D9               	addwf	fsr2l,f,c
  3217   002FC8  5032               	movf	(calculate_position@slider+1)^0,w,c
  3218   002FCA  22DA               	addwfc	fsr2h,f,c
  3219   002FCC  50DF               	movf	indf2,w,c
  3220   002FCE  0B03               	andlw	3
  3221   002FD0  0A02               	xorlw	2
  3222   002FD2  B4D8               	btfsc	status,2,c
  3223   002FD4  EFEE  F017         	goto	u5941
  3224   002FD8  EFF0  F017         	goto	u5940
  3225   002FDC                     u5941:
  3226   002FDC  EFF6  F017         	goto	l6378
  3227   002FE0                     u5940:
  3228   002FE0                     
  3229                           ;mcc_generated_files/touch/mtouch_slider.c: 667:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 669:         filtered_position = raw_position;
  3230   002FE0  C16A  F168         	movff	calculate_position@raw_position,calculate_position@filtered_position
  3231   002FE4  C16B  F169         	movff	calculate_position@raw_position+1,calculate_position@filtered_position+1
  3232                           
  3233                           ;mcc_generated_files/touch/mtouch_slider.c: 670:     }
  3234   002FE8  EF04  F018         	goto	l6380
  3235   002FEC                     l6378:
  3236                           
  3237                           ;mcc_generated_files/touch/mtouch_slider.c: 672:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 673:         filtered_position = moving_average_filter(slider, raw_position);
  3238   002FEC  C031  F022         	movff	calculate_position@slider,moving_average_filter@slider
  3239   002FF0  C032  F023         	movff	calculate_position@slider+1,moving_average_filter@slider+1
  3240   002FF4  C16A  F024         	movff	calculate_position@raw_position,moving_average_filter@current_position
  3241   002FF8  C16B  F025         	movff	calculate_position@raw_position+1,moving_average_filter@current_position+1
  3242   002FFC  EC1C  F013         	call	_moving_average_filter	;wreg free
  3243   003000  C022  F168         	movff	?_moving_average_filter,calculate_position@filtered_position
  3244   003004  C023  F169         	movff	?_moving_average_filter+1,calculate_position@filtered_position+1
  3245   003008                     l6380:
  3246                           
  3247                           ;mcc_generated_files/touch/mtouch_slider.c: 676:     slider->rawPosition = raw_position;
  3248   003008  EE20 F00A          	lfsr	2,10
  3249   00300C  5031               	movf	calculate_position@slider^0,w,c
  3250   00300E  26D9               	addwf	fsr2l,f,c
  3251   003010  5032               	movf	(calculate_position@slider+1)^0,w,c
  3252   003012  22DA               	addwfc	fsr2h,f,c
  3253   003014  C16A  FFDE         	movff	calculate_position@raw_position,postinc2
  3254   003018  C16B  FFDD         	movff	calculate_position@raw_position+1,postdec2
  3255   00301C                     
  3256                           ;mcc_generated_files/touch/mtouch_slider.c: 679:     position = positional_hysteresis(sl
      +                          ider, filtered_position);
  3257   00301C  C031  F022         	movff	calculate_position@slider,positional_hysteresis@slider
  3258   003020  C032  F023         	movff	calculate_position@slider+1,positional_hysteresis@slider+1
  3259   003024  C168  F024         	movff	calculate_position@filtered_position,positional_hysteresis@current_position
  3260   003028  C169  F025         	movff	calculate_position@filtered_position+1,positional_hysteresis@current_position+1
  3261   00302C  EC52  F010         	call	_positional_hysteresis	;wreg free
  3262   003030  C022  F166         	movff	?_positional_hysteresis,calculate_position@position
  3263   003034  C023  F167         	movff	?_positional_hysteresis+1,calculate_position@position+1
  3264   003038                     
  3265                           ;mcc_generated_files/touch/mtouch_slider.c: 681:     return position;
  3266   003038  C166  F031         	movff	calculate_position@position,?_calculate_position
  3267   00303C  C167  F032         	movff	calculate_position@position+1,?_calculate_position+1
  3268   003040  0012               	return		;funcret
  3269   003042                     __end_of_calculate_position:
  3270                           	callstack 0
  3271                           
  3272 ;; *************** function _positional_hysteresis *****************
  3273 ;; Defined at:
  3274 ;;		line 289 in file "mcc_generated_files/touch/mtouch_slider.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;  slider          2   33[COMRAM] PTR struct .
  3277 ;;		 -> mtouch_slider(17), 
  3278 ;;  current_posi    2   35[COMRAM] unsigned short 
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;  distance        2   46[COMRAM] short 
  3281 ;;  filtered_pos    2   42[COMRAM] unsigned short 
  3282 ;;  previous_pos    2   40[COMRAM] unsigned short 
  3283 ;;  polarity        1   45[COMRAM] unsigned char 
  3284 ;;  hyst_width      1   44[COMRAM] unsigned char 
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  2   33[COMRAM] unsigned short 
  3287 ;; Registers used:
  3288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3294 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3295 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3296 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3297 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3298 ;;Total ram usage:       15 bytes
  3299 ;; Hardware stack levels used: 1
  3300 ;; Hardware stack levels required when called: 7
  3301 ;; This function calls:
  3302 ;;		_get_difference
  3303 ;; This function is called by:
  3304 ;;		_calculate_position
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text21
  3309   0020A4                     __ptext21:
  3310                           	callstack 0
  3311   0020A4                     _positional_hysteresis:
  3312                           	callstack 19
  3313   0020A4                     
  3314                           ;mcc_generated_files/touch/mtouch_slider.c: 289: static uint16_t positional_hysteresis(m
      +                          touch_slider_t* slider, uint16_t current_position);mcc_generated_files/touch/mtouch_slid
      +                          er.c: 290: {;mcc_generated_files/touch/mtouch_slider.c: 291:     uint16_t filtered_posit
      +                          ion, previous_position;;mcc_generated_files/touch/mtouch_slider.c: 292:     uint8_t hyst
      +                          _width;;mcc_generated_files/touch/mtouch_slider.c: 293:     int16_t distance;;mcc_genera
      +                          ted_files/touch/mtouch_slider.c: 294:     uint8_t polarity = 0u;
  3315   0020A4  0E00               	movlw	0
  3316   0020A6  6E2E               	movwf	positional_hysteresis@polarity^0,c
  3317   0020A8                     
  3318                           ;mcc_generated_files/touch/mtouch_slider.c: 297:     hyst_width = slider->positionHyster
      +                          esis;
  3319   0020A8  EE20 F005          	lfsr	2,5
  3320   0020AC  5022               	movf	positional_hysteresis@slider^0,w,c
  3321   0020AE  26D9               	addwf	fsr2l,f,c
  3322   0020B0  5023               	movf	(positional_hysteresis@slider+1)^0,w,c
  3323   0020B2  22DA               	addwfc	fsr2h,f,c
  3324   0020B4  50DF               	movf	indf2,w,c
  3325   0020B6  6E2D               	movwf	positional_hysteresis@hyst_width^0,c
  3326   0020B8                     
  3327                           ;mcc_generated_files/touch/mtouch_slider.c: 298:     previous_position = slider->sliderP
      +                          osition;
  3328   0020B8  EE20 F00C          	lfsr	2,12
  3329   0020BC  5022               	movf	positional_hysteresis@slider^0,w,c
  3330   0020BE  26D9               	addwf	fsr2l,f,c
  3331   0020C0  5023               	movf	(positional_hysteresis@slider+1)^0,w,c
  3332   0020C2  22DA               	addwfc	fsr2h,f,c
  3333   0020C4  CFDE F029          	movff	postinc2,positional_hysteresis@previous_position
  3334   0020C8  CFDD F02A          	movff	postdec2,positional_hysteresis@previous_position+1
  3335   0020CC                     
  3336                           ;mcc_generated_files/touch/mtouch_slider.c: 301:     distance = get_difference(slider, p
      +                          revious_position, current_position);
  3337   0020CC  C022  F015         	movff	positional_hysteresis@slider,get_difference@slider
  3338   0020D0  C023  F016         	movff	positional_hysteresis@slider+1,get_difference@slider+1
  3339   0020D4  C029  F017         	movff	positional_hysteresis@previous_position,get_difference@previous_position
  3340   0020D8  C02A  F018         	movff	positional_hysteresis@previous_position+1,get_difference@previous_position+1
  3341   0020DC  C024  F019         	movff	positional_hysteresis@current_position,get_difference@current_position
  3342   0020E0  C025  F01A         	movff	positional_hysteresis@current_position+1,get_difference@current_position+1
  3343   0020E4  EC74  F016         	call	_get_difference	;wreg free
  3344   0020E8  C015  F02F         	movff	?_get_difference,positional_hysteresis@distance
  3345   0020EC  C016  F030         	movff	?_get_difference+1,positional_hysteresis@distance+1
  3346   0020F0                     
  3347                           ;mcc_generated_files/touch/mtouch_slider.c: 303:     if (distance < 0)
  3348   0020F0  BE30               	btfsc	(positional_hysteresis@distance+1)^0,7,c
  3349   0020F2  EF7F  F010         	goto	u5310
  3350   0020F6  EF7D  F010         	goto	u5311
  3351   0020FA                     u5311:
  3352   0020FA  EF89  F010         	goto	l6044
  3353   0020FE                     u5310:
  3354   0020FE                     
  3355                           ;mcc_generated_files/touch/mtouch_slider.c: 304:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 305:         distance = (0 - distance);
  3356   0020FE  502F               	movf	positional_hysteresis@distance^0,w,c
  3357   002100  0800               	sublw	0
  3358   002102  6E2F               	movwf	positional_hysteresis@distance^0,c
  3359   002104  5030               	movf	(positional_hysteresis@distance+1)^0,w,c
  3360   002106  A0D8               	btfss	status,0,c
  3361   002108  2AE8               	incf	wreg,f,c
  3362   00210A  0800               	sublw	0
  3363   00210C  6E30               	movwf	(positional_hysteresis@distance+1)^0,c
  3364   00210E                     
  3365                           ;mcc_generated_files/touch/mtouch_slider.c: 306:         polarity = 1u;
  3366   00210E  0E01               	movlw	1
  3367   002110  6E2E               	movwf	positional_hysteresis@polarity^0,c
  3368   002112                     l6044:
  3369                           
  3370                           ;mcc_generated_files/touch/mtouch_slider.c: 311:     if ((polarity == 1u) && (distance >
      +                           (int16_t) slider->leftHysteresis))
  3371   002112  042E               	decf	positional_hysteresis@polarity^0,w,c
  3372   002114  A4D8               	btfss	status,2,c
  3373   002116  EF8F  F010         	goto	u5321
  3374   00211A  EF91  F010         	goto	u5320
  3375   00211E                     u5321:
  3376   00211E  EFBE  F010         	goto	l6052
  3377   002122                     u5320:
  3378   002122  EE20 F009          	lfsr	2,9
  3379   002126  5022               	movf	positional_hysteresis@slider^0,w,c
  3380   002128  26D9               	addwf	fsr2l,f,c
  3381   00212A  5023               	movf	(positional_hysteresis@slider+1)^0,w,c
  3382   00212C  22DA               	addwfc	fsr2h,f,c
  3383   00212E  50DF               	movf	indf2,w,c
  3384   002130  6E26               	movwf	??_positional_hysteresis^0,c
  3385   002132  6A27               	clrf	(??_positional_hysteresis+1)^0,c
  3386   002134  502F               	movf	positional_hysteresis@distance^0,w,c
  3387   002136  5C26               	subwf	??_positional_hysteresis^0,w,c
  3388   002138  5027               	movf	(??_positional_hysteresis+1)^0,w,c
  3389   00213A  0A80               	xorlw	128
  3390   00213C  6E28               	movwf	(??_positional_hysteresis+2)^0,c
  3391   00213E  5030               	movf	(positional_hysteresis@distance+1)^0,w,c
  3392   002140  0A80               	xorlw	128
  3393   002142  5828               	subwfb	(??_positional_hysteresis+2)^0,w,c
  3394   002144  B0D8               	btfsc	status,0,c
  3395   002146  EFA7  F010         	goto	u5331
  3396   00214A  EFA9  F010         	goto	u5330
  3397   00214E                     u5331:
  3398   00214E  EFBE  F010         	goto	l6052
  3399   002152                     u5330:
  3400   002152                     
  3401                           ;mcc_generated_files/touch/mtouch_slider.c: 312:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 314:         slider->rightHysteresis = hyst_width;
  3402   002152  EE20 F008          	lfsr	2,8
  3403   002156  5022               	movf	positional_hysteresis@slider^0,w,c
  3404   002158  26D9               	addwf	fsr2l,f,c
  3405   00215A  5023               	movf	(positional_hysteresis@slider+1)^0,w,c
  3406   00215C  22DA               	addwfc	fsr2h,f,c
  3407   00215E  C02D  FFDF         	movff	positional_hysteresis@hyst_width,indf2
  3408                           
  3409                           ;mcc_generated_files/touch/mtouch_slider.c: 315:         slider->leftHysteresis = 0u;
  3410   002162  EE20 F009          	lfsr	2,9
  3411   002166  5022               	movf	positional_hysteresis@slider^0,w,c
  3412   002168  26D9               	addwf	fsr2l,f,c
  3413   00216A  5023               	movf	(positional_hysteresis@slider+1)^0,w,c
  3414   00216C  22DA               	addwfc	fsr2h,f,c
  3415   00216E  6ADF               	clrf	indf2,c
  3416   002170                     l6050:
  3417                           
  3418                           ;mcc_generated_files/touch/mtouch_slider.c: 316:         filtered_position = current_pos
      +                          ition;
  3419   002170  C024  F02B         	movff	positional_hysteresis@current_position,positional_hysteresis@filtered_position
  3420   002174  C025  F02C         	movff	positional_hysteresis@current_position+1,positional_hysteresis@filtered_position+
      +                          1
  3421                           
  3422                           ;mcc_generated_files/touch/mtouch_slider.c: 317:     }
  3423   002178  EFF9  F010         	goto	l6062
  3424   00217C                     l6052:
  3425   00217C  502E               	movf	positional_hysteresis@polarity^0,w,c
  3426   00217E  A4D8               	btfss	status,2,c
  3427   002180  EFC4  F010         	goto	u5341
  3428   002184  EFC6  F010         	goto	u5340
  3429   002188                     u5341:
  3430   002188  EFEF  F010         	goto	l6060
  3431   00218C                     u5340:
  3432   00218C  EE20 F008          	lfsr	2,8
  3433   002190  5022               	movf	positional_hysteresis@slider^0,w,c
  3434   002192  26D9               	addwf	fsr2l,f,c
  3435   002194  5023               	movf	(positional_hysteresis@slider+1)^0,w,c
  3436   002196  22DA               	addwfc	fsr2h,f,c
  3437   002198  50DF               	movf	indf2,w,c
  3438   00219A  6E26               	movwf	??_positional_hysteresis^0,c
  3439   00219C  6A27               	clrf	(??_positional_hysteresis+1)^0,c
  3440   00219E  502F               	movf	positional_hysteresis@distance^0,w,c
  3441   0021A0  5C26               	subwf	??_positional_hysteresis^0,w,c
  3442   0021A2  5027               	movf	(??_positional_hysteresis+1)^0,w,c
  3443   0021A4  0A80               	xorlw	128
  3444   0021A6  6E28               	movwf	(??_positional_hysteresis+2)^0,c
  3445   0021A8  5030               	movf	(positional_hysteresis@distance+1)^0,w,c
  3446   0021AA  0A80               	xorlw	128
  3447   0021AC  5828               	subwfb	(??_positional_hysteresis+2)^0,w,c
  3448   0021AE  B0D8               	btfsc	status,0,c
  3449   0021B0  EFDC  F010         	goto	u5351
  3450   0021B4  EFDE  F010         	goto	u5350
  3451   0021B8                     u5351:
  3452   0021B8  EFEF  F010         	goto	l6060
  3453   0021BC                     u5350:
  3454   0021BC                     
  3455                           ;mcc_generated_files/touch/mtouch_slider.c: 319:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 321:         slider->rightHysteresis = 0u;
  3456   0021BC  EE20 F008          	lfsr	2,8
  3457   0021C0  5022               	movf	positional_hysteresis@slider^0,w,c
  3458   0021C2  26D9               	addwf	fsr2l,f,c
  3459   0021C4  5023               	movf	(positional_hysteresis@slider+1)^0,w,c
  3460   0021C6  22DA               	addwfc	fsr2h,f,c
  3461   0021C8  6ADF               	clrf	indf2,c
  3462                           
  3463                           ;mcc_generated_files/touch/mtouch_slider.c: 322:         slider->leftHysteresis = hyst_w
      +                          idth;
  3464   0021CA  EE20 F009          	lfsr	2,9
  3465   0021CE  5022               	movf	positional_hysteresis@slider^0,w,c
  3466   0021D0  26D9               	addwf	fsr2l,f,c
  3467   0021D2  5023               	movf	(positional_hysteresis@slider+1)^0,w,c
  3468   0021D4  22DA               	addwfc	fsr2h,f,c
  3469   0021D6  C02D  FFDF         	movff	positional_hysteresis@hyst_width,indf2
  3470   0021DA  EFB8  F010         	goto	l6050
  3471   0021DE                     l6060:
  3472                           
  3473                           ;mcc_generated_files/touch/mtouch_slider.c: 326:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 328:         filtered_position = slider->sliderPosition;
  3474   0021DE  EE20 F00C          	lfsr	2,12
  3475   0021E2  5022               	movf	positional_hysteresis@slider^0,w,c
  3476   0021E4  26D9               	addwf	fsr2l,f,c
  3477   0021E6  5023               	movf	(positional_hysteresis@slider+1)^0,w,c
  3478   0021E8  22DA               	addwfc	fsr2h,f,c
  3479   0021EA  CFDE F02B          	movff	postinc2,positional_hysteresis@filtered_position
  3480   0021EE  CFDD F02C          	movff	postdec2,positional_hysteresis@filtered_position+1
  3481   0021F2                     l6062:
  3482                           
  3483                           ;mcc_generated_files/touch/mtouch_slider.c: 331:     return filtered_position;
  3484   0021F2  C02B  F022         	movff	positional_hysteresis@filtered_position,?_positional_hysteresis
  3485   0021F6  C02C  F023         	movff	positional_hysteresis@filtered_position+1,?_positional_hysteresis+1
  3486   0021FA  0012               	return		;funcret
  3487   0021FC                     __end_of_positional_hysteresis:
  3488                           	callstack 0
  3489                           
  3490 ;; *************** function _moving_average_filter *****************
  3491 ;; Defined at:
  3492 ;;		line 341 in file "mcc_generated_files/touch/mtouch_slider.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  slider          2   33[COMRAM] PTR struct .
  3495 ;;		 -> mtouch_slider(17), 
  3496 ;;  current_posi    2   35[COMRAM] unsigned short 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  distance        2   45[COMRAM] short 
  3499 ;;  dist_temp       2   43[COMRAM] unsigned short 
  3500 ;;  previous_pos    2   41[COMRAM] unsigned short 
  3501 ;;  filtered_pos    2   39[COMRAM] unsigned short 
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  2   33[COMRAM] unsigned short 
  3504 ;; Registers used:
  3505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3511 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3512 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3513 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3514 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3515 ;;Total ram usage:       14 bytes
  3516 ;; Hardware stack levels used: 1
  3517 ;; Hardware stack levels required when called: 7
  3518 ;; This function calls:
  3519 ;;		_get_difference
  3520 ;; This function is called by:
  3521 ;;		_calculate_position
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           	psect	text22
  3526   002638                     __ptext22:
  3527                           	callstack 0
  3528   002638                     _moving_average_filter:
  3529                           	callstack 19
  3530   002638                     
  3531                           ;mcc_generated_files/touch/mtouch_slider.c: 341: static uint16_t moving_average_filter(m
      +                          touch_slider_t* slider, uint16_t current_position);mcc_generated_files/touch/mtouch_slid
      +                          er.c: 342: {;mcc_generated_files/touch/mtouch_slider.c: 343:     uint16_t filtered_posit
      +                          ion, dist_temp;;mcc_generated_files/touch/mtouch_slider.c: 344:     uint16_t previous_po
      +                          sition;;mcc_generated_files/touch/mtouch_slider.c: 345:     int16_t distance;;mcc_genera
      +                          ted_files/touch/mtouch_slider.c: 347:     previous_position = slider->rawPosition;
  3532   002638  EE20 F00A          	lfsr	2,10
  3533   00263C  5022               	movf	moving_average_filter@slider^0,w,c
  3534   00263E  26D9               	addwf	fsr2l,f,c
  3535   002640  5023               	movf	(moving_average_filter@slider+1)^0,w,c
  3536   002642  22DA               	addwfc	fsr2h,f,c
  3537   002644  CFDE F02A          	movff	postinc2,moving_average_filter@previous_position
  3538   002648  CFDD F02B          	movff	postdec2,moving_average_filter@previous_position+1
  3539   00264C                     
  3540                           ;mcc_generated_files/touch/mtouch_slider.c: 349:     distance = get_difference(slider, p
      +                          revious_position, current_position);
  3541   00264C  C022  F015         	movff	moving_average_filter@slider,get_difference@slider
  3542   002650  C023  F016         	movff	moving_average_filter@slider+1,get_difference@slider+1
  3543   002654  C02A  F017         	movff	moving_average_filter@previous_position,get_difference@previous_position
  3544   002658  C02B  F018         	movff	moving_average_filter@previous_position+1,get_difference@previous_position+1
  3545   00265C  C024  F019         	movff	moving_average_filter@current_position,get_difference@current_position
  3546   002660  C025  F01A         	movff	moving_average_filter@current_position+1,get_difference@current_position+1
  3547   002664  EC74  F016         	call	_get_difference	;wreg free
  3548   002668  C015  F02E         	movff	?_get_difference,moving_average_filter@distance
  3549   00266C  C016  F02F         	movff	?_get_difference+1,moving_average_filter@distance+1
  3550   002670                     
  3551                           ;mcc_generated_files/touch/mtouch_slider.c: 352:     if ((distance == 1) || (distance ==
      +                           -1))
  3552   002670  042E               	decf	moving_average_filter@distance^0,w,c
  3553   002672  102F               	iorwf	(moving_average_filter@distance+1)^0,w,c
  3554   002674  B4D8               	btfsc	status,2,c
  3555   002676  EF3F  F013         	goto	u5361
  3556   00267A  EF41  F013         	goto	u5360
  3557   00267E                     u5361:
  3558   00267E  EF4B  F013         	goto	l739
  3559   002682                     u5360:
  3560   002682  282E               	incf	moving_average_filter@distance^0,w,c
  3561   002684  E106               	bnz	u5371
  3562   002686  282F               	incf	(moving_average_filter@distance+1)^0,w,c
  3563   002688  A4D8               	btfss	status,2,c
  3564   00268A  EF49  F013         	goto	u5371
  3565   00268E  EF4B  F013         	goto	u5370
  3566   002692                     u5371:
  3567   002692  EF51  F013         	goto	l6074
  3568   002696                     u5370:
  3569   002696                     l739:
  3570                           
  3571                           ;mcc_generated_files/touch/mtouch_slider.c: 353:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 354:         filtered_position = previous_position;
  3572   002696  C02A  F028         	movff	moving_average_filter@previous_position,moving_average_filter@filtered_position
  3573   00269A  C02B  F029         	movff	moving_average_filter@previous_position+1,moving_average_filter@filtered_position
      +                          +1
  3574                           
  3575                           ;mcc_generated_files/touch/mtouch_slider.c: 355:     }
  3576   00269E  EF94  F013         	goto	l6084
  3577   0026A2                     l6074:
  3578                           
  3579                           ;mcc_generated_files/touch/mtouch_slider.c: 357:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 359:         if (distance < 0)
  3580   0026A2  BE2F               	btfsc	(moving_average_filter@distance+1)^0,7,c
  3581   0026A4  EF58  F013         	goto	u5380
  3582   0026A8  EF56  F013         	goto	u5381
  3583   0026AC                     u5381:
  3584   0026AC  EF75  F013         	goto	l741
  3585   0026B0                     u5380:
  3586   0026B0                     
  3587                           ;mcc_generated_files/touch/mtouch_slider.c: 360:         {;mcc_generated_files/touch/mto
      +                          uch_slider.c: 361:             distance = (0 - distance);
  3588   0026B0  502E               	movf	moving_average_filter@distance^0,w,c
  3589   0026B2  0800               	sublw	0
  3590   0026B4  6E2E               	movwf	moving_average_filter@distance^0,c
  3591   0026B6  502F               	movf	(moving_average_filter@distance+1)^0,w,c
  3592   0026B8  A0D8               	btfss	status,0,c
  3593   0026BA  2AE8               	incf	wreg,f,c
  3594   0026BC  0800               	sublw	0
  3595   0026BE  6E2F               	movwf	(moving_average_filter@distance+1)^0,c
  3596   0026C0                     
  3597                           ;mcc_generated_files/touch/mtouch_slider.c: 362:             dist_temp = (uint16_t) dist
      +                          ance;
  3598   0026C0  C02E  F02C         	movff	moving_average_filter@distance,moving_average_filter@dist_temp
  3599   0026C4  C02F  F02D         	movff	moving_average_filter@distance+1,moving_average_filter@dist_temp+1
  3600                           
  3601                           ;mcc_generated_files/touch/mtouch_slider.c: 363:             dist_temp = dist_temp >> 1u
      +                          ;
  3602   0026C8  90D8               	bcf	status,0,c
  3603   0026CA  302D               	rrcf	(moving_average_filter@dist_temp+1)^0,w,c
  3604   0026CC  6E26               	movwf	??_moving_average_filter^0,c
  3605   0026CE  302C               	rrcf	moving_average_filter@dist_temp^0,w,c
  3606   0026D0  6E2C               	movwf	moving_average_filter@dist_temp^0,c
  3607   0026D2  C026  F02D         	movff	??_moving_average_filter,moving_average_filter@dist_temp+1
  3608                           
  3609                           ;mcc_generated_files/touch/mtouch_slider.c: 364:             distance = (int16_t) (0 - (
      +                          int16_t) dist_temp);
  3610   0026D6  502C               	movf	moving_average_filter@dist_temp^0,w,c
  3611   0026D8  0800               	sublw	0
  3612   0026DA  6E2E               	movwf	moving_average_filter@distance^0,c
  3613   0026DC  502D               	movf	(moving_average_filter@dist_temp+1)^0,w,c
  3614   0026DE  A0D8               	btfss	status,0,c
  3615   0026E0  2AE8               	incf	wreg,f,c
  3616   0026E2  0800               	sublw	0
  3617   0026E4  6E2F               	movwf	(moving_average_filter@distance+1)^0,c
  3618                           
  3619                           ;mcc_generated_files/touch/mtouch_slider.c: 366:         }
  3620   0026E6  EF84  F013         	goto	l742
  3621   0026EA                     l741:
  3622                           
  3623                           ;mcc_generated_files/touch/mtouch_slider.c: 368:         {;mcc_generated_files/touch/mto
      +                          uch_slider.c: 369:             dist_temp = (uint16_t) (distance);
  3624   0026EA  C02E  F02C         	movff	moving_average_filter@distance,moving_average_filter@dist_temp
  3625   0026EE  C02F  F02D         	movff	moving_average_filter@distance+1,moving_average_filter@dist_temp+1
  3626   0026F2                     
  3627                           ;mcc_generated_files/touch/mtouch_slider.c: 370:             dist_temp = dist_temp >> 1u
      +                          ;
  3628   0026F2  90D8               	bcf	status,0,c
  3629   0026F4  302D               	rrcf	(moving_average_filter@dist_temp+1)^0,w,c
  3630   0026F6  6E26               	movwf	??_moving_average_filter^0,c
  3631   0026F8  302C               	rrcf	moving_average_filter@dist_temp^0,w,c
  3632   0026FA  6E2C               	movwf	moving_average_filter@dist_temp^0,c
  3633   0026FC  C026  F02D         	movff	??_moving_average_filter,moving_average_filter@dist_temp+1
  3634   002700                     
  3635                           ;mcc_generated_files/touch/mtouch_slider.c: 371:             distance = (int16_t) (dist_
      +                          temp);
  3636   002700  C02C  F02E         	movff	moving_average_filter@dist_temp,moving_average_filter@distance
  3637   002704  C02D  F02F         	movff	moving_average_filter@dist_temp+1,moving_average_filter@distance+1
  3638   002708                     l742:
  3639                           
  3640                           ;mcc_generated_files/touch/mtouch_slider.c: 373:         filtered_position = (previous_p
      +                          osition) + (uint16_t) (distance);
  3641   002708  502A               	movf	moving_average_filter@previous_position^0,w,c
  3642   00270A  242E               	addwf	moving_average_filter@distance^0,w,c
  3643   00270C  6E28               	movwf	moving_average_filter@filtered_position^0,c
  3644   00270E  502B               	movf	(moving_average_filter@previous_position+1)^0,w,c
  3645   002710  202F               	addwfc	(moving_average_filter@distance+1)^0,w,c
  3646   002712  6E29               	movwf	(moving_average_filter@filtered_position+1)^0,c
  3647                           
  3648                           ;mcc_generated_files/touch/mtouch_slider.c: 374:         filtered_position &= (resol_val
      +                          ue - 1u);
  3649   002714  0EFF               	movlw	255
  3650   002716  243D               	addwf	_resol_value^0,w,c
  3651   002718  6E26               	movwf	??_moving_average_filter^0,c
  3652   00271A  0EFF               	movlw	255
  3653   00271C  203E               	addwfc	(_resol_value+1)^0,w,c
  3654   00271E  6E27               	movwf	(??_moving_average_filter+1)^0,c
  3655   002720  5026               	movf	??_moving_average_filter^0,w,c
  3656   002722  1628               	andwf	moving_average_filter@filtered_position^0,f,c
  3657   002724  5027               	movf	(??_moving_average_filter+1)^0,w,c
  3658   002726  1629               	andwf	(moving_average_filter@filtered_position+1)^0,f,c
  3659   002728                     l6084:
  3660                           
  3661                           ;mcc_generated_files/touch/mtouch_slider.c: 377:     return filtered_position;
  3662   002728  C028  F022         	movff	moving_average_filter@filtered_position,?_moving_average_filter
  3663   00272C  C029  F023         	movff	moving_average_filter@filtered_position+1,?_moving_average_filter+1
  3664   002730  0012               	return		;funcret
  3665   002732                     __end_of_moving_average_filter:
  3666                           	callstack 0
  3667                           
  3668 ;; *************** function _get_difference *****************
  3669 ;; Defined at:
  3670 ;;		line 251 in file "mcc_generated_files/touch/mtouch_slider.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;  slider          2   20[COMRAM] PTR struct .
  3673 ;;		 -> mtouch_slider(17), 
  3674 ;;  previous_pos    2   22[COMRAM] unsigned short 
  3675 ;;  current_posi    2   24[COMRAM] unsigned short 
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;  diff            2   31[COMRAM] short 
  3678 ;;  rollover_thr    2   29[COMRAM] unsigned short 
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  2   20[COMRAM] short 
  3681 ;; Registers used:
  3682 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3688 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3689 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3690 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3691 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3692 ;;Total ram usage:       13 bytes
  3693 ;; Hardware stack levels used: 1
  3694 ;; Hardware stack levels required when called: 6
  3695 ;; This function calls:
  3696 ;;		Nothing
  3697 ;; This function is called by:
  3698 ;;		_positional_hysteresis
  3699 ;;		_moving_average_filter
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text23
  3704   002CE8                     __ptext23:
  3705                           	callstack 0
  3706   002CE8                     _get_difference:
  3707                           	callstack 19
  3708   002CE8                     
  3709                           ;mcc_generated_files/touch/mtouch_slider.c: 251: static int16_t get_difference(mtouch_sl
      +                          ider_t* slider, uint16_t previous_position, uint16_t current_position);mcc_generated_fil
      +                          es/touch/mtouch_slider.c: 252: {;mcc_generated_files/touch/mtouch_slider.c: 253:     int
      +                          16_t diff;;mcc_generated_files/touch/mtouch_slider.c: 254:     uint16_t rollover_thresho
      +                          ld;;mcc_generated_files/touch/mtouch_slider.c: 257:     rollover_threshold = resol_value
      +                           >> 1u;
  3710   002CE8  90D8               	bcf	status,0,c
  3711   002CEA  303E               	rrcf	(_resol_value+1)^0,w,c
  3712   002CEC  6E1B               	movwf	??_get_difference^0,c
  3713   002CEE  303D               	rrcf	_resol_value^0,w,c
  3714   002CF0  6E1E               	movwf	get_difference@rollover_threshold^0,c
  3715   002CF2  C01B  F01F         	movff	??_get_difference,get_difference@rollover_threshold+1
  3716                           
  3717                           ;mcc_generated_files/touch/mtouch_slider.c: 260:     diff = ((int16_t) current_position 
      +                          - (int16_t) previous_position);
  3718   002CF6  5017               	movf	get_difference@previous_position^0,w,c
  3719   002CF8  5C19               	subwf	get_difference@current_position^0,w,c
  3720   002CFA  6E20               	movwf	get_difference@diff^0,c
  3721   002CFC  5018               	movf	(get_difference@previous_position+1)^0,w,c
  3722   002CFE  581A               	subwfb	(get_difference@current_position+1)^0,w,c
  3723   002D00  6E21               	movwf	(get_difference@diff+1)^0,c
  3724   002D02                     
  3725                           ;mcc_generated_files/touch/mtouch_slider.c: 263:     if (slider->type == MTOUCH_TYPE_WHE
      +                          EL)
  3726   002D02  EE20 F001          	lfsr	2,1
  3727   002D06  5015               	movf	get_difference@slider^0,w,c
  3728   002D08  26D9               	addwf	fsr2l,f,c
  3729   002D0A  5016               	movf	(get_difference@slider+1)^0,w,c
  3730   002D0C  22DA               	addwfc	fsr2h,f,c
  3731   002D0E  04DE               	decf	postinc2,w,c
  3732   002D10  A4D8               	btfss	status,2,c
  3733   002D12  EF8D  F016         	goto	u5101
  3734   002D16  EF8F  F016         	goto	u5100
  3735   002D1A                     u5101:
  3736   002D1A  EFCA  F016         	goto	l5924
  3737   002D1E                     u5100:
  3738   002D1E                     
  3739                           ;mcc_generated_files/touch/mtouch_slider.c: 264:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 265:         if (diff < (int16_t) 0u)
  3740   002D1E  BE21               	btfsc	(get_difference@diff+1)^0,7,c
  3741   002D20  EF96  F016         	goto	u5110
  3742   002D24  EF94  F016         	goto	u5111
  3743   002D28                     u5111:
  3744   002D28  EFB5  F016         	goto	l5920
  3745   002D2C                     u5110:
  3746   002D2C                     
  3747                           ;mcc_generated_files/touch/mtouch_slider.c: 266:         {;mcc_generated_files/touch/mto
      +                          uch_slider.c: 267:             if ((0 - (int16_t) rollover_threshold) > diff)
  3748   002D2C  0E00               	movlw	0
  3749   002D2E  6E1B               	movwf	??_get_difference^0,c
  3750   002D30  0E00               	movlw	0
  3751   002D32  6E1C               	movwf	(??_get_difference+1)^0,c
  3752   002D34  501E               	movf	get_difference@rollover_threshold^0,w,c
  3753   002D36  5E1B               	subwf	??_get_difference^0,f,c
  3754   002D38  501F               	movf	(get_difference@rollover_threshold+1)^0,w,c
  3755   002D3A  5A1C               	subwfb	(??_get_difference+1)^0,f,c
  3756   002D3C  501B               	movf	??_get_difference^0,w,c
  3757   002D3E  5C20               	subwf	get_difference@diff^0,w,c
  3758   002D40  5021               	movf	(get_difference@diff+1)^0,w,c
  3759   002D42  0A80               	xorlw	128
  3760   002D44  6E1D               	movwf	(??_get_difference+2)^0,c
  3761   002D46  501C               	movf	(??_get_difference+1)^0,w,c
  3762   002D48  0A80               	xorlw	128
  3763   002D4A  581D               	subwfb	(??_get_difference+2)^0,w,c
  3764   002D4C  B0D8               	btfsc	status,0,c
  3765   002D4E  EFAB  F016         	goto	u5121
  3766   002D52  EFAD  F016         	goto	u5120
  3767   002D56                     u5121:
  3768   002D56  EFCA  F016         	goto	l5924
  3769   002D5A                     u5120:
  3770   002D5A                     
  3771                           ;mcc_generated_files/touch/mtouch_slider.c: 268:             {;mcc_generated_files/touch
      +                          /mtouch_slider.c: 269:                 diff = (diff + (int16_t) resol_value);
  3772   002D5A  5020               	movf	get_difference@diff^0,w,c
  3773   002D5C  243D               	addwf	_resol_value^0,w,c
  3774   002D5E  6E20               	movwf	get_difference@diff^0,c
  3775   002D60  5021               	movf	(get_difference@diff+1)^0,w,c
  3776   002D62  203E               	addwfc	(_resol_value+1)^0,w,c
  3777   002D64  6E21               	movwf	(get_difference@diff+1)^0,c
  3778   002D66  EFCA  F016         	goto	l5924
  3779   002D6A                     l5920:
  3780                           
  3781                           ;mcc_generated_files/touch/mtouch_slider.c: 273:         {;mcc_generated_files/touch/mto
      +                          uch_slider.c: 274:             if (diff > ((int16_t) rollover_threshold))
  3782   002D6A  5020               	movf	get_difference@diff^0,w,c
  3783   002D6C  5C1E               	subwf	get_difference@rollover_threshold^0,w,c
  3784   002D6E  501F               	movf	(get_difference@rollover_threshold+1)^0,w,c
  3785   002D70  0A80               	xorlw	128
  3786   002D72  6E1B               	movwf	??_get_difference^0,c
  3787   002D74  5021               	movf	(get_difference@diff+1)^0,w,c
  3788   002D76  0A80               	xorlw	128
  3789   002D78  581B               	subwfb	??_get_difference^0,w,c
  3790   002D7A  B0D8               	btfsc	status,0,c
  3791   002D7C  EFC2  F016         	goto	u5131
  3792   002D80  EFC4  F016         	goto	u5130
  3793   002D84                     u5131:
  3794   002D84  EFCA  F016         	goto	l5924
  3795   002D88                     u5130:
  3796   002D88                     
  3797                           ;mcc_generated_files/touch/mtouch_slider.c: 275:             {;mcc_generated_files/touch
      +                          /mtouch_slider.c: 276:                 diff = (diff - (int16_t) resol_value);
  3798   002D88  503D               	movf	_resol_value^0,w,c
  3799   002D8A  5C20               	subwf	get_difference@diff^0,w,c
  3800   002D8C  6E20               	movwf	get_difference@diff^0,c
  3801   002D8E  503E               	movf	(_resol_value+1)^0,w,c
  3802   002D90  5821               	subwfb	(get_difference@diff+1)^0,w,c
  3803   002D92  6E21               	movwf	(get_difference@diff+1)^0,c
  3804   002D94                     l5924:
  3805                           
  3806                           ;mcc_generated_files/touch/mtouch_slider.c: 281:     return diff;
  3807   002D94  C020  F015         	movff	get_difference@diff,?_get_difference
  3808   002D98  C021  F016         	movff	get_difference@diff+1,?_get_difference+1
  3809   002D9C  0012               	return		;funcret
  3810   002D9E                     __end_of_get_difference:
  3811                           	callstack 0
  3812                           
  3813 ;; *************** function _calculate_raw_position *****************
  3814 ;; Defined at:
  3815 ;;		line 522 in file "mcc_generated_files/touch/mtouch_slider.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;  slider          2   40[COMRAM] PTR struct .
  3818 ;;		 -> mtouch_slider(17), 
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;  position        2    8[BANK0 ] unsigned short 
  3821 ;;  deadband        2    4[BANK0 ] unsigned short 
  3822 ;;  deadband_set    2    1[BANK0 ] unsigned short 
  3823 ;;  size            1    7[BANK0 ] unsigned char 
  3824 ;;  interpolatio    1    6[BANK0 ] unsigned char 
  3825 ;;  interpolatio    1    3[BANK0 ] unsigned char 
  3826 ;;  ref_node        1    0[BANK0 ] unsigned char 
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  2   40[COMRAM] unsigned short 
  3829 ;; Registers used:
  3830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3837 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3838 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3839 ;;      Totals:         7      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3840 ;;Total ram usage:       17 bytes
  3841 ;; Hardware stack levels used: 1
  3842 ;; Hardware stack levels required when called: 8
  3843 ;; This function calls:
  3844 ;;		_divide
  3845 ;;		_interpolate
  3846 ;; This function is called by:
  3847 ;;		_calculate_position
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text24
  3852   000F9C                     __ptext24:
  3853                           	callstack 0
  3854   000F9C                     _calculate_raw_position:
  3855                           	callstack 18
  3856   000F9C                     
  3857                           ;mcc_generated_files/touch/mtouch_slider.c: 522: static uint16_t calculate_raw_position(
      +                          mtouch_slider_t* slider);mcc_generated_files/touch/mtouch_slider.c: 523: {;mcc_generated
      +                          _files/touch/mtouch_slider.c: 524:     uint8_t ref_node;;mcc_generated_files/touch/mtouc
      +                          h_slider.c: 525:     uint8_t interpolation_bits;;mcc_generated_files/touch/mtouch_slider
      +                          .c: 526:     uint8_t interpolation_scale;;mcc_generated_files/touch/mtouch_slider.c: 527
      +                          :     uint8_t size;;mcc_generated_files/touch/mtouch_slider.c: 528:     uint16_t positio
      +                          n, deadband, deadband_set;
  3858   000F9C  EE20 F002          	lfsr	2,2
  3859   000FA0  5029               	movf	calculate_raw_position@slider^0,w,c
  3860   000FA2  26D9               	addwf	fsr2l,f,c
  3861   000FA4  502A               	movf	(calculate_raw_position@slider+1)^0,w,c
  3862   000FA6  22DA               	addwfc	fsr2h,f,c
  3863   000FA8  50DF               	movf	indf2,w,c
  3864   000FAA  0100               	movlb	0	; () banked
  3865   000FAC  6FEB               	movwf	calculate_raw_position@ref_node& (0+255),b
  3866                           
  3867                           ;mcc_generated_files/touch/mtouch_slider.c: 532:     size = slider->segmentCount;
  3868   000FAE  EE20 F003          	lfsr	2,3
  3869   000FB2  5029               	movf	calculate_raw_position@slider^0,w,c
  3870   000FB4  26D9               	addwf	fsr2l,f,c
  3871   000FB6  502A               	movf	(calculate_raw_position@slider+1)^0,w,c
  3872   000FB8  22DA               	addwfc	fsr2h,f,c
  3873   000FBA  50DF               	movf	indf2,w,c
  3874   000FBC  6FF2               	movwf	calculate_raw_position@size& (0+255),b
  3875   000FBE                     
  3876                           ; BSR set to: 0
  3877                           ;mcc_generated_files/touch/mtouch_slider.c: 541:     if (size < 16u)
  3878   000FBE  0E10               	movlw	16
  3879   000FC0  61F2               	cpfslt	calculate_raw_position@size& (0+255),b
  3880   000FC2  EFE5  F007         	goto	u5481
  3881   000FC6  EFE7  F007         	goto	u5480
  3882   000FCA                     u5481:
  3883   000FCA  EFED  F007         	goto	l6154
  3884   000FCE                     u5480:
  3885   000FCE                     
  3886                           ; BSR set to: 0
  3887                           ;mcc_generated_files/touch/mtouch_slider.c: 542:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 543:         interpolation_bits = 12u;
  3888   000FCE  0E0C               	movlw	12
  3889   000FD0  6FF1               	movwf	calculate_raw_position@interpolation_bits& (0+255),b
  3890                           
  3891                           ;mcc_generated_files/touch/mtouch_slider.c: 544:         interpolation_scale = 0u;
  3892   000FD2  0E00               	movlw	0
  3893   000FD4  6FEE               	movwf	calculate_raw_position@interpolation_scale& (0+255),b
  3894                           
  3895                           ;mcc_generated_files/touch/mtouch_slider.c: 545:     }
  3896   000FD6  EFF1  F007         	goto	l6156
  3897   000FDA                     l6154:
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;mcc_generated_files/touch/mtouch_slider.c: 547:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 548:         interpolation_bits = 8u;
  3901   000FDA  0E08               	movlw	8
  3902   000FDC  6FF1               	movwf	calculate_raw_position@interpolation_bits& (0+255),b
  3903                           
  3904                           ;mcc_generated_files/touch/mtouch_slider.c: 549:         interpolation_scale = 4u;
  3905   000FDE  0E04               	movlw	4
  3906   000FE0  6FEE               	movwf	calculate_raw_position@interpolation_scale& (0+255),b
  3907   000FE2                     l6156:
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;mcc_generated_files/touch/mtouch_slider.c: 553:     if (wheel_sensor_middle_channel_zer
      +                          o == 1u)
  3911   000FE2  0446               	decf	_wheel_sensor_middle_channel_zero^0,w,c
  3912   000FE4  A4D8               	btfss	status,2,c
  3913   000FE6  EFF7  F007         	goto	u5491
  3914   000FEA  EFF9  F007         	goto	u5490
  3915   000FEE                     u5491:
  3916   000FEE  EF0D  F008         	goto	l6160
  3917   000FF2                     u5490:
  3918   000FF2                     
  3919                           ; BSR set to: 0
  3920                           ;mcc_generated_files/touch/mtouch_slider.c: 554:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 555:         position = (uint16_t) ((uint16_t) (size) << interpolation_bits);
  3921   000FF2  C0F1  F02B         	movff	calculate_raw_position@interpolation_bits,??_calculate_raw_position
  3922   000FF6  51F2               	movf	calculate_raw_position@size& (0+255),w,b
  3923   000FF8  6E2C               	movwf	(??_calculate_raw_position+1)^0,c
  3924   000FFA  6A2D               	clrf	(??_calculate_raw_position+2)^0,c
  3925   000FFC  2A2B               	incf	??_calculate_raw_position^0,f,c
  3926   000FFE  EF04  F008         	goto	u5504
  3927   001002                     u5505:
  3928   001002  90D8               	bcf	status,0,c
  3929   001004  362C               	rlcf	(??_calculate_raw_position+1)^0,f,c
  3930   001006  362D               	rlcf	(??_calculate_raw_position+2)^0,f,c
  3931   001008                     u5504:
  3932   001008  2E2B               	decfsz	??_calculate_raw_position^0,f,c
  3933   00100A  EF01  F008         	goto	u5505
  3934   00100E  C02C  F0F3         	movff	??_calculate_raw_position+1,calculate_raw_position@position
  3935   001012  C02D  F0F4         	movff	??_calculate_raw_position+2,calculate_raw_position@position+1
  3936                           
  3937                           ;mcc_generated_files/touch/mtouch_slider.c: 556:     }
  3938   001016  EF23  F008         	goto	l6162
  3939   00101A                     l6160:
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;mcc_generated_files/touch/mtouch_slider.c: 558:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 559:         position = (uint16_t) ((middle_node - ref_node) << interpolation_
      +                          bits);
  3943   00101A  C0F1  F02B         	movff	calculate_raw_position@interpolation_bits,??_calculate_raw_position
  3944   00101E  51EB               	movf	calculate_raw_position@ref_node& (0+255),w,b
  3945   001020  C047  F02C         	movff	_middle_node,??_calculate_raw_position+1
  3946   001024  6A2D               	clrf	(??_calculate_raw_position+2)^0,c
  3947   001026  5E2C               	subwf	(??_calculate_raw_position+1)^0,f,c
  3948   001028  0E00               	movlw	0
  3949   00102A  5A2D               	subwfb	(??_calculate_raw_position+2)^0,f,c
  3950   00102C  2A2B               	incf	??_calculate_raw_position^0,f,c
  3951   00102E  EF1C  F008         	goto	u5514
  3952   001032                     u5515:
  3953   001032  90D8               	bcf	status,0,c
  3954   001034  362C               	rlcf	(??_calculate_raw_position+1)^0,f,c
  3955   001036  362D               	rlcf	(??_calculate_raw_position+2)^0,f,c
  3956   001038                     u5514:
  3957   001038  2E2B               	decfsz	??_calculate_raw_position^0,f,c
  3958   00103A  EF19  F008         	goto	u5515
  3959   00103E  C02C  F0F3         	movff	??_calculate_raw_position+1,calculate_raw_position@position
  3960   001042  C02D  F0F4         	movff	??_calculate_raw_position+2,calculate_raw_position@position+1
  3961   001046                     l6162:
  3962                           
  3963                           ;mcc_generated_files/touch/mtouch_slider.c: 563:     position += interpolate((uint16_t) 
      +                          left_signal, (uint16_t) middle_signal, (uint16_t) right_signal, interpolation_bits);
  3964   001046  C03B  F01C         	movff	_left_signal,interpolate@delta1
  3965   00104A  C03C  F01D         	movff	_left_signal+1,interpolate@delta1+1
  3966   00104E  C037  F01E         	movff	_middle_signal,interpolate@delta2
  3967   001052  C038  F01F         	movff	_middle_signal+1,interpolate@delta2+1
  3968   001056  C039  F020         	movff	_right_signal,interpolate@delta3
  3969   00105A  C03A  F021         	movff	_right_signal+1,interpolate@delta3+1
  3970   00105E  C0F1  F022         	movff	calculate_raw_position@interpolation_bits,interpolate@num_bits
  3971   001062  EC7A  F014         	call	_interpolate	;wreg free
  3972   001066  501C               	movf	?_interpolate^0,w,c
  3973   001068  0100               	movlb	0	; () banked
  3974   00106A  27F3               	addwf	calculate_raw_position@position& (0+255),f,b
  3975   00106C  501D               	movf	(?_interpolate+1)^0,w,c
  3976   00106E  23F4               	addwfc	(calculate_raw_position@position+1)& (0+255),f,b
  3977   001070                     
  3978                           ; BSR set to: 0
  3979                           ;mcc_generated_files/touch/mtouch_slider.c: 566:     if (size > 2u)
  3980   001070  0E02               	movlw	2
  3981   001072  65F2               	cpfsgt	calculate_raw_position@size& (0+255),b
  3982   001074  EF3E  F008         	goto	u5521
  3983   001078  EF40  F008         	goto	u5520
  3984   00107C                     u5521:
  3985   00107C  EF71  F008         	goto	l6172
  3986   001080                     u5520:
  3987   001080                     
  3988                           ; BSR set to: 0
  3989                           ;mcc_generated_files/touch/mtouch_slider.c: 567:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 568:         if (slider->type == MTOUCH_TYPE_WHEEL)
  3990   001080  EE20 F001          	lfsr	2,1
  3991   001084  5029               	movf	calculate_raw_position@slider^0,w,c
  3992   001086  26D9               	addwf	fsr2l,f,c
  3993   001088  502A               	movf	(calculate_raw_position@slider+1)^0,w,c
  3994   00108A  22DA               	addwfc	fsr2h,f,c
  3995   00108C  04DE               	decf	postinc2,w,c
  3996   00108E  A4D8               	btfss	status,2,c
  3997   001090  EF4C  F008         	goto	u5531
  3998   001094  EF4E  F008         	goto	u5530
  3999   001098                     u5531:
  4000   001098  EF5F  F008         	goto	l6170
  4001   00109C                     u5530:
  4002   00109C                     
  4003                           ; BSR set to: 0
  4004                           ;mcc_generated_files/touch/mtouch_slider.c: 569:         {;mcc_generated_files/touch/mto
      +                          uch_slider.c: 570:             position = divide(position, (uint16_t) (size), interpolat
      +                          ion_scale);
  4005   00109C  C0F3  F015         	movff	calculate_raw_position@position,divide@numerator
  4006   0010A0  C0F4  F016         	movff	calculate_raw_position@position+1,divide@numerator+1
  4007   0010A4  C0F2  F017         	movff	calculate_raw_position@size,divide@denominator
  4008   0010A8  6A18               	clrf	(divide@denominator+1)^0,c
  4009   0010AA  C0EE  F019         	movff	calculate_raw_position@interpolation_scale,divide@exponent
  4010   0010AE  EC99  F013         	call	_divide	;wreg free
  4011   0010B2  C015  F0F3         	movff	?_divide,calculate_raw_position@position
  4012   0010B6  C016  F0F4         	movff	?_divide+1,calculate_raw_position@position+1
  4013                           
  4014                           ;mcc_generated_files/touch/mtouch_slider.c: 571:         }
  4015   0010BA  EF71  F008         	goto	l6172
  4016   0010BE                     l6170:
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;mcc_generated_files/touch/mtouch_slider.c: 573:         {;mcc_generated_files/touch/mto
      +                          uch_slider.c: 574:             position = divide(position, (uint16_t) ((uint16_t) size -
      +                           1u), interpolation_scale);
  4020   0010BE  C0F3  F015         	movff	calculate_raw_position@position,divide@numerator
  4021   0010C2  C0F4  F016         	movff	calculate_raw_position@position+1,divide@numerator+1
  4022   0010C6  0EFF               	movlw	255
  4023   0010C8  25F2               	addwf	calculate_raw_position@size& (0+255),w,b
  4024   0010CA  6E17               	movwf	divide@denominator^0,c
  4025   0010CC  6A18               	clrf	(divide@denominator+1)^0,c
  4026   0010CE  0EFF               	movlw	255
  4027   0010D0  2218               	addwfc	(divide@denominator+1)^0,f,c
  4028   0010D2  C0EE  F019         	movff	calculate_raw_position@interpolation_scale,divide@exponent
  4029   0010D6  EC99  F013         	call	_divide	;wreg free
  4030   0010DA  C015  F0F3         	movff	?_divide,calculate_raw_position@position
  4031   0010DE  C016  F0F4         	movff	?_divide+1,calculate_raw_position@position+1
  4032   0010E2                     l6172:
  4033                           
  4034                           ;mcc_generated_files/touch/mtouch_slider.c: 579:     if (position > (uint16_t)((uint16_t
      +                          )1u << 12u))
  4035   0010E2  0100               	movlb	0	; () banked
  4036   0010E4  05F3               	decf	calculate_raw_position@position& (0+255),w,b
  4037   0010E6  0E10               	movlw	16
  4038   0010E8  59F4               	subwfb	(calculate_raw_position@position+1)& (0+255),w,b
  4039   0010EA  A0D8               	btfss	status,0,c
  4040   0010EC  EF7A  F008         	goto	u5541
  4041   0010F0  EF7C  F008         	goto	u5540
  4042   0010F4                     u5541:
  4043   0010F4  EF80  F008         	goto	l6176
  4044   0010F8                     u5540:
  4045   0010F8                     
  4046                           ; BSR set to: 0
  4047                           ;mcc_generated_files/touch/mtouch_slider.c: 580:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 581:         position = (uint16_t)((uint16_t)1u << 12u);
  4048   0010F8  0E10               	movlw	16
  4049   0010FA  6FF4               	movwf	(calculate_raw_position@position+1)& (0+255),b
  4050   0010FC  0E00               	movlw	0
  4051   0010FE  6FF3               	movwf	calculate_raw_position@position& (0+255),b
  4052   001100                     l6176:
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;mcc_generated_files/touch/mtouch_slider.c: 585:     if ((slider->type == MTOUCH_TYPE_SL
      +                          IDER) && (0u != (slider->resolDeadband & (0x0Fu))))
  4056   001100  EE20 F001          	lfsr	2,1
  4057   001104  5029               	movf	calculate_raw_position@slider^0,w,c
  4058   001106  26D9               	addwf	fsr2l,f,c
  4059   001108  502A               	movf	(calculate_raw_position@slider+1)^0,w,c
  4060   00110A  22DA               	addwfc	fsr2h,f,c
  4061   00110C  50DF               	movf	indf2,w,c
  4062   00110E  A4D8               	btfss	status,2,c
  4063   001110  EF8C  F008         	goto	u5551
  4064   001114  EF8E  F008         	goto	u5550
  4065   001118                     u5551:
  4066   001118  EFF4  F008         	goto	l6198
  4067   00111C                     u5550:
  4068   00111C                     
  4069                           ; BSR set to: 0
  4070   00111C  EE20 F004          	lfsr	2,4
  4071   001120  5029               	movf	calculate_raw_position@slider^0,w,c
  4072   001122  26D9               	addwf	fsr2l,f,c
  4073   001124  502A               	movf	(calculate_raw_position@slider+1)^0,w,c
  4074   001126  22DA               	addwfc	fsr2h,f,c
  4075   001128  50DF               	movf	indf2,w,c
  4076   00112A  6E2B               	movwf	??_calculate_raw_position^0,c
  4077   00112C  0E0F               	movlw	15
  4078   00112E  162B               	andwf	??_calculate_raw_position^0,f,c
  4079   001130  B4D8               	btfsc	status,2,c
  4080   001132  EF9D  F008         	goto	u5561
  4081   001136  EF9F  F008         	goto	u5560
  4082   00113A                     u5561:
  4083   00113A  EFF4  F008         	goto	l6198
  4084   00113E                     u5560:
  4085   00113E                     
  4086                           ; BSR set to: 0
  4087                           ;mcc_generated_files/touch/mtouch_slider.c: 586:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 588:         deadband = 0u;
  4088   00113E  0E00               	movlw	0
  4089   001140  6FF0               	movwf	(calculate_raw_position@deadband+1)& (0+255),b
  4090   001142  0E00               	movlw	0
  4091   001144  6FEF               	movwf	calculate_raw_position@deadband& (0+255),b
  4092   001146                     
  4093                           ; BSR set to: 0
  4094                           ;mcc_generated_files/touch/mtouch_slider.c: 589:         deadband_set = (uint8_t) (slide
      +                          r->resolDeadband & (0x0Fu));
  4095   001146  EE20 F004          	lfsr	2,4
  4096   00114A  5029               	movf	calculate_raw_position@slider^0,w,c
  4097   00114C  26D9               	addwf	fsr2l,f,c
  4098   00114E  502A               	movf	(calculate_raw_position@slider+1)^0,w,c
  4099   001150  22DA               	addwfc	fsr2h,f,c
  4100   001152  50DF               	movf	indf2,w,c
  4101   001154  6E2B               	movwf	??_calculate_raw_position^0,c
  4102   001156  0E0F               	movlw	15
  4103   001158  162B               	andwf	??_calculate_raw_position^0,f,c
  4104   00115A  502B               	movf	??_calculate_raw_position^0,w,c
  4105   00115C  6FEC               	movwf	calculate_raw_position@deadband_set& (0+255),b
  4106   00115E  6BED               	clrf	(calculate_raw_position@deadband_set+1)& (0+255),b
  4107                           
  4108                           ;mcc_generated_files/touch/mtouch_slider.c: 590:         while (deadband_set > 0u)
  4109   001160  EFB9  F008         	goto	l6188
  4110   001164                     l6184:
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;mcc_generated_files/touch/mtouch_slider.c: 591:         {;mcc_generated_files/touch/mto
      +                          uch_slider.c: 592:             deadband_set--;
  4114   001164  07EC               	decf	calculate_raw_position@deadband_set& (0+255),f,b
  4115   001166  A0D8               	btfss	status,0,c
  4116   001168  07ED               	decf	(calculate_raw_position@deadband_set+1)& (0+255),f,b
  4117   00116A                     
  4118                           ; BSR set to: 0
  4119                           ;mcc_generated_files/touch/mtouch_slider.c: 593:             deadband += ((uint16_t)((ui
      +                          nt16_t)1u << 12u)/100u);
  4120   00116A  0E28               	movlw	40
  4121   00116C  27EF               	addwf	calculate_raw_position@deadband& (0+255),f,b
  4122   00116E  0E00               	movlw	0
  4123   001170  23F0               	addwfc	(calculate_raw_position@deadband+1)& (0+255),f,b
  4124   001172                     l6188:
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;mcc_generated_files/touch/mtouch_slider.c: 590:         while (deadband_set > 0u)
  4128   001172  51EC               	movf	calculate_raw_position@deadband_set& (0+255),w,b
  4129   001174  11ED               	iorwf	(calculate_raw_position@deadband_set+1)& (0+255),w,b
  4130   001176  A4D8               	btfss	status,2,c
  4131   001178  EFC0  F008         	goto	u5571
  4132   00117C  EFC2  F008         	goto	u5570
  4133   001180                     u5571:
  4134   001180  EFB2  F008         	goto	l6184
  4135   001184                     u5570:
  4136   001184                     
  4137                           ; BSR set to: 0
  4138                           ;mcc_generated_files/touch/mtouch_slider.c: 596:         if (position < deadband)
  4139   001184  51EF               	movf	calculate_raw_position@deadband& (0+255),w,b
  4140   001186  5DF3               	subwf	calculate_raw_position@position& (0+255),w,b
  4141   001188  51F0               	movf	(calculate_raw_position@deadband+1)& (0+255),w,b
  4142   00118A  59F4               	subwfb	(calculate_raw_position@position+1)& (0+255),w,b
  4143   00118C  B0D8               	btfsc	status,0,c
  4144   00118E  EFCB  F008         	goto	u5581
  4145   001192  EFCD  F008         	goto	u5580
  4146   001196                     u5581:
  4147   001196  EFD3  F008         	goto	l6194
  4148   00119A                     u5580:
  4149   00119A                     
  4150                           ; BSR set to: 0
  4151                           ;mcc_generated_files/touch/mtouch_slider.c: 597:         {;mcc_generated_files/touch/mto
      +                          uch_slider.c: 598:             position = 0u;
  4152   00119A  0E00               	movlw	0
  4153   00119C  6FF4               	movwf	(calculate_raw_position@position+1)& (0+255),b
  4154   00119E  0E00               	movlw	0
  4155   0011A0  6FF3               	movwf	calculate_raw_position@position& (0+255),b
  4156                           
  4157                           ;mcc_generated_files/touch/mtouch_slider.c: 599:         }
  4158   0011A2  EFD9  F008         	goto	l6196
  4159   0011A6                     l6194:
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;mcc_generated_files/touch/mtouch_slider.c: 601:         {;mcc_generated_files/touch/mto
      +                          uch_slider.c: 602:             position = (uint16_t) (position - deadband);
  4163   0011A6  51EF               	movf	calculate_raw_position@deadband& (0+255),w,b
  4164   0011A8  5DF3               	subwf	calculate_raw_position@position& (0+255),w,b
  4165   0011AA  6FF3               	movwf	calculate_raw_position@position& (0+255),b
  4166   0011AC  51F0               	movf	(calculate_raw_position@deadband+1)& (0+255),w,b
  4167   0011AE  59F4               	subwfb	(calculate_raw_position@position+1)& (0+255),w,b
  4168   0011B0  6FF4               	movwf	(calculate_raw_position@position+1)& (0+255),b
  4169   0011B2                     l6196:
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;mcc_generated_files/touch/mtouch_slider.c: 608:         position = divide(position, (ui
      +                          nt16_t) ((uint16_t)((uint16_t)1u << 12u) - (uint16_t) (deadband << 1u)), 12u);
  4173   0011B2  C0F3  F015         	movff	calculate_raw_position@position,divide@numerator
  4174   0011B6  C0F4  F016         	movff	calculate_raw_position@position+1,divide@numerator+1
  4175   0011BA  C0EF  F02B         	movff	calculate_raw_position@deadband,??_calculate_raw_position
  4176   0011BE  C0F0  F02C         	movff	calculate_raw_position@deadband+1,??_calculate_raw_position+1
  4177   0011C2  90D8               	bcf	status,0,c
  4178   0011C4  362B               	rlcf	??_calculate_raw_position^0,f,c
  4179   0011C6  362C               	rlcf	(??_calculate_raw_position+1)^0,f,c
  4180   0011C8  502B               	movf	??_calculate_raw_position^0,w,c
  4181   0011CA  0800               	sublw	0
  4182   0011CC  6E17               	movwf	divide@denominator^0,c
  4183   0011CE  502C               	movf	(??_calculate_raw_position+1)^0,w,c
  4184   0011D0  A0D8               	btfss	status,0,c
  4185   0011D2  2AE8               	incf	wreg,f,c
  4186   0011D4  0810               	sublw	16
  4187   0011D6  6E18               	movwf	(divide@denominator+1)^0,c
  4188   0011D8  0E0C               	movlw	12
  4189   0011DA  6E19               	movwf	divide@exponent^0,c
  4190   0011DC  EC99  F013         	call	_divide	;wreg free
  4191   0011E0  C015  F0F3         	movff	?_divide,calculate_raw_position@position
  4192   0011E4  C016  F0F4         	movff	?_divide+1,calculate_raw_position@position+1
  4193   0011E8                     l6198:
  4194                           
  4195                           ;mcc_generated_files/touch/mtouch_slider.c: 612:     position = position >> (12u - resol
      +                          _bits);
  4196   0011E8  504A               	movf	_resol_bits^0,w,c
  4197   0011EA  080C               	sublw	12
  4198   0011EC  6E2B               	movwf	??_calculate_raw_position^0,c
  4199   0011EE  C0F3  F02C         	movff	calculate_raw_position@position,??_calculate_raw_position+1
  4200   0011F2  C0F4  F02D         	movff	calculate_raw_position@position+1,??_calculate_raw_position+2
  4201   0011F6  2A2B               	incf	??_calculate_raw_position^0,f,c
  4202   0011F8  EF01  F009         	goto	u5594
  4203   0011FC                     u5595:
  4204   0011FC  90D8               	bcf	status,0,c
  4205   0011FE  322D               	rrcf	(??_calculate_raw_position+2)^0,f,c
  4206   001200  322C               	rrcf	(??_calculate_raw_position+1)^0,f,c
  4207   001202                     u5594:
  4208   001202  2E2B               	decfsz	??_calculate_raw_position^0,f,c
  4209   001204  EFFE  F008         	goto	u5595
  4210   001208  C02C  F0F3         	movff	??_calculate_raw_position+1,calculate_raw_position@position
  4211   00120C  C02D  F0F4         	movff	??_calculate_raw_position+2,calculate_raw_position@position+1
  4212   001210                     
  4213                           ;mcc_generated_files/touch/mtouch_slider.c: 615:     if (position > (uint16_t) (((uint16
      +                          _t) 1 << resol_bits)) - 1u)
  4214   001210  C04A  F02B         	movff	_resol_bits,??_calculate_raw_position
  4215   001214  0E01               	movlw	1
  4216   001216  6E2C               	movwf	(??_calculate_raw_position+1)^0,c
  4217   001218  0E00               	movlw	0
  4218   00121A  6E2D               	movwf	(??_calculate_raw_position+2)^0,c
  4219   00121C  2A2B               	incf	??_calculate_raw_position^0,f,c
  4220   00121E  EF14  F009         	goto	u5604
  4221   001222                     u5605:
  4222   001222  90D8               	bcf	status,0,c
  4223   001224  362C               	rlcf	(??_calculate_raw_position+1)^0,f,c
  4224   001226  362D               	rlcf	(??_calculate_raw_position+2)^0,f,c
  4225   001228                     u5604:
  4226   001228  2E2B               	decfsz	??_calculate_raw_position^0,f,c
  4227   00122A  EF11  F009         	goto	u5605
  4228   00122E  0EFF               	movlw	255
  4229   001230  242C               	addwf	(??_calculate_raw_position+1)^0,w,c
  4230   001232  6E2E               	movwf	(??_calculate_raw_position+3)^0,c
  4231   001234  0EFF               	movlw	255
  4232   001236  202D               	addwfc	(??_calculate_raw_position+2)^0,w,c
  4233   001238  6E2F               	movwf	(??_calculate_raw_position+4)^0,c
  4234   00123A  0100               	movlb	0	; () banked
  4235   00123C  51F3               	movf	calculate_raw_position@position& (0+255),w,b
  4236   00123E  5C2E               	subwf	(??_calculate_raw_position+3)^0,w,c
  4237   001240  51F4               	movf	(calculate_raw_position@position+1)& (0+255),w,b
  4238   001242  582F               	subwfb	(??_calculate_raw_position+4)^0,w,c
  4239   001244  B0D8               	btfsc	status,0,c
  4240   001246  EF27  F009         	goto	u5611
  4241   00124A  EF29  F009         	goto	u5610
  4242   00124E                     u5611:
  4243   00124E  EF3F  F009         	goto	l6204
  4244   001252                     u5610:
  4245   001252                     
  4246                           ; BSR set to: 0
  4247                           ;mcc_generated_files/touch/mtouch_slider.c: 616:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 617:         position = (uint16_t) ((uint16_t) 1 << resol_bits) - 1u;
  4248   001252  C04A  F02B         	movff	_resol_bits,??_calculate_raw_position
  4249   001256  0E01               	movlw	1
  4250   001258  6E2C               	movwf	(??_calculate_raw_position+1)^0,c
  4251   00125A  0E00               	movlw	0
  4252   00125C  6E2D               	movwf	(??_calculate_raw_position+2)^0,c
  4253   00125E  2A2B               	incf	??_calculate_raw_position^0,f,c
  4254   001260  EF35  F009         	goto	u5624
  4255   001264                     u5625:
  4256   001264  90D8               	bcf	status,0,c
  4257   001266  362C               	rlcf	(??_calculate_raw_position+1)^0,f,c
  4258   001268  362D               	rlcf	(??_calculate_raw_position+2)^0,f,c
  4259   00126A                     u5624:
  4260   00126A  2E2B               	decfsz	??_calculate_raw_position^0,f,c
  4261   00126C  EF32  F009         	goto	u5625
  4262   001270  0EFF               	movlw	255
  4263   001272  242C               	addwf	(??_calculate_raw_position+1)^0,w,c
  4264   001274  0100               	movlb	0	; () banked
  4265   001276  6FF3               	movwf	calculate_raw_position@position& (0+255),b
  4266   001278  0EFF               	movlw	255
  4267   00127A  202D               	addwfc	(??_calculate_raw_position+2)^0,w,c
  4268   00127C  6FF4               	movwf	(calculate_raw_position@position+1)& (0+255),b
  4269   00127E                     l6204:
  4270                           
  4271                           ; BSR set to: 0
  4272                           ;mcc_generated_files/touch/mtouch_slider.c: 620:     return position;
  4273   00127E  C0F3  F029         	movff	calculate_raw_position@position,?_calculate_raw_position
  4274   001282  C0F4  F02A         	movff	calculate_raw_position@position+1,?_calculate_raw_position+1
  4275   001286                     
  4276                           ; BSR set to: 0
  4277   001286  0012               	return		;funcret
  4278   001288                     __end_of_calculate_raw_position:
  4279                           	callstack 0
  4280                           
  4281 ;; *************** function _interpolate *****************
  4282 ;; Defined at:
  4283 ;;		line 385 in file "mcc_generated_files/touch/mtouch_slider.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;  delta1          2   27[COMRAM] unsigned short 
  4286 ;;  delta2          2   29[COMRAM] unsigned short 
  4287 ;;  delta3          2   31[COMRAM] unsigned short 
  4288 ;;  num_bits        1   33[COMRAM] unsigned char 
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;  rtnval          2   38[COMRAM] unsigned short 
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  2   27[COMRAM] unsigned short 
  4293 ;; Registers used:
  4294 ;;		wreg, status,2, status,0, cstack
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4300 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4301 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4302 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4303 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4304 ;;Total ram usage:       13 bytes
  4305 ;; Hardware stack levels used: 1
  4306 ;; Hardware stack levels required when called: 7
  4307 ;; This function calls:
  4308 ;;		_divide
  4309 ;; This function is called by:
  4310 ;;		_calculate_raw_position
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           	psect	text25
  4315   0028F4                     __ptext25:
  4316                           	callstack 0
  4317   0028F4                     _interpolate:
  4318                           	callstack 18
  4319   0028F4                     
  4320                           ;mcc_generated_files/touch/mtouch_slider.c: 385: static uint16_t interpolate(uint16_t de
      +                          lta1, uint16_t delta2, uint16_t delta3, uint8_t num_bits);mcc_generated_files/touch/mtou
      +                          ch_slider.c: 386: {;mcc_generated_files/touch/mtouch_slider.c: 387:     uint16_t rtnval;
      +                          ;mcc_generated_files/touch/mtouch_slider.c: 389:     if (delta1 >= delta3)
  4321   0028F4  5020               	movf	interpolate@delta3^0,w,c
  4322   0028F6  5C1C               	subwf	interpolate@delta1^0,w,c
  4323   0028F8  5021               	movf	(interpolate@delta3+1)^0,w,c
  4324   0028FA  581D               	subwfb	(interpolate@delta1+1)^0,w,c
  4325   0028FC  A0D8               	btfss	status,0,c
  4326   0028FE  EF83  F014         	goto	u5141
  4327   002902  EF85  F014         	goto	u5140
  4328   002906                     u5141:
  4329   002906  EFBD  F014         	goto	l5934
  4330   00290A                     u5140:
  4331   00290A                     
  4332                           ;mcc_generated_files/touch/mtouch_slider.c: 390:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 391:         rtnval = (uint16_t) ((delta2 - delta3) + (delta1 - delta3));
  4333   00290A  C020  F023         	movff	interpolate@delta3,??_interpolate
  4334   00290E  C021  F024         	movff	interpolate@delta3+1,??_interpolate+1
  4335   002912  90D8               	bcf	status,0,c
  4336   002914  3623               	rlcf	??_interpolate^0,f,c
  4337   002916  3624               	rlcf	(??_interpolate+1)^0,f,c
  4338   002918  5023               	movf	??_interpolate^0,w,c
  4339   00291A  5C1E               	subwf	interpolate@delta2^0,w,c
  4340   00291C  6E25               	movwf	(??_interpolate+2)^0,c
  4341   00291E  5024               	movf	(??_interpolate+1)^0,w,c
  4342   002920  581F               	subwfb	(interpolate@delta2+1)^0,w,c
  4343   002922  6E26               	movwf	(??_interpolate+3)^0,c
  4344   002924  501C               	movf	interpolate@delta1^0,w,c
  4345   002926  2425               	addwf	(??_interpolate+2)^0,w,c
  4346   002928  6E27               	movwf	interpolate@rtnval^0,c
  4347   00292A  501D               	movf	(interpolate@delta1+1)^0,w,c
  4348   00292C  2026               	addwfc	(??_interpolate+3)^0,w,c
  4349   00292E  6E28               	movwf	(interpolate@rtnval+1)^0,c
  4350   002930                     
  4351                           ;mcc_generated_files/touch/mtouch_slider.c: 392:         rtnval = (uint16_t) (divide((ui
      +                          nt16_t) (delta2 - delta3), rtnval, num_bits) - (uint16_t) ((uint16_t) 1u << (num_bits)))
      +                          ;
  4352   002930  C022  F023         	movff	interpolate@num_bits,??_interpolate
  4353   002934  0E01               	movlw	1
  4354   002936  6E24               	movwf	(??_interpolate+1)^0,c
  4355   002938  0E00               	movlw	0
  4356   00293A  6E25               	movwf	(??_interpolate+2)^0,c
  4357   00293C  2A23               	incf	??_interpolate^0,f,c
  4358   00293E  EFA4  F014         	goto	u5154
  4359   002942                     u5155:
  4360   002942  90D8               	bcf	status,0,c
  4361   002944  3624               	rlcf	(??_interpolate+1)^0,f,c
  4362   002946  3625               	rlcf	(??_interpolate+2)^0,f,c
  4363   002948                     u5154:
  4364   002948  2E23               	decfsz	??_interpolate^0,f,c
  4365   00294A  EFA1  F014         	goto	u5155
  4366   00294E  5020               	movf	interpolate@delta3^0,w,c
  4367   002950  5C1E               	subwf	interpolate@delta2^0,w,c
  4368   002952  6E15               	movwf	divide@numerator^0,c
  4369   002954  5021               	movf	(interpolate@delta3+1)^0,w,c
  4370   002956  581F               	subwfb	(interpolate@delta2+1)^0,w,c
  4371   002958  6E16               	movwf	(divide@numerator+1)^0,c
  4372   00295A  C027  F017         	movff	interpolate@rtnval,divide@denominator
  4373   00295E  C028  F018         	movff	interpolate@rtnval+1,divide@denominator+1
  4374   002962  C022  F019         	movff	interpolate@num_bits,divide@exponent
  4375   002966  EC99  F013         	call	_divide	;wreg free
  4376   00296A  5024               	movf	(??_interpolate+1)^0,w,c
  4377   00296C  5C15               	subwf	?_divide^0,w,c
  4378   00296E  6E27               	movwf	interpolate@rtnval^0,c
  4379   002970  5025               	movf	(??_interpolate+2)^0,w,c
  4380   002972  5816               	subwfb	(?_divide+1)^0,w,c
  4381   002974  6E28               	movwf	(interpolate@rtnval+1)^0,c
  4382                           
  4383                           ;mcc_generated_files/touch/mtouch_slider.c: 393:     }
  4384   002976  EFE2  F014         	goto	l5938
  4385   00297A                     l5934:
  4386                           
  4387                           ;mcc_generated_files/touch/mtouch_slider.c: 395:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 396:         rtnval = (uint16_t) ((delta2 - delta1) + (delta3 - delta1));
  4388   00297A  C01C  F023         	movff	interpolate@delta1,??_interpolate
  4389   00297E  C01D  F024         	movff	interpolate@delta1+1,??_interpolate+1
  4390   002982  90D8               	bcf	status,0,c
  4391   002984  3623               	rlcf	??_interpolate^0,f,c
  4392   002986  3624               	rlcf	(??_interpolate+1)^0,f,c
  4393   002988  5023               	movf	??_interpolate^0,w,c
  4394   00298A  5C1E               	subwf	interpolate@delta2^0,w,c
  4395   00298C  6E25               	movwf	(??_interpolate+2)^0,c
  4396   00298E  5024               	movf	(??_interpolate+1)^0,w,c
  4397   002990  581F               	subwfb	(interpolate@delta2+1)^0,w,c
  4398   002992  6E26               	movwf	(??_interpolate+3)^0,c
  4399   002994  5020               	movf	interpolate@delta3^0,w,c
  4400   002996  2425               	addwf	(??_interpolate+2)^0,w,c
  4401   002998  6E27               	movwf	interpolate@rtnval^0,c
  4402   00299A  5021               	movf	(interpolate@delta3+1)^0,w,c
  4403   00299C  2026               	addwfc	(??_interpolate+3)^0,w,c
  4404   00299E  6E28               	movwf	(interpolate@rtnval+1)^0,c
  4405   0029A0                     
  4406                           ;mcc_generated_files/touch/mtouch_slider.c: 397:         rtnval = divide((uint16_t) (del
      +                          ta3 - delta1), rtnval, num_bits);
  4407   0029A0  501C               	movf	interpolate@delta1^0,w,c
  4408   0029A2  5C20               	subwf	interpolate@delta3^0,w,c
  4409   0029A4  6E15               	movwf	divide@numerator^0,c
  4410   0029A6  501D               	movf	(interpolate@delta1+1)^0,w,c
  4411   0029A8  5821               	subwfb	(interpolate@delta3+1)^0,w,c
  4412   0029AA  6E16               	movwf	(divide@numerator+1)^0,c
  4413   0029AC  C027  F017         	movff	interpolate@rtnval,divide@denominator
  4414   0029B0  C028  F018         	movff	interpolate@rtnval+1,divide@denominator+1
  4415   0029B4  C022  F019         	movff	interpolate@num_bits,divide@exponent
  4416   0029B8  EC99  F013         	call	_divide	;wreg free
  4417   0029BC  C015  F027         	movff	?_divide,interpolate@rtnval
  4418   0029C0  C016  F028         	movff	?_divide+1,interpolate@rtnval+1
  4419   0029C4                     l5938:
  4420                           
  4421                           ;mcc_generated_files/touch/mtouch_slider.c: 400:     return rtnval;
  4422   0029C4  C027  F01C         	movff	interpolate@rtnval,?_interpolate
  4423   0029C8  C028  F01D         	movff	interpolate@rtnval+1,?_interpolate+1
  4424   0029CC  0012               	return		;funcret
  4425   0029CE                     __end_of_interpolate:
  4426                           	callstack 0
  4427                           
  4428 ;; *************** function _divide *****************
  4429 ;; Defined at:
  4430 ;;		line 191 in file "mcc_generated_files/touch/mtouch_slider.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;  numerator       2   20[COMRAM] unsigned short 
  4433 ;;  denominator     2   22[COMRAM] unsigned short 
  4434 ;;  exponent        1   24[COMRAM] unsigned char 
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;  result          2   25[COMRAM] unsigned short 
  4437 ;; Return value:  Size  Location     Type
  4438 ;;                  2   20[COMRAM] unsigned short 
  4439 ;; Registers used:
  4440 ;;		wreg, status,2, status,0
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4446 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4447 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4449 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4450 ;;Total ram usage:        7 bytes
  4451 ;; Hardware stack levels used: 1
  4452 ;; Hardware stack levels required when called: 6
  4453 ;; This function calls:
  4454 ;;		Nothing
  4455 ;; This function is called by:
  4456 ;;		_interpolate
  4457 ;;		_calculate_raw_position
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461                           	psect	text26
  4462   002732                     __ptext26:
  4463                           	callstack 0
  4464   002732                     _divide:
  4465                           	callstack 18
  4466   002732                     
  4467                           ;mcc_generated_files/touch/mtouch_slider.c: 191: static uint16_t divide(uint16_t numerat
      +                          or, uint16_t denominator, uint8_t exponent);mcc_generated_files/touch/mtouch_slider.c: 1
      +                          92: {;mcc_generated_files/touch/mtouch_slider.c: 193:     uint16_t result = 0u;
  4468   002732  0E00               	movlw	0
  4469   002734  6E1B               	movwf	(divide@result+1)^0,c
  4470   002736  0E00               	movlw	0
  4471   002738  6E1A               	movwf	divide@result^0,c
  4472   00273A                     
  4473                           ;mcc_generated_files/touch/mtouch_slider.c: 196:     exponent++;
  4474   00273A  2A19               	incf	divide@exponent^0,f,c
  4475   00273C                     
  4476                           ;mcc_generated_files/touch/mtouch_slider.c: 198:     if (denominator != 0u)
  4477   00273C  5017               	movf	divide@denominator^0,w,c
  4478   00273E  1018               	iorwf	(divide@denominator+1)^0,w,c
  4479   002740  B4D8               	btfsc	status,2,c
  4480   002742  EFA5  F013         	goto	u4961
  4481   002746  EFA7  F013         	goto	u4960
  4482   00274A                     u4961:
  4483   00274A  EFFA  F013         	goto	l701
  4484   00274E                     u4960:
  4485   00274E  EFAF  F013         	goto	l5836
  4486   002752                     l5832:
  4487                           
  4488                           ;mcc_generated_files/touch/mtouch_slider.c: 206:         {;mcc_generated_files/touch/mto
      +                          uch_slider.c: 207:             exponent--;
  4489   002752  0619               	decf	divide@exponent^0,f,c
  4490   002754                     
  4491                           ;mcc_generated_files/touch/mtouch_slider.c: 208:             numerator = (uint16_t) (num
      +                          erator << 1);
  4492   002754  90D8               	bcf	status,0,c
  4493   002756  3415               	rlcf	divide@numerator^0,w,c
  4494   002758  6E15               	movwf	divide@numerator^0,c
  4495   00275A  3416               	rlcf	(divide@numerator+1)^0,w,c
  4496   00275C  6E16               	movwf	(divide@numerator+1)^0,c
  4497   00275E                     l5836:
  4498                           
  4499                           ;mcc_generated_files/touch/mtouch_slider.c: 205:         while (((numerator & 0x8000u) =
      +                          = 0u) && (exponent != 0u))
  4500   00275E  BE16               	btfsc	(divide@numerator+1)^0,7,c
  4501   002760  EFB4  F013         	goto	u4971
  4502   002764  EFB6  F013         	goto	u4970
  4503   002768                     u4971:
  4504   002768  EFC6  F013         	goto	l5844
  4505   00276C                     u4970:
  4506   00276C  5019               	movf	divide@exponent^0,w,c
  4507   00276E  A4D8               	btfss	status,2,c
  4508   002770  EFBC  F013         	goto	u4981
  4509   002774  EFBE  F013         	goto	u4980
  4510   002778                     u4981:
  4511   002778  EFA9  F013         	goto	l5832
  4512   00277C                     u4980:
  4513   00277C  EFC6  F013         	goto	l5844
  4514   002780                     l5840:
  4515                           
  4516                           ;mcc_generated_files/touch/mtouch_slider.c: 212:         {;mcc_generated_files/touch/mto
      +                          uch_slider.c: 213:             exponent++;
  4517   002780  2A19               	incf	divide@exponent^0,f,c
  4518   002782                     
  4519                           ;mcc_generated_files/touch/mtouch_slider.c: 214:             denominator = (uint16_t) (d
      +                          enominator << 1);
  4520   002782  90D8               	bcf	status,0,c
  4521   002784  3417               	rlcf	divide@denominator^0,w,c
  4522   002786  6E17               	movwf	divide@denominator^0,c
  4523   002788  3418               	rlcf	(divide@denominator+1)^0,w,c
  4524   00278A  6E18               	movwf	(divide@denominator+1)^0,c
  4525   00278C                     l5844:
  4526                           
  4527                           ;mcc_generated_files/touch/mtouch_slider.c: 211:         while ((denominator & 0x8000u) 
      +                          == 0u)
  4528   00278C  AE18               	btfss	(divide@denominator+1)^0,7,c
  4529   00278E  EFCB  F013         	goto	u4991
  4530   002792  EFCD  F013         	goto	u4990
  4531   002796                     u4991:
  4532   002796  EFC0  F013         	goto	l5840
  4533   00279A                     u4990:
  4534   00279A  EFE9  F013         	goto	l5858
  4535   00279E                     l5846:
  4536                           
  4537                           ;mcc_generated_files/touch/mtouch_slider.c: 219:         {;mcc_generated_files/touch/mto
      +                          uch_slider.c: 220:             result = (uint16_t) (result << 1);
  4538   00279E  90D8               	bcf	status,0,c
  4539   0027A0  341A               	rlcf	divide@result^0,w,c
  4540   0027A2  6E1A               	movwf	divide@result^0,c
  4541   0027A4  341B               	rlcf	(divide@result+1)^0,w,c
  4542   0027A6  6E1B               	movwf	(divide@result+1)^0,c
  4543   0027A8                     
  4544                           ;mcc_generated_files/touch/mtouch_slider.c: 221:             exponent--;
  4545   0027A8  0619               	decf	divide@exponent^0,f,c
  4546   0027AA                     
  4547                           ;mcc_generated_files/touch/mtouch_slider.c: 222:             if (numerator >= denominato
      +                          r)
  4548   0027AA  5017               	movf	divide@denominator^0,w,c
  4549   0027AC  5C15               	subwf	divide@numerator^0,w,c
  4550   0027AE  5018               	movf	(divide@denominator+1)^0,w,c
  4551   0027B0  5816               	subwfb	(divide@numerator+1)^0,w,c
  4552   0027B2  A0D8               	btfss	status,0,c
  4553   0027B4  EFDE  F013         	goto	u5001
  4554   0027B8  EFE0  F013         	goto	u5000
  4555   0027BC                     u5001:
  4556   0027BC  EFE6  F013         	goto	l5856
  4557   0027C0                     u5000:
  4558   0027C0                     
  4559                           ;mcc_generated_files/touch/mtouch_slider.c: 223:             {;mcc_generated_files/touch
      +                          /mtouch_slider.c: 224:                 numerator -= denominator;
  4560   0027C0  5017               	movf	divide@denominator^0,w,c
  4561   0027C2  5E15               	subwf	divide@numerator^0,f,c
  4562   0027C4  5018               	movf	(divide@denominator+1)^0,w,c
  4563   0027C6  5A16               	subwfb	(divide@numerator+1)^0,f,c
  4564   0027C8                     
  4565                           ;mcc_generated_files/touch/mtouch_slider.c: 225:                 result++;
  4566   0027C8  4A1A               	infsnz	divide@result^0,f,c
  4567   0027CA  2A1B               	incf	(divide@result+1)^0,f,c
  4568   0027CC                     l5856:
  4569                           
  4570                           ;mcc_generated_files/touch/mtouch_slider.c: 227:             denominator >>= 1;
  4571   0027CC  90D8               	bcf	status,0,c
  4572   0027CE  3218               	rrcf	(divide@denominator+1)^0,f,c
  4573   0027D0  3217               	rrcf	divide@denominator^0,f,c
  4574   0027D2                     l5858:
  4575                           
  4576                           ;mcc_generated_files/touch/mtouch_slider.c: 218:         while ((exponent != 0u) && ((re
      +                          sult & 0x8000u) == 0u))
  4577   0027D2  5019               	movf	divide@exponent^0,w,c
  4578   0027D4  B4D8               	btfsc	status,2,c
  4579   0027D6  EFEF  F013         	goto	u5011
  4580   0027DA  EFF1  F013         	goto	u5010
  4581   0027DE                     u5011:
  4582   0027DE  EFFC  F013         	goto	l5862
  4583   0027E2                     u5010:
  4584   0027E2  AE1B               	btfss	(divide@result+1)^0,7,c
  4585   0027E4  EFF6  F013         	goto	u5021
  4586   0027E8  EFF8  F013         	goto	u5020
  4587   0027EC                     u5021:
  4588   0027EC  EFCF  F013         	goto	l5846
  4589   0027F0                     u5020:
  4590   0027F0  EFFC  F013         	goto	l5862
  4591   0027F4                     l701:
  4592                           
  4593                           ;mcc_generated_files/touch/mtouch_slider.c: 231:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 232:         result = 0xffffu;
  4594   0027F4  681A               	setf	divide@result^0,c
  4595   0027F6  681B               	setf	(divide@result+1)^0,c
  4596   0027F8                     l5862:
  4597                           
  4598                           ;mcc_generated_files/touch/mtouch_slider.c: 236:     if (exponent)
  4599   0027F8  5019               	movf	divide@exponent^0,w,c
  4600   0027FA  B4D8               	btfsc	status,2,c
  4601   0027FC  EF02  F014         	goto	u5031
  4602   002800  EF04  F014         	goto	u5030
  4603   002804                     u5031:
  4604   002804  EF06  F014         	goto	l717
  4605   002808                     u5030:
  4606   002808                     
  4607                           ;mcc_generated_files/touch/mtouch_slider.c: 237:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 238:         result = 0xffffu;
  4608   002808  681A               	setf	divide@result^0,c
  4609   00280A  681B               	setf	(divide@result+1)^0,c
  4610   00280C                     l717:
  4611                           
  4612                           ;mcc_generated_files/touch/mtouch_slider.c: 241:     return result;
  4613   00280C  C01A  F015         	movff	divide@result,?_divide
  4614   002810  C01B  F016         	movff	divide@result+1,?_divide+1
  4615   002814  0012               	return		;funcret
  4616   002816                     __end_of_divide:
  4617                           	callstack 0
  4618                           
  4619 ;; *************** function _calculate_contact_size *****************
  4620 ;; Defined at:
  4621 ;;		line 628 in file "mcc_generated_files/touch/mtouch_slider.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;  slider          2   33[COMRAM] PTR struct .
  4624 ;;		 -> mtouch_slider(17), 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;  contact_size    2   37[COMRAM] unsigned short 
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  2   33[COMRAM] unsigned short 
  4629 ;; Registers used:
  4630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4638 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4639 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4640 ;;Total ram usage:        6 bytes
  4641 ;; Hardware stack levels used: 1
  4642 ;; Hardware stack levels required when called: 8
  4643 ;; This function calls:
  4644 ;;		_Slider_FindLeft
  4645 ;;		_Slider_FindMiddle
  4646 ;;		_Slider_FindRight
  4647 ;; This function is called by:
  4648 ;;		_Slider_Service
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           	psect	text27
  4653   002F02                     __ptext27:
  4654                           	callstack 0
  4655   002F02                     _calculate_contact_size:
  4656                           	callstack 19
  4657   002F02                     
  4658                           ;mcc_generated_files/touch/mtouch_slider.c: 628: static uint16_t calculate_contact_size(
      +                          mtouch_slider_t* slider);mcc_generated_files/touch/mtouch_slider.c: 629: {;mcc_generated
      +                          _files/touch/mtouch_slider.c: 630:     uint16_t contact_size;;mcc_generated_files/touch/
      +                          mtouch_slider.c: 632:     middle_signal = Slider_FindMiddle(slider);
  4659   002F02  C022  F016         	movff	calculate_contact_size@slider,Slider_FindMiddle@slider
  4660   002F06  C023  F017         	movff	calculate_contact_size@slider+1,Slider_FindMiddle@slider+1
  4661   002F0A  ECCF  F016         	call	_Slider_FindMiddle	;wreg free
  4662   002F0E  C016  F037         	movff	?_Slider_FindMiddle,_middle_signal
  4663   002F12  C017  F038         	movff	?_Slider_FindMiddle+1,_middle_signal+1
  4664                           
  4665                           ;mcc_generated_files/touch/mtouch_slider.c: 633:     right_signal = Slider_FindRight(sli
      +                          der);
  4666   002F16  C022  F016         	movff	calculate_contact_size@slider,Slider_FindRight@slider
  4667   002F1A  C023  F017         	movff	calculate_contact_size@slider+1,Slider_FindRight@slider+1
  4668   002F1E  ECB9  F015         	call	_Slider_FindRight	;wreg free
  4669   002F22  C016  F039         	movff	?_Slider_FindRight,_right_signal
  4670   002F26  C017  F03A         	movff	?_Slider_FindRight+1,_right_signal+1
  4671                           
  4672                           ;mcc_generated_files/touch/mtouch_slider.c: 634:     left_signal = Slider_FindLeft(slide
      +                          r);
  4673   002F2A  C022  F016         	movff	calculate_contact_size@slider,Slider_FindLeft@slider
  4674   002F2E  C023  F017         	movff	calculate_contact_size@slider+1,Slider_FindLeft@slider+1
  4675   002F32  EC51  F015         	call	_Slider_FindLeft	;wreg free
  4676   002F36  C016  F03B         	movff	?_Slider_FindLeft,_left_signal
  4677   002F3A  C017  F03C         	movff	?_Slider_FindLeft+1,_left_signal+1
  4678   002F3E                     
  4679                           ;mcc_generated_files/touch/mtouch_slider.c: 636:     if (right_signal > left_signal)
  4680   002F3E  5039               	movf	_right_signal^0,w,c
  4681   002F40  5C3B               	subwf	_left_signal^0,w,c
  4682   002F42  503C               	movf	(_left_signal+1)^0,w,c
  4683   002F44  0A80               	xorlw	128
  4684   002F46  6E24               	movwf	??_calculate_contact_size^0,c
  4685   002F48  503A               	movf	(_right_signal+1)^0,w,c
  4686   002F4A  0A80               	xorlw	128
  4687   002F4C  5824               	subwfb	??_calculate_contact_size^0,w,c
  4688   002F4E  B0D8               	btfsc	status,0,c
  4689   002F50  EFAC  F017         	goto	u5921
  4690   002F54  EFAE  F017         	goto	u5920
  4691   002F58                     u5921:
  4692   002F58  EFB6  F017         	goto	l6362
  4693   002F5C                     u5920:
  4694   002F5C                     
  4695                           ;mcc_generated_files/touch/mtouch_slider.c: 637:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 638:         contact_size = middle_signal + right_signal;
  4696   002F5C  5039               	movf	_right_signal^0,w,c
  4697   002F5E  2437               	addwf	_middle_signal^0,w,c
  4698   002F60  6E26               	movwf	calculate_contact_size@contact_size^0,c
  4699   002F62  503A               	movf	(_right_signal+1)^0,w,c
  4700   002F64  2038               	addwfc	(_middle_signal+1)^0,w,c
  4701   002F66  6E27               	movwf	(calculate_contact_size@contact_size+1)^0,c
  4702                           
  4703                           ;mcc_generated_files/touch/mtouch_slider.c: 639:     }
  4704   002F68  EFBC  F017         	goto	l6364
  4705   002F6C                     l6362:
  4706                           
  4707                           ;mcc_generated_files/touch/mtouch_slider.c: 641:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 642:         contact_size = middle_signal + left_signal;
  4708   002F6C  503B               	movf	_left_signal^0,w,c
  4709   002F6E  2437               	addwf	_middle_signal^0,w,c
  4710   002F70  6E26               	movwf	calculate_contact_size@contact_size^0,c
  4711   002F72  503C               	movf	(_left_signal+1)^0,w,c
  4712   002F74  2038               	addwfc	(_middle_signal+1)^0,w,c
  4713   002F76  6E27               	movwf	(calculate_contact_size@contact_size+1)^0,c
  4714   002F78                     l6364:
  4715                           
  4716                           ;mcc_generated_files/touch/mtouch_slider.c: 645:     if (contact_size < slider->contactT
      +                          hreshold)
  4717   002F78  EE20 F006          	lfsr	2,6
  4718   002F7C  5022               	movf	calculate_contact_size@slider^0,w,c
  4719   002F7E  26D9               	addwf	fsr2l,f,c
  4720   002F80  5023               	movf	(calculate_contact_size@slider+1)^0,w,c
  4721   002F82  22DA               	addwfc	fsr2h,f,c
  4722   002F84  50DE               	movf	postinc2,w,c
  4723   002F86  5C26               	subwf	calculate_contact_size@contact_size^0,w,c
  4724   002F88  50DE               	movf	postinc2,w,c
  4725   002F8A  5827               	subwfb	(calculate_contact_size@contact_size+1)^0,w,c
  4726   002F8C  B0D8               	btfsc	status,0,c
  4727   002F8E  EFCB  F017         	goto	u5931
  4728   002F92  EFCD  F017         	goto	u5930
  4729   002F96                     u5931:
  4730   002F96  EFD1  F017         	goto	l6368
  4731   002F9A                     u5930:
  4732   002F9A                     
  4733                           ;mcc_generated_files/touch/mtouch_slider.c: 646:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 647:         contact_size = 0u;
  4734   002F9A  0E00               	movlw	0
  4735   002F9C  6E27               	movwf	(calculate_contact_size@contact_size+1)^0,c
  4736   002F9E  0E00               	movlw	0
  4737   002FA0  6E26               	movwf	calculate_contact_size@contact_size^0,c
  4738   002FA2                     l6368:
  4739                           
  4740                           ;mcc_generated_files/touch/mtouch_slider.c: 650:     return contact_size;
  4741   002FA2  C026  F022         	movff	calculate_contact_size@contact_size,?_calculate_contact_size
  4742   002FA6  C027  F023         	movff	calculate_contact_size@contact_size+1,?_calculate_contact_size+1
  4743   002FAA  0012               	return		;funcret
  4744   002FAC                     __end_of_calculate_contact_size:
  4745                           	callstack 0
  4746                           
  4747 ;; *************** function _Slider_FindRight *****************
  4748 ;; Defined at:
  4749 ;;		line 484 in file "mcc_generated_files/touch/mtouch_slider.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;  slider          2   21[COMRAM] PTR struct .
  4752 ;;		 -> mtouch_slider(17), 
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;  ref_node        1   30[COMRAM] unsigned char 
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  2   21[COMRAM] short 
  4757 ;; Registers used:
  4758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4765 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4766 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4767 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4768 ;;Total ram usage:       10 bytes
  4769 ;; Hardware stack levels used: 1
  4770 ;; Hardware stack levels required when called: 7
  4771 ;; This function calls:
  4772 ;;		_MTOUCH_Button_Deviation_Get
  4773 ;; This function is called by:
  4774 ;;		_calculate_contact_size
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           	psect	text28
  4779   002B72                     __ptext28:
  4780                           	callstack 0
  4781   002B72                     _Slider_FindRight:
  4782                           	callstack 19
  4783   002B72                     
  4784                           ;mcc_generated_files/touch/mtouch_slider.c: 484: static int16_t Slider_FindRight(mtouch_
      +                          slider_t* slider);mcc_generated_files/touch/mtouch_slider.c: 485: {;mcc_generated_files/
      +                          touch/mtouch_slider.c: 486:     uint8_t ref_node = slider->startSegment;
  4785   002B72  EE20 F002          	lfsr	2,2
  4786   002B76  5016               	movf	Slider_FindRight@slider^0,w,c
  4787   002B78  26D9               	addwf	fsr2l,f,c
  4788   002B7A  5017               	movf	(Slider_FindRight@slider+1)^0,w,c
  4789   002B7C  22DA               	addwfc	fsr2h,f,c
  4790   002B7E  50DF               	movf	indf2,w,c
  4791   002B80  6E1F               	movwf	Slider_FindRight@ref_node^0,c
  4792                           
  4793                           ;mcc_generated_files/touch/mtouch_slider.c: 489:     if (middle_node == (ref_node + slid
      +                          er->segmentCount - 1u))
  4794   002B82  5047               	movf	_middle_node^0,w,c
  4795   002B84  6E18               	movwf	??_Slider_FindRight^0,c
  4796   002B86  6A19               	clrf	(??_Slider_FindRight+1)^0,c
  4797   002B88  EE20 F003          	lfsr	2,3
  4798   002B8C  5016               	movf	Slider_FindRight@slider^0,w,c
  4799   002B8E  26D9               	addwf	fsr2l,f,c
  4800   002B90  5017               	movf	(Slider_FindRight@slider+1)^0,w,c
  4801   002B92  22DA               	addwfc	fsr2h,f,c
  4802   002B94  50DF               	movf	indf2,w,c
  4803   002B96  6E1A               	movwf	(??_Slider_FindRight+2)^0,c
  4804   002B98  501A               	movf	(??_Slider_FindRight+2)^0,w,c
  4805   002B9A  C01F  F01B         	movff	Slider_FindRight@ref_node,??_Slider_FindRight+3
  4806   002B9E  6A1C               	clrf	(??_Slider_FindRight+4)^0,c
  4807   002BA0  261B               	addwf	(??_Slider_FindRight+3)^0,f,c
  4808   002BA2  0E00               	movlw	0
  4809   002BA4  221C               	addwfc	(??_Slider_FindRight+4)^0,f,c
  4810   002BA6  0EFF               	movlw	255
  4811   002BA8  241B               	addwf	(??_Slider_FindRight+3)^0,w,c
  4812   002BAA  6E1D               	movwf	(??_Slider_FindRight+5)^0,c
  4813   002BAC  0EFF               	movlw	255
  4814   002BAE  201C               	addwfc	(??_Slider_FindRight+4)^0,w,c
  4815   002BB0  6E1E               	movwf	(??_Slider_FindRight+6)^0,c
  4816   002BB2  5018               	movf	??_Slider_FindRight^0,w,c
  4817   002BB4  181D               	xorwf	(??_Slider_FindRight+5)^0,w,c
  4818   002BB6  E107               	bnz	u5451
  4819   002BB8  5019               	movf	(??_Slider_FindRight+1)^0,w,c
  4820   002BBA  181E               	xorwf	(??_Slider_FindRight+6)^0,w,c
  4821   002BBC  A4D8               	btfss	status,2,c
  4822   002BBE  EFE3  F015         	goto	u5451
  4823   002BC2  EFE5  F015         	goto	u5450
  4824   002BC6                     u5451:
  4825   002BC6  EF02  F016         	goto	l6138
  4826   002BCA                     u5450:
  4827   002BCA                     
  4828                           ;mcc_generated_files/touch/mtouch_slider.c: 490:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 491:         if (slider->type == MTOUCH_TYPE_WHEEL)
  4829   002BCA  EE20 F001          	lfsr	2,1
  4830   002BCE  5016               	movf	Slider_FindRight@slider^0,w,c
  4831   002BD0  26D9               	addwf	fsr2l,f,c
  4832   002BD2  5017               	movf	(Slider_FindRight@slider+1)^0,w,c
  4833   002BD4  22DA               	addwfc	fsr2h,f,c
  4834   002BD6  04DE               	decf	postinc2,w,c
  4835   002BD8  A4D8               	btfss	status,2,c
  4836   002BDA  EFF1  F015         	goto	u5461
  4837   002BDE  EFF3  F015         	goto	u5460
  4838   002BE2                     u5461:
  4839   002BE2  EFFC  F015         	goto	l6136
  4840   002BE6                     u5460:
  4841   002BE6                     
  4842                           ;mcc_generated_files/touch/mtouch_slider.c: 492:         {;mcc_generated_files/touch/mto
      +                          uch_slider.c: 495:             right_signal = (int16_t) MTOUCH_Button_Deviation_Get(ref_
      +                          node);
  4843   002BE6  501F               	movf	Slider_FindRight@ref_node^0,w,c
  4844   002BE8  EC52  F01D         	call	_MTOUCH_Button_Deviation_Get
  4845   002BEC  6E39               	movwf	_right_signal^0,c
  4846   002BEE  6A3A               	clrf	(_right_signal+1)^0,c
  4847   002BF0  BE39               	btfsc	_right_signal^0,7,c
  4848   002BF2  063A               	decf	(_right_signal+1)^0,f,c
  4849                           
  4850                           ;mcc_generated_files/touch/mtouch_slider.c: 496:         }
  4851   002BF4  EF09  F016         	goto	l6140
  4852   002BF8                     l6136:
  4853                           
  4854                           ;mcc_generated_files/touch/mtouch_slider.c: 498:         {;mcc_generated_files/touch/mto
      +                          uch_slider.c: 500:             right_signal = 0;
  4855   002BF8  0E00               	movlw	0
  4856   002BFA  6E3A               	movwf	(_right_signal+1)^0,c
  4857   002BFC  0E00               	movlw	0
  4858   002BFE  6E39               	movwf	_right_signal^0,c
  4859   002C00  EF09  F016         	goto	l6140
  4860   002C04                     l6138:
  4861                           
  4862                           ;mcc_generated_files/touch/mtouch_slider.c: 504:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 505:         right_signal = (int16_t) MTOUCH_Button_Deviation_Get(middle_node 
      +                          + 1u);
  4863   002C04  2847               	incf	_middle_node^0,w,c
  4864   002C06  EC52  F01D         	call	_MTOUCH_Button_Deviation_Get
  4865   002C0A  6E39               	movwf	_right_signal^0,c
  4866   002C0C  6A3A               	clrf	(_right_signal+1)^0,c
  4867   002C0E  BE39               	btfsc	_right_signal^0,7,c
  4868   002C10  063A               	decf	(_right_signal+1)^0,f,c
  4869   002C12                     l6140:
  4870                           
  4871                           ;mcc_generated_files/touch/mtouch_slider.c: 508:     if (right_signal < 0)
  4872   002C12  BE3A               	btfsc	(_right_signal+1)^0,7,c
  4873   002C14  EF10  F016         	goto	u5470
  4874   002C18  EF0E  F016         	goto	u5471
  4875   002C1C                     u5471:
  4876   002C1C  EF14  F016         	goto	l6144
  4877   002C20                     u5470:
  4878   002C20                     
  4879                           ;mcc_generated_files/touch/mtouch_slider.c: 509:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 510:         right_signal = 0;
  4880   002C20  0E00               	movlw	0
  4881   002C22  6E3A               	movwf	(_right_signal+1)^0,c
  4882   002C24  0E00               	movlw	0
  4883   002C26  6E39               	movwf	_right_signal^0,c
  4884   002C28                     l6144:
  4885                           
  4886                           ;mcc_generated_files/touch/mtouch_slider.c: 513:     return right_signal;
  4887   002C28  C039  F016         	movff	_right_signal,?_Slider_FindRight
  4888   002C2C  C03A  F017         	movff	_right_signal+1,?_Slider_FindRight+1
  4889   002C30  0012               	return		;funcret
  4890   002C32                     __end_of_Slider_FindRight:
  4891                           	callstack 0
  4892                           
  4893 ;; *************** function _Slider_FindMiddle *****************
  4894 ;; Defined at:
  4895 ;;		line 408 in file "mcc_generated_files/touch/mtouch_slider.c"
  4896 ;; Parameters:    Size  Location     Type
  4897 ;;  slider          2   21[COMRAM] PTR struct .
  4898 ;;		 -> mtouch_slider(17), 
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;  maximumDelta    2   30[COMRAM] short 
  4901 ;;  channelDelta    2   28[COMRAM] short 
  4902 ;;  i               1   32[COMRAM] unsigned char 
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  2   21[COMRAM] short 
  4905 ;; Registers used:
  4906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4912 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4913 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4914 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4915 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4916 ;;Total ram usage:       12 bytes
  4917 ;; Hardware stack levels used: 1
  4918 ;; Hardware stack levels required when called: 7
  4919 ;; This function calls:
  4920 ;;		_MTOUCH_Button_Deviation_Get
  4921 ;; This function is called by:
  4922 ;;		_calculate_contact_size
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           	psect	text29
  4927   002D9E                     __ptext29:
  4928                           	callstack 0
  4929   002D9E                     _Slider_FindMiddle:
  4930                           	callstack 19
  4931   002D9E                     
  4932                           ;mcc_generated_files/touch/mtouch_slider.c: 408: static int16_t Slider_FindMiddle(mtouch
      +                          _slider_t* slider);mcc_generated_files/touch/mtouch_slider.c: 409: {;mcc_generated_files
      +                          /touch/mtouch_slider.c: 410:     uint8_t i;;mcc_generated_files/touch/mtouch_slider.c: 4
      +                          11:     int16_t channelDelta, maximumDelta;;mcc_generated_files/touch/mtouch_slider.c: 4
      +                          13:     maximumDelta = 0;
  4933   002D9E  0E00               	movlw	0
  4934   002DA0  6E20               	movwf	(Slider_FindMiddle@maximumDelta+1)^0,c
  4935   002DA2  0E00               	movlw	0
  4936   002DA4  6E1F               	movwf	Slider_FindMiddle@maximumDelta^0,c
  4937   002DA6                     
  4938                           ;mcc_generated_files/touch/mtouch_slider.c: 414:     middle_node = slider->startSegment;
  4939   002DA6  EE20 F002          	lfsr	2,2
  4940   002DAA  5016               	movf	Slider_FindMiddle@slider^0,w,c
  4941   002DAC  26D9               	addwf	fsr2l,f,c
  4942   002DAE  5017               	movf	(Slider_FindMiddle@slider+1)^0,w,c
  4943   002DB0  22DA               	addwfc	fsr2h,f,c
  4944   002DB2  50DF               	movf	indf2,w,c
  4945   002DB4  6E47               	movwf	_middle_node^0,c
  4946   002DB6                     
  4947                           ;mcc_generated_files/touch/mtouch_slider.c: 417:     for (i = slider->startSegment; i < 
      +                          (slider->startSegment + slider->segmentCount); i++)
  4948   002DB6  EE20 F002          	lfsr	2,2
  4949   002DBA  5016               	movf	Slider_FindMiddle@slider^0,w,c
  4950   002DBC  26D9               	addwf	fsr2l,f,c
  4951   002DBE  5017               	movf	(Slider_FindMiddle@slider+1)^0,w,c
  4952   002DC0  22DA               	addwfc	fsr2h,f,c
  4953   002DC2  50DF               	movf	indf2,w,c
  4954   002DC4  6E21               	movwf	Slider_FindMiddle@i^0,c
  4955   002DC6  EF02  F017         	goto	l6102
  4956   002DCA                     l6094:
  4957                           
  4958                           ;mcc_generated_files/touch/mtouch_slider.c: 418:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 420:         channelDelta = (int16_t) MTOUCH_Button_Deviation_Get(i);
  4959   002DCA  5021               	movf	Slider_FindMiddle@i^0,w,c
  4960   002DCC  EC52  F01D         	call	_MTOUCH_Button_Deviation_Get
  4961   002DD0  6E1D               	movwf	Slider_FindMiddle@channelDelta^0,c
  4962   002DD2  6A1E               	clrf	(Slider_FindMiddle@channelDelta+1)^0,c
  4963   002DD4  BE1D               	btfsc	Slider_FindMiddle@channelDelta^0,7,c
  4964   002DD6  061E               	decf	(Slider_FindMiddle@channelDelta+1)^0,f,c
  4965   002DD8                     
  4966                           ;mcc_generated_files/touch/mtouch_slider.c: 423:         if (channelDelta > maximumDelta
      +                          )
  4967   002DD8  501D               	movf	Slider_FindMiddle@channelDelta^0,w,c
  4968   002DDA  5C1F               	subwf	Slider_FindMiddle@maximumDelta^0,w,c
  4969   002DDC  5020               	movf	(Slider_FindMiddle@maximumDelta+1)^0,w,c
  4970   002DDE  0A80               	xorlw	128
  4971   002DE0  6E18               	movwf	??_Slider_FindMiddle^0,c
  4972   002DE2  501E               	movf	(Slider_FindMiddle@channelDelta+1)^0,w,c
  4973   002DE4  0A80               	xorlw	128
  4974   002DE6  5818               	subwfb	??_Slider_FindMiddle^0,w,c
  4975   002DE8  B0D8               	btfsc	status,0,c
  4976   002DEA  EFF9  F016         	goto	u5391
  4977   002DEE  EFFB  F016         	goto	u5390
  4978   002DF2                     u5391:
  4979   002DF2  EF01  F017         	goto	l6100
  4980   002DF6                     u5390:
  4981   002DF6                     
  4982                           ;mcc_generated_files/touch/mtouch_slider.c: 424:         {;mcc_generated_files/touch/mto
      +                          uch_slider.c: 425:             middle_node = i;
  4983   002DF6  C021  F047         	movff	Slider_FindMiddle@i,_middle_node
  4984                           
  4985                           ;mcc_generated_files/touch/mtouch_slider.c: 426:             maximumDelta = channelDelta
      +                          ;
  4986   002DFA  C01D  F01F         	movff	Slider_FindMiddle@channelDelta,Slider_FindMiddle@maximumDelta
  4987   002DFE  C01E  F020         	movff	Slider_FindMiddle@channelDelta+1,Slider_FindMiddle@maximumDelta+1
  4988   002E02                     l6100:
  4989                           
  4990                           ;mcc_generated_files/touch/mtouch_slider.c: 428:     }
  4991   002E02  2A21               	incf	Slider_FindMiddle@i^0,f,c
  4992   002E04                     l6102:
  4993   002E04  EE20 F002          	lfsr	2,2
  4994   002E08  5016               	movf	Slider_FindMiddle@slider^0,w,c
  4995   002E0A  26D9               	addwf	fsr2l,f,c
  4996   002E0C  5017               	movf	(Slider_FindMiddle@slider+1)^0,w,c
  4997   002E0E  22DA               	addwfc	fsr2h,f,c
  4998   002E10  50DF               	movf	indf2,w,c
  4999   002E12  6E18               	movwf	??_Slider_FindMiddle^0,c
  5000   002E14  6A19               	clrf	(??_Slider_FindMiddle+1)^0,c
  5001   002E16  EE20 F003          	lfsr	2,3
  5002   002E1A  5016               	movf	Slider_FindMiddle@slider^0,w,c
  5003   002E1C  26D9               	addwf	fsr2l,f,c
  5004   002E1E  5017               	movf	(Slider_FindMiddle@slider+1)^0,w,c
  5005   002E20  22DA               	addwfc	fsr2h,f,c
  5006   002E22  50DF               	movf	indf2,w,c
  5007   002E24  6E1A               	movwf	(??_Slider_FindMiddle+2)^0,c
  5008   002E26  501A               	movf	(??_Slider_FindMiddle+2)^0,w,c
  5009   002E28  2618               	addwf	??_Slider_FindMiddle^0,f,c
  5010   002E2A  0E00               	movlw	0
  5011   002E2C  2219               	addwfc	(??_Slider_FindMiddle+1)^0,f,c
  5012   002E2E  5021               	movf	Slider_FindMiddle@i^0,w,c
  5013   002E30  6E1B               	movwf	(??_Slider_FindMiddle+3)^0,c
  5014   002E32  6A1C               	clrf	(??_Slider_FindMiddle+4)^0,c
  5015   002E34  5018               	movf	??_Slider_FindMiddle^0,w,c
  5016   002E36  5C1B               	subwf	(??_Slider_FindMiddle+3)^0,w,c
  5017   002E38  5019               	movf	(??_Slider_FindMiddle+1)^0,w,c
  5018   002E3A  581C               	subwfb	(??_Slider_FindMiddle+4)^0,w,c
  5019   002E3C  A0D8               	btfss	status,0,c
  5020   002E3E  EF23  F017         	goto	u5401
  5021   002E42  EF25  F017         	goto	u5400
  5022   002E46                     u5401:
  5023   002E46  EFE5  F016         	goto	l6094
  5024   002E4A                     u5400:
  5025   002E4A                     
  5026                           ;mcc_generated_files/touch/mtouch_slider.c: 430:     return maximumDelta;
  5027   002E4A  C01F  F016         	movff	Slider_FindMiddle@maximumDelta,?_Slider_FindMiddle
  5028   002E4E  C020  F017         	movff	Slider_FindMiddle@maximumDelta+1,?_Slider_FindMiddle+1
  5029   002E52  0012               	return		;funcret
  5030   002E54                     __end_of_Slider_FindMiddle:
  5031                           	callstack 0
  5032                           
  5033 ;; *************** function _Slider_FindLeft *****************
  5034 ;; Defined at:
  5035 ;;		line 438 in file "mcc_generated_files/touch/mtouch_slider.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;  slider          2   21[COMRAM] PTR struct .
  5038 ;;		 -> mtouch_slider(17), 
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;  ref_node        1   24[COMRAM] unsigned char 
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  2   21[COMRAM] short 
  5043 ;; Registers used:
  5044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5050 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5051 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5052 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5053 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5054 ;;Total ram usage:        4 bytes
  5055 ;; Hardware stack levels used: 1
  5056 ;; Hardware stack levels required when called: 7
  5057 ;; This function calls:
  5058 ;;		_MTOUCH_Button_Deviation_Get
  5059 ;; This function is called by:
  5060 ;;		_calculate_contact_size
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           	psect	text30
  5065   002AA2                     __ptext30:
  5066                           	callstack 0
  5067   002AA2                     _Slider_FindLeft:
  5068                           	callstack 19
  5069   002AA2                     
  5070                           ;mcc_generated_files/touch/mtouch_slider.c: 438: static int16_t Slider_FindLeft(mtouch_s
      +                          lider_t* slider);mcc_generated_files/touch/mtouch_slider.c: 439: {;mcc_generated_files/t
      +                          ouch/mtouch_slider.c: 440:     uint8_t ref_node = slider->startSegment;
  5071   002AA2  EE20 F002          	lfsr	2,2
  5072   002AA6  5016               	movf	Slider_FindLeft@slider^0,w,c
  5073   002AA8  26D9               	addwf	fsr2l,f,c
  5074   002AAA  5017               	movf	(Slider_FindLeft@slider+1)^0,w,c
  5075   002AAC  22DA               	addwfc	fsr2h,f,c
  5076   002AAE  50DF               	movf	indf2,w,c
  5077   002AB0  6E19               	movwf	Slider_FindLeft@ref_node^0,c
  5078   002AB2                     
  5079                           ;mcc_generated_files/touch/mtouch_slider.c: 442:     wheel_sensor_middle_channel_zero = 
      +                          0;
  5080   002AB2  0E00               	movlw	0
  5081   002AB4  6E46               	movwf	_wheel_sensor_middle_channel_zero^0,c
  5082   002AB6                     
  5083                           ;mcc_generated_files/touch/mtouch_slider.c: 445:     if (middle_node == ref_node)
  5084   002AB6  5019               	movf	Slider_FindLeft@ref_node^0,w,c
  5085   002AB8  1847               	xorwf	_middle_node^0,w,c
  5086   002ABA  A4D8               	btfss	status,2,c
  5087   002ABC  EF62  F015         	goto	u5411
  5088   002AC0  EF64  F015         	goto	u5410
  5089   002AC4                     u5411:
  5090   002AC4  EFA2  F015         	goto	l6120
  5091   002AC8                     u5410:
  5092   002AC8                     
  5093                           ;mcc_generated_files/touch/mtouch_slider.c: 446:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 447:         if (slider->type == MTOUCH_TYPE_WHEEL)
  5094   002AC8  EE20 F001          	lfsr	2,1
  5095   002ACC  5016               	movf	Slider_FindLeft@slider^0,w,c
  5096   002ACE  26D9               	addwf	fsr2l,f,c
  5097   002AD0  5017               	movf	(Slider_FindLeft@slider+1)^0,w,c
  5098   002AD2  22DA               	addwfc	fsr2h,f,c
  5099   002AD4  04DE               	decf	postinc2,w,c
  5100   002AD6  A4D8               	btfss	status,2,c
  5101   002AD8  EF70  F015         	goto	u5421
  5102   002ADC  EF72  F015         	goto	u5420
  5103   002AE0                     u5421:
  5104   002AE0  EF9C  F015         	goto	l6118
  5105   002AE4                     u5420:
  5106   002AE4                     
  5107                           ;mcc_generated_files/touch/mtouch_slider.c: 448:         {;mcc_generated_files/touch/mto
      +                          uch_slider.c: 451:             left_signal = (int16_t) MTOUCH_Button_Deviation_Get(ref_n
      +                          ode + slider->segmentCount - 1u);
  5108   002AE4  EE20 F003          	lfsr	2,3
  5109   002AE8  5016               	movf	Slider_FindLeft@slider^0,w,c
  5110   002AEA  26D9               	addwf	fsr2l,f,c
  5111   002AEC  5017               	movf	(Slider_FindLeft@slider+1)^0,w,c
  5112   002AEE  22DA               	addwfc	fsr2h,f,c
  5113   002AF0  50DF               	movf	indf2,w,c
  5114   002AF2  2419               	addwf	Slider_FindLeft@ref_node^0,w,c
  5115   002AF4  6E18               	movwf	??_Slider_FindLeft^0,c
  5116   002AF6  0418               	decf	??_Slider_FindLeft^0,w,c
  5117   002AF8  EC52  F01D         	call	_MTOUCH_Button_Deviation_Get
  5118   002AFC  6E3B               	movwf	_left_signal^0,c
  5119   002AFE  6A3C               	clrf	(_left_signal+1)^0,c
  5120   002B00  BE3B               	btfsc	_left_signal^0,7,c
  5121   002B02  063C               	decf	(_left_signal+1)^0,f,c
  5122                           
  5123                           ;mcc_generated_files/touch/mtouch_slider.c: 454:             right_signal = (int16_t) MT
      +                          OUCH_Button_Deviation_Get(ref_node + 1u);
  5124   002B04  2819               	incf	Slider_FindLeft@ref_node^0,w,c
  5125   002B06  EC52  F01D         	call	_MTOUCH_Button_Deviation_Get
  5126   002B0A  6E39               	movwf	_right_signal^0,c
  5127   002B0C  6A3A               	clrf	(_right_signal+1)^0,c
  5128   002B0E  BE39               	btfsc	_right_signal^0,7,c
  5129   002B10  063A               	decf	(_right_signal+1)^0,f,c
  5130   002B12                     
  5131                           ;mcc_generated_files/touch/mtouch_slider.c: 456:             if(left_signal > right_sign
      +                          al)
  5132   002B12  503B               	movf	_left_signal^0,w,c
  5133   002B14  5C39               	subwf	_right_signal^0,w,c
  5134   002B16  503A               	movf	(_right_signal+1)^0,w,c
  5135   002B18  0A80               	xorlw	128
  5136   002B1A  6E18               	movwf	??_Slider_FindLeft^0,c
  5137   002B1C  503C               	movf	(_left_signal+1)^0,w,c
  5138   002B1E  0A80               	xorlw	128
  5139   002B20  5818               	subwfb	??_Slider_FindLeft^0,w,c
  5140   002B22  B0D8               	btfsc	status,0,c
  5141   002B24  EF96  F015         	goto	u5431
  5142   002B28  EF98  F015         	goto	u5430
  5143   002B2C                     u5431:
  5144   002B2C  EFA9  F015         	goto	l6122
  5145   002B30                     u5430:
  5146   002B30                     
  5147                           ;mcc_generated_files/touch/mtouch_slider.c: 457:             {;mcc_generated_files/touch
      +                          /mtouch_slider.c: 458:                 wheel_sensor_middle_channel_zero = 1;
  5148   002B30  0E01               	movlw	1
  5149   002B32  6E46               	movwf	_wheel_sensor_middle_channel_zero^0,c
  5150   002B34  EFA9  F015         	goto	l6122
  5151   002B38                     l6118:
  5152                           
  5153                           ;mcc_generated_files/touch/mtouch_slider.c: 462:         {;mcc_generated_files/touch/mto
      +                          uch_slider.c: 464:             left_signal = 0;
  5154   002B38  0E00               	movlw	0
  5155   002B3A  6E3C               	movwf	(_left_signal+1)^0,c
  5156   002B3C  0E00               	movlw	0
  5157   002B3E  6E3B               	movwf	_left_signal^0,c
  5158   002B40  EFA9  F015         	goto	l6122
  5159   002B44                     l6120:
  5160                           
  5161                           ;mcc_generated_files/touch/mtouch_slider.c: 468:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 469:         left_signal = (int16_t) MTOUCH_Button_Deviation_Get(middle_node -
      +                           1u);
  5162   002B44  0447               	decf	_middle_node^0,w,c
  5163   002B46  EC52  F01D         	call	_MTOUCH_Button_Deviation_Get
  5164   002B4A  6E3B               	movwf	_left_signal^0,c
  5165   002B4C  6A3C               	clrf	(_left_signal+1)^0,c
  5166   002B4E  BE3B               	btfsc	_left_signal^0,7,c
  5167   002B50  063C               	decf	(_left_signal+1)^0,f,c
  5168   002B52                     l6122:
  5169                           
  5170                           ;mcc_generated_files/touch/mtouch_slider.c: 472:     if (left_signal < 0)
  5171   002B52  BE3C               	btfsc	(_left_signal+1)^0,7,c
  5172   002B54  EFB0  F015         	goto	u5440
  5173   002B58  EFAE  F015         	goto	u5441
  5174   002B5C                     u5441:
  5175   002B5C  EFB4  F015         	goto	l6126
  5176   002B60                     u5440:
  5177   002B60                     
  5178                           ;mcc_generated_files/touch/mtouch_slider.c: 473:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 474:         left_signal = 0;
  5179   002B60  0E00               	movlw	0
  5180   002B62  6E3C               	movwf	(_left_signal+1)^0,c
  5181   002B64  0E00               	movlw	0
  5182   002B66  6E3B               	movwf	_left_signal^0,c
  5183   002B68                     l6126:
  5184                           
  5185                           ;mcc_generated_files/touch/mtouch_slider.c: 476:     return left_signal;
  5186   002B68  C03B  F016         	movff	_left_signal,?_Slider_FindLeft
  5187   002B6C  C03C  F017         	movff	_left_signal+1,?_Slider_FindLeft+1
  5188   002B70  0012               	return		;funcret
  5189   002B72                     __end_of_Slider_FindLeft:
  5190                           	callstack 0
  5191                           
  5192 ;; *************** function _MTOUCH_Button_Deviation_Get *****************
  5193 ;; Defined at:
  5194 ;;		line 441 in file "mcc_generated_files/touch/mtouch_button.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;  name            1    wreg     enum E13138
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;  name            1   20[COMRAM] enum E13138
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  1    wreg      char 
  5201 ;; Registers used:
  5202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5209 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5211 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5212 ;;Total ram usage:        1 bytes
  5213 ;; Hardware stack levels used: 1
  5214 ;; Hardware stack levels required when called: 6
  5215 ;; This function calls:
  5216 ;;		Nothing
  5217 ;; This function is called by:
  5218 ;;		_Slider_FindMiddle
  5219 ;;		_Slider_FindLeft
  5220 ;;		_Slider_FindRight
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           	psect	text31
  5225   003AA4                     __ptext31:
  5226                           	callstack 0
  5227   003AA4                     _MTOUCH_Button_Deviation_Get:
  5228                           	callstack 19
  5229                           
  5230                           ;incstack = 0
  5231                           ;MTOUCH_Button_Deviation_Get@name stored from wreg
  5232   003AA4  6E15               	movwf	MTOUCH_Button_Deviation_Get@name^0,c
  5233   003AA6                     
  5234                           ;mcc_generated_files/touch/mtouch_button.c: 441: mtouch_button_deviation_t MTOUCH_Button
      +                          _Deviation_Get(enum mtouch_button_names name);mcc_generated_files/touch/mtouch_button.c:
      +                           442: {;mcc_generated_files/touch/mtouch_button.c: 443:     if(name < 5u)
  5235   003AA6  0E05               	movlw	5
  5236   003AA8  6015               	cpfslt	MTOUCH_Button_Deviation_Get@name^0,c
  5237   003AAA  EF59  F01D         	goto	u5051
  5238   003AAE  EF5B  F01D         	goto	u5050
  5239   003AB2                     u5051:
  5240   003AB2  EF66  F01D         	goto	l5878
  5241   003AB6                     u5050:
  5242   003AB6                     
  5243                           ;mcc_generated_files/touch/mtouch_button.c: 444:         return mtouch_button[name].devi
      +                          ation;
  5244   003AB6  5015               	movf	MTOUCH_Button_Deviation_Get@name^0,w,c
  5245   003AB8  0D11               	mullw	17
  5246   003ABA  0E0A               	movlw	low (_mtouch_button+10)
  5247   003ABC  24F3               	addwf	243,w,c
  5248   003ABE  6ED9               	movwf	fsr2l,c
  5249   003AC0  0E01               	movlw	high (_mtouch_button+10)
  5250   003AC2  20F4               	addwfc	prodh,w,c
  5251   003AC4  6EDA               	movwf	fsr2h,c
  5252   003AC6  50DF               	movf	indf2,w,c
  5253   003AC8  EF67  F01D         	goto	l572
  5254   003ACC                     l5878:
  5255                           
  5256                           ;mcc_generated_files/touch/mtouch_button.c: 446:         return (mtouch_button_deviation
      +                          _t)0;
  5257   003ACC  0E00               	movlw	0
  5258   003ACE                     l572:
  5259   003ACE  0012               	return		;funcret
  5260   003AD0                     __end_of_MTOUCH_Button_Deviation_Get:
  5261                           	callstack 0
  5262                           
  5263 ;; *************** function _ProcessSliderChange *****************
  5264 ;; Defined at:
  5265 ;;		line 133 in file "application.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;  slider          1    wreg     enum E13166
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;  slider          1    0[COMRAM] enum E13166
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  1    wreg      void 
  5272 ;; Registers used:
  5273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/0
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5283 ;;Total ram usage:        0 bytes
  5284 ;; Hardware stack levels used: 1
  5285 ;; Hardware stack levels required when called: 7
  5286 ;; This function calls:
  5287 ;;		_MTOUCH_Slider_Position_Get
  5288 ;; This function is called by:
  5289 ;;		_main
  5290 ;;		_Slider_Service
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           	psect	text32
  5295   003C9A                     __ptext32:
  5296                           	callstack 0
  5297   003C9A                     _ProcessSliderChange:
  5298                           	callstack 20
  5299   003C9A                     
  5300                           ;application.c: 133: void ProcessSliderChange(enum mtouch_slider_names slider);applicati
      +                          on.c: 134: {;application.c: 135:     BUTTON.key = SLIDER;
  5301   003C9A  0E03               	movlw	3
  5302   003C9C  0100               	movlb	0	; () banked
  5303   003C9E  6F8D               	movwf	_BUTTON& (0+255),b
  5304                           
  5305                           ;application.c: 136:     BUTTON.keyStatus = KEY_PRESSED;
  5306   003CA0  0E01               	movlw	1
  5307   003CA2  6F8E               	movwf	(_BUTTON+1)& (0+255),b
  5308   003CA4                     
  5309                           ; BSR set to: 0
  5310                           ;application.c: 137:     BUTTON.sliderADC_Val = MTOUCH_Slider_Position_Get(Slider0);
  5311   003CA4  0E00               	movlw	0
  5312   003CA6  EC53  F01C         	call	_MTOUCH_Slider_Position_Get
  5313   003CAA  C015  F08F         	movff	?_MTOUCH_Slider_Position_Get,_BUTTON+2
  5314   003CAE  C016  F090         	movff	?_MTOUCH_Slider_Position_Get+1,_BUTTON+3
  5315   003CB2  0012               	return		;funcret
  5316   003CB4                     __end_of_ProcessSliderChange:
  5317                           	callstack 0
  5318                           
  5319 ;; *************** function _Slider_DefaultCallback *****************
  5320 ;; Defined at:
  5321 ;;		line 999 in file "mcc_generated_files/touch/mtouch_slider.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;  slider          1    wreg     enum E13201
  5324 ;; Auto vars:     Size  Location     Type
  5325 ;;  slider          1    0[COMRAM] enum E13201
  5326 ;; Return value:  Size  Location     Type
  5327 ;;                  1    wreg      void 
  5328 ;; Registers used:
  5329 ;;		wreg
  5330 ;; Tracked objects:
  5331 ;;		On entry : 0/0
  5332 ;;		On exit  : 0/0
  5333 ;;		Unchanged: 0/0
  5334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5339 ;;Total ram usage:        0 bytes
  5340 ;; Hardware stack levels used: 1
  5341 ;; Hardware stack levels required when called: 6
  5342 ;; This function calls:
  5343 ;;		Nothing
  5344 ;; This function is called by:
  5345 ;;		_Slider_Service
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           
  5349                           	psect	text33
  5350   003DE2                     __ptext33:
  5351                           	callstack 0
  5352   003DE2                     _Slider_DefaultCallback:
  5353                           	callstack 21
  5354   003DE2  0012               	return		;funcret
  5355   003DE4                     __end_of_Slider_DefaultCallback:
  5356                           	callstack 0
  5357                           
  5358 ;; *************** function _MTOUCH_Slider_Position_Get *****************
  5359 ;; Defined at:
  5360 ;;		line 904 in file "mcc_generated_files/touch/mtouch_slider.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;  sliderName      1    wreg     enum E13201
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;  sliderName      1   22[COMRAM] enum E13201
  5365 ;; Return value:  Size  Location     Type
  5366 ;;                  2   20[COMRAM] unsigned short 
  5367 ;; Registers used:
  5368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5375 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5377 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5378 ;;Total ram usage:        3 bytes
  5379 ;; Hardware stack levels used: 1
  5380 ;; Hardware stack levels required when called: 6
  5381 ;; This function calls:
  5382 ;;		Nothing
  5383 ;; This function is called by:
  5384 ;;		_ProcessSliderChange
  5385 ;;		_touch_example
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           	psect	text34
  5390   0038A6                     __ptext34:
  5391                           	callstack 0
  5392   0038A6                     _MTOUCH_Slider_Position_Get:
  5393                           	callstack 20
  5394                           
  5395                           ;incstack = 0
  5396                           ;MTOUCH_Slider_Position_Get@sliderName stored from wreg
  5397   0038A6  6E17               	movwf	MTOUCH_Slider_Position_Get@sliderName^0,c
  5398   0038A8                     
  5399                           ;mcc_generated_files/touch/mtouch_slider.c: 904: uint16_t MTOUCH_Slider_Position_Get(enu
      +                          m mtouch_slider_names sliderName);mcc_generated_files/touch/mtouch_slider.c: 905: {;mcc_
      +                          generated_files/touch/mtouch_slider.c: 906:     if (sliderName < 1u)
  5400   0038A8  5017               	movf	MTOUCH_Slider_Position_Get@sliderName^0,w,c
  5401   0038AA  A4D8               	btfss	status,2,c
  5402   0038AC  EF5A  F01C         	goto	u5631
  5403   0038B0  EF5C  F01C         	goto	u5630
  5404   0038B4                     u5631:
  5405   0038B4  EF6A  F01C         	goto	l6216
  5406   0038B8                     u5630:
  5407   0038B8                     
  5408                           ;mcc_generated_files/touch/mtouch_slider.c: 907:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 908:         return (mtouch_slider[sliderName].sliderPosition);
  5409   0038B8  5017               	movf	MTOUCH_Slider_Position_Get@sliderName^0,w,c
  5410   0038BA  0D11               	mullw	17
  5411   0038BC  0E61               	movlw	low (_mtouch_slider+12)
  5412   0038BE  24F3               	addwf	243,w,c
  5413   0038C0  6ED9               	movwf	fsr2l,c
  5414   0038C2  0E01               	movlw	high (_mtouch_slider+12)
  5415   0038C4  20F4               	addwfc	prodh,w,c
  5416   0038C6  6EDA               	movwf	fsr2h,c
  5417   0038C8  CFDE F015          	movff	postinc2,?_MTOUCH_Slider_Position_Get
  5418   0038CC  CFDD F016          	movff	postdec2,?_MTOUCH_Slider_Position_Get+1
  5419   0038D0  EF6E  F01C         	goto	l856
  5420   0038D4                     l6216:
  5421                           
  5422                           ;mcc_generated_files/touch/mtouch_slider.c: 911:         return 0u;
  5423   0038D4  0E00               	movlw	0
  5424   0038D6  6E16               	movwf	(?_MTOUCH_Slider_Position_Get+1)^0,c
  5425   0038D8  0E00               	movlw	0
  5426   0038DA  6E15               	movwf	?_MTOUCH_Slider_Position_Get^0,c
  5427   0038DC                     l856:
  5428   0038DC  0012               	return		;funcret
  5429   0038DE                     __end_of_MTOUCH_Slider_Position_Get:
  5430                           	callstack 0
  5431                           
  5432 ;; *************** function _MTOUCH_Button_isPressed *****************
  5433 ;; Defined at:
  5434 ;;		line 424 in file "mcc_generated_files/touch/mtouch_button.c"
  5435 ;; Parameters:    Size  Location     Type
  5436 ;;  name            1    wreg     enum E13138
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;  name            1   21[COMRAM] enum E13138
  5439 ;; Return value:  Size  Location     Type
  5440 ;;                  1    wreg      _Bool 
  5441 ;; Registers used:
  5442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5449 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5450 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5451 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5452 ;;Total ram usage:        2 bytes
  5453 ;; Hardware stack levels used: 1
  5454 ;; Hardware stack levels required when called: 6
  5455 ;; This function calls:
  5456 ;;		Nothing
  5457 ;; This function is called by:
  5458 ;;		_Slider_Service
  5459 ;;		_MTOUCH_Button_Buttonmask_Get
  5460 ;;		_touch_example
  5461 ;; This function uses a non-reentrant model
  5462 ;;
  5463                           
  5464                           	psect	text35
  5465   00370C                     __ptext35:
  5466                           	callstack 0
  5467   00370C                     _MTOUCH_Button_isPressed:
  5468                           	callstack 21
  5469                           
  5470                           ;incstack = 0
  5471                           ;MTOUCH_Button_isPressed@name stored from wreg
  5472   00370C  6E16               	movwf	MTOUCH_Button_isPressed@name^0,c
  5473   00370E                     
  5474                           ;mcc_generated_files/touch/mtouch_button.c: 424: _Bool MTOUCH_Button_isPressed(enum mtou
      +                          ch_button_names name);mcc_generated_files/touch/mtouch_button.c: 425: {;mcc_generated_fi
      +                          les/touch/mtouch_button.c: 426:     if(name < 5u)
  5475   00370E  0E05               	movlw	5
  5476   003710  6016               	cpfslt	MTOUCH_Button_isPressed@name^0,c
  5477   003712  EF8D  F01B         	goto	u5891
  5478   003716  EF8F  F01B         	goto	u5890
  5479   00371A                     u5891:
  5480   00371A  EFA4  F01B         	goto	l6352
  5481   00371E                     u5890:
  5482   00371E                     
  5483                           ;mcc_generated_files/touch/mtouch_button.c: 427:         return (_Bool)((mtouch_button[n
      +                          ame].state == MTOUCH_BUTTON_STATE_pressed) ? 1 : 0);
  5484   00371E  5016               	movf	MTOUCH_Button_isPressed@name^0,w,c
  5485   003720  0D11               	mullw	17
  5486   003722  0E02               	movlw	low (_mtouch_button+2)
  5487   003724  24F3               	addwf	243,w,c
  5488   003726  6ED9               	movwf	fsr2l,c
  5489   003728  0E01               	movlw	high (_mtouch_button+2)
  5490   00372A  20F4               	addwfc	prodh,w,c
  5491   00372C  6EDA               	movwf	fsr2h,c
  5492   00372E  0E02               	movlw	2
  5493   003730  18DE               	xorwf	postinc2,w,c
  5494   003732  B4D8               	btfsc	status,2,c
  5495   003734  EF9E  F01B         	goto	u5901
  5496   003738  EFA1  F01B         	goto	u5900
  5497   00373C                     u5901:
  5498   00373C  0E01               	movlw	1
  5499   00373E  EFA2  F01B         	goto	u5910
  5500   003742                     u5900:
  5501   003742  0E00               	movlw	0
  5502   003744                     u5910:
  5503   003744  EFA5  F01B         	goto	l562
  5504   003748                     l6352:
  5505                           
  5506                           ;mcc_generated_files/touch/mtouch_button.c: 429:         return 0;
  5507   003748  0E00               	movlw	0
  5508   00374A                     l562:
  5509   00374A  0012               	return		;funcret
  5510   00374C                     __end_of_MTOUCH_Button_isPressed:
  5511                           	callstack 0
  5512                           
  5513 ;; *************** function _MTOUCH_Sensor_SampleAll *****************
  5514 ;; Defined at:
  5515 ;;		line 349 in file "mcc_generated_files/touch/mtouch_sensor.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;		None
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;		None
  5520 ;; Return value:  Size  Location     Type
  5521 ;;                  1    wreg      _Bool 
  5522 ;; Registers used:
  5523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5524 ;; Tracked objects:
  5525 ;;		On entry : 0/0
  5526 ;;		On exit  : 0/0
  5527 ;;		Unchanged: 0/0
  5528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5533 ;;Total ram usage:        0 bytes
  5534 ;; Hardware stack levels used: 1
  5535 ;; Hardware stack levels required when called: 9
  5536 ;; This function calls:
  5537 ;;		_MTOUCH_Sensor_isSamplingComplete
  5538 ;;		_MTOUCH_Sensor_postAcquisitionProcess
  5539 ;;		_Sensor_FrequencyHopping
  5540 ;; This function is called by:
  5541 ;;		_MTOUCH_Service_Mainloop
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545                           	psect	text36
  5546   003AF6                     __ptext36:
  5547                           	callstack 0
  5548   003AF6                     _MTOUCH_Sensor_SampleAll:
  5549                           	callstack 20
  5550   003AF6                     
  5551                           ;mcc_generated_files/touch/mtouch_sensor.c: 351:     if(MTOUCH_Sensor_isSamplingComplete
      +                          () == 0)
  5552   003AF6  ECC9  F019         	call	_MTOUCH_Sensor_isSamplingComplete	;wreg free
  5553   003AFA  0900               	iorlw	0
  5554   003AFC  A4D8               	btfss	status,2,c
  5555   003AFE  EF83  F01D         	goto	u6261
  5556   003B02  EF85  F01D         	goto	u6260
  5557   003B06                     u6261:
  5558   003B06  EF88  F01D         	goto	l6604
  5559   003B0A                     u6260:
  5560   003B0A                     
  5561                           ;mcc_generated_files/touch/mtouch_sensor.c: 352:     {;mcc_generated_files/touch/mtouch_
      +                          sensor.c: 353:         return 0;
  5562   003B0A  0E00               	movlw	0
  5563   003B0C  EF8D  F01D         	goto	l1163
  5564   003B10                     l6604:
  5565                           
  5566                           ;mcc_generated_files/touch/mtouch_sensor.c: 357:     Sensor_FrequencyHopping();
  5567   003B10  ECE1  F01E         	call	_Sensor_FrequencyHopping	;wreg free
  5568   003B14                     
  5569                           ;mcc_generated_files/touch/mtouch_sensor.c: 358:     MTOUCH_Sensor_postAcquisitionProces
      +                          s();
  5570   003B14  EC3F  F01B         	call	_MTOUCH_Sensor_postAcquisitionProcess	;wreg free
  5571   003B18                     
  5572                           ;mcc_generated_files/touch/mtouch_sensor.c: 360:     return 1;
  5573   003B18  0E01               	movlw	1
  5574   003B1A                     l1163:
  5575   003B1A  0012               	return		;funcret
  5576   003B1C                     __end_of_MTOUCH_Sensor_SampleAll:
  5577                           	callstack 0
  5578                           
  5579 ;; *************** function _Sensor_FrequencyHopping *****************
  5580 ;; Defined at:
  5581 ;;		line 699 in file "mcc_generated_files/touch/mtouch_sensor.c"
  5582 ;; Parameters:    Size  Location     Type
  5583 ;;		None
  5584 ;; Auto vars:     Size  Location     Type
  5585 ;;		None
  5586 ;; Return value:  Size  Location     Type
  5587 ;;                  1    wreg      void 
  5588 ;; Registers used:
  5589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5590 ;; Tracked objects:
  5591 ;;		On entry : 0/0
  5592 ;;		On exit  : 0/0
  5593 ;;		Unchanged: 0/0
  5594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5599 ;;Total ram usage:        0 bytes
  5600 ;; Hardware stack levels used: 1
  5601 ;; Hardware stack levels required when called: 7
  5602 ;; This function calls:
  5603 ;;		_Sensor_setSamplePeriod
  5604 ;; This function is called by:
  5605 ;;		_MTOUCH_Sensor_SampleAll
  5606 ;; This function uses a non-reentrant model
  5607 ;;
  5608                           
  5609                           	psect	text37
  5610   003DC2                     __ptext37:
  5611                           	callstack 0
  5612   003DC2                     _Sensor_FrequencyHopping:
  5613                           	callstack 21
  5614   003DC2                     
  5615                           ;mcc_generated_files/touch/mtouch_sensor.c: 703:     Sensor_setSamplePeriod();
  5616   003DC2  EC8E  F01D         	call	_Sensor_setSamplePeriod	;wreg free
  5617   003DC6  0012               	return		;funcret
  5618   003DC8                     __end_of_Sensor_FrequencyHopping:
  5619                           	callstack 0
  5620                           
  5621 ;; *************** function _Sensor_setSamplePeriod *****************
  5622 ;; Defined at:
  5623 ;;		line 610 in file "mcc_generated_files/touch/mtouch_sensor.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;		None
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;		None
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  1    wreg      void 
  5630 ;; Registers used:
  5631 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5641 ;;Total ram usage:        0 bytes
  5642 ;; Hardware stack levels used: 1
  5643 ;; Hardware stack levels required when called: 6
  5644 ;; This function calls:
  5645 ;;		Nothing
  5646 ;; This function is called by:
  5647 ;;		_Sensor_FrequencyHopping
  5648 ;; This function uses a non-reentrant model
  5649 ;;
  5650                           
  5651                           	psect	text38
  5652   003B1C                     __ptext38:
  5653                           	callstack 0
  5654   003B1C                     _Sensor_setSamplePeriod:
  5655                           	callstack 21
  5656   003B1C                     
  5657                           ;mcc_generated_files/touch/mtouch_sensor.c: 612:     if(++freq_index >= sizeof(freq_hop)
      +                           )
  5658   003B1C  2A41               	incf	_freq_index^0,f,c
  5659   003B1E  0E02               	movlw	2
  5660   003B20  6441               	cpfsgt	_freq_index^0,c
  5661   003B22  EF95  F01D         	goto	u3841
  5662   003B26  EF97  F01D         	goto	u3840
  5663   003B2A                     u3841:
  5664   003B2A  EF99  F01D         	goto	l4958
  5665   003B2E                     u3840:
  5666   003B2E                     
  5667                           ;mcc_generated_files/touch/mtouch_sensor.c: 613:         freq_index = 0;
  5668   003B2E  0E00               	movlw	0
  5669   003B30  6E41               	movwf	_freq_index^0,c
  5670   003B32                     l4958:
  5671                           
  5672                           ;mcc_generated_files/touch/mtouch_sensor.c: 615:     sample_delay = freq_hop[freq_index]
      +                          ;
  5673   003B32  5041               	movf	_freq_index^0,w,c
  5674   003B34  0FD6               	addlw	low _freq_hop
  5675   003B36  6ED9               	movwf	fsr2l,c
  5676   003B38  6ADA               	clrf	fsr2h,c
  5677   003B3A  50DF               	movf	indf2,w,c
  5678   003B3C  6E40               	movwf	_sample_delay^0,c
  5679   003B3E  0012               	return		;funcret
  5680   003B40                     __end_of_Sensor_setSamplePeriod:
  5681                           	callstack 0
  5682                           
  5683 ;; *************** function _MTOUCH_Sensor_postAcquisitionProcess *****************
  5684 ;; Defined at:
  5685 ;;		line 518 in file "mcc_generated_files/touch/mtouch_sensor.c"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;		None
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;  name            1   30[COMRAM] enum E13072
  5690 ;; Return value:  Size  Location     Type
  5691 ;;                  1    wreg      void 
  5692 ;; Registers used:
  5693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5694 ;; Tracked objects:
  5695 ;;		On entry : 0/0
  5696 ;;		On exit  : 0/0
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5702 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5703 ;;Total ram usage:        1 bytes
  5704 ;; Hardware stack levels used: 1
  5705 ;; Hardware stack levels required when called: 8
  5706 ;; This function calls:
  5707 ;;		_Sensor_DefaultCallback
  5708 ;;		_Sensor_RawSample_Update
  5709 ;; This function is called by:
  5710 ;;		_MTOUCH_Sensor_SampleAll
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           
  5714                           	psect	text39
  5715   00367E                     __ptext39:
  5716                           	callstack 0
  5717   00367E                     _MTOUCH_Sensor_postAcquisitionProcess:
  5718                           	callstack 20
  5719   00367E                     
  5720                           ;mcc_generated_files/touch/mtouch_sensor.c: 520:     enum mtouch_sensor_names name;;mcc_
      +                          generated_files/touch/mtouch_sensor.c: 522:     for (name = 0; name < 5u; name++)
  5721   00367E  0E00               	movlw	0
  5722   003680  6E1F               	movwf	MTOUCH_Sensor_postAcquisitionProcess@name^0,c
  5723   003682                     l5196:
  5724                           
  5725                           ;mcc_generated_files/touch/mtouch_sensor.c: 523:     {;mcc_generated_files/touch/mtouch_
      +                          sensor.c: 524:         if(mtouch_sensor[name].sampled)
  5726   003682  501F               	movf	MTOUCH_Sensor_postAcquisitionProcess@name^0,w,c
  5727   003684  0D0A               	mullw	10
  5728   003686  50F3               	movf	243,w,c
  5729   003688  0FA4               	addlw	low (_mtouch_sensor+9)
  5730   00368A  6ED9               	movwf	fsr2l,c
  5731   00368C  6ADA               	clrf	fsr2h,c
  5732   00368E  0100               	movlb	0	; () banked
  5733   003690  A2DF               	btfss	indf2,1,c
  5734   003692  EF4D  F01B         	goto	u4191
  5735   003696  EF4F  F01B         	goto	u4190
  5736   00369A                     u4191:
  5737   00369A  EF59  F01B         	goto	l5202
  5738   00369E                     u4190:
  5739   00369E                     
  5740                           ; BSR set to: 0
  5741                           ;mcc_generated_files/touch/mtouch_sensor.c: 525:         {;mcc_generated_files/touch/mto
      +                          uch_sensor.c: 526:             Sensor_RawSample_Update(&mtouch_sensor[name]);
  5742   00369E  501F               	movf	MTOUCH_Sensor_postAcquisitionProcess@name^0,w,c
  5743   0036A0  0D0A               	mullw	10
  5744   0036A2  50F3               	movf	243,w,c
  5745   0036A4  0F9B               	addlw	low _mtouch_sensor
  5746   0036A6  6E1C               	movwf	Sensor_RawSample_Update@sensor^0,c
  5747   0036A8  EC7C  F01A         	call	_Sensor_RawSample_Update	;wreg free
  5748   0036AC                     
  5749                           ;mcc_generated_files/touch/mtouch_sensor.c: 527:             callback_sampled(name);
  5750   0036AC  501F               	movf	MTOUCH_Sensor_postAcquisitionProcess@name^0,w,c
  5751   0036AE  ECF2  F01E         	call	_Sensor_DefaultCallback
  5752   0036B2                     l5202:
  5753                           
  5754                           ;mcc_generated_files/touch/mtouch_sensor.c: 529:     }
  5755   0036B2  2A1F               	incf	MTOUCH_Sensor_postAcquisitionProcess@name^0,f,c
  5756   0036B4  0E04               	movlw	4
  5757   0036B6  641F               	cpfsgt	MTOUCH_Sensor_postAcquisitionProcess@name^0,c
  5758   0036B8  EF60  F01B         	goto	u4201
  5759   0036BC  EF62  F01B         	goto	u4200
  5760   0036C0                     u4201:
  5761   0036C0  EF41  F01B         	goto	l5196
  5762   0036C4                     u4200:
  5763   0036C4  0012               	return		;funcret
  5764   0036C6                     __end_of_MTOUCH_Sensor_postAcquisitionProcess:
  5765                           	callstack 0
  5766                           
  5767 ;; *************** function _Sensor_RawSample_Update *****************
  5768 ;; Defined at:
  5769 ;;		line 641 in file "mcc_generated_files/touch/mtouch_sensor.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;  sensor          1   27[COMRAM] PTR struct .
  5772 ;;		 -> mtouch_sensor(50), 
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;  result          2   28[COMRAM] unsigned short 
  5775 ;; Return value:  Size  Location     Type
  5776 ;;                  1    wreg      void 
  5777 ;; Registers used:
  5778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5779 ;; Tracked objects:
  5780 ;;		On entry : 0/0
  5781 ;;		On exit  : 0/0
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5784 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5785 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5787 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5788 ;;Total ram usage:        3 bytes
  5789 ;; Hardware stack levels used: 1
  5790 ;; Hardware stack levels required when called: 7
  5791 ;; This function calls:
  5792 ;;		_medianFilter
  5793 ;; This function is called by:
  5794 ;;		_MTOUCH_Sensor_postAcquisitionProcess
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           	psect	text40
  5799   0034F8                     __ptext40:
  5800                           	callstack 0
  5801   0034F8                     _Sensor_RawSample_Update:
  5802                           	callstack 20
  5803   0034F8                     
  5804                           ;mcc_generated_files/touch/mtouch_sensor.c: 641: static void Sensor_RawSample_Update(mto
      +                          uch_sensor_t* sensor);mcc_generated_files/touch/mtouch_sensor.c: 642: {;mcc_generated_fi
      +                          les/touch/mtouch_sensor.c: 643:     mtouch_sensor_sample_t result = medianFilter(sensor-
      +                          >sensor_name);
  5805   0034F8  501C               	movf	Sensor_RawSample_Update@sensor^0,w,c
  5806   0034FA  6ED9               	movwf	fsr2l,c
  5807   0034FC  6ADA               	clrf	fsr2h,c
  5808   0034FE  50DF               	movf	indf2,w,c
  5809   003500  EC4F  F00D         	call	_medianFilter
  5810   003504  C015  F01D         	movff	?_medianFilter,Sensor_RawSample_Update@result
  5811   003508  C016  F01E         	movff	?_medianFilter+1,Sensor_RawSample_Update@result+1
  5812   00350C                     
  5813                           ;mcc_generated_files/touch/mtouch_sensor.c: 645:     if (GIE == (uint8_t)1)
  5814   00350C  AEF2               	btfss	4082,7,c	;volatile
  5815   00350E  EF8B  F01A         	goto	u3831
  5816   003512  EF8D  F01A         	goto	u3830
  5817   003516                     u3831:
  5818   003516  EF9A  F01A         	goto	l4950
  5819   00351A                     u3830:
  5820   00351A                     
  5821                           ;mcc_generated_files/touch/mtouch_sensor.c: 646:     {;mcc_generated_files/touch/mtouch_
      +                          sensor.c: 647:         GIE = (uint8_t)0;
  5822   00351A  9EF2               	bcf	4082,7,c	;volatile
  5823   00351C                     
  5824                           ;mcc_generated_files/touch/mtouch_sensor.c: 648:         sensor->rawSample = result;
  5825   00351C  501C               	movf	Sensor_RawSample_Update@sensor^0,w,c
  5826   00351E  6ED9               	movwf	fsr2l,c
  5827   003520  6ADA               	clrf	fsr2h,c
  5828   003522  0E07               	movlw	7
  5829   003524  26D9               	addwf	fsr2l,f,c
  5830   003526  C01D  FFDE         	movff	Sensor_RawSample_Update@result,postinc2
  5831   00352A  C01E  FFDD         	movff	Sensor_RawSample_Update@result+1,postdec2
  5832   00352E                     
  5833                           ;mcc_generated_files/touch/mtouch_sensor.c: 649:         GIE = (uint8_t)1;
  5834   00352E  8EF2               	bsf	4082,7,c	;volatile
  5835                           
  5836                           ;mcc_generated_files/touch/mtouch_sensor.c: 650:     }
  5837   003530  EFA3  F01A         	goto	l1245
  5838   003534                     l4950:
  5839                           
  5840                           ;mcc_generated_files/touch/mtouch_sensor.c: 652:     {;mcc_generated_files/touch/mtouch_
      +                          sensor.c: 653:         sensor->rawSample = result;
  5841   003534  501C               	movf	Sensor_RawSample_Update@sensor^0,w,c
  5842   003536  6ED9               	movwf	fsr2l,c
  5843   003538  6ADA               	clrf	fsr2h,c
  5844   00353A  0E07               	movlw	7
  5845   00353C  26D9               	addwf	fsr2l,f,c
  5846   00353E  C01D  FFDE         	movff	Sensor_RawSample_Update@result,postinc2
  5847   003542  C01E  FFDD         	movff	Sensor_RawSample_Update@result+1,postdec2
  5848   003546                     l1245:
  5849   003546  0012               	return		;funcret
  5850   003548                     __end_of_Sensor_RawSample_Update:
  5851                           	callstack 0
  5852                           
  5853 ;; *************** function _medianFilter *****************
  5854 ;; Defined at:
  5855 ;;		line 658 in file "mcc_generated_files/touch/mtouch_sensor.c"
  5856 ;; Parameters:    Size  Location     Type
  5857 ;;  sensor          1    wreg     enum E13072
  5858 ;; Auto vars:     Size  Location     Type
  5859 ;;  sensor          1   26[COMRAM] enum E13072
  5860 ;; Return value:  Size  Location     Type
  5861 ;;                  2   20[COMRAM] unsigned short 
  5862 ;; Registers used:
  5863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5864 ;; Tracked objects:
  5865 ;;		On entry : 0/0
  5866 ;;		On exit  : 0/0
  5867 ;;		Unchanged: 0/0
  5868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5869 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5870 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5871 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5872 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5873 ;;Total ram usage:        7 bytes
  5874 ;; Hardware stack levels used: 1
  5875 ;; Hardware stack levels required when called: 6
  5876 ;; This function calls:
  5877 ;;		Nothing
  5878 ;; This function is called by:
  5879 ;;		_Sensor_RawSample_Update
  5880 ;; This function uses a non-reentrant model
  5881 ;;
  5882                           
  5883                           	psect	text41
  5884   001A9E                     __ptext41:
  5885                           	callstack 0
  5886   001A9E                     _medianFilter:
  5887                           	callstack 20
  5888                           
  5889                           ;incstack = 0
  5890                           ;medianFilter@sensor stored from wreg
  5891   001A9E  6E1B               	movwf	medianFilter@sensor^0,c
  5892   001AA0                     
  5893                           ;mcc_generated_files/touch/mtouch_sensor.c: 658: static mtouch_sensor_packetsample_t med
      +                          ianFilter(enum mtouch_sensor_names sensor);mcc_generated_files/touch/mtouch_sensor.c: 65
      +                          9: {;mcc_generated_files/touch/mtouch_sensor.c: 660:     static uint8_t bufferIndex[5u];
      +                          ;mcc_generated_files/touch/mtouch_sensor.c: 662:     sensor_medianBuffer[sensor][bufferI
      +                          ndex[sensor]++] = packet_sample[sensor];
  5894   001AA0  501B               	movf	medianFilter@sensor^0,w,c
  5895   001AA2  0D02               	mullw	2
  5896   001AA4  50F3               	movf	243,w,c
  5897   001AA6  0F7E               	addlw	low _packet_sample
  5898   001AA8  6ED9               	movwf	fsr2l,c
  5899   001AAA  6ADA               	clrf	fsr2h,c
  5900   001AAC  501B               	movf	medianFilter@sensor^0,w,c
  5901   001AAE  0F88               	addlw	low medianFilter@bufferIndex
  5902   001AB0  6EE1               	movwf	fsr1l,c
  5903   001AB2  6AE2               	clrf	fsr1h,c
  5904   001AB4  50E7               	movf	indf1,w,c
  5905   001AB6  2AE7               	incf	indf1,f,c
  5906   001AB8  0D02               	mullw	2
  5907   001ABA  CFF3 F017          	movff	prodl,??_medianFilter
  5908   001ABE  501B               	movf	medianFilter@sensor^0,w,c
  5909   001AC0  0D06               	mullw	6
  5910   001AC2  50F3               	movf	243,w,c
  5911   001AC4  0F60               	addlw	low _sensor_medianBuffer
  5912   001AC6  2417               	addwf	??_medianFilter^0,w,c
  5913   001AC8  6EE1               	movwf	fsr1l,c
  5914   001ACA  6AE2               	clrf	fsr1h,c
  5915   001ACC  CFDE FFE6          	movff	postinc2,postinc1
  5916   001AD0  CFDD FFE5          	movff	postdec2,postdec1
  5917   001AD4                     
  5918                           ;mcc_generated_files/touch/mtouch_sensor.c: 664:     if(bufferIndex[sensor]>=3)
  5919   001AD4  501B               	movf	medianFilter@sensor^0,w,c
  5920   001AD6  0F88               	addlw	low medianFilter@bufferIndex
  5921   001AD8  6ED9               	movwf	fsr2l,c
  5922   001ADA  6ADA               	clrf	fsr2h,c
  5923   001ADC  0E02               	movlw	2
  5924   001ADE  64DF               	cpfsgt	indf2,c
  5925   001AE0  EF74  F00D         	goto	u3251
  5926   001AE4  EF76  F00D         	goto	u3250
  5927   001AE8                     u3251:
  5928   001AE8  EF7B  F00D         	goto	l4606
  5929   001AEC                     u3250:
  5930   001AEC                     
  5931                           ;mcc_generated_files/touch/mtouch_sensor.c: 665:         bufferIndex[sensor] = 0;
  5932   001AEC  501B               	movf	medianFilter@sensor^0,w,c
  5933   001AEE  0F88               	addlw	low medianFilter@bufferIndex
  5934   001AF0  6ED9               	movwf	fsr2l,c
  5935   001AF2  6ADA               	clrf	fsr2h,c
  5936   001AF4  6ADF               	clrf	indf2,c
  5937   001AF6                     l4606:
  5938                           
  5939                           ;mcc_generated_files/touch/mtouch_sensor.c: 667:     if(sensor_medianBuffer[sensor][0]>=
      +                          sensor_medianBuffer[sensor][1])
  5940   001AF6  501B               	movf	medianFilter@sensor^0,w,c
  5941   001AF8  0D06               	mullw	6
  5942   001AFA  50F3               	movf	243,w,c
  5943   001AFC  0F62               	addlw	low (_sensor_medianBuffer+2)
  5944   001AFE  6ED9               	movwf	fsr2l,c
  5945   001B00  6ADA               	clrf	fsr2h,c
  5946   001B02  501B               	movf	medianFilter@sensor^0,w,c
  5947   001B04  0D06               	mullw	6
  5948   001B06  50F3               	movf	243,w,c
  5949   001B08  0F60               	addlw	low _sensor_medianBuffer
  5950   001B0A  6EE1               	movwf	fsr1l,c
  5951   001B0C  6AE2               	clrf	fsr1h,c
  5952   001B0E  50DE               	movf	postinc2,w,c
  5953   001B10  5CE6               	subwf	postinc1,w,c
  5954   001B12  50DE               	movf	postinc2,w,c
  5955   001B14  58E6               	subwfb	postinc1,w,c
  5956   001B16  A0D8               	btfss	status,0,c
  5957   001B18  EF90  F00D         	goto	u3261
  5958   001B1C  EF92  F00D         	goto	u3260
  5959   001B20                     u3261:
  5960   001B20  EFE4  F00D         	goto	l4628
  5961   001B24                     u3260:
  5962   001B24                     
  5963                           ;mcc_generated_files/touch/mtouch_sensor.c: 668:     {;mcc_generated_files/touch/mtouch_
      +                          sensor.c: 669:         if(sensor_medianBuffer[sensor][1]>=sensor_medianBuffer[sensor][2]
      +                          )
  5964   001B24  501B               	movf	medianFilter@sensor^0,w,c
  5965   001B26  0D06               	mullw	6
  5966   001B28  50F3               	movf	243,w,c
  5967   001B2A  0F64               	addlw	low (_sensor_medianBuffer+4)
  5968   001B2C  6ED9               	movwf	fsr2l,c
  5969   001B2E  6ADA               	clrf	fsr2h,c
  5970   001B30  501B               	movf	medianFilter@sensor^0,w,c
  5971   001B32  0D06               	mullw	6
  5972   001B34  50F3               	movf	243,w,c
  5973   001B36  0F62               	addlw	low (_sensor_medianBuffer+2)
  5974   001B38  6EE1               	movwf	fsr1l,c
  5975   001B3A  6AE2               	clrf	fsr1h,c
  5976   001B3C  50DE               	movf	postinc2,w,c
  5977   001B3E  5CE6               	subwf	postinc1,w,c
  5978   001B40  50DE               	movf	postinc2,w,c
  5979   001B42  58E6               	subwfb	postinc1,w,c
  5980   001B44  A0D8               	btfss	status,0,c
  5981   001B46  EFA7  F00D         	goto	u3271
  5982   001B4A  EFA9  F00D         	goto	u3270
  5983   001B4E                     u3271:
  5984   001B4E  EFB5  F00D         	goto	l4616
  5985   001B52                     u3270:
  5986   001B52                     l4610:
  5987                           
  5988                           ;mcc_generated_files/touch/mtouch_sensor.c: 670:             return sensor_medianBuffer[
      +                          sensor][1];
  5989   001B52  501B               	movf	medianFilter@sensor^0,w,c
  5990   001B54  0D06               	mullw	6
  5991   001B56  50F3               	movf	243,w,c
  5992   001B58  0F62               	addlw	low (_sensor_medianBuffer+2)
  5993   001B5A  6ED9               	movwf	fsr2l,c
  5994   001B5C  6ADA               	clrf	fsr2h,c
  5995   001B5E  CFDE F015          	movff	postinc2,?_medianFilter
  5996   001B62  CFDD F016          	movff	postdec2,?_medianFilter+1
  5997   001B66  EF16  F00E         	goto	l1253
  5998   001B6A                     l4616:
  5999                           
  6000                           ;mcc_generated_files/touch/mtouch_sensor.c: 672:         {;mcc_generated_files/touch/mto
      +                          uch_sensor.c: 673:             if(sensor_medianBuffer[sensor][0]>=sensor_medianBuffer[se
      +                          nsor][2])
  6001   001B6A  501B               	movf	medianFilter@sensor^0,w,c
  6002   001B6C  0D06               	mullw	6
  6003   001B6E  50F3               	movf	243,w,c
  6004   001B70  0F64               	addlw	low (_sensor_medianBuffer+4)
  6005   001B72  6ED9               	movwf	fsr2l,c
  6006   001B74  6ADA               	clrf	fsr2h,c
  6007   001B76  501B               	movf	medianFilter@sensor^0,w,c
  6008   001B78  0D06               	mullw	6
  6009   001B7A  50F3               	movf	243,w,c
  6010   001B7C  0F60               	addlw	low _sensor_medianBuffer
  6011   001B7E  6EE1               	movwf	fsr1l,c
  6012   001B80  6AE2               	clrf	fsr1h,c
  6013   001B82  50DE               	movf	postinc2,w,c
  6014   001B84  5CE6               	subwf	postinc1,w,c
  6015   001B86  50DE               	movf	postinc2,w,c
  6016   001B88  58E6               	subwfb	postinc1,w,c
  6017   001B8A  A0D8               	btfss	status,0,c
  6018   001B8C  EFCA  F00D         	goto	u3281
  6019   001B90  EFCC  F00D         	goto	u3280
  6020   001B94                     u3281:
  6021   001B94  EFD8  F00D         	goto	l4624
  6022   001B98                     u3280:
  6023   001B98                     l4618:
  6024                           
  6025                           ;mcc_generated_files/touch/mtouch_sensor.c: 674:                 return sensor_medianBuf
      +                          fer[sensor][2];
  6026   001B98  501B               	movf	medianFilter@sensor^0,w,c
  6027   001B9A  0D06               	mullw	6
  6028   001B9C  50F3               	movf	243,w,c
  6029   001B9E  0F64               	addlw	low (_sensor_medianBuffer+4)
  6030   001BA0  6ED9               	movwf	fsr2l,c
  6031   001BA2  6ADA               	clrf	fsr2h,c
  6032   001BA4  CFDE F015          	movff	postinc2,?_medianFilter
  6033   001BA8  CFDD F016          	movff	postdec2,?_medianFilter+1
  6034   001BAC  EF16  F00E         	goto	l1253
  6035   001BB0                     l4624:
  6036                           
  6037                           ;mcc_generated_files/touch/mtouch_sensor.c: 676:                 return sensor_medianBuf
      +                          fer[sensor][0];
  6038   001BB0  501B               	movf	medianFilter@sensor^0,w,c
  6039   001BB2  0D06               	mullw	6
  6040   001BB4  50F3               	movf	243,w,c
  6041   001BB6  0F60               	addlw	low _sensor_medianBuffer
  6042   001BB8  6ED9               	movwf	fsr2l,c
  6043   001BBA  6ADA               	clrf	fsr2h,c
  6044   001BBC  CFDE F015          	movff	postinc2,?_medianFilter
  6045   001BC0  CFDD F016          	movff	postdec2,?_medianFilter+1
  6046   001BC4  EF16  F00E         	goto	l1253
  6047   001BC8                     l4628:
  6048                           
  6049                           ;mcc_generated_files/touch/mtouch_sensor.c: 681:     {;mcc_generated_files/touch/mtouch_
      +                          sensor.c: 682:         if(sensor_medianBuffer[sensor][0]>=sensor_medianBuffer[sensor][2]
      +                          )
  6050   001BC8  501B               	movf	medianFilter@sensor^0,w,c
  6051   001BCA  0D06               	mullw	6
  6052   001BCC  50F3               	movf	243,w,c
  6053   001BCE  0F64               	addlw	low (_sensor_medianBuffer+4)
  6054   001BD0  6ED9               	movwf	fsr2l,c
  6055   001BD2  6ADA               	clrf	fsr2h,c
  6056   001BD4  501B               	movf	medianFilter@sensor^0,w,c
  6057   001BD6  0D06               	mullw	6
  6058   001BD8  50F3               	movf	243,w,c
  6059   001BDA  0F60               	addlw	low _sensor_medianBuffer
  6060   001BDC  6EE1               	movwf	fsr1l,c
  6061   001BDE  6AE2               	clrf	fsr1h,c
  6062   001BE0  50DE               	movf	postinc2,w,c
  6063   001BE2  5CE6               	subwf	postinc1,w,c
  6064   001BE4  50DE               	movf	postinc2,w,c
  6065   001BE6  58E6               	subwfb	postinc1,w,c
  6066   001BE8  A0D8               	btfss	status,0,c
  6067   001BEA  EFF9  F00D         	goto	u3291
  6068   001BEE  EFFB  F00D         	goto	u3290
  6069   001BF2                     u3291:
  6070   001BF2  EFFD  F00D         	goto	l4636
  6071   001BF6                     u3290:
  6072   001BF6  EFD8  F00D         	goto	l4624
  6073   001BFA                     l4636:
  6074                           
  6075                           ;mcc_generated_files/touch/mtouch_sensor.c: 685:         {;mcc_generated_files/touch/mto
      +                          uch_sensor.c: 686:             if(sensor_medianBuffer[sensor][1]>=sensor_medianBuffer[se
      +                          nsor][2])
  6076   001BFA  501B               	movf	medianFilter@sensor^0,w,c
  6077   001BFC  0D06               	mullw	6
  6078   001BFE  50F3               	movf	243,w,c
  6079   001C00  0F64               	addlw	low (_sensor_medianBuffer+4)
  6080   001C02  6ED9               	movwf	fsr2l,c
  6081   001C04  6ADA               	clrf	fsr2h,c
  6082   001C06  501B               	movf	medianFilter@sensor^0,w,c
  6083   001C08  0D06               	mullw	6
  6084   001C0A  50F3               	movf	243,w,c
  6085   001C0C  0F62               	addlw	low (_sensor_medianBuffer+2)
  6086   001C0E  6EE1               	movwf	fsr1l,c
  6087   001C10  6AE2               	clrf	fsr1h,c
  6088   001C12  50DE               	movf	postinc2,w,c
  6089   001C14  5CE6               	subwf	postinc1,w,c
  6090   001C16  50DE               	movf	postinc2,w,c
  6091   001C18  58E6               	subwfb	postinc1,w,c
  6092   001C1A  A0D8               	btfss	status,0,c
  6093   001C1C  EF12  F00E         	goto	u3301
  6094   001C20  EF14  F00E         	goto	u3300
  6095   001C24                     u3301:
  6096   001C24  EFA9  F00D         	goto	l4610
  6097   001C28                     u3300:
  6098   001C28  EFCC  F00D         	goto	l4618
  6099   001C2C                     l1253:
  6100   001C2C  0012               	return		;funcret
  6101   001C2E                     __end_of_medianFilter:
  6102                           	callstack 0
  6103                           
  6104 ;; *************** function _Sensor_DefaultCallback *****************
  6105 ;; Defined at:
  6106 ;;		line 712 in file "mcc_generated_files/touch/mtouch_sensor.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;  sensor          1    wreg     enum E13072
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;  sensor          1    0[COMRAM] enum E13072
  6111 ;; Return value:  Size  Location     Type
  6112 ;;                  1    wreg      void 
  6113 ;; Registers used:
  6114 ;;		wreg
  6115 ;; Tracked objects:
  6116 ;;		On entry : 0/0
  6117 ;;		On exit  : 0/0
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6124 ;;Total ram usage:        0 bytes
  6125 ;; Hardware stack levels used: 1
  6126 ;; Hardware stack levels required when called: 6
  6127 ;; This function calls:
  6128 ;;		Nothing
  6129 ;; This function is called by:
  6130 ;;		_MTOUCH_Sensor_postAcquisitionProcess
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134                           	psect	text42
  6135   003DE4                     __ptext42:
  6136                           	callstack 0
  6137   003DE4                     _Sensor_DefaultCallback:
  6138                           	callstack 21
  6139   003DE4  0012               	return		;funcret
  6140   003DE6                     __end_of_Sensor_DefaultCallback:
  6141                           	callstack 0
  6142                           
  6143 ;; *************** function _MTOUCH_Sensor_isSamplingComplete *****************
  6144 ;; Defined at:
  6145 ;;		line 329 in file "mcc_generated_files/touch/mtouch_sensor.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;		None
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;  sensor          1   31[COMRAM] enum E13072
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  1    wreg      _Bool 
  6152 ;; Registers used:
  6153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6160 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6162 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6163 ;;Total ram usage:        1 bytes
  6164 ;; Hardware stack levels used: 1
  6165 ;; Hardware stack levels required when called: 8
  6166 ;; This function calls:
  6167 ;;		_MTOUCH_Sensor_isEnabled
  6168 ;;		_MTOUCH_Sensor_isSampling
  6169 ;;		_MTOUCH_Sensor_wasSampled
  6170 ;;		_Sensor_scheduleNextScan
  6171 ;; This function is called by:
  6172 ;;		_MTOUCH_Sensor_SampleAll
  6173 ;; This function uses a non-reentrant model
  6174 ;;
  6175                           
  6176                           	psect	text43
  6177   003392                     __ptext43:
  6178                           	callstack 0
  6179   003392                     _MTOUCH_Sensor_isSamplingComplete:
  6180                           	callstack 20
  6181   003392                     
  6182                           ;mcc_generated_files/touch/mtouch_sensor.c: 331:     enum mtouch_sensor_names sensor;;mc
      +                          c_generated_files/touch/mtouch_sensor.c: 333:     for (sensor = 0; sensor < 5u; sensor++
      +                          )
  6183   003392  0E00               	movlw	0
  6184   003394  6E20               	movwf	MTOUCH_Sensor_isSamplingComplete@sensor^0,c
  6185   003396                     l6570:
  6186                           
  6187                           ;mcc_generated_files/touch/mtouch_sensor.c: 334:     {;mcc_generated_files/touch/mtouch_
      +                          sensor.c: 335:         if(MTOUCH_Sensor_wasSampled(sensor)==0 && MTOUCH_Sensor_isEnabled
      +                          (sensor))
  6188   003396  5020               	movf	MTOUCH_Sensor_isSamplingComplete@sensor^0,w,c
  6189   003398  ECA6  F01B         	call	_MTOUCH_Sensor_wasSampled
  6190   00339C  0900               	iorlw	0
  6191   00339E  A4D8               	btfss	status,2,c
  6192   0033A0  EFD4  F019         	goto	u6221
  6193   0033A4  EFD6  F019         	goto	u6220
  6194   0033A8                     u6221:
  6195   0033A8  EFF0  F019         	goto	l6582
  6196   0033AC                     u6220:
  6197   0033AC  5020               	movf	MTOUCH_Sensor_isSamplingComplete@sensor^0,w,c
  6198   0033AE  ECE0  F01B         	call	_MTOUCH_Sensor_isEnabled
  6199   0033B2  0900               	iorlw	0
  6200   0033B4  B4D8               	btfsc	status,2,c
  6201   0033B6  EFDF  F019         	goto	u6231
  6202   0033BA  EFE1  F019         	goto	u6230
  6203   0033BE                     u6231:
  6204   0033BE  EFF0  F019         	goto	l6582
  6205   0033C2                     u6230:
  6206   0033C2                     
  6207                           ;mcc_generated_files/touch/mtouch_sensor.c: 336:         {;mcc_generated_files/touch/mto
      +                          uch_sensor.c: 337:             if(MTOUCH_Sensor_isSampling() == 0)
  6208   0033C2  ECEF  F01E         	call	_MTOUCH_Sensor_isSampling	;wreg free
  6209   0033C6  0900               	iorlw	0
  6210   0033C8  A4D8               	btfss	status,2,c
  6211   0033CA  EFE9  F019         	goto	u6241
  6212   0033CE  EFEB  F019         	goto	u6240
  6213   0033D2                     u6241:
  6214   0033D2  EFED  F019         	goto	l6578
  6215   0033D6                     u6240:
  6216   0033D6                     
  6217                           ;mcc_generated_files/touch/mtouch_sensor.c: 338:             {;mcc_generated_files/touch
      +                          /mtouch_sensor.c: 339:                 Sensor_scheduleNextScan();
  6218   0033D6  EC17  F00E         	call	_Sensor_scheduleNextScan	;wreg free
  6219   0033DA                     l6578:
  6220                           
  6221                           ;mcc_generated_files/touch/mtouch_sensor.c: 341:             return 0;
  6222   0033DA  0E00               	movlw	0
  6223   0033DC  EFFA  F019         	goto	l1159
  6224   0033E0                     l6582:
  6225                           
  6226                           ;mcc_generated_files/touch/mtouch_sensor.c: 343:     }
  6227   0033E0  2A20               	incf	MTOUCH_Sensor_isSamplingComplete@sensor^0,f,c
  6228   0033E2  0E04               	movlw	4
  6229   0033E4  6420               	cpfsgt	MTOUCH_Sensor_isSamplingComplete@sensor^0,c
  6230   0033E6  EFF7  F019         	goto	u6251
  6231   0033EA  EFF9  F019         	goto	u6250
  6232   0033EE                     u6251:
  6233   0033EE  EFCB  F019         	goto	l6570
  6234   0033F2                     u6250:
  6235   0033F2                     
  6236                           ;mcc_generated_files/touch/mtouch_sensor.c: 345:     return 1;
  6237   0033F2  0E01               	movlw	1
  6238   0033F4                     l1159:
  6239   0033F4  0012               	return		;funcret
  6240   0033F6                     __end_of_MTOUCH_Sensor_isSamplingComplete:
  6241                           	callstack 0
  6242                           
  6243 ;; *************** function _Sensor_scheduleNextScan *****************
  6244 ;; Defined at:
  6245 ;;		line 405 in file "mcc_generated_files/touch/mtouch_sensor.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;		None
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;  sensor          1   30[COMRAM] PTR struct .
  6250 ;;		 -> mtouch_sensor(50), 
  6251 ;;  skipScan        1   29[COMRAM] _Bool 
  6252 ;;  state           1   28[COMRAM] _Bool 
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  1    wreg      void 
  6255 ;; Registers used:
  6256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6263 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6264 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6265 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6266 ;;Total ram usage:        7 bytes
  6267 ;; Hardware stack levels used: 1
  6268 ;; Hardware stack levels required when called: 7
  6269 ;; This function calls:
  6270 ;;		_MTOUCH_Sensor_isEnabled
  6271 ;;		_MTOUCH_Sensor_wasSampled
  6272 ;;		_Sensor_SetTrisBit
  6273 ;;		_Sensor_isCalibrated
  6274 ;;		_Sensor_isCalibratingAcqTime
  6275 ;; This function is called by:
  6276 ;;		_MTOUCH_Sensor_isSamplingComplete
  6277 ;; This function uses a non-reentrant model
  6278 ;;
  6279                           
  6280                           	psect	text44
  6281   001C2E                     __ptext44:
  6282                           	callstack 0
  6283   001C2E                     _Sensor_scheduleNextScan:
  6284                           	callstack 20
  6285   001C2E                     
  6286                           ;mcc_generated_files/touch/mtouch_sensor.c: 407:     mtouch_sensor_t* sensor;;mcc_genera
      +                          ted_files/touch/mtouch_sensor.c: 408:     _Bool skipScan = (_Bool)0;
  6287   001C2E  0E00               	movlw	0
  6288   001C30  6E1E               	movwf	Sensor_scheduleNextScan@skipScan^0,c
  6289                           
  6290                           ;mcc_generated_files/touch/mtouch_sensor.c: 409:     _Bool state = (_Bool)GIE;
  6291   001C32  0E00               	movlw	0
  6292   001C34  BEF2               	btfsc	4082,7,c	;volatile
  6293   001C36  0E01               	movlw	1
  6294   001C38  6E1D               	movwf	Sensor_scheduleNextScan@state^0,c
  6295                           
  6296                           ;mcc_generated_files/touch/mtouch_sensor.c: 412:     while(MTOUCH_Sensor_wasSampled(curr
      +                          entScanSensor) || !MTOUCH_Sensor_isEnabled(currentScanSensor))
  6297   001C3A  EF31  F00E         	goto	l6398
  6298   001C3E                     l6394:
  6299                           
  6300                           ;mcc_generated_files/touch/mtouch_sensor.c: 413:     {;mcc_generated_files/touch/mtouch_
      +                          sensor.c: 414:         if(++currentScanSensor == 5u)
  6301   001C3E  2A45               	incf	_currentScanSensor^0,f,c
  6302   001C40  0E05               	movlw	5
  6303   001C42  1845               	xorwf	_currentScanSensor^0,w,c
  6304   001C44  A4D8               	btfss	status,2,c
  6305   001C46  EF27  F00E         	goto	u5951
  6306   001C4A  EF29  F00E         	goto	u5950
  6307   001C4E                     u5951:
  6308   001C4E  EF31  F00E         	goto	l6398
  6309   001C52                     u5950:
  6310   001C52                     
  6311                           ;mcc_generated_files/touch/mtouch_sensor.c: 415:         {;mcc_generated_files/touch/mto
      +                          uch_sensor.c: 416:             currentScanSensor = 0;
  6312   001C52  0E00               	movlw	0
  6313   001C54  6E45               	movwf	_currentScanSensor^0,c
  6314                           
  6315                           ;mcc_generated_files/touch/mtouch_sensor.c: 417:             sampling_flag = 0;
  6316   001C56  0E00               	movlw	0
  6317   001C58  6E44               	movwf	_sampling_flag^0,c
  6318                           
  6319                           ;mcc_generated_files/touch/mtouch_sensor.c: 418:             skipScan = 1;
  6320   001C5A  0E01               	movlw	1
  6321   001C5C  6E1E               	movwf	Sensor_scheduleNextScan@skipScan^0,c
  6322                           
  6323                           ;mcc_generated_files/touch/mtouch_sensor.c: 419:             break;
  6324   001C5E  EF47  F00E         	goto	l6402
  6325   001C62                     l6398:
  6326                           
  6327                           ;mcc_generated_files/touch/mtouch_sensor.c: 412:     while(MTOUCH_Sensor_wasSampled(curr
      +                          entScanSensor) || !MTOUCH_Sensor_isEnabled(currentScanSensor))
  6328   001C62  5045               	movf	_currentScanSensor^0,w,c
  6329   001C64  ECA6  F01B         	call	_MTOUCH_Sensor_wasSampled
  6330   001C68  0900               	iorlw	0
  6331   001C6A  A4D8               	btfss	status,2,c
  6332   001C6C  EF3A  F00E         	goto	u5961
  6333   001C70  EF3C  F00E         	goto	u5960
  6334   001C74                     u5961:
  6335   001C74  EF1F  F00E         	goto	l6394
  6336   001C78                     u5960:
  6337   001C78  5045               	movf	_currentScanSensor^0,w,c
  6338   001C7A  ECE0  F01B         	call	_MTOUCH_Sensor_isEnabled
  6339   001C7E  0900               	iorlw	0
  6340   001C80  B4D8               	btfsc	status,2,c
  6341   001C82  EF45  F00E         	goto	u5971
  6342   001C86  EF47  F00E         	goto	u5970
  6343   001C8A                     u5971:
  6344   001C8A  EF1F  F00E         	goto	l6394
  6345   001C8E                     u5970:
  6346   001C8E                     l6402:
  6347                           
  6348                           ;mcc_generated_files/touch/mtouch_sensor.c: 424:     if(skipScan==0)
  6349   001C8E  501E               	movf	Sensor_scheduleNextScan@skipScan^0,w,c
  6350   001C90  A4D8               	btfss	status,2,c
  6351   001C92  EF4D  F00E         	goto	u5981
  6352   001C96  EF4F  F00E         	goto	u5980
  6353   001C9A                     u5981:
  6354   001C9A  EFD9  F00E         	goto	l1190
  6355   001C9E                     u5980:
  6356   001C9E                     
  6357                           ;mcc_generated_files/touch/mtouch_sensor.c: 425:     {;mcc_generated_files/touch/mtouch_
      +                          sensor.c: 426:         sensor = &mtouch_sensor[currentScanSensor];
  6358   001C9E  5045               	movf	_currentScanSensor^0,w,c
  6359   001CA0  0D0A               	mullw	10
  6360   001CA2  50F3               	movf	243,w,c
  6361   001CA4  0F9B               	addlw	low _mtouch_sensor
  6362   001CA6  6E1F               	movwf	Sensor_scheduleNextScan@sensor^0,c
  6363   001CA8                     
  6364                           ;mcc_generated_files/touch/mtouch_sensor.c: 427:         if(Sensor_isCalibrated(sensor))
  6365   001CA8  C01F  F015         	movff	Sensor_scheduleNextScan@sensor,Sensor_isCalibrated@sensor
  6366   001CAC  EC02  F01E         	call	_Sensor_isCalibrated	;wreg free
  6367   001CB0  0900               	iorlw	0
  6368   001CB2  B4D8               	btfsc	status,2,c
  6369   001CB4  EF5E  F00E         	goto	u5991
  6370   001CB8  EF60  F00E         	goto	u5990
  6371   001CBC                     u5991:
  6372   001CBC  EF71  F00E         	goto	l6410
  6373   001CC0                     u5990:
  6374   001CC0                     
  6375                           ;mcc_generated_files/touch/mtouch_sensor.c: 428:         {;mcc_generated_files/touch/mto
      +                          uch_sensor.c: 429:             ADACQ = (mtouch_sensor_time_t)sensor->acquisition_time;
  6376   001CC0  501F               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  6377   001CC2  6ED9               	movwf	fsr2l,c
  6378   001CC4  6ADA               	clrf	fsr2h,c
  6379   001CC6  0E03               	movlw	3
  6380   001CC8  26D9               	addwf	fsr2l,f,c
  6381   001CCA  50DF               	movf	indf2,w,c
  6382   001CCC  010F               	movlb	15	; () banked
  6383   001CCE  6F57               	movwf	87,b	;volatile
  6384                           
  6385                           ;mcc_generated_files/touch/mtouch_sensor.c: 430:             ADPRE = (mtouch_sensor_time
      +                          _t)sensor->precharge_time;
  6386   001CD0  501F               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  6387   001CD2  6ED9               	movwf	fsr2l,c
  6388   001CD4  6ADA               	clrf	fsr2h,c
  6389   001CD6  0E02               	movlw	2
  6390   001CD8  26D9               	addwf	fsr2l,f,c
  6391   001CDA  50DF               	movf	indf2,w,c
  6392   001CDC  6F59               	movwf	89,b	;volatile
  6393                           
  6394                           ;mcc_generated_files/touch/mtouch_sensor.c: 431:         }
  6395   001CDE  EF93  F00E         	goto	l6416
  6396   001CE2                     l6410:
  6397                           
  6398                           ;mcc_generated_files/touch/mtouch_sensor.c: 433:         {;mcc_generated_files/touch/mto
      +                          uch_sensor.c: 434:             if(Sensor_isCalibratingAcqTime(sensor))
  6399   001CE2  C01F  F015         	movff	Sensor_scheduleNextScan@sensor,Sensor_isCalibratingAcqTime@sensor
  6400   001CE6  ECF3  F01D         	call	_Sensor_isCalibratingAcqTime	;wreg free
  6401   001CEA  0900               	iorlw	0
  6402   001CEC  B4D8               	btfsc	status,2,c
  6403   001CEE  EF7B  F00E         	goto	u6001
  6404   001CF2  EF7D  F00E         	goto	u6000
  6405   001CF6                     u6001:
  6406   001CF6  EF8E  F00E         	goto	l6414
  6407   001CFA                     u6000:
  6408   001CFA                     
  6409                           ;mcc_generated_files/touch/mtouch_sensor.c: 435:             {;mcc_generated_files/touch
      +                          /mtouch_sensor.c: 436:                 ADPRE = (mtouch_sensor_time_t)sensor->precharge_t
      +                          ime;
  6410   001CFA  501F               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  6411   001CFC  6ED9               	movwf	fsr2l,c
  6412   001CFE  6ADA               	clrf	fsr2h,c
  6413   001D00  0E02               	movlw	2
  6414   001D02  26D9               	addwf	fsr2l,f,c
  6415   001D04  50DF               	movf	indf2,w,c
  6416   001D06  010F               	movlb	15	; () banked
  6417   001D08  6F59               	movwf	89,b	;volatile
  6418                           
  6419                           ;mcc_generated_files/touch/mtouch_sensor.c: 437:                 ADACQ = (mtouch_sensor_
      +                          time_t)sensor->acquisition_time;
  6420   001D0A  501F               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  6421   001D0C  6ED9               	movwf	fsr2l,c
  6422   001D0E  6ADA               	clrf	fsr2h,c
  6423   001D10  0E03               	movlw	3
  6424   001D12  26D9               	addwf	fsr2l,f,c
  6425   001D14  50DF               	movf	indf2,w,c
  6426   001D16  6F57               	movwf	87,b	;volatile
  6427                           
  6428                           ;mcc_generated_files/touch/mtouch_sensor.c: 438:             }
  6429   001D18  EF93  F00E         	goto	l6416
  6430   001D1C                     l6414:
  6431                           
  6432                           ;mcc_generated_files/touch/mtouch_sensor.c: 440:             {;mcc_generated_files/touch
      +                          /mtouch_sensor.c: 441:                 ADPRE = ((mtouch_sensor_time_t)((mtouch_sensor_ti
      +                          me_t)48 << (uint8_t)2));
  6433   001D1C  0EC0               	movlw	192
  6434   001D1E  010F               	movlb	15	; () banked
  6435   001D20  6F59               	movwf	89,b	;volatile
  6436                           
  6437                           ;mcc_generated_files/touch/mtouch_sensor.c: 442:                 ADACQ = ((mtouch_sensor
      +                          _time_t)((mtouch_sensor_time_t)48 << (uint8_t)2));
  6438   001D22  0EC0               	movlw	192
  6439   001D24  6F57               	movwf	87,b	;volatile
  6440   001D26                     l6416:
  6441                           
  6442                           ; BSR set to: 15
  6443                           ;mcc_generated_files/touch/mtouch_sensor.c: 446:         ADPRE +=(uint8_t)sample_delay;
  6444   001D26  5040               	movf	_sample_delay^0,w,c	;volatile
  6445   001D28  2759               	addwf	89,f,b	;volatile
  6446   001D2A                     
  6447                           ; BSR set to: 15
  6448                           ;mcc_generated_files/touch/mtouch_sensor.c: 447:         ADPCH = (uint8_t)sensor->adpch;
  6449   001D2A  501F               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  6450   001D2C  6ED9               	movwf	fsr2l,c
  6451   001D2E  6ADA               	clrf	fsr2h,c
  6452   001D30  0E01               	movlw	1
  6453   001D32  26D9               	addwf	fsr2l,f,c
  6454   001D34  50DF               	movf	indf2,w,c
  6455   001D36  6F5A               	movwf	90,b	;volatile
  6456   001D38                     
  6457                           ; BSR set to: 15
  6458                           ;mcc_generated_files/touch/mtouch_sensor.c: 448:         ADRPT = (uint8_t)(sensor->overs
      +                          ampling>>1);
  6459   001D38  501F               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  6460   001D3A  6ED9               	movwf	fsr2l,c
  6461   001D3C  6ADA               	clrf	fsr2h,c
  6462   001D3E  0E04               	movlw	4
  6463   001D40  26D9               	addwf	fsr2l,f,c
  6464   001D42  CFDE F019          	movff	postinc2,??_Sensor_scheduleNextScan
  6465   001D46  CFDD F01A          	movff	postdec2,??_Sensor_scheduleNextScan+1
  6466   001D4A  90D8               	bcf	status,0,c
  6467   001D4C  301A               	rrcf	(??_Sensor_scheduleNextScan+1)^0,w,c
  6468   001D4E  6E1C               	movwf	(??_Sensor_scheduleNextScan+3)^0,c
  6469   001D50  3019               	rrcf	??_Sensor_scheduleNextScan^0,w,c
  6470   001D52  6E1B               	movwf	(??_Sensor_scheduleNextScan+2)^0,c
  6471   001D54  501B               	movf	(??_Sensor_scheduleNextScan+2)^0,w,c
  6472   001D56  6E61               	movwf	97,c	;volatile
  6473   001D58                     
  6474                           ; BSR set to: 15
  6475                           ;mcc_generated_files/touch/mtouch_sensor.c: 449:         ADCAP = (uint8_t)sensor->addcap
      +                          ;
  6476   001D58  501F               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  6477   001D5A  6ED9               	movwf	fsr2l,c
  6478   001D5C  6ADA               	clrf	fsr2h,c
  6479   001D5E  0E06               	movlw	6
  6480   001D60  26D9               	addwf	fsr2l,f,c
  6481   001D62  50DF               	movf	indf2,w,c
  6482   001D64  6F58               	movwf	88,b	;volatile
  6483   001D66                     
  6484                           ; BSR set to: 15
  6485                           ;mcc_generated_files/touch/mtouch_sensor.c: 450:         ADCON0bits.ADON = 1;
  6486   001D66  8F5B               	bsf	91,7,b	;volatile
  6487   001D68                     
  6488                           ; BSR set to: 15
  6489                           ;mcc_generated_files/touch/mtouch_sensor.c: 451:         sampling_flag= 1;
  6490   001D68  0E01               	movlw	1
  6491   001D6A  6E44               	movwf	_sampling_flag^0,c
  6492   001D6C                     
  6493                           ; BSR set to: 15
  6494                           ;mcc_generated_files/touch/mtouch_sensor.c: 452:         Sensor_SetTrisBit(currentScanSe
      +                          nsor,1);
  6495   001D6C  0E01               	movlw	1
  6496   001D6E  6E15               	movwf	Sensor_SetTrisBit@TrisBit^0,c
  6497   001D70  5045               	movf	_currentScanSensor^0,w,c
  6498   001D72  EC21  F018         	call	_Sensor_SetTrisBit
  6499   001D76                     
  6500                           ;mcc_generated_files/touch/mtouch_sensor.c: 453:         GIE = 0;
  6501   001D76  9EF2               	bcf	4082,7,c	;volatile
  6502   001D78                     
  6503                           ;mcc_generated_files/touch/mtouch_sensor.c: 454:         ADCON0bits.GO = 1;
  6504   001D78  010F               	movlb	15	; () banked
  6505   001D7A  815B               	bsf	91,0,b	;volatile
  6506   001D7C                     
  6507                           ; BSR set to: 15
  6508                           ;mcc_generated_files/touch/mtouch_sensor.c: 455:         ADACC = ((mtouch_sensor_packets
      +                          ample_t)(sensor->oversampling)<<9);
  6509   001D7C  501F               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  6510   001D7E  6ED9               	movwf	fsr2l,c
  6511   001D80  6ADA               	clrf	fsr2h,c
  6512   001D82  0E04               	movlw	4
  6513   001D84  26D9               	addwf	fsr2l,f,c
  6514   001D86  CFDE F019          	movff	postinc2,??_Sensor_scheduleNextScan
  6515   001D8A  CFDD F01A          	movff	postdec2,??_Sensor_scheduleNextScan+1
  6516   001D8E  0E09               	movlw	9
  6517   001D90                     u6015:
  6518   001D90  90D8               	bcf	status,0,c
  6519   001D92  3619               	rlcf	??_Sensor_scheduleNextScan^0,f,c
  6520   001D94  361A               	rlcf	(??_Sensor_scheduleNextScan+1)^0,f,c
  6521   001D96  2EE8               	decfsz	wreg,f,c
  6522   001D98  EFC8  F00E         	goto	u6015
  6523   001D9C  C019  FF6B         	movff	??_Sensor_scheduleNextScan,3947	;volatile
  6524   001DA0  C01A  FF6C         	movff	??_Sensor_scheduleNextScan+1,3948	;volatile
  6525   001DA4                     
  6526                           ; BSR set to: 15
  6527                           ;mcc_generated_files/touch/mtouch_sensor.c: 456:         GIE = state;
  6528   001DA4  B01D               	btfsc	Sensor_scheduleNextScan@state^0,0,c
  6529   001DA6  D002               	bra	u6025
  6530   001DA8  9EF2               	bcf	4082,7,c	;volatile
  6531   001DAA  D001               	bra	u6026
  6532   001DAC                     u6025:
  6533   001DAC  8EF2               	bsf	4082,7,c	;volatile
  6534   001DAE                     u6026:
  6535   001DAE                     
  6536                           ;mcc_generated_files/touch/mtouch_sensor.c: 457:         scanInterrupted = 0;
  6537   001DAE  0E00               	movlw	0
  6538   001DB0  6E43               	movwf	_scanInterrupted^0,c	;volatile
  6539   001DB2                     l1190:
  6540   001DB2  0012               	return		;funcret
  6541   001DB4                     __end_of_Sensor_scheduleNextScan:
  6542                           	callstack 0
  6543                           
  6544 ;; *************** function _Sensor_isCalibratingAcqTime *****************
  6545 ;; Defined at:
  6546 ;;		line 829 in file "mcc_generated_files/touch/mtouch_sensor.c"
  6547 ;; Parameters:    Size  Location     Type
  6548 ;;  sensor          1   20[COMRAM] PTR struct .
  6549 ;;		 -> mtouch_sensor(50), 
  6550 ;; Auto vars:     Size  Location     Type
  6551 ;;		None
  6552 ;; Return value:  Size  Location     Type
  6553 ;;                  1    wreg      _Bool 
  6554 ;; Registers used:
  6555 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6556 ;; Tracked objects:
  6557 ;;		On entry : 0/0
  6558 ;;		On exit  : 0/0
  6559 ;;		Unchanged: 0/0
  6560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6561 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6564 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6565 ;;Total ram usage:        1 bytes
  6566 ;; Hardware stack levels used: 1
  6567 ;; Hardware stack levels required when called: 6
  6568 ;; This function calls:
  6569 ;;		Nothing
  6570 ;; This function is called by:
  6571 ;;		_Sensor_scheduleNextScan
  6572 ;;		_Sensor_autoCalibration
  6573 ;; This function uses a non-reentrant model
  6574 ;;
  6575                           
  6576                           	psect	text45
  6577   003BE6                     __ptext45:
  6578                           	callstack 0
  6579   003BE6                     _Sensor_isCalibratingAcqTime:
  6580                           	callstack 20
  6581   003BE6                     
  6582                           ;mcc_generated_files/touch/mtouch_sensor.c: 829: static __attribute__((inline)) _Bool Se
      +                          nsor_isCalibratingAcqTime(mtouch_sensor_t* sensor);mcc_generated_files/touch/mtouch_sens
      +                          or.c: 830: {;mcc_generated_files/touch/mtouch_sensor.c: 831:     return (_Bool)sensor->a
      +                          cqTime_cal;
  6583   003BE6  5015               	movf	Sensor_isCalibratingAcqTime@sensor^0,w,c
  6584   003BE8  6ED9               	movwf	fsr2l,c
  6585   003BEA  6ADA               	clrf	fsr2h,c
  6586   003BEC  0E09               	movlw	9
  6587   003BEE  26D9               	addwf	fsr2l,f,c
  6588   003BF0  B8DF               	btfsc	indf2,4,c
  6589   003BF2  EFFD  F01D         	goto	u3241
  6590   003BF6  EF00  F01E         	goto	u3240
  6591   003BFA                     u3241:
  6592   003BFA  0E01               	movlw	1
  6593   003BFC  EF01  F01E         	goto	u3246
  6594   003C00                     u3240:
  6595   003C00  0E00               	movlw	0
  6596   003C02                     u3246:
  6597   003C02  0012               	return		;funcret
  6598   003C04                     __end_of_Sensor_isCalibratingAcqTime:
  6599                           	callstack 0
  6600                           
  6601 ;; *************** function _Sensor_isCalibrated *****************
  6602 ;; Defined at:
  6603 ;;		line 811 in file "mcc_generated_files/touch/mtouch_sensor.c"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;  sensor          1   20[COMRAM] PTR struct .
  6606 ;;		 -> mtouch_sensor(50), 
  6607 ;; Auto vars:     Size  Location     Type
  6608 ;;		None
  6609 ;; Return value:  Size  Location     Type
  6610 ;;                  1    wreg      _Bool 
  6611 ;; Registers used:
  6612 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6613 ;; Tracked objects:
  6614 ;;		On entry : 0/0
  6615 ;;		On exit  : 0/0
  6616 ;;		Unchanged: 0/0
  6617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6618 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6621 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6622 ;;Total ram usage:        1 bytes
  6623 ;; Hardware stack levels used: 1
  6624 ;; Hardware stack levels required when called: 6
  6625 ;; This function calls:
  6626 ;;		Nothing
  6627 ;; This function is called by:
  6628 ;;		_Sensor_scheduleNextScan
  6629 ;; This function uses a non-reentrant model
  6630 ;;
  6631                           
  6632                           	psect	text46
  6633   003C04                     __ptext46:
  6634                           	callstack 0
  6635   003C04                     _Sensor_isCalibrated:
  6636                           	callstack 20
  6637   003C04                     
  6638                           ;mcc_generated_files/touch/mtouch_sensor.c: 811: static __attribute__((inline)) _Bool Se
      +                          nsor_isCalibrated(mtouch_sensor_t* sensor);mcc_generated_files/touch/mtouch_sensor.c: 81
      +                          2: {;mcc_generated_files/touch/mtouch_sensor.c: 813:     return (_Bool)sensor->calibrate
      +                          d;
  6639   003C04  5015               	movf	Sensor_isCalibrated@sensor^0,w,c
  6640   003C06  6ED9               	movwf	fsr2l,c
  6641   003C08  6ADA               	clrf	fsr2h,c
  6642   003C0A  0E09               	movlw	9
  6643   003C0C  26D9               	addwf	fsr2l,f,c
  6644   003C0E  B6DF               	btfsc	indf2,3,c
  6645   003C10  EF0C  F01E         	goto	u3231
  6646   003C14  EF0F  F01E         	goto	u3230
  6647   003C18                     u3231:
  6648   003C18  0E01               	movlw	1
  6649   003C1A  EF10  F01E         	goto	u3236
  6650   003C1E                     u3230:
  6651   003C1E  0E00               	movlw	0
  6652   003C20                     u3236:
  6653   003C20  0012               	return		;funcret
  6654   003C22                     __end_of_Sensor_isCalibrated:
  6655                           	callstack 0
  6656                           
  6657 ;; *************** function _Sensor_SetTrisBit *****************
  6658 ;; Defined at:
  6659 ;;		line 242 in file "mcc_generated_files/touch/mtouch_sensor.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;  sensor          1    wreg     enum E13072
  6662 ;;  TrisBit         1   20[COMRAM] unsigned char 
  6663 ;; Auto vars:     Size  Location     Type
  6664 ;;  sensor          1   23[COMRAM] enum E13072
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  1    wreg      void 
  6667 ;; Registers used:
  6668 ;;		wreg, status,2, status,0
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/0
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6674 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6675 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6676 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6677 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6678 ;;Total ram usage:        4 bytes
  6679 ;; Hardware stack levels used: 1
  6680 ;; Hardware stack levels required when called: 6
  6681 ;; This function calls:
  6682 ;;		Nothing
  6683 ;; This function is called by:
  6684 ;;		_Sensor_scheduleNextScan
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text47
  6689   003042                     __ptext47:
  6690                           	callstack 0
  6691   003042                     _Sensor_SetTrisBit:
  6692                           	callstack 20
  6693                           
  6694                           ;incstack = 0
  6695                           ;Sensor_SetTrisBit@sensor stored from wreg
  6696   003042  6E18               	movwf	Sensor_SetTrisBit@sensor^0,c
  6697   003044                     
  6698                           ;mcc_generated_files/touch/mtouch_sensor.c: 242: static void Sensor_SetTrisBit(enum mtou
      +                          ch_sensor_names sensor,uint8_t TrisBit);mcc_generated_files/touch/mtouch_sensor.c: 243: 
      +                          {;mcc_generated_files/touch/mtouch_sensor.c: 244:     switch(sensor)
  6699   003044  EF47  F018         	goto	l4586
  6700   003048                     l1137:
  6701                           
  6702                           ;mcc_generated_files/touch/mtouch_sensor.c: 247:             TRISAbits.TRISA2 = TrisBit;
  6703   003048  B015               	btfsc	Sensor_SetTrisBit@TrisBit^0,0,c
  6704   00304A  D002               	bra	u3185
  6705   00304C  9487               	bcf	135,2,c	;volatile
  6706   00304E  D001               	bra	u3186
  6707   003050                     u3185:
  6708   003050  8487               	bsf	135,2,c	;volatile
  6709   003052                     u3186:
  6710                           
  6711                           ;mcc_generated_files/touch/mtouch_sensor.c: 248:             break;
  6712   003052  EF68  F018         	goto	l1144
  6713   003056                     l1139:
  6714                           
  6715                           ;mcc_generated_files/touch/mtouch_sensor.c: 250:             TRISDbits.TRISD7 = TrisBit;
  6716   003056  B015               	btfsc	Sensor_SetTrisBit@TrisBit^0,0,c
  6717   003058  D002               	bra	u3195
  6718   00305A  9E8A               	bcf	138,7,c	;volatile
  6719   00305C  D001               	bra	u3196
  6720   00305E                     u3195:
  6721   00305E  8E8A               	bsf	138,7,c	;volatile
  6722   003060                     u3196:
  6723                           
  6724                           ;mcc_generated_files/touch/mtouch_sensor.c: 251:             break;
  6725   003060  EF68  F018         	goto	l1144
  6726   003064                     l1140:
  6727                           
  6728                           ;mcc_generated_files/touch/mtouch_sensor.c: 253:             TRISBbits.TRISB4 = TrisBit;
  6729   003064  B015               	btfsc	Sensor_SetTrisBit@TrisBit^0,0,c
  6730   003066  D002               	bra	u3205
  6731   003068  9888               	bcf	136,4,c	;volatile
  6732   00306A  D001               	bra	u3206
  6733   00306C                     u3205:
  6734   00306C  8888               	bsf	136,4,c	;volatile
  6735   00306E                     u3206:
  6736                           
  6737                           ;mcc_generated_files/touch/mtouch_sensor.c: 254:             break;
  6738   00306E  EF68  F018         	goto	l1144
  6739   003072                     l1141:
  6740                           
  6741                           ;mcc_generated_files/touch/mtouch_sensor.c: 256:             TRISAbits.TRISA5 = TrisBit;
  6742   003072  B015               	btfsc	Sensor_SetTrisBit@TrisBit^0,0,c
  6743   003074  D002               	bra	u3215
  6744   003076  9A87               	bcf	135,5,c	;volatile
  6745   003078  D001               	bra	u3216
  6746   00307A                     u3215:
  6747   00307A  8A87               	bsf	135,5,c	;volatile
  6748   00307C                     u3216:
  6749                           
  6750                           ;mcc_generated_files/touch/mtouch_sensor.c: 257:             break;
  6751   00307C  EF68  F018         	goto	l1144
  6752   003080                     l1142:
  6753                           
  6754                           ;mcc_generated_files/touch/mtouch_sensor.c: 259:             TRISAbits.TRISA4 = TrisBit;
  6755   003080  B015               	btfsc	Sensor_SetTrisBit@TrisBit^0,0,c
  6756   003082  D002               	bra	u3225
  6757   003084  9887               	bcf	135,4,c	;volatile
  6758   003086  D001               	bra	u3226
  6759   003088                     u3225:
  6760   003088  8887               	bsf	135,4,c	;volatile
  6761   00308A                     u3226:
  6762                           
  6763                           ;mcc_generated_files/touch/mtouch_sensor.c: 260:             break;
  6764   00308A  EF68  F018         	goto	l1144
  6765   00308E                     l4586:
  6766   00308E  5018               	movf	Sensor_SetTrisBit@sensor^0,w,c
  6767   003090  6E16               	movwf	??_Sensor_SetTrisBit^0,c
  6768   003092  6A17               	clrf	(??_Sensor_SetTrisBit+1)^0,c
  6769                           
  6770                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6771                           ; Switch size 1, requested type "simple"
  6772                           ; Number of cases is 1, Range of values is 0 to 0
  6773                           ; switch strategies available:
  6774                           ; Name         Instructions Cycles
  6775                           ; simple_byte            4     3 (average)
  6776                           ;	Chosen strategy is simple_byte
  6777   003094  5017               	movf	(??_Sensor_SetTrisBit+1)^0,w,c
  6778   003096  0A00               	xorlw	0	; case 0
  6779   003098  B4D8               	btfsc	status,2,c
  6780   00309A  EF51  F018         	goto	l6798
  6781   00309E  EF68  F018         	goto	l1144
  6782   0030A2                     l6798:
  6783                           
  6784                           ; Switch size 1, requested type "simple"
  6785                           ; Number of cases is 5, Range of values is 0 to 4
  6786                           ; switch strategies available:
  6787                           ; Name         Instructions Cycles
  6788                           ; simple_byte           16     9 (average)
  6789                           ;	Chosen strategy is simple_byte
  6790   0030A2  5016               	movf	??_Sensor_SetTrisBit^0,w,c
  6791   0030A4  0A00               	xorlw	0	; case 0
  6792   0030A6  B4D8               	btfsc	status,2,c
  6793   0030A8  EF24  F018         	goto	l1137
  6794   0030AC  0A01               	xorlw	1	; case 1
  6795   0030AE  B4D8               	btfsc	status,2,c
  6796   0030B0  EF2B  F018         	goto	l1139
  6797   0030B4  0A03               	xorlw	3	; case 2
  6798   0030B6  B4D8               	btfsc	status,2,c
  6799   0030B8  EF32  F018         	goto	l1140
  6800   0030BC  0A01               	xorlw	1	; case 3
  6801   0030BE  B4D8               	btfsc	status,2,c
  6802   0030C0  EF39  F018         	goto	l1141
  6803   0030C4  0A07               	xorlw	7	; case 4
  6804   0030C6  B4D8               	btfsc	status,2,c
  6805   0030C8  EF40  F018         	goto	l1142
  6806   0030CC  EF68  F018         	goto	l1144
  6807   0030D0                     l1144:
  6808   0030D0  0012               	return		;funcret
  6809   0030D2                     __end_of_Sensor_SetTrisBit:
  6810                           	callstack 0
  6811                           
  6812 ;; *************** function _MTOUCH_Sensor_isSampling *****************
  6813 ;; Defined at:
  6814 ;;		line 869 in file "mcc_generated_files/touch/mtouch_sensor.c"
  6815 ;; Parameters:    Size  Location     Type
  6816 ;;		None
  6817 ;; Auto vars:     Size  Location     Type
  6818 ;;		None
  6819 ;; Return value:  Size  Location     Type
  6820 ;;                  1    wreg      _Bool 
  6821 ;; Registers used:
  6822 ;;		wreg, status,2
  6823 ;; Tracked objects:
  6824 ;;		On entry : 0/0
  6825 ;;		On exit  : 0/0
  6826 ;;		Unchanged: 0/0
  6827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6832 ;;Total ram usage:        0 bytes
  6833 ;; Hardware stack levels used: 1
  6834 ;; Hardware stack levels required when called: 6
  6835 ;; This function calls:
  6836 ;;		Nothing
  6837 ;; This function is called by:
  6838 ;;		_MTOUCH_Sensor_isSamplingComplete
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           	psect	text48
  6843   003DDE                     __ptext48:
  6844                           	callstack 0
  6845   003DDE                     _MTOUCH_Sensor_isSampling:
  6846                           	callstack 21
  6847   003DDE                     
  6848                           ;mcc_generated_files/touch/mtouch_sensor.c: 871:     return sampling_flag;
  6849   003DDE  5044               	movf	_sampling_flag^0,w,c
  6850   003DE0  0012               	return		;funcret
  6851   003DE2                     __end_of_MTOUCH_Sensor_isSampling:
  6852                           	callstack 0
  6853                           
  6854 ;; *************** function _MTOUCH_Initialize *****************
  6855 ;; Defined at:
  6856 ;;		line 82 in file "mcc_generated_files/touch/mtouch.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;		None
  6859 ;; Auto vars:     Size  Location     Type
  6860 ;;		None
  6861 ;; Return value:  Size  Location     Type
  6862 ;;                  1    wreg      void 
  6863 ;; Registers used:
  6864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6865 ;; Tracked objects:
  6866 ;;		On entry : 0/0
  6867 ;;		On exit  : 0/0
  6868 ;;		Unchanged: 0/0
  6869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6874 ;;Total ram usage:        0 bytes
  6875 ;; Hardware stack levels used: 1
  6876 ;; Hardware stack levels required when called: 9
  6877 ;; This function calls:
  6878 ;;		_MTOUCH_Button_InitializeAll
  6879 ;;		_MTOUCH_Sensor_InitializeAll
  6880 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  6881 ;;		_MTOUCH_Sensor_Scan_Initialize
  6882 ;;		_MTOUCH_Slider_InitializeAll
  6883 ;; This function is called by:
  6884 ;;		_MTOUCH_Service_Mainloop
  6885 ;;		_SYSTEM_Initialize
  6886 ;; This function uses a non-reentrant model
  6887 ;;
  6888                           
  6889                           	psect	text49
  6890   003CFC                     __ptext49:
  6891                           	callstack 0
  6892   003CFC                     _MTOUCH_Initialize:
  6893                           	callstack 20
  6894   003CFC                     
  6895                           ;mcc_generated_files/touch/mtouch.c: 84:     MTOUCH_Sensor_InitializeAll();
  6896   003CFC  ECA5  F01C         	call	_MTOUCH_Sensor_InitializeAll	;wreg free
  6897                           
  6898                           ;mcc_generated_files/touch/mtouch.c: 85:     MTOUCH_Button_InitializeAll();
  6899   003D00  EC6F  F01C         	call	_MTOUCH_Button_InitializeAll	;wreg free
  6900   003D04                     
  6901                           ;mcc_generated_files/touch/mtouch.c: 86:     MTOUCH_Slider_InitializeAll();
  6902   003D04  EC11  F01E         	call	_MTOUCH_Slider_InitializeAll	;wreg free
  6903   003D08                     
  6904                           ;mcc_generated_files/touch/mtouch.c: 87:     MTOUCH_Sensor_Sampled_ResetAll();
  6905   003D08  EC1A  F01B         	call	_MTOUCH_Sensor_Sampled_ResetAll	;wreg free
  6906   003D0C                     
  6907                           ;mcc_generated_files/touch/mtouch.c: 88:     MTOUCH_Sensor_Scan_Initialize();
  6908   003D0C  ECE4  F01E         	call	_MTOUCH_Sensor_Scan_Initialize	;wreg free
  6909   003D10  0012               	return		;funcret
  6910   003D12                     __end_of_MTOUCH_Initialize:
  6911                           	callstack 0
  6912                           
  6913 ;; *************** function _MTOUCH_Slider_InitializeAll *****************
  6914 ;; Defined at:
  6915 ;;		line 965 in file "mcc_generated_files/touch/mtouch_slider.c"
  6916 ;; Parameters:    Size  Location     Type
  6917 ;;		None
  6918 ;; Auto vars:     Size  Location     Type
  6919 ;;  slider          1   23[COMRAM] enum E13201
  6920 ;; Return value:  Size  Location     Type
  6921 ;;                  1    wreg      void 
  6922 ;; Registers used:
  6923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6924 ;; Tracked objects:
  6925 ;;		On entry : 0/0
  6926 ;;		On exit  : 0/0
  6927 ;;		Unchanged: 0/0
  6928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6930 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6932 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6933 ;;Total ram usage:        1 bytes
  6934 ;; Hardware stack levels used: 1
  6935 ;; Hardware stack levels required when called: 7
  6936 ;; This function calls:
  6937 ;;		_Slider_Initialize
  6938 ;; This function is called by:
  6939 ;;		_MTOUCH_Initialize
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           
  6943                           	psect	text50
  6944   003C22                     __ptext50:
  6945                           	callstack 0
  6946   003C22                     _MTOUCH_Slider_InitializeAll:
  6947                           	callstack 21
  6948   003C22                     
  6949                           ;mcc_generated_files/touch/mtouch_slider.c: 967:     enum mtouch_slider_names slider;;mc
      +                          c_generated_files/touch/mtouch_slider.c: 969:     for (slider = 0u; slider < 1u; slider+
      +                          +)
  6950   003C22  0E00               	movlw	0
  6951   003C24  6E18               	movwf	MTOUCH_Slider_InitializeAll@slider^0,c
  6952   003C26                     l5044:
  6953                           
  6954                           ;mcc_generated_files/touch/mtouch_slider.c: 970:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 971:         Slider_Initialize(slider);
  6955   003C26  5018               	movf	MTOUCH_Slider_InitializeAll@slider^0,w,c
  6956   003C28  ECB1  F018         	call	_Slider_Initialize
  6957   003C2C                     
  6958                           ;mcc_generated_files/touch/mtouch_slider.c: 972:     }
  6959   003C2C  2A18               	incf	MTOUCH_Slider_InitializeAll@slider^0,f,c
  6960   003C2E  5018               	movf	MTOUCH_Slider_InitializeAll@slider^0,w,c
  6961   003C30  B4D8               	btfsc	status,2,c
  6962   003C32  EF1D  F01E         	goto	u3951
  6963   003C36  EF1F  F01E         	goto	u3950
  6964   003C3A                     u3951:
  6965   003C3A  EF13  F01E         	goto	l5044
  6966   003C3E                     u3950:
  6967   003C3E  0012               	return		;funcret
  6968   003C40                     __end_of_MTOUCH_Slider_InitializeAll:
  6969                           	callstack 0
  6970                           
  6971 ;; *************** function _Slider_Initialize *****************
  6972 ;; Defined at:
  6973 ;;		line 795 in file "mcc_generated_files/touch/mtouch_slider.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;  sliderName      1    wreg     enum E13201
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;  sliderName      1   20[COMRAM] enum E13201
  6978 ;;  slider          2   21[COMRAM] PTR struct .
  6979 ;;		 -> mtouch_slider(17), 
  6980 ;; Return value:  Size  Location     Type
  6981 ;;                  1    wreg      void 
  6982 ;; Registers used:
  6983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6984 ;; Tracked objects:
  6985 ;;		On entry : 0/0
  6986 ;;		On exit  : 0/0
  6987 ;;		Unchanged: 0/0
  6988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6990 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6992 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6993 ;;Total ram usage:        3 bytes
  6994 ;; Hardware stack levels used: 1
  6995 ;; Hardware stack levels required when called: 6
  6996 ;; This function calls:
  6997 ;;		Nothing
  6998 ;; This function is called by:
  6999 ;;		_MTOUCH_Slider_InitializeAll
  7000 ;; This function uses a non-reentrant model
  7001 ;;
  7002                           
  7003                           	psect	text51
  7004   003162                     __ptext51:
  7005                           	callstack 0
  7006   003162                     _Slider_Initialize:
  7007                           	callstack 21
  7008                           
  7009                           ;incstack = 0
  7010                           ;Slider_Initialize@sliderName stored from wreg
  7011   003162  6E15               	movwf	Slider_Initialize@sliderName^0,c
  7012   003164                     
  7013                           ;mcc_generated_files/touch/mtouch_slider.c: 795: static void Slider_Initialize(enum mtou
      +                          ch_slider_names sliderName);mcc_generated_files/touch/mtouch_slider.c: 796: {;mcc_genera
      +                          ted_files/touch/mtouch_slider.c: 797:     if (sliderName < 1u)
  7014   003164  5015               	movf	Slider_Initialize@sliderName^0,w,c
  7015   003166  A4D8               	btfss	status,2,c
  7016   003168  EFB8  F018         	goto	u3731
  7017   00316C  EFBA  F018         	goto	u3730
  7018   003170                     u3731:
  7019   003170  EFF6  F018         	goto	l824
  7020   003174                     u3730:
  7021   003174                     
  7022                           ;mcc_generated_files/touch/mtouch_slider.c: 798:     {;mcc_generated_files/touch/mtouch_
      +                          slider.c: 799:         mtouch_slider_t* slider = &mtouch_slider[sliderName];
  7023   003174  5015               	movf	Slider_Initialize@sliderName^0,w,c
  7024   003176  0D11               	mullw	17
  7025   003178  0E55               	movlw	low _mtouch_slider
  7026   00317A  24F3               	addwf	243,w,c
  7027   00317C  6E16               	movwf	Slider_Initialize@slider^0,c
  7028   00317E  0E01               	movlw	high _mtouch_slider
  7029   003180  20F4               	addwfc	prodh,w,c
  7030   003182  6E17               	movwf	(Slider_Initialize@slider+1)^0,c
  7031   003184                     
  7032                           ;mcc_generated_files/touch/mtouch_slider.c: 802:         slider->sliderStatus = MTOUCH_S
      +                          LIDER_STATE_initializing;
  7033   003184  EE20 F010          	lfsr	2,16
  7034   003188  5016               	movf	Slider_Initialize@slider^0,w,c
  7035   00318A  26D9               	addwf	fsr2l,f,c
  7036   00318C  5017               	movf	(Slider_Initialize@slider+1)^0,w,c
  7037   00318E  22DA               	addwfc	fsr2h,f,c
  7038   003190  6ADF               	clrf	indf2,c
  7039   003192                     
  7040                           ;mcc_generated_files/touch/mtouch_slider.c: 804:         slider->rightHysteresis = 0u;
  7041   003192  EE20 F008          	lfsr	2,8
  7042   003196  5016               	movf	Slider_Initialize@slider^0,w,c
  7043   003198  26D9               	addwf	fsr2l,f,c
  7044   00319A  5017               	movf	(Slider_Initialize@slider+1)^0,w,c
  7045   00319C  22DA               	addwfc	fsr2h,f,c
  7046   00319E  6ADF               	clrf	indf2,c
  7047   0031A0                     
  7048                           ;mcc_generated_files/touch/mtouch_slider.c: 805:         slider->leftHysteresis = slider
      +                          ->positionHysteresis;
  7049   0031A0  EE20 F005          	lfsr	2,5
  7050   0031A4  5016               	movf	Slider_Initialize@slider^0,w,c
  7051   0031A6  26D9               	addwf	fsr2l,f,c
  7052   0031A8  5017               	movf	(Slider_Initialize@slider+1)^0,w,c
  7053   0031AA  22DA               	addwfc	fsr2h,f,c
  7054   0031AC  EE10 F009          	lfsr	1,9
  7055   0031B0  5016               	movf	Slider_Initialize@slider^0,w,c
  7056   0031B2  26E1               	addwf	fsr1l,f,c
  7057   0031B4  5017               	movf	(Slider_Initialize@slider+1)^0,w,c
  7058   0031B6  22E2               	addwfc	fsr1h,f,c
  7059   0031B8  CFDF FFE7          	movff	indf2,indf1
  7060   0031BC                     
  7061                           ;mcc_generated_files/touch/mtouch_slider.c: 807:         slider->rawPosition = 0u;
  7062   0031BC  EE20 F00A          	lfsr	2,10
  7063   0031C0  5016               	movf	Slider_Initialize@slider^0,w,c
  7064   0031C2  26D9               	addwf	fsr2l,f,c
  7065   0031C4  5017               	movf	(Slider_Initialize@slider+1)^0,w,c
  7066   0031C6  22DA               	addwfc	fsr2h,f,c
  7067   0031C8  6ADE               	clrf	postinc2,c
  7068   0031CA  6ADD               	clrf	postdec2,c
  7069   0031CC                     
  7070                           ;mcc_generated_files/touch/mtouch_slider.c: 808:         slider->sliderPosition = 0u;
  7071   0031CC  EE20 F00C          	lfsr	2,12
  7072   0031D0  5016               	movf	Slider_Initialize@slider^0,w,c
  7073   0031D2  26D9               	addwf	fsr2l,f,c
  7074   0031D4  5017               	movf	(Slider_Initialize@slider+1)^0,w,c
  7075   0031D6  22DA               	addwfc	fsr2h,f,c
  7076   0031D8  6ADE               	clrf	postinc2,c
  7077   0031DA  6ADD               	clrf	postdec2,c
  7078   0031DC                     
  7079                           ;mcc_generated_files/touch/mtouch_slider.c: 809:         slider->contactSize = 0u;
  7080   0031DC  EE20 F00E          	lfsr	2,14
  7081   0031E0  5016               	movf	Slider_Initialize@slider^0,w,c
  7082   0031E2  26D9               	addwf	fsr2l,f,c
  7083   0031E4  5017               	movf	(Slider_Initialize@slider+1)^0,w,c
  7084   0031E6  22DA               	addwfc	fsr2h,f,c
  7085   0031E8  6ADE               	clrf	postinc2,c
  7086   0031EA  6ADD               	clrf	postdec2,c
  7087   0031EC                     l824:
  7088   0031EC  0012               	return		;funcret
  7089   0031EE                     __end_of_Slider_Initialize:
  7090                           	callstack 0
  7091                           
  7092 ;; *************** function _MTOUCH_Sensor_Scan_Initialize *****************
  7093 ;; Defined at:
  7094 ;;		line 393 in file "mcc_generated_files/touch/mtouch_sensor.c"
  7095 ;; Parameters:    Size  Location     Type
  7096 ;;		None
  7097 ;; Auto vars:     Size  Location     Type
  7098 ;;		None
  7099 ;; Return value:  Size  Location     Type
  7100 ;;                  1    wreg      void 
  7101 ;; Registers used:
  7102 ;;		wreg, status,2, status,0, cstack
  7103 ;; Tracked objects:
  7104 ;;		On entry : 0/0
  7105 ;;		On exit  : 0/0
  7106 ;;		Unchanged: 0/0
  7107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7112 ;;Total ram usage:        0 bytes
  7113 ;; Hardware stack levels used: 1
  7114 ;; Hardware stack levels required when called: 8
  7115 ;; This function calls:
  7116 ;;		_MTOUCH_Sensor_ADCC_Initialize
  7117 ;; This function is called by:
  7118 ;;		_MTOUCH_Initialize
  7119 ;; This function uses a non-reentrant model
  7120 ;;
  7121                           
  7122                           	psect	text52
  7123   003DC8                     __ptext52:
  7124                           	callstack 0
  7125   003DC8                     _MTOUCH_Sensor_Scan_Initialize:
  7126                           	callstack 20
  7127   003DC8                     
  7128                           ;mcc_generated_files/touch/mtouch_sensor.c: 395:     MTOUCH_Sensor_ADCC_Initialize();
  7129   003DC8  ECCC  F01A         	call	_MTOUCH_Sensor_ADCC_Initialize	;wreg free
  7130   003DCC  0012               	return		;funcret
  7131   003DCE                     __end_of_MTOUCH_Sensor_Scan_Initialize:
  7132                           	callstack 0
  7133                           
  7134 ;; *************** function _MTOUCH_Sensor_ADCC_Initialize *****************
  7135 ;; Defined at:
  7136 ;;		line 272 in file "mcc_generated_files/touch/mtouch_sensor.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;		None
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;		None
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  1    wreg      void 
  7143 ;; Registers used:
  7144 ;;		wreg, status,2, status,0, cstack
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/0
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7154 ;;Total ram usage:        0 bytes
  7155 ;; Hardware stack levels used: 1
  7156 ;; Hardware stack levels required when called: 7
  7157 ;; This function calls:
  7158 ;;		_ADCC_SetADTIInterruptHandler
  7159 ;; This function is called by:
  7160 ;;		_MTOUCH_Sensor_Scan_Initialize
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text53
  7165   003598                     __ptext53:
  7166                           	callstack 0
  7167   003598                     _MTOUCH_Sensor_ADCC_Initialize:
  7168                           	callstack 20
  7169   003598                     
  7170                           ;mcc_generated_files/touch/mtouch_sensor.c: 276:     ADCLK = 0xf;
  7171   003598  0E0F               	movlw	15
  7172   00359A  010F               	movlb	15	; () banked
  7173   00359C  6F52               	movwf	82,b	;volatile
  7174                           
  7175                           ;mcc_generated_files/touch/mtouch_sensor.c: 278:     ADREF = 0x00;
  7176   00359E  0E00               	movlw	0
  7177   0035A0  6F53               	movwf	83,b	;volatile
  7178                           
  7179                           ;mcc_generated_files/touch/mtouch_sensor.c: 280:     ADCAP = 0x00;
  7180   0035A2  0E00               	movlw	0
  7181   0035A4  6F58               	movwf	88,b	;volatile
  7182                           
  7183                           ;mcc_generated_files/touch/mtouch_sensor.c: 282:     ADLTHL = 0x00;
  7184   0035A6  0E00               	movlw	0
  7185   0035A8  6E65               	movwf	101,c	;volatile
  7186                           
  7187                           ;mcc_generated_files/touch/mtouch_sensor.c: 284:     ADLTHH = 0x00;
  7188   0035AA  0E00               	movlw	0
  7189   0035AC  6E66               	movwf	102,c	;volatile
  7190                           
  7191                           ;mcc_generated_files/touch/mtouch_sensor.c: 286:     ADUTHL = 0x00;
  7192   0035AE  0E00               	movlw	0
  7193   0035B0  6E67               	movwf	103,c	;volatile
  7194                           
  7195                           ;mcc_generated_files/touch/mtouch_sensor.c: 288:     ADUTHH = 0x00;
  7196   0035B2  0E00               	movlw	0
  7197   0035B4  6E68               	movwf	104,c	;volatile
  7198                           
  7199                           ;mcc_generated_files/touch/mtouch_sensor.c: 290:     ADSTPTL = 0x00;
  7200   0035B6  0E00               	movlw	0
  7201   0035B8  6E63               	movwf	99,c	;volatile
  7202                           
  7203                           ;mcc_generated_files/touch/mtouch_sensor.c: 292:     ADSTPTH = 0x00;
  7204   0035BA  0E00               	movlw	0
  7205   0035BC  6E64               	movwf	100,c	;volatile
  7206                           
  7207                           ;mcc_generated_files/touch/mtouch_sensor.c: 295:     ADCON1 = 0x41;
  7208   0035BE  0E41               	movlw	65
  7209   0035C0  6F54               	movwf	84,b	;volatile
  7210                           
  7211                           ;mcc_generated_files/touch/mtouch_sensor.c: 297:     ADCON2 = 0x8B;
  7212   0035C2  0E8B               	movlw	139
  7213   0035C4  6F55               	movwf	85,b	;volatile
  7214                           
  7215                           ;mcc_generated_files/touch/mtouch_sensor.c: 300:     ADCON3 = 0x0F;
  7216   0035C6  0E0F               	movlw	15
  7217   0035C8  6F56               	movwf	86,b	;volatile
  7218                           
  7219                           ;mcc_generated_files/touch/mtouch_sensor.c: 303:     ADCON0 = 0xC4;
  7220   0035CA  0EC4               	movlw	196
  7221   0035CC  6F5B               	movwf	91,b	;volatile
  7222   0035CE                     
  7223                           ; BSR set to: 15
  7224                           ;mcc_generated_files/touch/mtouch_sensor.c: 307:     PIR1bits.ADTIF = 0;
  7225   0035CE  010E               	movlb	14	; () banked
  7226   0035D0  93C6               	bcf	198,1,b	;volatile
  7227   0035D2                     
  7228                           ; BSR set to: 14
  7229                           ;mcc_generated_files/touch/mtouch_sensor.c: 309:     PIE1bits.ADTIE = 1;
  7230   0035D2  83BE               	bsf	190,1,b	;volatile
  7231   0035D4                     
  7232                           ; BSR set to: 14
  7233                           ;mcc_generated_files/touch/mtouch_sensor.c: 311:     ADCC_SetADTIInterruptHandler(ADCC_T
      +                          hresholdISR_mTouch);
  7234   0035D4  0EA2               	movlw	low _ADCC_ThresholdISR_mTouch
  7235   0035D6  6E15               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler^0,c
  7236   0035D8  0E3D               	movlw	high _ADCC_ThresholdISR_mTouch
  7237   0035DA  6E16               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)^0,c
  7238   0035DC  0E00               	movlw	low (_ADCC_ThresholdISR_mTouch shr (0+16))
  7239   0035DE  6E17               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)^0,c
  7240   0035E0  ECB5  F01E         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  7241   0035E4  0012               	return		;funcret
  7242   0035E6                     __end_of_MTOUCH_Sensor_ADCC_Initialize:
  7243                           	callstack 0
  7244                           
  7245 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
  7246 ;; Defined at:
  7247 ;;		line 296 in file "mcc_generated_files/adc/src/adcc.c"
  7248 ;; Parameters:    Size  Location     Type
  7249 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
  7250 ;;		 -> ADCC_ThresholdISR_mTouch(1), ADCC_DefaultADTI_ISR(1), 
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;		None
  7253 ;; Return value:  Size  Location     Type
  7254 ;;                  1    wreg      void 
  7255 ;; Registers used:
  7256 ;;		wreg, status,2, status,0
  7257 ;; Tracked objects:
  7258 ;;		On entry : 0/0
  7259 ;;		On exit  : 0/0
  7260 ;;		Unchanged: 0/0
  7261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7262 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7265 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7266 ;;Total ram usage:        3 bytes
  7267 ;; Hardware stack levels used: 1
  7268 ;; Hardware stack levels required when called: 6
  7269 ;; This function calls:
  7270 ;;		Nothing
  7271 ;; This function is called by:
  7272 ;;		_ADCC_Initialize
  7273 ;;		_MTOUCH_Sensor_ADCC_Initialize
  7274 ;; This function uses a non-reentrant model
  7275 ;;
  7276                           
  7277                           	psect	text54
  7278   003D6A                     __ptext54:
  7279                           	callstack 0
  7280   003D6A                     _ADCC_SetADTIInterruptHandler:
  7281                           	callstack 20
  7282   003D6A                     
  7283                           ;mcc_generated_files/adc/src/adcc.c: 296: void ADCC_SetADTIInterruptHandler(void (* Inte
      +                          rruptHandler)(void));mcc_generated_files/adc/src/adcc.c: 297: {;mcc_generated_files/adc/
      +                          src/adcc.c: 298:     ADCC_ADTI_InterruptHandler = InterruptHandler;
  7284   003D6A  C015  F0FD         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
  7285   003D6E  C016  F0FE         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
  7286   003D72  C017  F0FF         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
  7287   003D76  0012               	return		;funcret
  7288   003D78                     __end_of_ADCC_SetADTIInterruptHandler:
  7289                           	callstack 0
  7290                           
  7291 ;; *************** function _MTOUCH_Sensor_Sampled_ResetAll *****************
  7292 ;; Defined at:
  7293 ;;		line 842 in file "mcc_generated_files/touch/mtouch_sensor.c"
  7294 ;; Parameters:    Size  Location     Type
  7295 ;;		None
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;  sensor          1   22[COMRAM] PTR struct .
  7298 ;;		 -> mtouch_sensor(50), 
  7299 ;; Return value:  Size  Location     Type
  7300 ;;                  1    wreg      void 
  7301 ;; Registers used:
  7302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7303 ;; Tracked objects:
  7304 ;;		On entry : 0/0
  7305 ;;		On exit  : 0/0
  7306 ;;		Unchanged: 0/0
  7307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7310 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7311 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7312 ;;Total ram usage:        2 bytes
  7313 ;; Hardware stack levels used: 1
  7314 ;; Hardware stack levels required when called: 7
  7315 ;; This function calls:
  7316 ;;		_Sensor_Sampled_Reset
  7317 ;; This function is called by:
  7318 ;;		_MTOUCH_Initialize
  7319 ;;		_MTOUCH_Service_Mainloop
  7320 ;; This function uses a non-reentrant model
  7321 ;;
  7322                           
  7323                           	psect	text55
  7324   003634                     __ptext55:
  7325                           	callstack 0
  7326   003634                     _MTOUCH_Sensor_Sampled_ResetAll:
  7327                           	callstack 21
  7328   003634                     
  7329                           ;mcc_generated_files/touch/mtouch_sensor.c: 844:     mtouch_sensor_t* sensor;;mcc_genera
      +                          ted_files/touch/mtouch_sensor.c: 845:     for(sensor = &mtouch_sensor[0];sensor<= &mtouc
      +                          h_sensor[5u -1];sensor++)
  7330   003634  0E9B               	movlw	low _mtouch_sensor
  7331   003636  6E17               	movwf	MTOUCH_Sensor_Sampled_ResetAll@sensor^0,c
  7332   003638  0E9B               	movlw	_mtouch_sensor& (0+255)
  7333   00363A  6E16               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll^0,c
  7334   00363C  0E28               	movlw	40
  7335   00363E  2616               	addwf	??_MTOUCH_Sensor_Sampled_ResetAll^0,f,c
  7336   003640  5017               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor^0,w,c
  7337   003642  5C16               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll^0,w,c
  7338   003644  B0D8               	btfsc	status,0,c
  7339   003646  EF27  F01B         	goto	u3961
  7340   00364A  EF29  F01B         	goto	u3960
  7341   00364E                     u3961:
  7342   00364E  EF2B  F01B         	goto	l5054
  7343   003652                     u3960:
  7344   003652  EF3E  F01B         	goto	l1326
  7345   003656                     l5054:
  7346                           
  7347                           ;mcc_generated_files/touch/mtouch_sensor.c: 846:     {;mcc_generated_files/touch/mtouch_
      +                          sensor.c: 847:         Sensor_Sampled_Reset(sensor);
  7348   003656  C017  F015         	movff	MTOUCH_Sensor_Sampled_ResetAll@sensor,Sensor_Sampled_Reset@sensor
  7349   00365A  ECBC  F01E         	call	_Sensor_Sampled_Reset	;wreg free
  7350   00365E                     
  7351                           ;mcc_generated_files/touch/mtouch_sensor.c: 848:     }
  7352   00365E  0E0A               	movlw	10
  7353   003660  2617               	addwf	MTOUCH_Sensor_Sampled_ResetAll@sensor^0,f,c
  7354   003662  0E9B               	movlw	_mtouch_sensor& (0+255)
  7355   003664  6E16               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll^0,c
  7356   003666  0E28               	movlw	40
  7357   003668  2616               	addwf	??_MTOUCH_Sensor_Sampled_ResetAll^0,f,c
  7358   00366A  5017               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor^0,w,c
  7359   00366C  5C16               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll^0,w,c
  7360   00366E  B0D8               	btfsc	status,0,c
  7361   003670  EF3C  F01B         	goto	u3971
  7362   003674  EF3E  F01B         	goto	u3970
  7363   003678                     u3971:
  7364   003678  EF2B  F01B         	goto	l5054
  7365   00367C                     u3970:
  7366   00367C                     l1326:
  7367   00367C  0012               	return		;funcret
  7368   00367E                     __end_of_MTOUCH_Sensor_Sampled_ResetAll:
  7369                           	callstack 0
  7370                           
  7371 ;; *************** function _MTOUCH_Sensor_InitializeAll *****************
  7372 ;; Defined at:
  7373 ;;		line 316 in file "mcc_generated_files/touch/mtouch_sensor.c"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;		None
  7376 ;; Auto vars:     Size  Location     Type
  7377 ;;  sensor          1   29[COMRAM] enum E13072
  7378 ;; Return value:  Size  Location     Type
  7379 ;;                  1    wreg      void 
  7380 ;; Registers used:
  7381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7382 ;; Tracked objects:
  7383 ;;		On entry : 0/0
  7384 ;;		On exit  : 0/0
  7385 ;;		Unchanged: 0/0
  7386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7388 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7390 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7391 ;;Total ram usage:        1 bytes
  7392 ;; Hardware stack levels used: 1
  7393 ;; Hardware stack levels required when called: 8
  7394 ;; This function calls:
  7395 ;;		_MTOUCH_Sensor_Initialize
  7396 ;;		_memcpy
  7397 ;; This function is called by:
  7398 ;;		_MTOUCH_Initialize
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           	psect	text56
  7403   00394A                     __ptext56:
  7404                           	callstack 0
  7405   00394A                     _MTOUCH_Sensor_InitializeAll:
  7406                           	callstack 20
  7407   00394A                     
  7408                           ;mcc_generated_files/touch/mtouch_sensor.c: 318:     enum mtouch_sensor_names sensor;;mc
      +                          c_generated_files/touch/mtouch_sensor.c: 320:     memcpy(mtouch_sensor,mtouch_sensor_ini
      +                          t,sizeof(mtouch_sensor_init));
  7409   00394A  0E9B               	movlw	low _mtouch_sensor
  7410   00394C  6E15               	movwf	memcpy@d1^0,c
  7411   00394E  6A16               	clrf	(memcpy@d1+1)^0,c
  7412   003950  0E68               	movlw	low _mtouch_sensor_init
  7413   003952  6E17               	movwf	memcpy@s1^0,c
  7414   003954  0E00               	movlw	0
  7415   003956  6E19               	movwf	(memcpy@n+1)^0,c
  7416   003958  0E32               	movlw	50
  7417   00395A  6E18               	movwf	memcpy@n^0,c
  7418   00395C  ECA4  F01A         	call	_memcpy	;wreg free
  7419   003960                     
  7420                           ;mcc_generated_files/touch/mtouch_sensor.c: 322:     for (sensor = 0; sensor < 5u; senso
      +                          r++)
  7421   003960  0E00               	movlw	0
  7422   003962  6E1E               	movwf	MTOUCH_Sensor_InitializeAll@sensor^0,c
  7423   003964                     l6452:
  7424                           
  7425                           ;mcc_generated_files/touch/mtouch_sensor.c: 323:     {;mcc_generated_files/touch/mtouch_
      +                          sensor.c: 324:         MTOUCH_Sensor_Initialize(sensor);
  7426   003964  501E               	movf	MTOUCH_Sensor_InitializeAll@sensor^0,w,c
  7427   003966  EC20  F01E         	call	_MTOUCH_Sensor_Initialize
  7428   00396A                     
  7429                           ;mcc_generated_files/touch/mtouch_sensor.c: 325:     }
  7430   00396A  2A1E               	incf	MTOUCH_Sensor_InitializeAll@sensor^0,f,c
  7431   00396C  0E04               	movlw	4
  7432   00396E  641E               	cpfsgt	MTOUCH_Sensor_InitializeAll@sensor^0,c
  7433   003970  EFBC  F01C         	goto	u6031
  7434   003974  EFBE  F01C         	goto	u6030
  7435   003978                     u6031:
  7436   003978  EFB2  F01C         	goto	l6452
  7437   00397C                     u6030:
  7438   00397C  0012               	return		;funcret
  7439   00397E                     __end_of_MTOUCH_Sensor_InitializeAll:
  7440                           	callstack 0
  7441                           
  7442 ;; *************** function _MTOUCH_Sensor_Initialize *****************
  7443 ;; Defined at:
  7444 ;;		line 233 in file "mcc_generated_files/touch/mtouch_sensor.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;  sensor          1    wreg     enum E13072
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;  sensor          1   21[COMRAM] enum E13072
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  1    wreg      enum E13078
  7451 ;; Registers used:
  7452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7459 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7461 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7462 ;;Total ram usage:        1 bytes
  7463 ;; Hardware stack levels used: 1
  7464 ;; Hardware stack levels required when called: 7
  7465 ;; This function calls:
  7466 ;;		_MTOUCH_Sensor_Calibrate
  7467 ;;		_MTOUCH_Sensor_Enable
  7468 ;;		_Sensor_Sampled_Reset
  7469 ;; This function is called by:
  7470 ;;		_MTOUCH_Sensor_InitializeAll
  7471 ;; This function uses a non-reentrant model
  7472 ;;
  7473                           
  7474                           	psect	text57
  7475   003C40                     __ptext57:
  7476                           	callstack 0
  7477   003C40                     _MTOUCH_Sensor_Initialize:
  7478                           	callstack 20
  7479                           
  7480                           ;incstack = 0
  7481                           ;MTOUCH_Sensor_Initialize@sensor stored from wreg
  7482   003C40  6E16               	movwf	MTOUCH_Sensor_Initialize@sensor^0,c
  7483   003C42                     
  7484                           ;mcc_generated_files/touch/mtouch_sensor.c: 233: enum mtouch_sensor_error MTOUCH_Sensor_
      +                          Initialize(enum mtouch_sensor_names sensor);mcc_generated_files/touch/mtouch_sensor.c: 2
      +                          34: {;mcc_generated_files/touch/mtouch_sensor.c: 235:     MTOUCH_Sensor_Enable(sensor);
  7485   003C42  5016               	movf	MTOUCH_Sensor_Initialize@sensor^0,w,c
  7486   003C44  ECA0  F01D         	call	_MTOUCH_Sensor_Enable
  7487                           
  7488                           ;mcc_generated_files/touch/mtouch_sensor.c: 236:     MTOUCH_Sensor_Calibrate(sensor);
  7489   003C48  5016               	movf	MTOUCH_Sensor_Initialize@sensor^0,w,c
  7490   003C4A  ECB2  F01D         	call	_MTOUCH_Sensor_Calibrate
  7491                           
  7492                           ;mcc_generated_files/touch/mtouch_sensor.c: 237:     Sensor_Sampled_Reset(&mtouch_sensor
      +                          [sensor]);
  7493   003C4E  5016               	movf	MTOUCH_Sensor_Initialize@sensor^0,w,c
  7494   003C50  0D0A               	mullw	10
  7495   003C52  50F3               	movf	243,w,c
  7496   003C54  0F9B               	addlw	low _mtouch_sensor
  7497   003C56  6E15               	movwf	Sensor_Sampled_Reset@sensor^0,c
  7498   003C58  ECBC  F01E         	call	_Sensor_Sampled_Reset	;wreg free
  7499   003C5C  0012               	return		;funcret
  7500   003C5E                     __end_of_MTOUCH_Sensor_Initialize:
  7501                           	callstack 0
  7502                           
  7503 ;; *************** function _Sensor_Sampled_Reset *****************
  7504 ;; Defined at:
  7505 ;;		line 859 in file "mcc_generated_files/touch/mtouch_sensor.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;  sensor          1   20[COMRAM] PTR struct .
  7508 ;;		 -> mtouch_sensor(50), 
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;		None
  7511 ;; Return value:  Size  Location     Type
  7512 ;;                  1    wreg      void 
  7513 ;; Registers used:
  7514 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7515 ;; Tracked objects:
  7516 ;;		On entry : 0/0
  7517 ;;		On exit  : 0/0
  7518 ;;		Unchanged: 0/0
  7519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7520 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7524 ;;Total ram usage:        1 bytes
  7525 ;; Hardware stack levels used: 1
  7526 ;; Hardware stack levels required when called: 6
  7527 ;; This function calls:
  7528 ;;		Nothing
  7529 ;; This function is called by:
  7530 ;;		_MTOUCH_Sensor_Initialize
  7531 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  7532 ;; This function uses a non-reentrant model
  7533 ;;
  7534                           
  7535                           	psect	text58
  7536   003D78                     __ptext58:
  7537                           	callstack 0
  7538   003D78                     _Sensor_Sampled_Reset:
  7539                           	callstack 21
  7540   003D78                     
  7541                           ;mcc_generated_files/touch/mtouch_sensor.c: 859: static __attribute__((inline)) void Sen
      +                          sor_Sampled_Reset(mtouch_sensor_t* sensor);mcc_generated_files/touch/mtouch_sensor.c: 86
      +                          0: {;mcc_generated_files/touch/mtouch_sensor.c: 861:     sensor->sampled = 0;
  7542   003D78  5015               	movf	Sensor_Sampled_Reset@sensor^0,w,c
  7543   003D7A  6ED9               	movwf	fsr2l,c
  7544   003D7C  6ADA               	clrf	fsr2h,c
  7545   003D7E  0E09               	movlw	9
  7546   003D80  26D9               	addwf	fsr2l,f,c
  7547   003D82  92DF               	bcf	indf2,1,c
  7548   003D84  0012               	return		;funcret
  7549   003D86                     __end_of_Sensor_Sampled_Reset:
  7550                           	callstack 0
  7551                           
  7552 ;; *************** function _MTOUCH_Sensor_Enable *****************
  7553 ;; Defined at:
  7554 ;;		line 733 in file "mcc_generated_files/touch/mtouch_sensor.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;  sensor          1    wreg     enum E13072
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;  sensor          1   20[COMRAM] enum E13072
  7559 ;; Return value:  Size  Location     Type
  7560 ;;                  1    wreg      void 
  7561 ;; Registers used:
  7562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7563 ;; Tracked objects:
  7564 ;;		On entry : 0/0
  7565 ;;		On exit  : 0/0
  7566 ;;		Unchanged: 0/0
  7567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7569 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7571 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7572 ;;Total ram usage:        1 bytes
  7573 ;; Hardware stack levels used: 1
  7574 ;; Hardware stack levels required when called: 6
  7575 ;; This function calls:
  7576 ;;		Nothing
  7577 ;; This function is called by:
  7578 ;;		_MTOUCH_Sensor_Initialize
  7579 ;; This function uses a non-reentrant model
  7580 ;;
  7581                           
  7582                           	psect	text59
  7583   003B40                     __ptext59:
  7584                           	callstack 0
  7585   003B40                     _MTOUCH_Sensor_Enable:
  7586                           	callstack 20
  7587                           
  7588                           ;incstack = 0
  7589                           ;MTOUCH_Sensor_Enable@sensor stored from wreg
  7590   003B40  6E15               	movwf	MTOUCH_Sensor_Enable@sensor^0,c
  7591   003B42                     
  7592                           ;mcc_generated_files/touch/mtouch_sensor.c: 733: void MTOUCH_Sensor_Enable(enum mtouch_s
      +                          ensor_names sensor);mcc_generated_files/touch/mtouch_sensor.c: 734: {;mcc_generated_file
      +                          s/touch/mtouch_sensor.c: 735:     if(sensor < 5u)
  7593   003B42  0E05               	movlw	5
  7594   003B44  6015               	cpfslt	MTOUCH_Sensor_Enable@sensor^0,c
  7595   003B46  EFA7  F01D         	goto	u3171
  7596   003B4A  EFA9  F01D         	goto	u3170
  7597   003B4E                     u3171:
  7598   003B4E  EFB1  F01D         	goto	l1278
  7599   003B52                     u3170:
  7600   003B52                     
  7601                           ;mcc_generated_files/touch/mtouch_sensor.c: 736:         mtouch_sensor[sensor].enabled =
      +                           1;
  7602   003B52  5015               	movf	MTOUCH_Sensor_Enable@sensor^0,w,c
  7603   003B54  0D0A               	mullw	10
  7604   003B56  50F3               	movf	243,w,c
  7605   003B58  0FA4               	addlw	low (_mtouch_sensor+9)
  7606   003B5A  6ED9               	movwf	fsr2l,c
  7607   003B5C  6ADA               	clrf	fsr2h,c
  7608   003B5E  0100               	movlb	0	; () banked
  7609   003B60  80DF               	bsf	indf2,0,c
  7610   003B62                     l1278:
  7611   003B62  0012               	return		;funcret
  7612   003B64                     __end_of_MTOUCH_Sensor_Enable:
  7613                           	callstack 0
  7614                           
  7615 ;; *************** function _MTOUCH_Button_InitializeAll *****************
  7616 ;; Defined at:
  7617 ;;		line 206 in file "mcc_generated_files/touch/mtouch_button.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;		None
  7620 ;; Auto vars:     Size  Location     Type
  7621 ;;  button          1   29[COMRAM] enum E13138
  7622 ;; Return value:  Size  Location     Type
  7623 ;;                  1    wreg      void 
  7624 ;; Registers used:
  7625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7626 ;; Tracked objects:
  7627 ;;		On entry : 0/0
  7628 ;;		On exit  : 0/0
  7629 ;;		Unchanged: 0/0
  7630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7632 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7634 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7635 ;;Total ram usage:        1 bytes
  7636 ;; Hardware stack levels used: 1
  7637 ;; Hardware stack levels required when called: 8
  7638 ;; This function calls:
  7639 ;;		_MTOUCH_Button_Initialize
  7640 ;;		_memcpy
  7641 ;; This function is called by:
  7642 ;;		_MTOUCH_Initialize
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           	psect	text60
  7647   0038DE                     __ptext60:
  7648                           	callstack 0
  7649   0038DE                     _MTOUCH_Button_InitializeAll:
  7650                           	callstack 20
  7651   0038DE                     
  7652                           ;mcc_generated_files/touch/mtouch_button.c: 208:     enum mtouch_button_names button;;mc
      +                          c_generated_files/touch/mtouch_button.c: 210:     memcpy(mtouch_button,mtouch_button_ini
      +                          t,sizeof(mtouch_button_init));
  7653   0038DE  0E00               	movlw	low _mtouch_button
  7654   0038E0  6E15               	movwf	memcpy@d1^0,c
  7655   0038E2  0E01               	movlw	high _mtouch_button
  7656   0038E4  6E16               	movwf	(memcpy@d1+1)^0,c
  7657   0038E6  0E13               	movlw	low _mtouch_button_init
  7658   0038E8  6E17               	movwf	memcpy@s1^0,c
  7659   0038EA  0E00               	movlw	0
  7660   0038EC  6E19               	movwf	(memcpy@n+1)^0,c
  7661   0038EE  0E55               	movlw	85
  7662   0038F0  6E18               	movwf	memcpy@n^0,c
  7663   0038F2  ECA4  F01A         	call	_memcpy	;wreg free
  7664   0038F6                     
  7665                           ;mcc_generated_files/touch/mtouch_button.c: 212:     for (button = 0; button < 5u; butto
      +                          n++)
  7666   0038F6  0E00               	movlw	0
  7667   0038F8  6E1E               	movwf	MTOUCH_Button_InitializeAll@button^0,c
  7668   0038FA                     l6466:
  7669                           
  7670                           ;mcc_generated_files/touch/mtouch_button.c: 213:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 214:         MTOUCH_Button_Initialize(button);
  7671   0038FA  501E               	movf	MTOUCH_Button_InitializeAll@button^0,w,c
  7672   0038FC  EC63  F019         	call	_MTOUCH_Button_Initialize
  7673   003900                     
  7674                           ;mcc_generated_files/touch/mtouch_button.c: 215:     }
  7675   003900  2A1E               	incf	MTOUCH_Button_InitializeAll@button^0,f,c
  7676   003902  0E04               	movlw	4
  7677   003904  641E               	cpfsgt	MTOUCH_Button_InitializeAll@button^0,c
  7678   003906  EF87  F01C         	goto	u6041
  7679   00390A  EF89  F01C         	goto	u6040
  7680   00390E                     u6041:
  7681   00390E  EF7D  F01C         	goto	l6466
  7682   003912                     u6040:
  7683   003912  0012               	return		;funcret
  7684   003914                     __end_of_MTOUCH_Button_InitializeAll:
  7685                           	callstack 0
  7686                           
  7687 ;; *************** function _memcpy *****************
  7688 ;; Defined at:
  7689 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
  7690 ;; Parameters:    Size  Location     Type
  7691 ;;  d1              2   20[COMRAM] PTR void 
  7692 ;;		 -> mtouch_sensor(50), mtouch_button(85), 
  7693 ;;  s1              1   22[COMRAM] PTR const void 
  7694 ;;		 -> mtouch_sensor_init(50), mtouch_button_init(85), 
  7695 ;;  n               2   23[COMRAM] unsigned int 
  7696 ;; Auto vars:     Size  Location     Type
  7697 ;;  d               2   26[COMRAM] PTR unsigned char 
  7698 ;;		 -> mtouch_sensor(50), mtouch_button(85), 
  7699 ;;  s               1   28[COMRAM] PTR const unsigned char 
  7700 ;;		 -> mtouch_sensor_init(50), mtouch_button_init(85), 
  7701 ;;  tmp             1   25[COMRAM] unsigned char 
  7702 ;; Return value:  Size  Location     Type
  7703 ;;                  2   20[COMRAM] PTR void 
  7704 ;; Registers used:
  7705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7706 ;; Tracked objects:
  7707 ;;		On entry : 0/0
  7708 ;;		On exit  : 0/0
  7709 ;;		Unchanged: 0/0
  7710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7711 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7712 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7714 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7715 ;;Total ram usage:        9 bytes
  7716 ;; Hardware stack levels used: 1
  7717 ;; Hardware stack levels required when called: 6
  7718 ;; This function calls:
  7719 ;;		Nothing
  7720 ;; This function is called by:
  7721 ;;		_MTOUCH_Button_InitializeAll
  7722 ;;		_MTOUCH_Sensor_InitializeAll
  7723 ;; This function uses a non-reentrant model
  7724 ;;
  7725                           
  7726                           	psect	text61
  7727   003548                     __ptext61:
  7728                           	callstack 0
  7729   003548                     _memcpy:
  7730                           	callstack 21
  7731   003548  C017  F01D         	movff	memcpy@s1,memcpy@s
  7732   00354C  C015  F01B         	movff	memcpy@d1,memcpy@d
  7733   003550  C016  F01C         	movff	memcpy@d1+1,memcpy@d+1
  7734   003554  EFBE  F01A         	goto	l6244
  7735   003558                     l6236:
  7736   003558  C01D  FFF6         	movff	memcpy@s,tblptrl
  7737   00355C                     	if	1	;There is more than 1 active tblptr byte
  7738   00355C  0E0F               	movlw	high __smallconst
  7739   00355E  6EF7               	movwf	tblptrh,c
  7740   003560                     	endif
  7741   003560                     	if	0	;tblptru may be non-zero
  7742   003560                     	endif
  7743   003560                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7744   003560  0E00               	movlw	low (__smallconst shr (0+16))
  7745   003562  6EF8               	movwf	tblptru,c
  7746   003564                     	endif
  7747   003564  0008               	tblrd		*
  7748   003566  CFF5 F01A          	movff	tablat,memcpy@tmp
  7749   00356A  2A1D               	incf	memcpy@s^0,f,c
  7750   00356C  C01B  FFD9         	movff	memcpy@d,fsr2l
  7751   003570  C01C  FFDA         	movff	memcpy@d+1,fsr2h
  7752   003574  C01A  FFDF         	movff	memcpy@tmp,indf2
  7753   003578  4A1B               	infsnz	memcpy@d^0,f,c
  7754   00357A  2A1C               	incf	(memcpy@d+1)^0,f,c
  7755   00357C                     l6244:
  7756   00357C  0618               	decf	memcpy@n^0,f,c
  7757   00357E  A0D8               	btfss	status,0,c
  7758   003580  0619               	decf	(memcpy@n+1)^0,f,c
  7759   003582  2818               	incf	memcpy@n^0,w,c
  7760   003584  E106               	bnz	u5641
  7761   003586  2819               	incf	(memcpy@n+1)^0,w,c
  7762   003588  A4D8               	btfss	status,2,c
  7763   00358A  EFC9  F01A         	goto	u5641
  7764   00358E  EFCB  F01A         	goto	u5640
  7765   003592                     u5641:
  7766   003592  EFAC  F01A         	goto	l6236
  7767   003596                     u5640:
  7768   003596  0012               	return		;funcret
  7769   003598                     __end_of_memcpy:
  7770                           	callstack 0
  7771                           
  7772 ;; *************** function _MTOUCH_Button_ServiceAll *****************
  7773 ;; Defined at:
  7774 ;;		line 224 in file "mcc_generated_files/touch/mtouch_button.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;		None
  7777 ;; Auto vars:     Size  Location     Type
  7778 ;;  button          1    0[BANK0 ] enum E13138
  7779 ;; Return value:  Size  Location     Type
  7780 ;;                  1    wreg      void 
  7781 ;; Registers used:
  7782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7789 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7791 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7792 ;;Total ram usage:        1 bytes
  7793 ;; Hardware stack levels used: 1
  7794 ;; Hardware stack levels required when called: 10
  7795 ;; This function calls:
  7796 ;;		_Button_Service
  7797 ;; This function is called by:
  7798 ;;		_MTOUCH_Service_Mainloop
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802                           	psect	text62
  7803   003B88                     __ptext62:
  7804                           	callstack 0
  7805   003B88                     _MTOUCH_Button_ServiceAll:
  7806                           	callstack 19
  7807   003B88                     
  7808                           ;mcc_generated_files/touch/mtouch_button.c: 226:     enum mtouch_button_names button;;mc
      +                          c_generated_files/touch/mtouch_button.c: 229:     for (button = 0; button < 5u; button++
      +                          )
  7809   003B88  0E00               	movlw	0
  7810   003B8A  0100               	movlb	0	; () banked
  7811   003B8C  6FEB               	movwf	MTOUCH_Button_ServiceAll@button& (0+255),b
  7812   003B8E                     l6618:
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;mcc_generated_files/touch/mtouch_button.c: 230:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 231:         Button_Service(button);
  7816   003B8E  51EB               	movf	MTOUCH_Button_ServiceAll@button& (0+255),w,b
  7817   003B90  ECE7  F014         	call	_Button_Service
  7818   003B94                     
  7819                           ;mcc_generated_files/touch/mtouch_button.c: 232:     }
  7820   003B94  0100               	movlb	0	; () banked
  7821   003B96  2BEB               	incf	MTOUCH_Button_ServiceAll@button& (0+255),f,b
  7822   003B98                     
  7823                           ; BSR set to: 0
  7824   003B98  0E04               	movlw	4
  7825   003B9A  65EB               	cpfsgt	MTOUCH_Button_ServiceAll@button& (0+255),b
  7826   003B9C  EFD2  F01D         	goto	u6271
  7827   003BA0  EFD4  F01D         	goto	u6270
  7828   003BA4                     u6271:
  7829   003BA4  EFC7  F01D         	goto	l6618
  7830   003BA8                     u6270:
  7831   003BA8                     
  7832                           ; BSR set to: 0
  7833   003BA8  0012               	return		;funcret
  7834   003BAA                     __end_of_MTOUCH_Button_ServiceAll:
  7835                           	callstack 0
  7836                           
  7837 ;; *************** function _Button_Service *****************
  7838 ;; Defined at:
  7839 ;;		line 235 in file "mcc_generated_files/touch/mtouch_button.c"
  7840 ;; Parameters:    Size  Location     Type
  7841 ;;  name            1    wreg     enum E13138
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;  name            1   47[COMRAM] enum E13138
  7844 ;;  button          2   48[COMRAM] PTR struct .
  7845 ;;		 -> mtouch_button(85), 
  7846 ;; Return value:  Size  Location     Type
  7847 ;;                  1    wreg      void 
  7848 ;; Registers used:
  7849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  7850 ;; Tracked objects:
  7851 ;;		On entry : 0/0
  7852 ;;		On exit  : 0/0
  7853 ;;		Unchanged: 0/0
  7854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7856 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7858 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7859 ;;Total ram usage:        4 bytes
  7860 ;; Hardware stack levels used: 1
  7861 ;; Hardware stack levels required when called: 9
  7862 ;; This function calls:
  7863 ;;		_Button_Deviation_Update
  7864 ;;		_Button_Reading_Update
  7865 ;;		_Button_State_Initializing
  7866 ;;		_Button_State_NotPressed
  7867 ;;		_Button_State_Pressed
  7868 ;;		_MTOUCH_Button_Initialize
  7869 ;;		_MTOUCH_Sensor_isCalibrated
  7870 ;;		_MTOUCH_Sensor_wasSampled
  7871 ;; This function is called by:
  7872 ;;		_MTOUCH_Button_ServiceAll
  7873 ;; This function uses a non-reentrant model
  7874 ;;
  7875                           
  7876                           	psect	text63
  7877   0029CE                     __ptext63:
  7878                           	callstack 0
  7879   0029CE                     _Button_Service:
  7880                           	callstack 19
  7881                           
  7882                           ; BSR set to: 0
  7883                           ;incstack = 0
  7884                           ;Button_Service@name stored from wreg
  7885   0029CE  6E30               	movwf	Button_Service@name^0,c
  7886   0029D0                     
  7887                           ;mcc_generated_files/touch/mtouch_button.c: 235: static void Button_Service(enum mtouch_
      +                          button_names name);mcc_generated_files/touch/mtouch_button.c: 236: {;mcc_generated_files
      +                          /touch/mtouch_button.c: 237:     mtouch_button_t* button = &mtouch_button[name];
  7888   0029D0  5030               	movf	Button_Service@name^0,w,c
  7889   0029D2  0D11               	mullw	17
  7890   0029D4  0E00               	movlw	low _mtouch_button
  7891   0029D6  24F3               	addwf	243,w,c
  7892   0029D8  6E31               	movwf	Button_Service@button^0,c
  7893   0029DA  0E01               	movlw	high _mtouch_button
  7894   0029DC  20F4               	addwfc	prodh,w,c
  7895   0029DE  6E32               	movwf	(Button_Service@button+1)^0,c
  7896   0029E0                     
  7897                           ;mcc_generated_files/touch/mtouch_button.c: 239:     if (MTOUCH_Sensor_wasSampled(button
      +                          ->sensor) && MTOUCH_Sensor_isCalibrated(button->sensor))
  7898   0029E0  EE20 F001          	lfsr	2,1
  7899   0029E4  5031               	movf	Button_Service@button^0,w,c
  7900   0029E6  26D9               	addwf	fsr2l,f,c
  7901   0029E8  5032               	movf	(Button_Service@button+1)^0,w,c
  7902   0029EA  22DA               	addwfc	fsr2h,f,c
  7903   0029EC  50DF               	movf	indf2,w,c
  7904   0029EE  ECA6  F01B         	call	_MTOUCH_Sensor_wasSampled
  7905   0029F2  0900               	iorlw	0
  7906   0029F4  B4D8               	btfsc	status,2,c
  7907   0029F6  EFFF  F014         	goto	u6061
  7908   0029FA  EF01  F015         	goto	u6060
  7909   0029FE                     u6061:
  7910   0029FE  EF50  F015         	goto	l494
  7911   002A02                     u6060:
  7912   002A02  EE20 F001          	lfsr	2,1
  7913   002A06  5031               	movf	Button_Service@button^0,w,c
  7914   002A08  26D9               	addwf	fsr2l,f,c
  7915   002A0A  5032               	movf	(Button_Service@button+1)^0,w,c
  7916   002A0C  22DA               	addwfc	fsr2h,f,c
  7917   002A0E  50DF               	movf	indf2,w,c
  7918   002A10  ECC3  F01B         	call	_MTOUCH_Sensor_isCalibrated
  7919   002A14  0900               	iorlw	0
  7920   002A16  B4D8               	btfsc	status,2,c
  7921   002A18  EF10  F015         	goto	u6071
  7922   002A1C  EF12  F015         	goto	u6070
  7923   002A20                     u6071:
  7924   002A20  EF50  F015         	goto	l494
  7925   002A24                     u6070:
  7926   002A24                     
  7927                           ;mcc_generated_files/touch/mtouch_button.c: 240:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 241:         Button_Reading_Update(button);
  7928   002A24  C031  F01C         	movff	Button_Service@button,Button_Reading_Update@button
  7929   002A28  C032  F01D         	movff	Button_Service@button+1,Button_Reading_Update@button+1
  7930   002A2C  EC0D  F01D         	call	_Button_Reading_Update	;wreg free
  7931   002A30                     
  7932                           ;mcc_generated_files/touch/mtouch_button.c: 242:         Button_Deviation_Update(button)
      +                          ;
  7933   002A30  C031  F015         	movff	Button_Service@button,Button_Deviation_Update@button
  7934   002A34  C032  F016         	movff	Button_Service@button+1,Button_Deviation_Update@button+1
  7935   002A38  ECFE  F010         	call	_Button_Deviation_Update	;wreg free
  7936   002A3C                     
  7937                           ;mcc_generated_files/touch/mtouch_button.c: 244:         if (button->state >= (uint8_t)(
      +                          sizeof(Button_StateMachine)/sizeof(button_statemachine_state_t)))
  7938   002A3C  EE20 F002          	lfsr	2,2
  7939   002A40  5031               	movf	Button_Service@button^0,w,c
  7940   002A42  26D9               	addwf	fsr2l,f,c
  7941   002A44  5032               	movf	(Button_Service@button+1)^0,w,c
  7942   002A46  22DA               	addwfc	fsr2h,f,c
  7943   002A48  0E02               	movlw	2
  7944   002A4A  64DF               	cpfsgt	indf2,c
  7945   002A4C  EF2A  F015         	goto	u6081
  7946   002A50  EF2C  F015         	goto	u6080
  7947   002A54                     u6081:
  7948   002A54  EF33  F015         	goto	l6498
  7949   002A58                     u6080:
  7950   002A58                     
  7951                           ;mcc_generated_files/touch/mtouch_button.c: 245:         {;mcc_generated_files/touch/mto
      +                          uch_button.c: 246:             MTOUCH_Button_Initialize(button->name);
  7952   002A58  C031  FFD9         	movff	Button_Service@button,fsr2l
  7953   002A5C  C032  FFDA         	movff	Button_Service@button+1,fsr2h
  7954   002A60  50DF               	movf	indf2,w,c
  7955   002A62  EC63  F019         	call	_MTOUCH_Button_Initialize
  7956   002A66                     l6498:
  7957                           
  7958                           ;mcc_generated_files/touch/mtouch_button.c: 248:         Button_StateMachine[(uint8_t)bu
      +                          tton->state](button);
  7959   002A66  C031  F028         	movff	Button_Service@button,Button_State_Pressed@button
  7960   002A6A  C032  F029         	movff	Button_Service@button+1,Button_State_Pressed@button+1
  7961   002A6E  EE20 F002          	lfsr	2,2
  7962   002A72  5031               	movf	Button_Service@button^0,w,c
  7963   002A74  26D9               	addwf	fsr2l,f,c
  7964   002A76  5032               	movf	(Button_Service@button+1)^0,w,c
  7965   002A78  22DA               	addwfc	fsr2h,f,c
  7966   002A7A  50DF               	movf	indf2,w,c
  7967   002A7C  0D03               	mullw	3
  7968   002A7E  50F3               	movf	243,w,c
  7969   002A80  0FCD               	addlw	low _Button_StateMachine
  7970   002A82  6ED9               	movwf	fsr2l,c
  7971   002A84  6ADA               	clrf	fsr2h,c
  7972   002A86  D802               	call	u6098
  7973   002A88  EF50  F015         	goto	u6099
  7974   002A8C                     u6098:
  7975   002A8C  0005               	push	
  7976   002A8E  6EFA               	movwf	pclath,c
  7977   002A90  50DE               	movf	postinc2,w,c
  7978   002A92  6EFD               	movwf	tosl,c
  7979   002A94  50DE               	movf	postinc2,w,c
  7980   002A96  6EFE               	movwf	tosh,c
  7981   002A98  50DE               	movf	postinc2,w,c
  7982   002A9A  6EFF               	movwf	tosu,c
  7983   002A9C  50FA               	movf	pclath,w,c
  7984   002A9E  0012               	return		;indir
  7985   002AA0                     u6099:
  7986   002AA0                     l494:
  7987   002AA0  0012               	return		;funcret
  7988   002AA2                     __end_of_Button_Service:
  7989                           	callstack 0
  7990                           
  7991 ;; *************** function _MTOUCH_Sensor_wasSampled *****************
  7992 ;; Defined at:
  7993 ;;		line 851 in file "mcc_generated_files/touch/mtouch_sensor.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;  sensor          1    wreg     enum E13072
  7996 ;; Auto vars:     Size  Location     Type
  7997 ;;  sensor          1   20[COMRAM] enum E13072
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  1    wreg      _Bool 
  8000 ;; Registers used:
  8001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8002 ;; Tracked objects:
  8003 ;;		On entry : 0/0
  8004 ;;		On exit  : 0/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8008 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8010 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8011 ;;Total ram usage:        1 bytes
  8012 ;; Hardware stack levels used: 1
  8013 ;; Hardware stack levels required when called: 6
  8014 ;; This function calls:
  8015 ;;		Nothing
  8016 ;; This function is called by:
  8017 ;;		_Button_Service
  8018 ;;		_MTOUCH_Sensor_isSamplingComplete
  8019 ;;		_Sensor_scheduleNextScan
  8020 ;; This function uses a non-reentrant model
  8021 ;;
  8022                           
  8023                           	psect	text64
  8024   00374C                     __ptext64:
  8025                           	callstack 0
  8026   00374C                     _MTOUCH_Sensor_wasSampled:
  8027                           	callstack 20
  8028                           
  8029                           ;incstack = 0
  8030                           ;MTOUCH_Sensor_wasSampled@sensor stored from wreg
  8031   00374C  6E15               	movwf	MTOUCH_Sensor_wasSampled@sensor^0,c
  8032   00374E                     
  8033                           ;mcc_generated_files/touch/mtouch_sensor.c: 851: _Bool MTOUCH_Sensor_wasSampled(enum mto
      +                          uch_sensor_names sensor);mcc_generated_files/touch/mtouch_sensor.c: 852: {;mcc_generated
      +                          _files/touch/mtouch_sensor.c: 853:     if(sensor < 5u)
  8034   00374E  0E05               	movlw	5
  8035   003750  6015               	cpfslt	MTOUCH_Sensor_wasSampled@sensor^0,c
  8036   003752  EFAD  F01B         	goto	u5161
  8037   003756  EFAF  F01B         	goto	u5160
  8038   00375A                     u5161:
  8039   00375A  EFC1  F01B         	goto	l5962
  8040   00375E                     u5160:
  8041   00375E                     
  8042                           ;mcc_generated_files/touch/mtouch_sensor.c: 854:         return (_Bool)mtouch_sensor[sen
      +                          sor].sampled;
  8043   00375E  5015               	movf	MTOUCH_Sensor_wasSampled@sensor^0,w,c
  8044   003760  0D0A               	mullw	10
  8045   003762  50F3               	movf	243,w,c
  8046   003764  0FA4               	addlw	low (_mtouch_sensor+9)
  8047   003766  6ED9               	movwf	fsr2l,c
  8048   003768  6ADA               	clrf	fsr2h,c
  8049   00376A  0100               	movlb	0	; () banked
  8050   00376C  B2DF               	btfsc	indf2,1,c
  8051   00376E  EFBB  F01B         	goto	u5171
  8052   003772  EFBE  F01B         	goto	u5170
  8053   003776                     u5171:
  8054   003776  0E01               	movlw	1
  8055   003778  EFBF  F01B         	goto	u5176
  8056   00377C                     u5170:
  8057   00377C  0E00               	movlw	0
  8058   00377E                     u5176:
  8059   00377E  EFC2  F01B         	goto	l1330
  8060   003782                     l5962:
  8061                           
  8062                           ;mcc_generated_files/touch/mtouch_sensor.c: 856:         return 0;
  8063   003782  0E00               	movlw	0
  8064   003784                     l1330:
  8065   003784  0012               	return		;funcret
  8066   003786                     __end_of_MTOUCH_Sensor_wasSampled:
  8067                           	callstack 0
  8068                           
  8069 ;; *************** function _MTOUCH_Sensor_isCalibrated *****************
  8070 ;; Defined at:
  8071 ;;		line 803 in file "mcc_generated_files/touch/mtouch_sensor.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;  sensor          1    wreg     enum E13072
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;  sensor          1   20[COMRAM] enum E13072
  8076 ;; Return value:  Size  Location     Type
  8077 ;;                  1    wreg      _Bool 
  8078 ;; Registers used:
  8079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8080 ;; Tracked objects:
  8081 ;;		On entry : 0/0
  8082 ;;		On exit  : 0/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8088 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8089 ;;Total ram usage:        1 bytes
  8090 ;; Hardware stack levels used: 1
  8091 ;; Hardware stack levels required when called: 6
  8092 ;; This function calls:
  8093 ;;		Nothing
  8094 ;; This function is called by:
  8095 ;;		_Button_Service
  8096 ;; This function uses a non-reentrant model
  8097 ;;
  8098                           
  8099                           	psect	text65
  8100   003786                     __ptext65:
  8101                           	callstack 0
  8102   003786                     _MTOUCH_Sensor_isCalibrated:
  8103                           	callstack 21
  8104                           
  8105                           ;incstack = 0
  8106                           ;MTOUCH_Sensor_isCalibrated@sensor stored from wreg
  8107   003786  6E15               	movwf	MTOUCH_Sensor_isCalibrated@sensor^0,c
  8108   003788                     
  8109                           ;mcc_generated_files/touch/mtouch_sensor.c: 803: _Bool MTOUCH_Sensor_isCalibrated(enum m
      +                          touch_sensor_names sensor);mcc_generated_files/touch/mtouch_sensor.c: 804: {;mcc_generat
      +                          ed_files/touch/mtouch_sensor.c: 805:     if(sensor < 5u)
  8110   003788  0E05               	movlw	5
  8111   00378A  6015               	cpfslt	MTOUCH_Sensor_isCalibrated@sensor^0,c
  8112   00378C  EFCA  F01B         	goto	u5651
  8113   003790  EFCC  F01B         	goto	u5650
  8114   003794                     u5651:
  8115   003794  EFDE  F01B         	goto	l6254
  8116   003798                     u5650:
  8117   003798                     
  8118                           ;mcc_generated_files/touch/mtouch_sensor.c: 806:         return (_Bool)mtouch_sensor[sen
      +                          sor].calibrated;
  8119   003798  5015               	movf	MTOUCH_Sensor_isCalibrated@sensor^0,w,c
  8120   00379A  0D0A               	mullw	10
  8121   00379C  50F3               	movf	243,w,c
  8122   00379E  0FA4               	addlw	low (_mtouch_sensor+9)
  8123   0037A0  6ED9               	movwf	fsr2l,c
  8124   0037A2  6ADA               	clrf	fsr2h,c
  8125   0037A4  0100               	movlb	0	; () banked
  8126   0037A6  B6DF               	btfsc	indf2,3,c
  8127   0037A8  EFD8  F01B         	goto	u5661
  8128   0037AC  EFDB  F01B         	goto	u5660
  8129   0037B0                     u5661:
  8130   0037B0  0E01               	movlw	1
  8131   0037B2  EFDC  F01B         	goto	u5666
  8132   0037B6                     u5660:
  8133   0037B6  0E00               	movlw	0
  8134   0037B8                     u5666:
  8135   0037B8  EFDF  F01B         	goto	l1308
  8136   0037BC                     l6254:
  8137                           
  8138                           ;mcc_generated_files/touch/mtouch_sensor.c: 808:         return 0;
  8139   0037BC  0E00               	movlw	0
  8140   0037BE                     l1308:
  8141   0037BE  0012               	return		;funcret
  8142   0037C0                     __end_of_MTOUCH_Sensor_isCalibrated:
  8143                           	callstack 0
  8144                           
  8145 ;; *************** function _Button_State_NotPressed *****************
  8146 ;; Defined at:
  8147 ;;		line 272 in file "mcc_generated_files/touch/mtouch_button.c"
  8148 ;; Parameters:    Size  Location     Type
  8149 ;;  button          2   39[COMRAM] PTR struct .
  8150 ;;		 -> mtouch_button(85), 
  8151 ;; Auto vars:     Size  Location     Type
  8152 ;;		None
  8153 ;; Return value:  Size  Location     Type
  8154 ;;                  1    wreg      void 
  8155 ;; Registers used:
  8156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8157 ;; Tracked objects:
  8158 ;;		On entry : 0/0
  8159 ;;		On exit  : 0/0
  8160 ;;		Unchanged: 0/0
  8161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8162 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8164 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8165 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8166 ;;Total ram usage:        5 bytes
  8167 ;; Hardware stack levels used: 1
  8168 ;; Hardware stack levels required when called: 8
  8169 ;; This function calls:
  8170 ;;		_Button_Baseline_Update
  8171 ;;		_Button_Check_AKS_Block
  8172 ;;		_Button_DefaultCallback
  8173 ;;		_MTOUCH_Button_Initialize
  8174 ;; This function is called by:
  8175 ;;		_Button_Service
  8176 ;; This function uses a non-reentrant model
  8177 ;;
  8178                           
  8179                           	psect	text66
  8180   00154A                     __ptext66:
  8181                           	callstack 0
  8182   00154A                     _Button_State_NotPressed:
  8183                           	callstack 19
  8184   00154A                     
  8185                           ;mcc_generated_files/touch/mtouch_button.c: 272: static void Button_State_NotPressed(mto
      +                          uch_button_t* button);mcc_generated_files/touch/mtouch_button.c: 273: {;mcc_generated_fi
      +                          les/touch/mtouch_button.c: 275:     if ((button->deviation) < (mtouch_button_deviation_t
      +                          )(-button->threshold))
  8186   00154A  EE20 F00F          	lfsr	2,15
  8187   00154E  5028               	movf	Button_State_NotPressed@button^0,w,c
  8188   001550  26D9               	addwf	fsr2l,f,c
  8189   001552  5029               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8190   001554  22DA               	addwfc	fsr2h,f,c
  8191   001556  50DF               	movf	indf2,w,c
  8192   001558  0800               	sublw	0
  8193   00155A  6E2A               	movwf	??_Button_State_NotPressed^0,c
  8194   00155C  EE20 F00A          	lfsr	2,10
  8195   001560  5028               	movf	Button_State_NotPressed@button^0,w,c
  8196   001562  26D9               	addwf	fsr2l,f,c
  8197   001564  5029               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8198   001566  22DA               	addwfc	fsr2h,f,c
  8199   001568  50DE               	movf	postinc2,w,c
  8200   00156A  0A80               	xorlw	128
  8201   00156C  6E2C               	movwf	(??_Button_State_NotPressed+2)^0,c
  8202   00156E  502A               	movf	??_Button_State_NotPressed^0,w,c
  8203   001570  0A80               	xorlw	128
  8204   001572  5C2C               	subwf	(??_Button_State_NotPressed+2)^0,w,c
  8205   001574  B0D8               	btfsc	status,0,c
  8206   001576  EFBF  F00A         	goto	u5751
  8207   00157A  EFC1  F00A         	goto	u5750
  8208   00157E                     u5751:
  8209   00157E  EFED  F00A         	goto	l6300
  8210   001582                     u5750:
  8211   001582                     
  8212                           ;mcc_generated_files/touch/mtouch_button.c: 276:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 277:         (button->counter)++;
  8213   001582  EE20 F00B          	lfsr	2,11
  8214   001586  5028               	movf	Button_State_NotPressed@button^0,w,c
  8215   001588  26D9               	addwf	fsr2l,f,c
  8216   00158A  5029               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8217   00158C  22DA               	addwfc	fsr2h,f,c
  8218   00158E  2ADE               	incf	postinc2,f,c
  8219   001590  0E00               	movlw	0
  8220   001592  22DD               	addwfc	postdec2,f,c
  8221                           
  8222                           ;mcc_generated_files/touch/mtouch_button.c: 278:         if ((button->counter) > (mtouch
      +                          _button_statecounter_t)((mtouch_button_statecounter_t)64u))
  8223   001594  EE20 F00B          	lfsr	2,11
  8224   001598  5028               	movf	Button_State_NotPressed@button^0,w,c
  8225   00159A  26D9               	addwf	fsr2l,f,c
  8226   00159C  5029               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8227   00159E  22DA               	addwfc	fsr2h,f,c
  8228   0015A0  0E01               	movlw	1
  8229   0015A2  50DB               	movf	plusw2,w,c
  8230   0015A4  E109               	bnz	u5760
  8231   0015A6  0E41               	movlw	65
  8232   0015A8  5CDE               	subwf	postinc2,w,c
  8233   0015AA  A0D8               	btfss	status,0,c
  8234   0015AC  EFDA  F00A         	goto	u5761
  8235   0015B0  EFDC  F00A         	goto	u5760
  8236   0015B4                     u5761:
  8237   0015B4  EF4A  F00B         	goto	l505
  8238   0015B8                     u5760:
  8239   0015B8                     
  8240                           ;mcc_generated_files/touch/mtouch_button.c: 279:         {;mcc_generated_files/touch/mto
      +                          uch_button.c: 280:             button->counter = (mtouch_button_statecounter_t)0;
  8241   0015B8  EE20 F00B          	lfsr	2,11
  8242   0015BC  5028               	movf	Button_State_NotPressed@button^0,w,c
  8243   0015BE  26D9               	addwf	fsr2l,f,c
  8244   0015C0  5029               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8245   0015C2  22DA               	addwfc	fsr2h,f,c
  8246   0015C4  6ADE               	clrf	postinc2,c
  8247   0015C6  6ADD               	clrf	postdec2,c
  8248   0015C8                     
  8249                           ;mcc_generated_files/touch/mtouch_button.c: 281:             MTOUCH_Button_Initialize(bu
      +                          tton->name);
  8250   0015C8  C028  FFD9         	movff	Button_State_NotPressed@button,fsr2l
  8251   0015CC  C029  FFDA         	movff	Button_State_NotPressed@button+1,fsr2h
  8252   0015D0  50DF               	movf	indf2,w,c
  8253   0015D2  EC63  F019         	call	_MTOUCH_Button_Initialize
  8254   0015D6  EF4A  F00B         	goto	l505
  8255   0015DA                     l6300:
  8256   0015DA  EE20 F00A          	lfsr	2,10
  8257   0015DE  5028               	movf	Button_State_NotPressed@button^0,w,c
  8258   0015E0  26D9               	addwf	fsr2l,f,c
  8259   0015E2  5029               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8260   0015E4  22DA               	addwfc	fsr2h,f,c
  8261   0015E6  50DF               	movf	indf2,w,c
  8262   0015E8  6E2A               	movwf	??_Button_State_NotPressed^0,c
  8263   0015EA  EE20 F00F          	lfsr	2,15
  8264   0015EE  5028               	movf	Button_State_NotPressed@button^0,w,c
  8265   0015F0  26D9               	addwf	fsr2l,f,c
  8266   0015F2  5029               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8267   0015F4  22DA               	addwfc	fsr2h,f,c
  8268   0015F6  50DF               	movf	indf2,w,c
  8269   0015F8  6E2B               	movwf	(??_Button_State_NotPressed+1)^0,c
  8270   0015FA  502B               	movf	(??_Button_State_NotPressed+1)^0,w,c
  8271   0015FC  80D8               	bsf	status,0,c
  8272   0015FE  84D8               	bsf	status,2,c
  8273   001600  AE2A               	btfss	??_Button_State_NotPressed^0,7,c
  8274   001602  5C2A               	subwf	??_Button_State_NotPressed^0,w,c
  8275   001604  A0D8               	btfss	status,0,c
  8276   001606  84D8               	bsf	status,2,c
  8277   001608  B4D8               	btfsc	status,2,c
  8278   00160A  EF09  F00B         	goto	u5771
  8279   00160E  EF0B  F00B         	goto	u5770
  8280   001612                     u5771:
  8281   001612  EF42  F00B         	goto	l6312
  8282   001616                     u5770:
  8283   001616                     
  8284                           ;mcc_generated_files/touch/mtouch_button.c: 286:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 287:         if(button->aks_group != NO_AKS_GROUP)
  8285   001616  EE20 F003          	lfsr	2,3
  8286   00161A  5028               	movf	Button_State_NotPressed@button^0,w,c
  8287   00161C  26D9               	addwf	fsr2l,f,c
  8288   00161E  5029               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8289   001620  22DA               	addwfc	fsr2h,f,c
  8290   001622  50DF               	movf	indf2,w,c
  8291   001624  B4D8               	btfsc	status,2,c
  8292   001626  EF17  F00B         	goto	u5781
  8293   00162A  EF19  F00B         	goto	u5780
  8294   00162E                     u5781:
  8295   00162E  EF29  F00B         	goto	l6308
  8296   001632                     u5780:
  8297   001632                     
  8298                           ;mcc_generated_files/touch/mtouch_button.c: 288:         {;mcc_generated_files/touch/mto
      +                          uch_button.c: 289:             if(Button_Check_AKS_Block(button))
  8299   001632  C028  F01D         	movff	Button_State_NotPressed@button,Button_Check_AKS_Block@button
  8300   001636  C029  F01E         	movff	Button_State_NotPressed@button+1,Button_Check_AKS_Block@button+1
  8301   00163A  EC9D  F00F         	call	_Button_Check_AKS_Block	;wreg free
  8302   00163E  0900               	iorlw	0
  8303   001640  B4D8               	btfsc	status,2,c
  8304   001642  EF25  F00B         	goto	u5791
  8305   001646  EF27  F00B         	goto	u5790
  8306   00164A                     u5791:
  8307   00164A  EF29  F00B         	goto	l6308
  8308   00164E                     u5790:
  8309   00164E  EF99  F00B         	goto	l509
  8310   001652                     l6308:
  8311                           
  8312                           ;mcc_generated_files/touch/mtouch_button.c: 293:         button->state = MTOUCH_BUTTON_S
      +                          TATE_pressed;
  8313   001652  EE20 F002          	lfsr	2,2
  8314   001656  5028               	movf	Button_State_NotPressed@button^0,w,c
  8315   001658  26D9               	addwf	fsr2l,f,c
  8316   00165A  5029               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8317   00165C  22DA               	addwfc	fsr2h,f,c
  8318   00165E  0E02               	movlw	2
  8319   001660  6EDF               	movwf	indf2,c
  8320                           
  8321                           ;mcc_generated_files/touch/mtouch_button.c: 294:         button->counter = (mtouch_butto
      +                          n_statecounter_t)0;
  8322   001662  EE20 F00B          	lfsr	2,11
  8323   001666  5028               	movf	Button_State_NotPressed@button^0,w,c
  8324   001668  26D9               	addwf	fsr2l,f,c
  8325   00166A  5029               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8326   00166C  22DA               	addwfc	fsr2h,f,c
  8327   00166E  6ADE               	clrf	postinc2,c
  8328   001670  6ADD               	clrf	postdec2,c
  8329   001672                     
  8330                           ;mcc_generated_files/touch/mtouch_button.c: 295:         callback_pressed(button->name);
  8331   001672  C028  FFD9         	movff	Button_State_NotPressed@button,fsr2l
  8332   001676  C029  FFDA         	movff	Button_State_NotPressed@button+1,fsr2h
  8333   00167A  50DF               	movf	indf2,w,c
  8334   00167C  ECF3  F01E         	call	_Button_DefaultCallback
  8335                           
  8336                           ;mcc_generated_files/touch/mtouch_button.c: 296:     }
  8337   001680  EF4A  F00B         	goto	l505
  8338   001684                     l6312:
  8339                           
  8340                           ;mcc_generated_files/touch/mtouch_button.c: 298:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 300:         button->counter = (mtouch_button_statecounter_t)0;
  8341   001684  EE20 F00B          	lfsr	2,11
  8342   001688  5028               	movf	Button_State_NotPressed@button^0,w,c
  8343   00168A  26D9               	addwf	fsr2l,f,c
  8344   00168C  5029               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8345   00168E  22DA               	addwfc	fsr2h,f,c
  8346   001690  6ADE               	clrf	postinc2,c
  8347   001692  6ADD               	clrf	postdec2,c
  8348   001694                     l505:
  8349                           
  8350                           ;mcc_generated_files/touch/mtouch_button.c: 305:     if(button->aks_group != NO_AKS_GROU
      +                          P)
  8351   001694  EE20 F003          	lfsr	2,3
  8352   001698  5028               	movf	Button_State_NotPressed@button^0,w,c
  8353   00169A  26D9               	addwf	fsr2l,f,c
  8354   00169C  5029               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8355   00169E  22DA               	addwfc	fsr2h,f,c
  8356   0016A0  50DF               	movf	indf2,w,c
  8357   0016A2  B4D8               	btfsc	status,2,c
  8358   0016A4  EF56  F00B         	goto	u5801
  8359   0016A8  EF58  F00B         	goto	u5800
  8360   0016AC                     u5801:
  8361   0016AC  EF72  F00B         	goto	l6320
  8362   0016B0                     u5800:
  8363   0016B0                     
  8364                           ;mcc_generated_files/touch/mtouch_button.c: 306:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 307:         if(Button_Check_AKS_Block(button))
  8365   0016B0  C028  F01D         	movff	Button_State_NotPressed@button,Button_Check_AKS_Block@button
  8366   0016B4  C029  F01E         	movff	Button_State_NotPressed@button+1,Button_Check_AKS_Block@button+1
  8367   0016B8  EC9D  F00F         	call	_Button_Check_AKS_Block	;wreg free
  8368   0016BC  0900               	iorlw	0
  8369   0016BE  B4D8               	btfsc	status,2,c
  8370   0016C0  EF64  F00B         	goto	u5811
  8371   0016C4  EF66  F00B         	goto	u5810
  8372   0016C8                     u5811:
  8373   0016C8  EF72  F00B         	goto	l6320
  8374   0016CC                     u5810:
  8375   0016CC                     
  8376                           ;mcc_generated_files/touch/mtouch_button.c: 308:         {;mcc_generated_files/touch/mto
      +                          uch_button.c: 309:             button->baseline_count = (mtouch_button_baselinecounter_t
      +                          )
  8377   0016CC  EE20 F00D          	lfsr	2,13
  8378   0016D0  5028               	movf	Button_State_NotPressed@button^0,w,c
  8379   0016D2  26D9               	addwf	fsr2l,f,c
  8380   0016D4  5029               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8381   0016D6  22DA               	addwfc	fsr2h,f,c
  8382   0016D8  0EFF               	movlw	255
  8383   0016DA  6EDE               	movwf	postinc2,c
  8384   0016DC  0EFB               	movlw	251
  8385   0016DE  6EDD               	movwf	postdec2,c
  8386   0016E0  EF99  F00B         	goto	l509
  8387   0016E4                     l6320:
  8388                           
  8389                           ;mcc_generated_files/touch/mtouch_button.c: 315:     (button->baseline_count)++;
  8390   0016E4  EE20 F00D          	lfsr	2,13
  8391   0016E8  5028               	movf	Button_State_NotPressed@button^0,w,c
  8392   0016EA  26D9               	addwf	fsr2l,f,c
  8393   0016EC  5029               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8394   0016EE  22DA               	addwfc	fsr2h,f,c
  8395   0016F0  2ADE               	incf	postinc2,f,c
  8396   0016F2  0E00               	movlw	0
  8397   0016F4  22DD               	addwfc	postdec2,f,c
  8398                           
  8399                           ;mcc_generated_files/touch/mtouch_button.c: 316:     if ((button->baseline_count) == ((m
      +                          touch_button_baselinecounter_t)64u))
  8400   0016F6  EE20 F00D          	lfsr	2,13
  8401   0016FA  5028               	movf	Button_State_NotPressed@button^0,w,c
  8402   0016FC  26D9               	addwf	fsr2l,f,c
  8403   0016FE  5029               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8404   001700  22DA               	addwfc	fsr2h,f,c
  8405   001702  0E40               	movlw	64
  8406   001704  18DE               	xorwf	postinc2,w,c
  8407   001706  10DE               	iorwf	postinc2,w,c
  8408   001708  A4D8               	btfss	status,2,c
  8409   00170A  EF89  F00B         	goto	u5821
  8410   00170E  EF8B  F00B         	goto	u5820
  8411   001712                     u5821:
  8412   001712  EF99  F00B         	goto	l509
  8413   001716                     u5820:
  8414   001716                     
  8415                           ;mcc_generated_files/touch/mtouch_button.c: 317:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 318:         button->baseline_count = (mtouch_button_baselinecounter_t)0;
  8416   001716  EE20 F00D          	lfsr	2,13
  8417   00171A  5028               	movf	Button_State_NotPressed@button^0,w,c
  8418   00171C  26D9               	addwf	fsr2l,f,c
  8419   00171E  5029               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8420   001720  22DA               	addwfc	fsr2h,f,c
  8421   001722  6ADE               	clrf	postinc2,c
  8422   001724  6ADD               	clrf	postdec2,c
  8423   001726                     
  8424                           ;mcc_generated_files/touch/mtouch_button.c: 319:         Button_Baseline_Update(button);
  8425   001726  C028  F015         	movff	Button_State_NotPressed@button,Button_Baseline_Update@button
  8426   00172A  C029  F016         	movff	Button_State_NotPressed@button+1,Button_Baseline_Update@button+1
  8427   00172E  EC93  F011         	call	_Button_Baseline_Update	;wreg free
  8428   001732                     l509:
  8429   001732  0012               	return		;funcret
  8430   001734                     __end_of_Button_State_NotPressed:
  8431                           	callstack 0
  8432                           
  8433 ;; *************** function _Button_State_Initializing *****************
  8434 ;; Defined at:
  8435 ;;		line 252 in file "mcc_generated_files/touch/mtouch_button.c"
  8436 ;; Parameters:    Size  Location     Type
  8437 ;;  button          2   39[COMRAM] PTR struct .
  8438 ;;		 -> mtouch_button(85), 
  8439 ;; Auto vars:     Size  Location     Type
  8440 ;;		None
  8441 ;; Return value:  Size  Location     Type
  8442 ;;                  1    wreg      void 
  8443 ;; Registers used:
  8444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8445 ;; Tracked objects:
  8446 ;;		On entry : 0/0
  8447 ;;		On exit  : 0/0
  8448 ;;		Unchanged: 0/0
  8449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8450 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8452 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8453 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8454 ;;Total ram usage:        6 bytes
  8455 ;; Hardware stack levels used: 1
  8456 ;; Hardware stack levels required when called: 8
  8457 ;; This function calls:
  8458 ;;		_Button_Baseline_Initialize
  8459 ;;		_Button_Baseline_Update
  8460 ;; This function is called by:
  8461 ;;		_Button_Service
  8462 ;; This function uses a non-reentrant model
  8463 ;;
  8464                           
  8465                           	psect	text67
  8466   002816                     __ptext67:
  8467                           	callstack 0
  8468   002816                     _Button_State_Initializing:
  8469                           	callstack 19
  8470   002816                     
  8471                           ;mcc_generated_files/touch/mtouch_button.c: 252: static void Button_State_Initializing(m
      +                          touch_button_t* button);mcc_generated_files/touch/mtouch_button.c: 253: {;mcc_generated_
      +                          files/touch/mtouch_button.c: 255:     if ((button->counter) <= (mtouch_button_statecount
      +                          er_t)((mtouch_button_baselinecounter_t)16u)/2)
  8472   002816  EE20 F00B          	lfsr	2,11
  8473   00281A  5028               	movf	Button_State_Initializing@button^0,w,c
  8474   00281C  26D9               	addwf	fsr2l,f,c
  8475   00281E  5029               	movf	(Button_State_Initializing@button+1)^0,w,c
  8476   002820  22DA               	addwfc	fsr2h,f,c
  8477   002822  0E01               	movlw	1
  8478   002824  50DB               	movf	plusw2,w,c
  8479   002826  E107               	bnz	u5721
  8480   002828  0E09               	movlw	9
  8481   00282A  5CDE               	subwf	postinc2,w,c
  8482   00282C  B0D8               	btfsc	status,0,c
  8483   00282E  EF1B  F014         	goto	u5721
  8484   002832  EF1D  F014         	goto	u5720
  8485   002836                     u5721:
  8486   002836  EF25  F014         	goto	l6284
  8487   00283A                     u5720:
  8488   00283A                     
  8489                           ;mcc_generated_files/touch/mtouch_button.c: 256:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 257:         Button_Baseline_Initialize(button);
  8490   00283A  C028  F018         	movff	Button_State_Initializing@button,Button_Baseline_Initialize@button
  8491   00283E  C029  F019         	movff	Button_State_Initializing@button+1,Button_Baseline_Initialize@button+1
  8492   002842  ECFB  F019         	call	_Button_Baseline_Initialize	;wreg free
  8493                           
  8494                           ;mcc_generated_files/touch/mtouch_button.c: 258:     } else {
  8495   002846  EF2B  F014         	goto	l6286
  8496   00284A                     l6284:
  8497                           
  8498                           ;mcc_generated_files/touch/mtouch_button.c: 259:         Button_Baseline_Update(button);
  8499   00284A  C028  F015         	movff	Button_State_Initializing@button,Button_Baseline_Update@button
  8500   00284E  C029  F016         	movff	Button_State_Initializing@button+1,Button_Baseline_Update@button+1
  8501   002852  EC93  F011         	call	_Button_Baseline_Update	;wreg free
  8502   002856                     l6286:
  8503                           
  8504                           ;mcc_generated_files/touch/mtouch_button.c: 263:     (button->counter)++;
  8505   002856  EE20 F00B          	lfsr	2,11
  8506   00285A  5028               	movf	Button_State_Initializing@button^0,w,c
  8507   00285C  26D9               	addwf	fsr2l,f,c
  8508   00285E  5029               	movf	(Button_State_Initializing@button+1)^0,w,c
  8509   002860  22DA               	addwfc	fsr2h,f,c
  8510   002862  2ADE               	incf	postinc2,f,c
  8511   002864  0E00               	movlw	0
  8512   002866  22DD               	addwfc	postdec2,f,c
  8513   002868                     
  8514                           ;mcc_generated_files/touch/mtouch_button.c: 264:     if ((button->counter) >= (mtouch_bu
      +                          tton_statecounter_t)((mtouch_button_baselinecounter_t)16u))
  8515   002868  EE20 F00B          	lfsr	2,11
  8516   00286C  5028               	movf	Button_State_Initializing@button^0,w,c
  8517   00286E  26D9               	addwf	fsr2l,f,c
  8518   002870  5029               	movf	(Button_State_Initializing@button+1)^0,w,c
  8519   002872  22DA               	addwfc	fsr2h,f,c
  8520   002874  0E01               	movlw	1
  8521   002876  50DB               	movf	plusw2,w,c
  8522   002878  E109               	bnz	u5730
  8523   00287A  0E10               	movlw	16
  8524   00287C  5CDE               	subwf	postinc2,w,c
  8525   00287E  A0D8               	btfss	status,0,c
  8526   002880  EF44  F014         	goto	u5731
  8527   002884  EF46  F014         	goto	u5730
  8528   002888                     u5731:
  8529   002888  EF79  F014         	goto	l500
  8530   00288C                     u5730:
  8531   00288C                     
  8532                           ;mcc_generated_files/touch/mtouch_button.c: 265:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 266:         button->reading = (mtouch_button_reading_t)((button->baseline)>>(
      +                          (uint8_t)4u));
  8533   00288C  EE20 F006          	lfsr	2,6
  8534   002890  5028               	movf	Button_State_Initializing@button^0,w,c
  8535   002892  26D9               	addwf	fsr2l,f,c
  8536   002894  5029               	movf	(Button_State_Initializing@button+1)^0,w,c
  8537   002896  22DA               	addwfc	fsr2h,f,c
  8538   002898  CFDE F02A          	movff	postinc2,??_Button_State_Initializing
  8539   00289C  CFDE F02B          	movff	postinc2,??_Button_State_Initializing+1
  8540   0028A0  CFDE F02C          	movff	postinc2,??_Button_State_Initializing+2
  8541   0028A4  CFDE F02D          	movff	postinc2,??_Button_State_Initializing+3
  8542   0028A8  0E05               	movlw	5
  8543   0028AA  EF5C  F014         	goto	u5740
  8544   0028AE                     u5745:
  8545   0028AE  90D8               	bcf	status,0,c
  8546   0028B0  322D               	rrcf	(??_Button_State_Initializing+3)^0,f,c
  8547   0028B2  322C               	rrcf	(??_Button_State_Initializing+2)^0,f,c
  8548   0028B4  322B               	rrcf	(??_Button_State_Initializing+1)^0,f,c
  8549   0028B6  322A               	rrcf	??_Button_State_Initializing^0,f,c
  8550   0028B8                     u5740:
  8551   0028B8  2EE8               	decfsz	wreg,f,c
  8552   0028BA  EF57  F014         	goto	u5745
  8553   0028BE  EE20 F004          	lfsr	2,4
  8554   0028C2  5028               	movf	Button_State_Initializing@button^0,w,c
  8555   0028C4  26D9               	addwf	fsr2l,f,c
  8556   0028C6  5029               	movf	(Button_State_Initializing@button+1)^0,w,c
  8557   0028C8  22DA               	addwfc	fsr2h,f,c
  8558   0028CA  C02A  FFDE         	movff	??_Button_State_Initializing,postinc2
  8559   0028CE  C02B  FFDD         	movff	??_Button_State_Initializing+1,postdec2
  8560                           
  8561                           ;mcc_generated_files/touch/mtouch_button.c: 267:         button->state = MTOUCH_BUTTON_S
      +                          TATE_notPressed;
  8562   0028D2  EE20 F002          	lfsr	2,2
  8563   0028D6  5028               	movf	Button_State_Initializing@button^0,w,c
  8564   0028D8  26D9               	addwf	fsr2l,f,c
  8565   0028DA  5029               	movf	(Button_State_Initializing@button+1)^0,w,c
  8566   0028DC  22DA               	addwfc	fsr2h,f,c
  8567   0028DE  0E01               	movlw	1
  8568   0028E0  6EDF               	movwf	indf2,c
  8569                           
  8570                           ;mcc_generated_files/touch/mtouch_button.c: 268:         button->counter = (mtouch_butto
      +                          n_statecounter_t)0;
  8571   0028E2  EE20 F00B          	lfsr	2,11
  8572   0028E6  5028               	movf	Button_State_Initializing@button^0,w,c
  8573   0028E8  26D9               	addwf	fsr2l,f,c
  8574   0028EA  5029               	movf	(Button_State_Initializing@button+1)^0,w,c
  8575   0028EC  22DA               	addwfc	fsr2h,f,c
  8576   0028EE  6ADE               	clrf	postinc2,c
  8577   0028F0  6ADD               	clrf	postdec2,c
  8578   0028F2                     l500:
  8579   0028F2  0012               	return		;funcret
  8580   0028F4                     __end_of_Button_State_Initializing:
  8581                           	callstack 0
  8582                           
  8583 ;; *************** function _Button_State_Pressed *****************
  8584 ;; Defined at:
  8585 ;;		line 323 in file "mcc_generated_files/touch/mtouch_button.c"
  8586 ;; Parameters:    Size  Location     Type
  8587 ;;  button          2   39[COMRAM] PTR struct .
  8588 ;;		 -> mtouch_button(85), 
  8589 ;; Auto vars:     Size  Location     Type
  8590 ;;		None
  8591 ;; Return value:  Size  Location     Type
  8592 ;;                  1    wreg      void 
  8593 ;; Registers used:
  8594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  8595 ;; Tracked objects:
  8596 ;;		On entry : 0/0
  8597 ;;		On exit  : 0/0
  8598 ;;		Unchanged: 0/0
  8599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8602 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8603 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8604 ;;Total ram usage:        7 bytes
  8605 ;; Hardware stack levels used: 1
  8606 ;; Hardware stack levels required when called: 8
  8607 ;; This function calls:
  8608 ;;		_Button_DefaultCallback
  8609 ;;		_MTOUCH_Button_Initialize
  8610 ;;		_ProcessButtonRelease
  8611 ;; This function is called by:
  8612 ;;		_Button_Service
  8613 ;; This function uses a non-reentrant model
  8614 ;;
  8615                           
  8616                           	psect	text68
  8617   002436                     __ptext68:
  8618                           	callstack 0
  8619   002436                     _Button_State_Pressed:
  8620                           	callstack 19
  8621   002436                     
  8622                           ;mcc_generated_files/touch/mtouch_button.c: 323: static void Button_State_Pressed(mtouch
      +                          _button_t* button);mcc_generated_files/touch/mtouch_button.c: 324: {;mcc_generated_files
      +                          /touch/mtouch_button.c: 326:     if ((button->counter) >= ((mtouch_button_statecounter_t
      +                          )1000u))
  8623   002436  EE20 F00B          	lfsr	2,11
  8624   00243A  5028               	movf	Button_State_Pressed@button^0,w,c
  8625   00243C  26D9               	addwf	fsr2l,f,c
  8626   00243E  5029               	movf	(Button_State_Pressed@button+1)^0,w,c
  8627   002440  22DA               	addwfc	fsr2h,f,c
  8628   002442  0EE8               	movlw	232
  8629   002444  5CDE               	subwf	postinc2,w,c
  8630   002446  0E03               	movlw	3
  8631   002448  58DE               	subwfb	postinc2,w,c
  8632   00244A  A0D8               	btfss	status,0,c
  8633   00244C  EF2A  F012         	goto	u5831
  8634   002450  EF2C  F012         	goto	u5830
  8635   002454                     u5831:
  8636   002454  EF48  F012         	goto	l6332
  8637   002458                     u5830:
  8638   002458                     
  8639                           ;mcc_generated_files/touch/mtouch_button.c: 327:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 328:         MTOUCH_Button_Initialize(button->name);
  8640   002458  C028  FFD9         	movff	Button_State_Pressed@button,fsr2l
  8641   00245C  C029  FFDA         	movff	Button_State_Pressed@button+1,fsr2h
  8642   002460  50DF               	movf	indf2,w,c
  8643   002462  EC63  F019         	call	_MTOUCH_Button_Initialize
  8644   002466                     
  8645                           ;mcc_generated_files/touch/mtouch_button.c: 329:         callback_notPressed(button->nam
      +                          e);
  8646   002466  D802               	call	u5848
  8647   002468  EF46  F012         	goto	u5849
  8648   00246C                     u5848:
  8649   00246C  0005               	push	
  8650   00246E  6EFA               	movwf	pclath,c
  8651   002470  0100               	movlb	0	; () banked
  8652   002472  51E5               	movf	_callback_notPressed& (0+255),w,b
  8653   002474  6EFD               	movwf	tosl,c
  8654   002476  51E6               	movf	(_callback_notPressed+1)& (0+255),w,b
  8655   002478  6EFE               	movwf	tosh,c
  8656   00247A  51E7               	movf	(_callback_notPressed+2)& (0+255),w,b
  8657   00247C  6EFF               	movwf	tosu,c
  8658   00247E  50FA               	movf	pclath,w,c
  8659   002480  C028  FFD9         	movff	Button_State_Pressed@button,fsr2l
  8660   002484  C029  FFDA         	movff	Button_State_Pressed@button+1,fsr2h
  8661   002488  50DF               	movf	indf2,w,c
  8662   00248A  0012               	return		;indir
  8663   00248C                     u5849:
  8664                           
  8665                           ;mcc_generated_files/touch/mtouch_button.c: 330:     }
  8666   00248C  EF9D  F012         	goto	l519
  8667   002490                     l6332:
  8668   002490  EE20 F00F          	lfsr	2,15
  8669   002494  5028               	movf	Button_State_Pressed@button^0,w,c
  8670   002496  26D9               	addwf	fsr2l,f,c
  8671   002498  5029               	movf	(Button_State_Pressed@button+1)^0,w,c
  8672   00249A  22DA               	addwfc	fsr2h,f,c
  8673   00249C  50DF               	movf	indf2,w,c
  8674   00249E  6E2A               	movwf	??_Button_State_Pressed^0,c
  8675   0024A0  90D8               	bcf	status,0,c
  8676   0024A2  322A               	rrcf	??_Button_State_Pressed^0,f,c
  8677   0024A4  EE20 F00F          	lfsr	2,15
  8678   0024A8  5028               	movf	Button_State_Pressed@button^0,w,c
  8679   0024AA  26D9               	addwf	fsr2l,f,c
  8680   0024AC  5029               	movf	(Button_State_Pressed@button+1)^0,w,c
  8681   0024AE  22DA               	addwfc	fsr2h,f,c
  8682   0024B0  50DF               	movf	indf2,w,c
  8683   0024B2  6E2B               	movwf	(??_Button_State_Pressed+1)^0,c
  8684   0024B4  502A               	movf	??_Button_State_Pressed^0,w,c
  8685   0024B6  5C2B               	subwf	(??_Button_State_Pressed+1)^0,w,c
  8686   0024B8  6E2C               	movwf	(??_Button_State_Pressed+2)^0,c
  8687   0024BA  EE20 F00A          	lfsr	2,10
  8688   0024BE  5028               	movf	Button_State_Pressed@button^0,w,c
  8689   0024C0  26D9               	addwf	fsr2l,f,c
  8690   0024C2  5029               	movf	(Button_State_Pressed@button+1)^0,w,c
  8691   0024C4  22DA               	addwfc	fsr2h,f,c
  8692   0024C6  50DE               	movf	postinc2,w,c
  8693   0024C8  0A80               	xorlw	128
  8694   0024CA  6E2E               	movwf	(??_Button_State_Pressed+4)^0,c
  8695   0024CC  502C               	movf	(??_Button_State_Pressed+2)^0,w,c
  8696   0024CE  0A80               	xorlw	128
  8697   0024D0  5C2E               	subwf	(??_Button_State_Pressed+4)^0,w,c
  8698   0024D2  B0D8               	btfsc	status,0,c
  8699   0024D4  EF6E  F012         	goto	u5851
  8700   0024D8  EF70  F012         	goto	u5850
  8701   0024DC                     u5851:
  8702   0024DC  EF9D  F012         	goto	l519
  8703   0024E0                     u5850:
  8704   0024E0                     
  8705                           ;mcc_generated_files/touch/mtouch_button.c: 334:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 335:         button->state = MTOUCH_BUTTON_STATE_notPressed;
  8706   0024E0  EE20 F002          	lfsr	2,2
  8707   0024E4  5028               	movf	Button_State_Pressed@button^0,w,c
  8708   0024E6  26D9               	addwf	fsr2l,f,c
  8709   0024E8  5029               	movf	(Button_State_Pressed@button+1)^0,w,c
  8710   0024EA  22DA               	addwfc	fsr2h,f,c
  8711   0024EC  0E01               	movlw	1
  8712   0024EE  6EDF               	movwf	indf2,c
  8713                           
  8714                           ;mcc_generated_files/touch/mtouch_button.c: 336:         button->counter = (mtouch_butto
      +                          n_statecounter_t)0;
  8715   0024F0  EE20 F00B          	lfsr	2,11
  8716   0024F4  5028               	movf	Button_State_Pressed@button^0,w,c
  8717   0024F6  26D9               	addwf	fsr2l,f,c
  8718   0024F8  5029               	movf	(Button_State_Pressed@button+1)^0,w,c
  8719   0024FA  22DA               	addwfc	fsr2h,f,c
  8720   0024FC  6ADE               	clrf	postinc2,c
  8721   0024FE  6ADD               	clrf	postdec2,c
  8722                           
  8723                           ;mcc_generated_files/touch/mtouch_button.c: 337:         button->baseline_count = (mtouc
      +                          h_button_baselinecounter_t)((0xffff))-((mtouch_button_baselinecounter_t)1024u);
  8724   002500  EE20 F00D          	lfsr	2,13
  8725   002504  5028               	movf	Button_State_Pressed@button^0,w,c
  8726   002506  26D9               	addwf	fsr2l,f,c
  8727   002508  5029               	movf	(Button_State_Pressed@button+1)^0,w,c
  8728   00250A  22DA               	addwfc	fsr2h,f,c
  8729   00250C  0EFF               	movlw	255
  8730   00250E  6EDE               	movwf	postinc2,c
  8731   002510  0EFB               	movlw	251
  8732   002512  6EDD               	movwf	postdec2,c
  8733   002514                     
  8734                           ;mcc_generated_files/touch/mtouch_button.c: 338:         callback_notPressed(button->nam
      +                          e);
  8735   002514  D802               	call	u5868
  8736   002516  EF9D  F012         	goto	u5869
  8737   00251A                     u5868:
  8738   00251A  0005               	push	
  8739   00251C  6EFA               	movwf	pclath,c
  8740   00251E  0100               	movlb	0	; () banked
  8741   002520  51E5               	movf	_callback_notPressed& (0+255),w,b
  8742   002522  6EFD               	movwf	tosl,c
  8743   002524  51E6               	movf	(_callback_notPressed+1)& (0+255),w,b
  8744   002526  6EFE               	movwf	tosh,c
  8745   002528  51E7               	movf	(_callback_notPressed+2)& (0+255),w,b
  8746   00252A  6EFF               	movwf	tosu,c
  8747   00252C  50FA               	movf	pclath,w,c
  8748   00252E  C028  FFD9         	movff	Button_State_Pressed@button,fsr2l
  8749   002532  C029  FFDA         	movff	Button_State_Pressed@button+1,fsr2h
  8750   002536  50DF               	movf	indf2,w,c
  8751   002538  0012               	return		;indir
  8752   00253A                     u5869:
  8753   00253A                     l519:
  8754   00253A  0012               	return		;funcret
  8755   00253C                     __end_of_Button_State_Pressed:
  8756                           	callstack 0
  8757                           
  8758 ;; *************** function _Button_DefaultCallback *****************
  8759 ;; Defined at:
  8760 ;;		line 621 in file "mcc_generated_files/touch/mtouch_button.c"
  8761 ;; Parameters:    Size  Location     Type
  8762 ;;  button          1    wreg     enum E13138
  8763 ;; Auto vars:     Size  Location     Type
  8764 ;;  button          1    0[COMRAM] enum E13138
  8765 ;; Return value:  Size  Location     Type
  8766 ;;                  1    wreg      void 
  8767 ;; Registers used:
  8768 ;;		wreg
  8769 ;; Tracked objects:
  8770 ;;		On entry : 0/0
  8771 ;;		On exit  : 0/0
  8772 ;;		Unchanged: 0/0
  8773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8778 ;;Total ram usage:        0 bytes
  8779 ;; Hardware stack levels used: 1
  8780 ;; Hardware stack levels required when called: 6
  8781 ;; This function calls:
  8782 ;;		Nothing
  8783 ;; This function is called by:
  8784 ;;		_Button_State_NotPressed
  8785 ;;		_Button_State_Pressed
  8786 ;; This function uses a non-reentrant model
  8787 ;;
  8788                           
  8789                           	psect	text69
  8790   003DE6                     __ptext69:
  8791                           	callstack 0
  8792   003DE6                     _Button_DefaultCallback:
  8793                           	callstack 20
  8794   003DE6  0012               	return		;funcret
  8795   003DE8                     __end_of_Button_DefaultCallback:
  8796                           	callstack 0
  8797                           
  8798 ;; *************** function _ProcessButtonRelease *****************
  8799 ;; Defined at:
  8800 ;;		line 114 in file "application.c"
  8801 ;; Parameters:    Size  Location     Type
  8802 ;;  button          1    wreg     enum E13104
  8803 ;; Auto vars:     Size  Location     Type
  8804 ;;  button          1   22[COMRAM] enum E13104
  8805 ;; Return value:  Size  Location     Type
  8806 ;;                  1    wreg      void 
  8807 ;; Registers used:
  8808 ;;		wreg, status,2, status,0
  8809 ;; Tracked objects:
  8810 ;;		On entry : 0/0
  8811 ;;		On exit  : 0/0
  8812 ;;		Unchanged: 0/0
  8813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8815 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8816 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8817 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8818 ;;Total ram usage:        3 bytes
  8819 ;; Hardware stack levels used: 1
  8820 ;; Hardware stack levels required when called: 6
  8821 ;; This function calls:
  8822 ;;		Nothing
  8823 ;; This function is called by:
  8824 ;;		_main
  8825 ;;		_Button_State_Pressed
  8826 ;; This function uses a non-reentrant model
  8827 ;;
  8828                           
  8829                           	psect	text70
  8830   0035E6                     __ptext70:
  8831                           	callstack 0
  8832   0035E6                     _ProcessButtonRelease:
  8833                           	callstack 20
  8834                           
  8835                           ;incstack = 0
  8836                           ;ProcessButtonRelease@button stored from wreg
  8837   0035E6  6E17               	movwf	ProcessButtonRelease@button^0,c
  8838   0035E8                     
  8839                           ;application.c: 114: void ProcessButtonRelease(enum mtouch_button_names button);applicat
      +                          ion.c: 115: {;application.c: 116:     switch (button)
  8840   0035E8  EF04  F01B         	goto	l6228
  8841   0035EC                     l6222:
  8842                           
  8843                           ;application.c: 119:         BUTTON.key = BUTTON1;
  8844   0035EC  0E01               	movlw	1
  8845   0035EE  0100               	movlb	0	; () banked
  8846   0035F0  6F8D               	movwf	_BUTTON& (0+255),b
  8847                           
  8848                           ;application.c: 120:         BUTTON.keyStatus = KEY_RELEASED;
  8849   0035F2  0E02               	movlw	2
  8850   0035F4  6F8E               	movwf	(_BUTTON+1)& (0+255),b
  8851                           
  8852                           ;application.c: 121:         break;
  8853   0035F6  EF19  F01B         	goto	l1477
  8854   0035FA                     l6224:
  8855                           
  8856                           ;application.c: 124:         BUTTON.key = BUTTON2;
  8857   0035FA  0E02               	movlw	2
  8858   0035FC  0100               	movlb	0	; () banked
  8859   0035FE  6F8D               	movwf	_BUTTON& (0+255),b
  8860                           
  8861                           ;application.c: 125:         BUTTON.keyStatus = KEY_RELEASED;
  8862   003600  0E02               	movlw	2
  8863   003602  6F8E               	movwf	(_BUTTON+1)& (0+255),b
  8864                           
  8865                           ;application.c: 126:         break;
  8866   003604  EF19  F01B         	goto	l1477
  8867   003608                     l6228:
  8868   003608  5017               	movf	ProcessButtonRelease@button^0,w,c
  8869   00360A  6E15               	movwf	??_ProcessButtonRelease^0,c
  8870   00360C  6A16               	clrf	(??_ProcessButtonRelease+1)^0,c
  8871                           
  8872                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8873                           ; Switch size 1, requested type "simple"
  8874                           ; Number of cases is 1, Range of values is 0 to 0
  8875                           ; switch strategies available:
  8876                           ; Name         Instructions Cycles
  8877                           ; simple_byte            4     3 (average)
  8878                           ;	Chosen strategy is simple_byte
  8879   00360E  5016               	movf	(??_ProcessButtonRelease+1)^0,w,c
  8880   003610  0A00               	xorlw	0	; case 0
  8881   003612  B4D8               	btfsc	status,2,c
  8882   003614  EF0E  F01B         	goto	l6800
  8883   003618  EF19  F01B         	goto	l1477
  8884   00361C                     l6800:
  8885                           
  8886                           ; Switch size 1, requested type "simple"
  8887                           ; Number of cases is 2, Range of values is 0 to 1
  8888                           ; switch strategies available:
  8889                           ; Name         Instructions Cycles
  8890                           ; simple_byte            7     4 (average)
  8891                           ;	Chosen strategy is simple_byte
  8892   00361C  5015               	movf	??_ProcessButtonRelease^0,w,c
  8893   00361E  0A00               	xorlw	0	; case 0
  8894   003620  B4D8               	btfsc	status,2,c
  8895   003622  EFF6  F01A         	goto	l6222
  8896   003626  0A01               	xorlw	1	; case 1
  8897   003628  B4D8               	btfsc	status,2,c
  8898   00362A  EFFD  F01A         	goto	l6224
  8899   00362E  EF19  F01B         	goto	l1477
  8900   003632                     l1477:
  8901   003632  0012               	return		;funcret
  8902   003634                     __end_of_ProcessButtonRelease:
  8903                           	callstack 0
  8904                           
  8905 ;; *************** function _MTOUCH_Button_Initialize *****************
  8906 ;; Defined at:
  8907 ;;		line 194 in file "mcc_generated_files/touch/mtouch_button.c"
  8908 ;; Parameters:    Size  Location     Type
  8909 ;;  name            1    wreg     enum E13138
  8910 ;; Auto vars:     Size  Location     Type
  8911 ;;  name            1   21[COMRAM] enum E13138
  8912 ;;  button          2   22[COMRAM] PTR struct .
  8913 ;;		 -> mtouch_button(85), 
  8914 ;; Return value:  Size  Location     Type
  8915 ;;                  1    wreg      void 
  8916 ;; Registers used:
  8917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8918 ;; Tracked objects:
  8919 ;;		On entry : 0/0
  8920 ;;		On exit  : 0/0
  8921 ;;		Unchanged: 0/0
  8922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8924 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8926 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8927 ;;Total ram usage:        3 bytes
  8928 ;; Hardware stack levels used: 1
  8929 ;; Hardware stack levels required when called: 7
  8930 ;; This function calls:
  8931 ;;		_MTOUCH_Sensor_Calibrate
  8932 ;; This function is called by:
  8933 ;;		_MTOUCH_Button_InitializeAll
  8934 ;;		_Button_Service
  8935 ;;		_Button_State_NotPressed
  8936 ;;		_Button_State_Pressed
  8937 ;; This function uses a non-reentrant model
  8938 ;;
  8939                           
  8940                           	psect	text71
  8941   0032C6                     __ptext71:
  8942                           	callstack 0
  8943   0032C6                     _MTOUCH_Button_Initialize:
  8944                           	callstack 20
  8945                           
  8946                           ;incstack = 0
  8947                           ;MTOUCH_Button_Initialize@name stored from wreg
  8948   0032C6  6E16               	movwf	MTOUCH_Button_Initialize@name^0,c
  8949   0032C8                     
  8950                           ;mcc_generated_files/touch/mtouch_button.c: 194: void MTOUCH_Button_Initialize(enum mtou
      +                          ch_button_names name);mcc_generated_files/touch/mtouch_button.c: 195: {;mcc_generated_fi
      +                          les/touch/mtouch_button.c: 196:     mtouch_button_t* button = &mtouch_button[name];
  8951   0032C8  5016               	movf	MTOUCH_Button_Initialize@name^0,w,c
  8952   0032CA  0D11               	mullw	17
  8953   0032CC  0E00               	movlw	low _mtouch_button
  8954   0032CE  24F3               	addwf	243,w,c
  8955   0032D0  6E17               	movwf	MTOUCH_Button_Initialize@button^0,c
  8956   0032D2  0E01               	movlw	high _mtouch_button
  8957   0032D4  20F4               	addwfc	prodh,w,c
  8958   0032D6  6E18               	movwf	(MTOUCH_Button_Initialize@button+1)^0,c
  8959   0032D8                     
  8960                           ;mcc_generated_files/touch/mtouch_button.c: 198:     button->state = MTOUCH_BUTTON_STATE
      +                          _initializing;
  8961   0032D8  EE20 F002          	lfsr	2,2
  8962   0032DC  5017               	movf	MTOUCH_Button_Initialize@button^0,w,c
  8963   0032DE  26D9               	addwf	fsr2l,f,c
  8964   0032E0  5018               	movf	(MTOUCH_Button_Initialize@button+1)^0,w,c
  8965   0032E2  22DA               	addwfc	fsr2h,f,c
  8966   0032E4  6ADF               	clrf	indf2,c
  8967   0032E6                     
  8968                           ;mcc_generated_files/touch/mtouch_button.c: 199:     button->baseline = (mtouch_button_b
      +                          aseline_t)0;
  8969   0032E6  EE20 F006          	lfsr	2,6
  8970   0032EA  5017               	movf	MTOUCH_Button_Initialize@button^0,w,c
  8971   0032EC  26D9               	addwf	fsr2l,f,c
  8972   0032EE  5018               	movf	(MTOUCH_Button_Initialize@button+1)^0,w,c
  8973   0032F0  22DA               	addwfc	fsr2h,f,c
  8974   0032F2  6ADE               	clrf	postinc2,c
  8975   0032F4  6ADE               	clrf	postinc2,c
  8976   0032F6  6ADE               	clrf	postinc2,c
  8977   0032F8  6ADD               	clrf	postdec2,c
  8978   0032FA                     
  8979                           ;mcc_generated_files/touch/mtouch_button.c: 200:     button->counter = (mtouch_button_st
      +                          atecounter_t)0;
  8980   0032FA  EE20 F00B          	lfsr	2,11
  8981   0032FE  5017               	movf	MTOUCH_Button_Initialize@button^0,w,c
  8982   003300  26D9               	addwf	fsr2l,f,c
  8983   003302  5018               	movf	(MTOUCH_Button_Initialize@button+1)^0,w,c
  8984   003304  22DA               	addwfc	fsr2h,f,c
  8985   003306  6ADE               	clrf	postinc2,c
  8986   003308  6ADD               	clrf	postdec2,c
  8987   00330A                     
  8988                           ;mcc_generated_files/touch/mtouch_button.c: 201:     button->baseline_count = (mtouch_bu
      +                          tton_baselinecounter_t)0;
  8989   00330A  EE20 F00D          	lfsr	2,13
  8990   00330E  5017               	movf	MTOUCH_Button_Initialize@button^0,w,c
  8991   003310  26D9               	addwf	fsr2l,f,c
  8992   003312  5018               	movf	(MTOUCH_Button_Initialize@button+1)^0,w,c
  8993   003314  22DA               	addwfc	fsr2h,f,c
  8994   003316  6ADE               	clrf	postinc2,c
  8995   003318  6ADD               	clrf	postdec2,c
  8996   00331A                     
  8997                           ;mcc_generated_files/touch/mtouch_button.c: 203:     MTOUCH_Sensor_Calibrate(button->sen
      +                          sor);
  8998   00331A  EE20 F001          	lfsr	2,1
  8999   00331E  5017               	movf	MTOUCH_Button_Initialize@button^0,w,c
  9000   003320  26D9               	addwf	fsr2l,f,c
  9001   003322  5018               	movf	(MTOUCH_Button_Initialize@button+1)^0,w,c
  9002   003324  22DA               	addwfc	fsr2h,f,c
  9003   003326  50DF               	movf	indf2,w,c
  9004   003328  ECB2  F01D         	call	_MTOUCH_Sensor_Calibrate
  9005   00332C  0012               	return		;funcret
  9006   00332E                     __end_of_MTOUCH_Button_Initialize:
  9007                           	callstack 0
  9008                           
  9009 ;; *************** function _MTOUCH_Sensor_Calibrate *****************
  9010 ;; Defined at:
  9011 ;;		line 795 in file "mcc_generated_files/touch/mtouch_sensor.c"
  9012 ;; Parameters:    Size  Location     Type
  9013 ;;  sensor          1    wreg     enum E13072
  9014 ;; Auto vars:     Size  Location     Type
  9015 ;;  sensor          1   20[COMRAM] enum E13072
  9016 ;; Return value:  Size  Location     Type
  9017 ;;                  1    wreg      void 
  9018 ;; Registers used:
  9019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9020 ;; Tracked objects:
  9021 ;;		On entry : 0/0
  9022 ;;		On exit  : 0/0
  9023 ;;		Unchanged: 0/0
  9024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9026 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9028 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9029 ;;Total ram usage:        1 bytes
  9030 ;; Hardware stack levels used: 1
  9031 ;; Hardware stack levels required when called: 6
  9032 ;; This function calls:
  9033 ;;		Nothing
  9034 ;; This function is called by:
  9035 ;;		_MTOUCH_Button_Initialize
  9036 ;;		_MTOUCH_Sensor_Initialize
  9037 ;; This function uses a non-reentrant model
  9038 ;;
  9039                           
  9040                           	psect	text72
  9041   003B64                     __ptext72:
  9042                           	callstack 0
  9043   003B64                     _MTOUCH_Sensor_Calibrate:
  9044                           	callstack 20
  9045                           
  9046                           ;incstack = 0
  9047                           ;MTOUCH_Sensor_Calibrate@sensor stored from wreg
  9048   003B64  6E15               	movwf	MTOUCH_Sensor_Calibrate@sensor^0,c
  9049   003B66                     
  9050                           ;mcc_generated_files/touch/mtouch_sensor.c: 795: void MTOUCH_Sensor_Calibrate(enum mtouc
      +                          h_sensor_names sensor);mcc_generated_files/touch/mtouch_sensor.c: 796: {;mcc_generated_f
      +                          iles/touch/mtouch_sensor.c: 797:     if(sensor < 5u)
  9051   003B66  0E05               	movlw	5
  9052   003B68  6015               	cpfslt	MTOUCH_Sensor_Calibrate@sensor^0,c
  9053   003B6A  EFB9  F01D         	goto	u5041
  9054   003B6E  EFBB  F01D         	goto	u5040
  9055   003B72                     u5041:
  9056   003B72  EFC3  F01D         	goto	l1304
  9057   003B76                     u5040:
  9058   003B76                     
  9059                           ;mcc_generated_files/touch/mtouch_sensor.c: 798:     {;mcc_generated_files/touch/mtouch_
      +                          sensor.c: 799:         mtouch_sensor[sensor].calibrated = 0;
  9060   003B76  5015               	movf	MTOUCH_Sensor_Calibrate@sensor^0,w,c
  9061   003B78  0D0A               	mullw	10
  9062   003B7A  50F3               	movf	243,w,c
  9063   003B7C  0FA4               	addlw	low (_mtouch_sensor+9)
  9064   003B7E  6ED9               	movwf	fsr2l,c
  9065   003B80  6ADA               	clrf	fsr2h,c
  9066   003B82  0100               	movlb	0	; () banked
  9067   003B84  96DF               	bcf	indf2,3,c
  9068   003B86                     l1304:
  9069   003B86  0012               	return		;funcret
  9070   003B88                     __end_of_MTOUCH_Sensor_Calibrate:
  9071                           	callstack 0
  9072                           
  9073 ;; *************** function _Button_Check_AKS_Block *****************
  9074 ;; Defined at:
  9075 ;;		line 578 in file "mcc_generated_files/touch/mtouch_button.c"
  9076 ;; Parameters:    Size  Location     Type
  9077 ;;  button          2   28[COMRAM] PTR struct .
  9078 ;;		 -> mtouch_button(85), 
  9079 ;; Auto vars:     Size  Location     Type
  9080 ;;  check_button    2   37[COMRAM] PTR struct .
  9081 ;;		 -> mtouch_button(85), 
  9082 ;;  surplus_devi    2   35[COMRAM] short 
  9083 ;;  surplus_devi    2   32[COMRAM] short 
  9084 ;;  currentAKSGr    1   34[COMRAM] enum E13448
  9085 ;; Return value:  Size  Location     Type
  9086 ;;                  1    wreg      _Bool 
  9087 ;; Registers used:
  9088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9089 ;; Tracked objects:
  9090 ;;		On entry : 0/0
  9091 ;;		On exit  : 0/0
  9092 ;;		Unchanged: 0/0
  9093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9094 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9095 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9096 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9097 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9098 ;;Total ram usage:       11 bytes
  9099 ;; Hardware stack levels used: 1
  9100 ;; Hardware stack levels required when called: 7
  9101 ;; This function calls:
  9102 ;;		_Button_Unscaled_Deviation_Get
  9103 ;;		_MTOUCH_Sensor_isEnabled
  9104 ;; This function is called by:
  9105 ;;		_Button_State_NotPressed
  9106 ;; This function uses a non-reentrant model
  9107 ;;
  9108                           
  9109                           	psect	text73
  9110   001F3A                     __ptext73:
  9111                           	callstack 0
  9112   001F3A                     _Button_Check_AKS_Block:
  9113                           	callstack 19
  9114   001F3A                     
  9115                           ;mcc_generated_files/touch/mtouch_button.c: 578: static _Bool Button_Check_AKS_Block(mto
      +                          uch_button_t* button);mcc_generated_files/touch/mtouch_button.c: 579: {;mcc_generated_fi
      +                          les/touch/mtouch_button.c: 580:     enum mtouch_button_aks_group currentAKSGroup = butto
      +                          n->aks_group;
  9116   001F3A  EE20 F003          	lfsr	2,3
  9117   001F3E  501D               	movf	Button_Check_AKS_Block@button^0,w,c
  9118   001F40  26D9               	addwf	fsr2l,f,c
  9119   001F42  501E               	movf	(Button_Check_AKS_Block@button+1)^0,w,c
  9120   001F44  22DA               	addwfc	fsr2h,f,c
  9121   001F46  50DF               	movf	indf2,w,c
  9122   001F48  6E23               	movwf	Button_Check_AKS_Block@currentAKSGroup^0,c
  9123   001F4A                     
  9124                           ;mcc_generated_files/touch/mtouch_button.c: 581:     int16_t surplus_deviation_this_butt
      +                          on,surplus_deviation_check_button;;mcc_generated_files/touch/mtouch_button.c: 582:     m
      +                          touch_button_t* check_button;;mcc_generated_files/touch/mtouch_button.c: 584:     surplu
      +                          s_deviation_this_button = (int16_t)(Button_Unscaled_Deviation_Get(button) - (mtouch_butt
      +                          on_reading_t)button->threshold);
  9125   001F4A  C01D  F015         	movff	Button_Check_AKS_Block@button,Button_Unscaled_Deviation_Get@button
  9126   001F4E  C01E  F016         	movff	Button_Check_AKS_Block@button+1,Button_Unscaled_Deviation_Get@button+1
  9127   001F52  EC2A  F01A         	call	_Button_Unscaled_Deviation_Get	;wreg free
  9128   001F56  EE20 F00F          	lfsr	2,15
  9129   001F5A  501D               	movf	Button_Check_AKS_Block@button^0,w,c
  9130   001F5C  26D9               	addwf	fsr2l,f,c
  9131   001F5E  501E               	movf	(Button_Check_AKS_Block@button+1)^0,w,c
  9132   001F60  22DA               	addwfc	fsr2h,f,c
  9133   001F62  50DF               	movf	indf2,w,c
  9134   001F64  6E1F               	movwf	??_Button_Check_AKS_Block^0,c
  9135   001F66  501F               	movf	??_Button_Check_AKS_Block^0,w,c
  9136   001F68  5C15               	subwf	?_Button_Unscaled_Deviation_Get^0,w,c
  9137   001F6A  6E21               	movwf	Button_Check_AKS_Block@surplus_deviation_this_button^0,c
  9138   001F6C  5016               	movf	(?_Button_Unscaled_Deviation_Get+1)^0,w,c
  9139   001F6E  A0D8               	btfss	status,0,c
  9140   001F70  0416               	decf	(?_Button_Unscaled_Deviation_Get+1)^0,w,c
  9141   001F72  6E22               	movwf	(Button_Check_AKS_Block@surplus_deviation_this_button+1)^0,c
  9142   001F74                     
  9143                           ;mcc_generated_files/touch/mtouch_button.c: 586:     for(check_button = &mtouch_button[0
      +                          ];check_button <= &mtouch_button[5u -1];check_button++)
  9144   001F74  0E00               	movlw	low _mtouch_button
  9145   001F76  6E26               	movwf	Button_Check_AKS_Block@check_button^0,c
  9146   001F78  0E01               	movlw	high _mtouch_button
  9147   001F7A  6E27               	movwf	(Button_Check_AKS_Block@check_button+1)^0,c
  9148   001F7C  5027               	movf	(Button_Check_AKS_Block@check_button+1)^0,w,c
  9149   001F7E  0801               	sublw	high (_mtouch_button+68)
  9150   001F80  E102               	bnz	u5225
  9151   001F82  5026               	movf	Button_Check_AKS_Block@check_button^0,w,c
  9152   001F84  0844               	sublw	low (_mtouch_button+68)
  9153   001F86                     u5225:
  9154   001F86  B0D8               	btfsc	status,0,c
  9155   001F88  EFC8  F00F         	goto	u5221
  9156   001F8C  EFCA  F00F         	goto	u5220
  9157   001F90                     u5221:
  9158   001F90  EFCC  F00F         	goto	l5990
  9159   001F94                     u5220:
  9160   001F94  EF50  F010         	goto	l6018
  9161   001F98                     l5990:
  9162                           
  9163                           ;mcc_generated_files/touch/mtouch_button.c: 587:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 588:         if(check_button->name == button->name)
  9164   001F98  C01D  FFD9         	movff	Button_Check_AKS_Block@button,fsr2l
  9165   001F9C  C01E  FFDA         	movff	Button_Check_AKS_Block@button+1,fsr2h
  9166   001FA0  C026  FFE1         	movff	Button_Check_AKS_Block@check_button,fsr1l
  9167   001FA4  C027  FFE2         	movff	Button_Check_AKS_Block@check_button+1,fsr1h
  9168   001FA8  50DE               	movf	postinc2,w,c
  9169   001FAA  18E6               	xorwf	postinc1,w,c
  9170   001FAC  A4D8               	btfss	status,2,c
  9171   001FAE  EFDB  F00F         	goto	u5231
  9172   001FB2  EFDD  F00F         	goto	u5230
  9173   001FB6                     u5231:
  9174   001FB6  EFE1  F00F         	goto	l5994
  9175   001FBA                     u5230:
  9176   001FBA  EF40  F010         	goto	l6016
  9177   001FBE                     l5992:
  9178                           
  9179                           ;mcc_generated_files/touch/mtouch_button.c: 589:         {;mcc_generated_files/touch/mto
      +                          uch_button.c: 591:         }
  9180   001FBE  EF40  F010         	goto	l6016
  9181   001FC2                     l5994:
  9182                           
  9183                           ;mcc_generated_files/touch/mtouch_button.c: 593:         {;mcc_generated_files/touch/mto
      +                          uch_button.c: 594:             if(check_button->aks_group == currentAKSGroup)
  9184   001FC2  EE20 F003          	lfsr	2,3
  9185   001FC6  5026               	movf	Button_Check_AKS_Block@check_button^0,w,c
  9186   001FC8  26D9               	addwf	fsr2l,f,c
  9187   001FCA  5027               	movf	(Button_Check_AKS_Block@check_button+1)^0,w,c
  9188   001FCC  22DA               	addwfc	fsr2h,f,c
  9189   001FCE  5023               	movf	Button_Check_AKS_Block@currentAKSGroup^0,w,c
  9190   001FD0  18DE               	xorwf	postinc2,w,c
  9191   001FD2  A4D8               	btfss	status,2,c
  9192   001FD4  EFEE  F00F         	goto	u5241
  9193   001FD8  EFF0  F00F         	goto	u5240
  9194   001FDC                     u5241:
  9195   001FDC  EF40  F010         	goto	l6016
  9196   001FE0                     u5240:
  9197   001FE0                     
  9198                           ;mcc_generated_files/touch/mtouch_button.c: 595:             {;mcc_generated_files/touch
      +                          /mtouch_button.c: 596:                 if(MTOUCH_Sensor_isEnabled(check_button))
  9199   001FE0  5026               	movf	Button_Check_AKS_Block@check_button^0,w,c
  9200   001FE2  ECE0  F01B         	call	_MTOUCH_Sensor_isEnabled
  9201   001FE6  0900               	iorlw	0
  9202   001FE8  B4D8               	btfsc	status,2,c
  9203   001FEA  EFF9  F00F         	goto	u5251
  9204   001FEE  EFFB  F00F         	goto	u5250
  9205   001FF2                     u5251:
  9206   001FF2  EF40  F010         	goto	l6016
  9207   001FF6                     u5250:
  9208   001FF6                     
  9209                           ;mcc_generated_files/touch/mtouch_button.c: 597:                 {;mcc_generated_files/t
      +                          ouch/mtouch_button.c: 598:                         if(check_button->state == MTOUCH_BUTT
      +                          ON_STATE_pressed)
  9210   001FF6  EE20 F002          	lfsr	2,2
  9211   001FFA  5026               	movf	Button_Check_AKS_Block@check_button^0,w,c
  9212   001FFC  26D9               	addwf	fsr2l,f,c
  9213   001FFE  5027               	movf	(Button_Check_AKS_Block@check_button+1)^0,w,c
  9214   002000  22DA               	addwfc	fsr2h,f,c
  9215   002002  0E02               	movlw	2
  9216   002004  18DE               	xorwf	postinc2,w,c
  9217   002006  A4D8               	btfss	status,2,c
  9218   002008  EF08  F010         	goto	u5261
  9219   00200C  EF0A  F010         	goto	u5260
  9220   002010                     u5261:
  9221   002010  EF0D  F010         	goto	l6006
  9222   002014                     u5260:
  9223   002014                     l6000:
  9224                           
  9225                           ;mcc_generated_files/touch/mtouch_button.c: 599:                             return 1;
  9226   002014  0E01               	movlw	1
  9227   002016  EF51  F010         	goto	l633
  9228   00201A                     l6006:
  9229                           
  9230                           ;mcc_generated_files/touch/mtouch_button.c: 601:                             {;mcc_gener
      +                          ated_files/touch/mtouch_button.c: 602:                                 surplus_deviation
      +                          _check_button = (int16_t)(Button_Unscaled_Deviation_Get(check_button) - (mtouch_button_r
      +                          eading_t)check_button->threshold);
  9231   00201A  C026  F015         	movff	Button_Check_AKS_Block@check_button,Button_Unscaled_Deviation_Get@button
  9232   00201E  C027  F016         	movff	Button_Check_AKS_Block@check_button+1,Button_Unscaled_Deviation_Get@button+1
  9233   002022  EC2A  F01A         	call	_Button_Unscaled_Deviation_Get	;wreg free
  9234   002026  EE20 F00F          	lfsr	2,15
  9235   00202A  5026               	movf	Button_Check_AKS_Block@check_button^0,w,c
  9236   00202C  26D9               	addwf	fsr2l,f,c
  9237   00202E  5027               	movf	(Button_Check_AKS_Block@check_button+1)^0,w,c
  9238   002030  22DA               	addwfc	fsr2h,f,c
  9239   002032  50DF               	movf	indf2,w,c
  9240   002034  6E1F               	movwf	??_Button_Check_AKS_Block^0,c
  9241   002036  501F               	movf	??_Button_Check_AKS_Block^0,w,c
  9242   002038  5C15               	subwf	?_Button_Unscaled_Deviation_Get^0,w,c
  9243   00203A  6E24               	movwf	Button_Check_AKS_Block@surplus_deviation_check_button^0,c
  9244   00203C  5016               	movf	(?_Button_Unscaled_Deviation_Get+1)^0,w,c
  9245   00203E  A0D8               	btfss	status,0,c
  9246   002040  0416               	decf	(?_Button_Unscaled_Deviation_Get+1)^0,w,c
  9247   002042  6E25               	movwf	(Button_Check_AKS_Block@surplus_deviation_check_button+1)^0,c
  9248   002044                     
  9249                           ;mcc_generated_files/touch/mtouch_button.c: 603:                                 if(surp
      +                          lus_deviation_check_button > 0 && surplus_deviation_check_button > surplus_deviation_thi
      +                          s_button)
  9250   002044  BE25               	btfsc	(Button_Check_AKS_Block@surplus_deviation_check_button+1)^0,7,c
  9251   002046  EF2D  F010         	goto	u5271
  9252   00204A  5025               	movf	(Button_Check_AKS_Block@surplus_deviation_check_button+1)^0,w,c
  9253   00204C  E108               	bnz	u5270
  9254   00204E  0424               	decf	Button_Check_AKS_Block@surplus_deviation_check_button^0,w,c
  9255   002050  A0D8               	btfss	status,0,c
  9256   002052  EF2D  F010         	goto	u5271
  9257   002056  EF2F  F010         	goto	u5270
  9258   00205A                     u5271:
  9259   00205A  EFDF  F00F         	goto	l5992
  9260   00205E                     u5270:
  9261   00205E  5024               	movf	Button_Check_AKS_Block@surplus_deviation_check_button^0,w,c
  9262   002060  5C21               	subwf	Button_Check_AKS_Block@surplus_deviation_this_button^0,w,c
  9263   002062  5022               	movf	(Button_Check_AKS_Block@surplus_deviation_this_button+1)^0,w,c
  9264   002064  0A80               	xorlw	128
  9265   002066  6E1F               	movwf	??_Button_Check_AKS_Block^0,c
  9266   002068  5025               	movf	(Button_Check_AKS_Block@surplus_deviation_check_button+1)^0,w,c
  9267   00206A  0A80               	xorlw	128
  9268   00206C  581F               	subwfb	??_Button_Check_AKS_Block^0,w,c
  9269   00206E  B0D8               	btfsc	status,0,c
  9270   002070  EF3C  F010         	goto	u5281
  9271   002074  EF3E  F010         	goto	u5280
  9272   002078                     u5281:
  9273   002078  EFDF  F00F         	goto	l5992
  9274   00207C                     u5280:
  9275   00207C  EF0A  F010         	goto	l6000
  9276   002080                     l6016:
  9277                           
  9278                           ;mcc_generated_files/touch/mtouch_button.c: 610:     }
  9279   002080  0E11               	movlw	17
  9280   002082  2626               	addwf	Button_Check_AKS_Block@check_button^0,f,c
  9281   002084  0E00               	movlw	0
  9282   002086  2227               	addwfc	(Button_Check_AKS_Block@check_button+1)^0,f,c
  9283   002088  5027               	movf	(Button_Check_AKS_Block@check_button+1)^0,w,c
  9284   00208A  0801               	sublw	high (_mtouch_button+68)
  9285   00208C  E102               	bnz	u5295
  9286   00208E  5026               	movf	Button_Check_AKS_Block@check_button^0,w,c
  9287   002090  0844               	sublw	low (_mtouch_button+68)
  9288   002092                     u5295:
  9289   002092  B0D8               	btfsc	status,0,c
  9290   002094  EF4E  F010         	goto	u5291
  9291   002098  EF50  F010         	goto	u5290
  9292   00209C                     u5291:
  9293   00209C  EFCC  F00F         	goto	l5990
  9294   0020A0                     u5290:
  9295   0020A0                     l6018:
  9296                           
  9297                           ;mcc_generated_files/touch/mtouch_button.c: 611:     return 0;
  9298   0020A0  0E00               	movlw	0
  9299   0020A2                     l633:
  9300   0020A2  0012               	return		;funcret
  9301   0020A4                     __end_of_Button_Check_AKS_Block:
  9302                           	callstack 0
  9303                           
  9304 ;; *************** function _MTOUCH_Sensor_isEnabled *****************
  9305 ;; Defined at:
  9306 ;;		line 739 in file "mcc_generated_files/touch/mtouch_sensor.c"
  9307 ;; Parameters:    Size  Location     Type
  9308 ;;  sensor          1    wreg     enum E13072
  9309 ;; Auto vars:     Size  Location     Type
  9310 ;;  sensor          1   20[COMRAM] enum E13072
  9311 ;; Return value:  Size  Location     Type
  9312 ;;                  1    wreg      _Bool 
  9313 ;; Registers used:
  9314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9315 ;; Tracked objects:
  9316 ;;		On entry : 0/0
  9317 ;;		On exit  : 0/0
  9318 ;;		Unchanged: 0/0
  9319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9323 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9324 ;;Total ram usage:        1 bytes
  9325 ;; Hardware stack levels used: 1
  9326 ;; Hardware stack levels required when called: 6
  9327 ;; This function calls:
  9328 ;;		Nothing
  9329 ;; This function is called by:
  9330 ;;		_Button_Check_AKS_Block
  9331 ;;		_MTOUCH_Sensor_isSamplingComplete
  9332 ;;		_Sensor_scheduleNextScan
  9333 ;; This function uses a non-reentrant model
  9334 ;;
  9335                           
  9336                           	psect	text74
  9337   0037C0                     __ptext74:
  9338                           	callstack 0
  9339   0037C0                     _MTOUCH_Sensor_isEnabled:
  9340                           	callstack 20
  9341                           
  9342                           ;incstack = 0
  9343                           ;MTOUCH_Sensor_isEnabled@sensor stored from wreg
  9344   0037C0  6E15               	movwf	MTOUCH_Sensor_isEnabled@sensor^0,c
  9345   0037C2                     
  9346                           ;mcc_generated_files/touch/mtouch_sensor.c: 739: _Bool MTOUCH_Sensor_isEnabled(enum mtou
      +                          ch_sensor_names sensor);mcc_generated_files/touch/mtouch_sensor.c: 740: {;mcc_generated_
      +                          files/touch/mtouch_sensor.c: 741:     if(sensor < 5u)
  9347   0037C2  0E05               	movlw	5
  9348   0037C4  6015               	cpfslt	MTOUCH_Sensor_isEnabled@sensor^0,c
  9349   0037C6  EFE7  F01B         	goto	u5081
  9350   0037CA  EFE9  F01B         	goto	u5080
  9351   0037CE                     u5081:
  9352   0037CE  EFFB  F01B         	goto	l5906
  9353   0037D2                     u5080:
  9354   0037D2                     
  9355                           ;mcc_generated_files/touch/mtouch_sensor.c: 742:         return (_Bool)mtouch_sensor[sen
      +                          sor].enabled;
  9356   0037D2  5015               	movf	MTOUCH_Sensor_isEnabled@sensor^0,w,c
  9357   0037D4  0D0A               	mullw	10
  9358   0037D6  50F3               	movf	243,w,c
  9359   0037D8  0FA4               	addlw	low (_mtouch_sensor+9)
  9360   0037DA  6ED9               	movwf	fsr2l,c
  9361   0037DC  6ADA               	clrf	fsr2h,c
  9362   0037DE  0100               	movlb	0	; () banked
  9363   0037E0  B0DF               	btfsc	indf2,0,c
  9364   0037E2  EFF5  F01B         	goto	u5091
  9365   0037E6  EFF8  F01B         	goto	u5090
  9366   0037EA                     u5091:
  9367   0037EA  0E01               	movlw	1
  9368   0037EC  EFF9  F01B         	goto	u5096
  9369   0037F0                     u5090:
  9370   0037F0  0E00               	movlw	0
  9371   0037F2                     u5096:
  9372   0037F2  EFFC  F01B         	goto	l1282
  9373   0037F6                     l5906:
  9374                           
  9375                           ;mcc_generated_files/touch/mtouch_sensor.c: 744:         return 0;
  9376   0037F6  0E00               	movlw	0
  9377   0037F8                     l1282:
  9378   0037F8  0012               	return		;funcret
  9379   0037FA                     __end_of_MTOUCH_Sensor_isEnabled:
  9380                           	callstack 0
  9381                           
  9382 ;; *************** function _Button_Unscaled_Deviation_Get *****************
  9383 ;; Defined at:
  9384 ;;		line 471 in file "mcc_generated_files/touch/mtouch_button.c"
  9385 ;; Parameters:    Size  Location     Type
  9386 ;;  button          2   20[COMRAM] PTR struct .
  9387 ;;		 -> mtouch_button(85), 
  9388 ;; Auto vars:     Size  Location     Type
  9389 ;;		None
  9390 ;; Return value:  Size  Location     Type
  9391 ;;                  2   20[COMRAM] unsigned short 
  9392 ;; Registers used:
  9393 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9394 ;; Tracked objects:
  9395 ;;		On entry : 0/0
  9396 ;;		On exit  : 0/0
  9397 ;;		Unchanged: 0/0
  9398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9399 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9401 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9402 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9403 ;;Total ram usage:        8 bytes
  9404 ;; Hardware stack levels used: 1
  9405 ;; Hardware stack levels required when called: 6
  9406 ;; This function calls:
  9407 ;;		Nothing
  9408 ;; This function is called by:
  9409 ;;		_Button_Check_AKS_Block
  9410 ;; This function uses a non-reentrant model
  9411 ;;
  9412                           
  9413                           	psect	text75
  9414   003454                     __ptext75:
  9415                           	callstack 0
  9416   003454                     _Button_Unscaled_Deviation_Get:
  9417                           	callstack 19
  9418   003454                     
  9419                           ;mcc_generated_files/touch/mtouch_button.c: 471: static mtouch_button_reading_t Button_U
      +                          nscaled_Deviation_Get(mtouch_button_t* button);mcc_generated_files/touch/mtouch_button.c
      +                          : 472: {;mcc_generated_files/touch/mtouch_button.c: 473:     return (mtouch_button_readi
      +                          ng_t)(button->reading - (mtouch_button_reading_t)((button->baseline)>>((uint8_t)4u)));
  9420   003454  EE20 F006          	lfsr	2,6
  9421   003458  5015               	movf	Button_Unscaled_Deviation_Get@button^0,w,c
  9422   00345A  26D9               	addwf	fsr2l,f,c
  9423   00345C  5016               	movf	(Button_Unscaled_Deviation_Get@button+1)^0,w,c
  9424   00345E  22DA               	addwfc	fsr2h,f,c
  9425   003460  CFDE F017          	movff	postinc2,??_Button_Unscaled_Deviation_Get
  9426   003464  CFDE F018          	movff	postinc2,??_Button_Unscaled_Deviation_Get+1
  9427   003468  CFDE F019          	movff	postinc2,??_Button_Unscaled_Deviation_Get+2
  9428   00346C  CFDE F01A          	movff	postinc2,??_Button_Unscaled_Deviation_Get+3
  9429   003470  0E05               	movlw	5
  9430   003472  EF40  F01A         	goto	u5060
  9431   003476                     u5065:
  9432   003476  90D8               	bcf	status,0,c
  9433   003478  321A               	rrcf	(??_Button_Unscaled_Deviation_Get+3)^0,f,c
  9434   00347A  3219               	rrcf	(??_Button_Unscaled_Deviation_Get+2)^0,f,c
  9435   00347C  3218               	rrcf	(??_Button_Unscaled_Deviation_Get+1)^0,f,c
  9436   00347E  3217               	rrcf	??_Button_Unscaled_Deviation_Get^0,f,c
  9437   003480                     u5060:
  9438   003480  2EE8               	decfsz	wreg,f,c
  9439   003482  EF3B  F01A         	goto	u5065
  9440   003486  EE20 F004          	lfsr	2,4
  9441   00348A  5015               	movf	Button_Unscaled_Deviation_Get@button^0,w,c
  9442   00348C  26D9               	addwf	fsr2l,f,c
  9443   00348E  5016               	movf	(Button_Unscaled_Deviation_Get@button+1)^0,w,c
  9444   003490  22DA               	addwfc	fsr2h,f,c
  9445   003492  CFDE F01B          	movff	postinc2,??_Button_Unscaled_Deviation_Get+4
  9446   003496  CFDD F01C          	movff	postdec2,??_Button_Unscaled_Deviation_Get+5
  9447   00349A  5017               	movf	??_Button_Unscaled_Deviation_Get^0,w,c
  9448   00349C  5C1B               	subwf	(??_Button_Unscaled_Deviation_Get+4)^0,w,c
  9449   00349E  6E15               	movwf	?_Button_Unscaled_Deviation_Get^0,c
  9450   0034A0  5018               	movf	(??_Button_Unscaled_Deviation_Get+1)^0,w,c
  9451   0034A2  581C               	subwfb	(??_Button_Unscaled_Deviation_Get+5)^0,w,c
  9452   0034A4  6E16               	movwf	(?_Button_Unscaled_Deviation_Get+1)^0,c
  9453   0034A6  0012               	return		;funcret
  9454   0034A8                     __end_of_Button_Unscaled_Deviation_Get:
  9455                           	callstack 0
  9456                           
  9457 ;; *************** function _Button_Baseline_Update *****************
  9458 ;; Defined at:
  9459 ;;		line 535 in file "mcc_generated_files/touch/mtouch_button.c"
  9460 ;; Parameters:    Size  Location     Type
  9461 ;;  button          2   20[COMRAM] PTR struct .
  9462 ;;		 -> mtouch_button(85), 
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;		None
  9465 ;; Return value:  Size  Location     Type
  9466 ;;                  1    wreg      void 
  9467 ;; Registers used:
  9468 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9469 ;; Tracked objects:
  9470 ;;		On entry : 0/0
  9471 ;;		On exit  : 0/0
  9472 ;;		Unchanged: 0/0
  9473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9476 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9477 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9478 ;;Total ram usage:        6 bytes
  9479 ;; Hardware stack levels used: 1
  9480 ;; Hardware stack levels required when called: 6
  9481 ;; This function calls:
  9482 ;;		Nothing
  9483 ;; This function is called by:
  9484 ;;		_Button_State_Initializing
  9485 ;;		_Button_State_NotPressed
  9486 ;; This function uses a non-reentrant model
  9487 ;;
  9488                           
  9489                           	psect	text76
  9490   002326                     __ptext76:
  9491                           	callstack 0
  9492   002326                     _Button_Baseline_Update:
  9493                           	callstack 20
  9494   002326                     
  9495                           ;mcc_generated_files/touch/mtouch_button.c: 535: static void Button_Baseline_Update(mtou
      +                          ch_button_t* button);mcc_generated_files/touch/mtouch_button.c: 536: {;mcc_generated_fil
      +                          es/touch/mtouch_button.c: 537:     if (GIE == (uint8_t)1)
  9496   002326  AEF2               	btfss	4082,7,c	;volatile
  9497   002328  EF98  F011         	goto	u5191
  9498   00232C  EF9A  F011         	goto	u5190
  9499   002330                     u5191:
  9500   002330  EFDC  F011         	goto	l5978
  9501   002334                     u5190:
  9502   002334                     
  9503                           ;mcc_generated_files/touch/mtouch_button.c: 538:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 539:         GIE = (uint8_t)0;
  9504   002334  9EF2               	bcf	4082,7,c	;volatile
  9505   002336                     
  9506                           ;mcc_generated_files/touch/mtouch_button.c: 540:         button->baseline -= (button->ba
      +                          seline) >> ((uint8_t)4u);
  9507   002336  EE20 F006          	lfsr	2,6
  9508   00233A  5015               	movf	Button_Baseline_Update@button^0,w,c
  9509   00233C  26D9               	addwf	fsr2l,f,c
  9510   00233E  5016               	movf	(Button_Baseline_Update@button+1)^0,w,c
  9511   002340  22DA               	addwfc	fsr2h,f,c
  9512   002342  CFDE F017          	movff	postinc2,??_Button_Baseline_Update
  9513   002346  CFDE F018          	movff	postinc2,??_Button_Baseline_Update+1
  9514   00234A  CFDE F019          	movff	postinc2,??_Button_Baseline_Update+2
  9515   00234E  CFDE F01A          	movff	postinc2,??_Button_Baseline_Update+3
  9516   002352  0E05               	movlw	5
  9517   002354  EFB1  F011         	goto	u5200
  9518   002358                     u5205:
  9519   002358  90D8               	bcf	status,0,c
  9520   00235A  321A               	rrcf	(??_Button_Baseline_Update+3)^0,f,c
  9521   00235C  3219               	rrcf	(??_Button_Baseline_Update+2)^0,f,c
  9522   00235E  3218               	rrcf	(??_Button_Baseline_Update+1)^0,f,c
  9523   002360  3217               	rrcf	??_Button_Baseline_Update^0,f,c
  9524   002362                     u5200:
  9525   002362  2EE8               	decfsz	wreg,f,c
  9526   002364  EFAC  F011         	goto	u5205
  9527   002368  EE20 F006          	lfsr	2,6
  9528   00236C  5015               	movf	Button_Baseline_Update@button^0,w,c
  9529   00236E  26D9               	addwf	fsr2l,f,c
  9530   002370  5016               	movf	(Button_Baseline_Update@button+1)^0,w,c
  9531   002372  22DA               	addwfc	fsr2h,f,c
  9532   002374  5017               	movf	??_Button_Baseline_Update^0,w,c
  9533   002376  5EDE               	subwf	postinc2,f,c
  9534   002378  5018               	movf	(??_Button_Baseline_Update+1)^0,w,c
  9535   00237A  5ADE               	subwfb	postinc2,f,c
  9536   00237C  5019               	movf	(??_Button_Baseline_Update+2)^0,w,c
  9537   00237E  5ADE               	subwfb	postinc2,f,c
  9538   002380  501A               	movf	(??_Button_Baseline_Update+3)^0,w,c
  9539   002382  5ADE               	subwfb	postinc2,f,c
  9540                           
  9541                           ;mcc_generated_files/touch/mtouch_button.c: 541:         button->baseline += button->rea
      +                          ding;
  9542   002384  EE20 F004          	lfsr	2,4
  9543   002388  5015               	movf	Button_Baseline_Update@button^0,w,c
  9544   00238A  26D9               	addwf	fsr2l,f,c
  9545   00238C  5016               	movf	(Button_Baseline_Update@button+1)^0,w,c
  9546   00238E  22DA               	addwfc	fsr2h,f,c
  9547   002390  CFDE F017          	movff	postinc2,??_Button_Baseline_Update
  9548   002394  CFDD F018          	movff	postdec2,??_Button_Baseline_Update+1
  9549   002398  EE20 F006          	lfsr	2,6
  9550   00239C  5015               	movf	Button_Baseline_Update@button^0,w,c
  9551   00239E  26D9               	addwf	fsr2l,f,c
  9552   0023A0  5016               	movf	(Button_Baseline_Update@button+1)^0,w,c
  9553   0023A2  22DA               	addwfc	fsr2h,f,c
  9554   0023A4  5017               	movf	??_Button_Baseline_Update^0,w,c
  9555   0023A6  26DE               	addwf	postinc2,f,c
  9556   0023A8  5018               	movf	(??_Button_Baseline_Update+1)^0,w,c
  9557   0023AA  22DE               	addwfc	postinc2,f,c
  9558   0023AC  0E00               	movlw	0
  9559   0023AE  22DE               	addwfc	postinc2,f,c
  9560   0023B0  22DE               	addwfc	postinc2,f,c
  9561   0023B2                     
  9562                           ;mcc_generated_files/touch/mtouch_button.c: 542:         GIE = (uint8_t)1;
  9563   0023B2  8EF2               	bsf	4082,7,c	;volatile
  9564                           
  9565                           ;mcc_generated_files/touch/mtouch_button.c: 543:     }
  9566   0023B4  EF1A  F012         	goto	l610
  9567   0023B8                     l5978:
  9568                           
  9569                           ;mcc_generated_files/touch/mtouch_button.c: 545:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 546:         button->baseline -= (button->baseline) >> ((uint8_t)4u);
  9570   0023B8  EE20 F006          	lfsr	2,6
  9571   0023BC  5015               	movf	Button_Baseline_Update@button^0,w,c
  9572   0023BE  26D9               	addwf	fsr2l,f,c
  9573   0023C0  5016               	movf	(Button_Baseline_Update@button+1)^0,w,c
  9574   0023C2  22DA               	addwfc	fsr2h,f,c
  9575   0023C4  CFDE F017          	movff	postinc2,??_Button_Baseline_Update
  9576   0023C8  CFDE F018          	movff	postinc2,??_Button_Baseline_Update+1
  9577   0023CC  CFDE F019          	movff	postinc2,??_Button_Baseline_Update+2
  9578   0023D0  CFDE F01A          	movff	postinc2,??_Button_Baseline_Update+3
  9579   0023D4  0E05               	movlw	5
  9580   0023D6  EFF2  F011         	goto	u5210
  9581   0023DA                     u5215:
  9582   0023DA  90D8               	bcf	status,0,c
  9583   0023DC  321A               	rrcf	(??_Button_Baseline_Update+3)^0,f,c
  9584   0023DE  3219               	rrcf	(??_Button_Baseline_Update+2)^0,f,c
  9585   0023E0  3218               	rrcf	(??_Button_Baseline_Update+1)^0,f,c
  9586   0023E2  3217               	rrcf	??_Button_Baseline_Update^0,f,c
  9587   0023E4                     u5210:
  9588   0023E4  2EE8               	decfsz	wreg,f,c
  9589   0023E6  EFED  F011         	goto	u5215
  9590   0023EA  EE20 F006          	lfsr	2,6
  9591   0023EE  5015               	movf	Button_Baseline_Update@button^0,w,c
  9592   0023F0  26D9               	addwf	fsr2l,f,c
  9593   0023F2  5016               	movf	(Button_Baseline_Update@button+1)^0,w,c
  9594   0023F4  22DA               	addwfc	fsr2h,f,c
  9595   0023F6  5017               	movf	??_Button_Baseline_Update^0,w,c
  9596   0023F8  5EDE               	subwf	postinc2,f,c
  9597   0023FA  5018               	movf	(??_Button_Baseline_Update+1)^0,w,c
  9598   0023FC  5ADE               	subwfb	postinc2,f,c
  9599   0023FE  5019               	movf	(??_Button_Baseline_Update+2)^0,w,c
  9600   002400  5ADE               	subwfb	postinc2,f,c
  9601   002402  501A               	movf	(??_Button_Baseline_Update+3)^0,w,c
  9602   002404  5ADE               	subwfb	postinc2,f,c
  9603                           
  9604                           ;mcc_generated_files/touch/mtouch_button.c: 547:         button->baseline += button->rea
      +                          ding;
  9605   002406  EE20 F004          	lfsr	2,4
  9606   00240A  5015               	movf	Button_Baseline_Update@button^0,w,c
  9607   00240C  26D9               	addwf	fsr2l,f,c
  9608   00240E  5016               	movf	(Button_Baseline_Update@button+1)^0,w,c
  9609   002410  22DA               	addwfc	fsr2h,f,c
  9610   002412  CFDE F017          	movff	postinc2,??_Button_Baseline_Update
  9611   002416  CFDD F018          	movff	postdec2,??_Button_Baseline_Update+1
  9612   00241A  EE20 F006          	lfsr	2,6
  9613   00241E  5015               	movf	Button_Baseline_Update@button^0,w,c
  9614   002420  26D9               	addwf	fsr2l,f,c
  9615   002422  5016               	movf	(Button_Baseline_Update@button+1)^0,w,c
  9616   002424  22DA               	addwfc	fsr2h,f,c
  9617   002426  5017               	movf	??_Button_Baseline_Update^0,w,c
  9618   002428  26DE               	addwf	postinc2,f,c
  9619   00242A  5018               	movf	(??_Button_Baseline_Update+1)^0,w,c
  9620   00242C  22DE               	addwfc	postinc2,f,c
  9621   00242E  0E00               	movlw	0
  9622   002430  22DE               	addwfc	postinc2,f,c
  9623   002432  22DE               	addwfc	postinc2,f,c
  9624   002434                     l610:
  9625   002434  0012               	return		;funcret
  9626   002436                     __end_of_Button_Baseline_Update:
  9627                           	callstack 0
  9628                           
  9629 ;; *************** function _Button_Baseline_Initialize *****************
  9630 ;; Defined at:
  9631 ;;		line 529 in file "mcc_generated_files/touch/mtouch_button.c"
  9632 ;; Parameters:    Size  Location     Type
  9633 ;;  button          2   23[COMRAM] PTR struct .
  9634 ;;		 -> mtouch_button(85), 
  9635 ;; Auto vars:     Size  Location     Type
  9636 ;;		None
  9637 ;; Return value:  Size  Location     Type
  9638 ;;                  1    wreg      void 
  9639 ;; Registers used:
  9640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9641 ;; Tracked objects:
  9642 ;;		On entry : 0/0
  9643 ;;		On exit  : 0/0
  9644 ;;		Unchanged: 0/0
  9645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9648 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9649 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9650 ;;Total ram usage:        6 bytes
  9651 ;; Hardware stack levels used: 1
  9652 ;; Hardware stack levels required when called: 7
  9653 ;; This function calls:
  9654 ;;		_MTOUCH_Sensor_RawSample_Get
  9655 ;; This function is called by:
  9656 ;;		_Button_State_Initializing
  9657 ;; This function uses a non-reentrant model
  9658 ;;
  9659                           
  9660                           	psect	text77
  9661   0033F6                     __ptext77:
  9662                           	callstack 0
  9663   0033F6                     _Button_Baseline_Initialize:
  9664                           	callstack 19
  9665   0033F6                     
  9666                           ;mcc_generated_files/touch/mtouch_button.c: 529: static void Button_Baseline_Initialize(
      +                          mtouch_button_t* button);mcc_generated_files/touch/mtouch_button.c: 530: {;mcc_generated
      +                          _files/touch/mtouch_button.c: 531:     button->baseline = MTOUCH_Sensor_RawSample_Get(bu
      +                          tton->sensor);
  9667   0033F6  EE20 F001          	lfsr	2,1
  9668   0033FA  5018               	movf	Button_Baseline_Initialize@button^0,w,c
  9669   0033FC  26D9               	addwf	fsr2l,f,c
  9670   0033FE  5019               	movf	(Button_Baseline_Initialize@button+1)^0,w,c
  9671   003400  22DA               	addwfc	fsr2h,f,c
  9672   003402  50DF               	movf	indf2,w,c
  9673   003404  ECBF  F01C         	call	_MTOUCH_Sensor_RawSample_Get
  9674   003408  5015               	movf	?_MTOUCH_Sensor_RawSample_Get^0,w,c
  9675   00340A  6E1A               	movwf	??_Button_Baseline_Initialize^0,c
  9676   00340C  5016               	movf	(?_MTOUCH_Sensor_RawSample_Get+1)^0,w,c
  9677   00340E  6E1B               	movwf	(??_Button_Baseline_Initialize+1)^0,c
  9678   003410  6A1C               	clrf	(??_Button_Baseline_Initialize+2)^0,c
  9679   003412  6A1D               	clrf	(??_Button_Baseline_Initialize+3)^0,c
  9680   003414  EE20 F006          	lfsr	2,6
  9681   003418  5018               	movf	Button_Baseline_Initialize@button^0,w,c
  9682   00341A  26D9               	addwf	fsr2l,f,c
  9683   00341C  5019               	movf	(Button_Baseline_Initialize@button+1)^0,w,c
  9684   00341E  22DA               	addwfc	fsr2h,f,c
  9685   003420  C01A  FFDE         	movff	??_Button_Baseline_Initialize,postinc2
  9686   003424  C01B  FFDE         	movff	??_Button_Baseline_Initialize+1,postinc2
  9687   003428  C01C  FFDE         	movff	??_Button_Baseline_Initialize+2,postinc2
  9688   00342C  C01D  FFDE         	movff	??_Button_Baseline_Initialize+3,postinc2
  9689   003430                     
  9690                           ;mcc_generated_files/touch/mtouch_button.c: 532:     button->baseline <<= ((uint8_t)4u);
  9691   003430  EE20 F006          	lfsr	2,6
  9692   003434  5018               	movf	Button_Baseline_Initialize@button^0,w,c
  9693   003436  26D9               	addwf	fsr2l,f,c
  9694   003438  5019               	movf	(Button_Baseline_Initialize@button+1)^0,w,c
  9695   00343A  22DA               	addwfc	fsr2h,f,c
  9696   00343C  0E04               	movlw	4
  9697   00343E                     u5185:
  9698   00343E  90D8               	bcf	status,0,c
  9699   003440  36DE               	rlcf	postinc2,f,c
  9700   003442  36DE               	rlcf	postinc2,f,c
  9701   003444  36DE               	rlcf	postinc2,f,c
  9702   003446  36DD               	rlcf	postdec2,f,c
  9703   003448  52DD               	movf	postdec2,f,c
  9704   00344A  52DD               	movf	postdec2,f,c
  9705   00344C  2EE8               	decfsz	wreg,f,c
  9706   00344E  EF1F  F01A         	goto	u5185
  9707   003452  0012               	return		;funcret
  9708   003454                     __end_of_Button_Baseline_Initialize:
  9709                           	callstack 0
  9710                           
  9711 ;; *************** function _Button_Reading_Update *****************
  9712 ;; Defined at:
  9713 ;;		line 502 in file "mcc_generated_files/touch/mtouch_button.c"
  9714 ;; Parameters:    Size  Location     Type
  9715 ;;  button          2   27[COMRAM] PTR struct .
  9716 ;;		 -> mtouch_button(85), 
  9717 ;; Auto vars:     Size  Location     Type
  9718 ;;		None
  9719 ;; Return value:  Size  Location     Type
  9720 ;;                  1    wreg      void 
  9721 ;; Registers used:
  9722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9723 ;; Tracked objects:
  9724 ;;		On entry : 0/0
  9725 ;;		On exit  : 0/0
  9726 ;;		Unchanged: 0/0
  9727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9728 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9731 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9732 ;;Total ram usage:        2 bytes
  9733 ;; Hardware stack levels used: 1
  9734 ;; Hardware stack levels required when called: 8
  9735 ;; This function calls:
  9736 ;;		_Button_Reading_Update_Helper
  9737 ;; This function is called by:
  9738 ;;		_Button_Service
  9739 ;; This function uses a non-reentrant model
  9740 ;;
  9741                           
  9742                           	psect	text78
  9743   003A1A                     __ptext78:
  9744                           	callstack 0
  9745   003A1A                     _Button_Reading_Update:
  9746                           	callstack 19
  9747   003A1A                     
  9748                           ;mcc_generated_files/touch/mtouch_button.c: 502: static void Button_Reading_Update(mtouc
      +                          h_button_t* button);mcc_generated_files/touch/mtouch_button.c: 503: {;mcc_generated_file
      +                          s/touch/mtouch_button.c: 504:     if (GIE == (uint8_t) 1)
  9749   003A1A  AEF2               	btfss	4082,7,c	;volatile
  9750   003A1C  EF12  F01D         	goto	u5671
  9751   003A20  EF14  F01D         	goto	u5670
  9752   003A24                     u5671:
  9753   003A24  EF1E  F01D         	goto	l6266
  9754   003A28                     u5670:
  9755   003A28                     
  9756                           ;mcc_generated_files/touch/mtouch_button.c: 505:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 506:         GIE = (uint8_t) 0;
  9757   003A28  9EF2               	bcf	4082,7,c	;volatile
  9758   003A2A                     
  9759                           ;mcc_generated_files/touch/mtouch_button.c: 507:         Button_Reading_Update_Helper(bu
      +                          tton);
  9760   003A2A  C01C  F018         	movff	Button_Reading_Update@button,Button_Reading_Update_Helper@button
  9761   003A2E  C01D  F019         	movff	Button_Reading_Update@button+1,Button_Reading_Update_Helper@button+1
  9762   003A32  EC2A  F017         	call	_Button_Reading_Update_Helper	;wreg free
  9763   003A36                     
  9764                           ;mcc_generated_files/touch/mtouch_button.c: 508:         GIE = (uint8_t) 1;
  9765   003A36  8EF2               	bsf	4082,7,c	;volatile
  9766                           
  9767                           ;mcc_generated_files/touch/mtouch_button.c: 509:     }
  9768   003A38  EF24  F01D         	goto	l597
  9769   003A3C                     l6266:
  9770                           
  9771                           ;mcc_generated_files/touch/mtouch_button.c: 511:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 512:         Button_Reading_Update_Helper(button);
  9772   003A3C  C01C  F018         	movff	Button_Reading_Update@button,Button_Reading_Update_Helper@button
  9773   003A40  C01D  F019         	movff	Button_Reading_Update@button+1,Button_Reading_Update_Helper@button+1
  9774   003A44  EC2A  F017         	call	_Button_Reading_Update_Helper	;wreg free
  9775   003A48                     l597:
  9776   003A48  0012               	return		;funcret
  9777   003A4A                     __end_of_Button_Reading_Update:
  9778                           	callstack 0
  9779                           
  9780 ;; *************** function _Button_Reading_Update_Helper *****************
  9781 ;; Defined at:
  9782 ;;		line 516 in file "mcc_generated_files/touch/mtouch_button.c"
  9783 ;; Parameters:    Size  Location     Type
  9784 ;;  button          2   23[COMRAM] PTR struct .
  9785 ;;		 -> mtouch_button(85), 
  9786 ;; Auto vars:     Size  Location     Type
  9787 ;;		None
  9788 ;; Return value:  Size  Location     Type
  9789 ;;                  1    wreg      void 
  9790 ;; Registers used:
  9791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9792 ;; Tracked objects:
  9793 ;;		On entry : 0/0
  9794 ;;		On exit  : 0/0
  9795 ;;		Unchanged: 0/0
  9796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9797 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9799 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9800 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9801 ;;Total ram usage:        4 bytes
  9802 ;; Hardware stack levels used: 1
  9803 ;; Hardware stack levels required when called: 7
  9804 ;; This function calls:
  9805 ;;		_MTOUCH_Sensor_RawSample_Get
  9806 ;; This function is called by:
  9807 ;;		_Button_Reading_Update
  9808 ;; This function uses a non-reentrant model
  9809 ;;
  9810                           
  9811                           	psect	text79
  9812   002E54                     __ptext79:
  9813                           	callstack 0
  9814   002E54                     _Button_Reading_Update_Helper:
  9815                           	callstack 19
  9816   002E54                     
  9817                           ;mcc_generated_files/touch/mtouch_button.c: 516: static void Button_Reading_Update_Helpe
      +                          r(mtouch_button_t* button);mcc_generated_files/touch/mtouch_button.c: 517: {;mcc_generat
      +                          ed_files/touch/mtouch_button.c: 518:     if (button->state != MTOUCH_BUTTON_STATE_initia
      +                          lizing)
  9818   002E54  EE20 F002          	lfsr	2,2
  9819   002E58  5018               	movf	Button_Reading_Update_Helper@button^0,w,c
  9820   002E5A  26D9               	addwf	fsr2l,f,c
  9821   002E5C  5019               	movf	(Button_Reading_Update_Helper@button+1)^0,w,c
  9822   002E5E  22DA               	addwfc	fsr2h,f,c
  9823   002E60  50DF               	movf	indf2,w,c
  9824   002E62  B4D8               	btfsc	status,2,c
  9825   002E64  EF36  F017         	goto	u5301
  9826   002E68  EF38  F017         	goto	u5300
  9827   002E6C                     u5301:
  9828   002E6C  EF6D  F017         	goto	l6028
  9829   002E70                     u5300:
  9830   002E70                     
  9831                           ;mcc_generated_files/touch/mtouch_button.c: 519:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 520:         button->reading -= button->reading>>((uint8_t)2u);
  9832   002E70  EE20 F004          	lfsr	2,4
  9833   002E74  5018               	movf	Button_Reading_Update_Helper@button^0,w,c
  9834   002E76  26D9               	addwf	fsr2l,f,c
  9835   002E78  5019               	movf	(Button_Reading_Update_Helper@button+1)^0,w,c
  9836   002E7A  22DA               	addwfc	fsr2h,f,c
  9837   002E7C  CFDE F01A          	movff	postinc2,??_Button_Reading_Update_Helper
  9838   002E80  CFDD F01B          	movff	postdec2,??_Button_Reading_Update_Helper+1
  9839   002E84  90D8               	bcf	status,0,c
  9840   002E86  321B               	rrcf	(??_Button_Reading_Update_Helper+1)^0,f,c
  9841   002E88  321A               	rrcf	??_Button_Reading_Update_Helper^0,f,c
  9842   002E8A  90D8               	bcf	status,0,c
  9843   002E8C  321B               	rrcf	(??_Button_Reading_Update_Helper+1)^0,f,c
  9844   002E8E  321A               	rrcf	??_Button_Reading_Update_Helper^0,f,c
  9845   002E90  EE20 F004          	lfsr	2,4
  9846   002E94  5018               	movf	Button_Reading_Update_Helper@button^0,w,c
  9847   002E96  26D9               	addwf	fsr2l,f,c
  9848   002E98  5019               	movf	(Button_Reading_Update_Helper@button+1)^0,w,c
  9849   002E9A  22DA               	addwfc	fsr2h,f,c
  9850   002E9C  501A               	movf	??_Button_Reading_Update_Helper^0,w,c
  9851   002E9E  5EDE               	subwf	postinc2,f,c
  9852   002EA0  501B               	movf	(??_Button_Reading_Update_Helper+1)^0,w,c
  9853   002EA2  5ADD               	subwfb	postdec2,f,c
  9854   002EA4                     
  9855                           ;mcc_generated_files/touch/mtouch_button.c: 521:         button->reading += MTOUCH_Senso
      +                          r_RawSample_Get(button->sensor) >> ((uint8_t)2u);
  9856   002EA4  EE20 F001          	lfsr	2,1
  9857   002EA8  5018               	movf	Button_Reading_Update_Helper@button^0,w,c
  9858   002EAA  26D9               	addwf	fsr2l,f,c
  9859   002EAC  5019               	movf	(Button_Reading_Update_Helper@button+1)^0,w,c
  9860   002EAE  22DA               	addwfc	fsr2h,f,c
  9861   002EB0  50DF               	movf	indf2,w,c
  9862   002EB2  ECBF  F01C         	call	_MTOUCH_Sensor_RawSample_Get
  9863   002EB6  90D8               	bcf	status,0,c
  9864   002EB8  3216               	rrcf	(?_MTOUCH_Sensor_RawSample_Get+1)^0,f,c
  9865   002EBA  3215               	rrcf	?_MTOUCH_Sensor_RawSample_Get^0,f,c
  9866   002EBC  90D8               	bcf	status,0,c
  9867   002EBE  3216               	rrcf	(?_MTOUCH_Sensor_RawSample_Get+1)^0,f,c
  9868   002EC0  3215               	rrcf	?_MTOUCH_Sensor_RawSample_Get^0,f,c
  9869   002EC2  EE20 F004          	lfsr	2,4
  9870   002EC6  5018               	movf	Button_Reading_Update_Helper@button^0,w,c
  9871   002EC8  26D9               	addwf	fsr2l,f,c
  9872   002ECA  5019               	movf	(Button_Reading_Update_Helper@button+1)^0,w,c
  9873   002ECC  22DA               	addwfc	fsr2h,f,c
  9874   002ECE  5015               	movf	?_MTOUCH_Sensor_RawSample_Get^0,w,c
  9875   002ED0  26DE               	addwf	postinc2,f,c
  9876   002ED2  5016               	movf	(?_MTOUCH_Sensor_RawSample_Get+1)^0,w,c
  9877   002ED4  22DD               	addwfc	postdec2,f,c
  9878                           
  9879                           ;mcc_generated_files/touch/mtouch_button.c: 522:     }
  9880   002ED6  EF80  F017         	goto	l602
  9881   002EDA                     l6028:
  9882                           
  9883                           ;mcc_generated_files/touch/mtouch_button.c: 524:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 525:         button->reading = MTOUCH_Sensor_RawSample_Get(button->sensor);
  9884   002EDA  EE20 F001          	lfsr	2,1
  9885   002EDE  5018               	movf	Button_Reading_Update_Helper@button^0,w,c
  9886   002EE0  26D9               	addwf	fsr2l,f,c
  9887   002EE2  5019               	movf	(Button_Reading_Update_Helper@button+1)^0,w,c
  9888   002EE4  22DA               	addwfc	fsr2h,f,c
  9889   002EE6  50DF               	movf	indf2,w,c
  9890   002EE8  ECBF  F01C         	call	_MTOUCH_Sensor_RawSample_Get
  9891   002EEC  EE20 F004          	lfsr	2,4
  9892   002EF0  5018               	movf	Button_Reading_Update_Helper@button^0,w,c
  9893   002EF2  26D9               	addwf	fsr2l,f,c
  9894   002EF4  5019               	movf	(Button_Reading_Update_Helper@button+1)^0,w,c
  9895   002EF6  22DA               	addwfc	fsr2h,f,c
  9896   002EF8  C015  FFDE         	movff	?_MTOUCH_Sensor_RawSample_Get,postinc2
  9897   002EFC  C016  FFDD         	movff	?_MTOUCH_Sensor_RawSample_Get+1,postdec2
  9898   002F00                     l602:
  9899   002F00  0012               	return		;funcret
  9900   002F02                     __end_of_Button_Reading_Update_Helper:
  9901                           	callstack 0
  9902                           
  9903 ;; *************** function _MTOUCH_Sensor_RawSample_Get *****************
  9904 ;; Defined at:
  9905 ;;		line 622 in file "mcc_generated_files/touch/mtouch_sensor.c"
  9906 ;; Parameters:    Size  Location     Type
  9907 ;;  name            1    wreg     enum E13072
  9908 ;; Auto vars:     Size  Location     Type
  9909 ;;  name            1   22[COMRAM] enum E13072
  9910 ;; Return value:  Size  Location     Type
  9911 ;;                  2   20[COMRAM] unsigned short 
  9912 ;; Registers used:
  9913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9914 ;; Tracked objects:
  9915 ;;		On entry : 0/0
  9916 ;;		On exit  : 0/0
  9917 ;;		Unchanged: 0/0
  9918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9919 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9920 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9922 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9923 ;;Total ram usage:        3 bytes
  9924 ;; Hardware stack levels used: 1
  9925 ;; Hardware stack levels required when called: 6
  9926 ;; This function calls:
  9927 ;;		Nothing
  9928 ;; This function is called by:
  9929 ;;		_Button_Reading_Update_Helper
  9930 ;;		_Button_Baseline_Initialize
  9931 ;; This function uses a non-reentrant model
  9932 ;;
  9933                           
  9934                           	psect	text80
  9935   00397E                     __ptext80:
  9936                           	callstack 0
  9937   00397E                     _MTOUCH_Sensor_RawSample_Get:
  9938                           	callstack 19
  9939                           
  9940                           ;incstack = 0
  9941                           ;MTOUCH_Sensor_RawSample_Get@name stored from wreg
  9942   00397E  6E17               	movwf	MTOUCH_Sensor_RawSample_Get@name^0,c
  9943   003980                     
  9944                           ;mcc_generated_files/touch/mtouch_sensor.c: 622: mtouch_sensor_sample_t MTOUCH_Sensor_Ra
      +                          wSample_Get(enum mtouch_sensor_names name);mcc_generated_files/touch/mtouch_sensor.c: 62
      +                          3: {;mcc_generated_files/touch/mtouch_sensor.c: 624:     if (name < 5u)
  9945   003980  0E05               	movlw	5
  9946   003982  6017               	cpfslt	MTOUCH_Sensor_RawSample_Get@name^0,c
  9947   003984  EFC6  F01C         	goto	u5071
  9948   003988  EFC8  F01C         	goto	u5070
  9949   00398C                     u5071:
  9950   00398C  EFD4  F01C         	goto	l5894
  9951   003990                     u5070:
  9952   003990                     
  9953                           ;mcc_generated_files/touch/mtouch_sensor.c: 625:     {;mcc_generated_files/touch/mtouch_
      +                          sensor.c: 626:         return mtouch_sensor[name].rawSample;
  9954   003990  5017               	movf	MTOUCH_Sensor_RawSample_Get@name^0,w,c
  9955   003992  0D0A               	mullw	10
  9956   003994  50F3               	movf	243,w,c
  9957   003996  0FA2               	addlw	low (_mtouch_sensor+7)
  9958   003998  6ED9               	movwf	fsr2l,c
  9959   00399A  6ADA               	clrf	fsr2h,c
  9960   00399C  CFDE F015          	movff	postinc2,?_MTOUCH_Sensor_RawSample_Get
  9961   0039A0  CFDD F016          	movff	postdec2,?_MTOUCH_Sensor_RawSample_Get+1
  9962   0039A4  EFD8  F01C         	goto	l1234
  9963   0039A8                     l5894:
  9964                           
  9965                           ;mcc_generated_files/touch/mtouch_sensor.c: 629:         return (mtouch_sensor_sample_t)
      +                          0;
  9966   0039A8  0E00               	movlw	0
  9967   0039AA  6E16               	movwf	(?_MTOUCH_Sensor_RawSample_Get+1)^0,c
  9968   0039AC  0E00               	movlw	0
  9969   0039AE  6E15               	movwf	?_MTOUCH_Sensor_RawSample_Get^0,c
  9970   0039B0                     l1234:
  9971   0039B0  0012               	return		;funcret
  9972   0039B2                     __end_of_MTOUCH_Sensor_RawSample_Get:
  9973                           	callstack 0
  9974                           
  9975 ;; *************** function _Button_Deviation_Update *****************
  9976 ;; Defined at:
  9977 ;;		line 449 in file "mcc_generated_files/touch/mtouch_button.c"
  9978 ;; Parameters:    Size  Location     Type
  9979 ;;  button          2   20[COMRAM] PTR struct .
  9980 ;;		 -> mtouch_button(85), 
  9981 ;; Auto vars:     Size  Location     Type
  9982 ;;  deviation       4   32[COMRAM] long 
  9983 ;; Return value:  Size  Location     Type
  9984 ;;                  1    wreg      void 
  9985 ;; Registers used:
  9986 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9987 ;; Tracked objects:
  9988 ;;		On entry : 0/0
  9989 ;;		On exit  : 0/0
  9990 ;;		Unchanged: 0/0
  9991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9992 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9993 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9994 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9995 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9996 ;;Total ram usage:       16 bytes
  9997 ;; Hardware stack levels used: 1
  9998 ;; Hardware stack levels required when called: 6
  9999 ;; This function calls:
 10000 ;;		Nothing
 10001 ;; This function is called by:
 10002 ;;		_Button_Service
 10003 ;; This function uses a non-reentrant model
 10004 ;;
 10005                           
 10006                           	psect	text81
 10007   0021FC                     __ptext81:
 10008                           	callstack 0
 10009   0021FC                     _Button_Deviation_Update:
 10010                           	callstack 21
 10011   0021FC                     
 10012                           ;mcc_generated_files/touch/mtouch_button.c: 449: static void Button_Deviation_Update(mto
      +                          uch_button_t* button);mcc_generated_files/touch/mtouch_button.c: 450: {;mcc_generated_fi
      +                          les/touch/mtouch_button.c: 451:     int32_t deviation;;mcc_generated_files/touch/mtouch_
      +                          button.c: 453:     deviation = (int32_t)((int32_t)(button->reading) - (int32_t)((button-
      +                          >baseline)>>((uint8_t)4u)));
 10013   0021FC  EE20 F006          	lfsr	2,6
 10014   002200  5015               	movf	Button_Deviation_Update@button^0,w,c
 10015   002202  26D9               	addwf	fsr2l,f,c
 10016   002204  5016               	movf	(Button_Deviation_Update@button+1)^0,w,c
 10017   002206  22DA               	addwfc	fsr2h,f,c
 10018   002208  CFDE F017          	movff	postinc2,??_Button_Deviation_Update
 10019   00220C  CFDE F018          	movff	postinc2,??_Button_Deviation_Update+1
 10020   002210  CFDE F019          	movff	postinc2,??_Button_Deviation_Update+2
 10021   002214  CFDE F01A          	movff	postinc2,??_Button_Deviation_Update+3
 10022   002218  0E05               	movlw	5
 10023   00221A  EF14  F011         	goto	u5680
 10024   00221E                     u5685:
 10025   00221E  90D8               	bcf	status,0,c
 10026   002220  321A               	rrcf	(??_Button_Deviation_Update+3)^0,f,c
 10027   002222  3219               	rrcf	(??_Button_Deviation_Update+2)^0,f,c
 10028   002224  3218               	rrcf	(??_Button_Deviation_Update+1)^0,f,c
 10029   002226  3217               	rrcf	??_Button_Deviation_Update^0,f,c
 10030   002228                     u5680:
 10031   002228  2EE8               	decfsz	wreg,f,c
 10032   00222A  EF0F  F011         	goto	u5685
 10033   00222E  EE20 F004          	lfsr	2,4
 10034   002232  5015               	movf	Button_Deviation_Update@button^0,w,c
 10035   002234  26D9               	addwf	fsr2l,f,c
 10036   002236  5016               	movf	(Button_Deviation_Update@button+1)^0,w,c
 10037   002238  22DA               	addwfc	fsr2h,f,c
 10038   00223A  CFDE F01B          	movff	postinc2,??_Button_Deviation_Update+4
 10039   00223E  CFDD F01C          	movff	postdec2,??_Button_Deviation_Update+5
 10040   002242  501B               	movf	(??_Button_Deviation_Update+4)^0,w,c
 10041   002244  6E1D               	movwf	(??_Button_Deviation_Update+6)^0,c
 10042   002246  501C               	movf	(??_Button_Deviation_Update+5)^0,w,c
 10043   002248  6E1E               	movwf	(??_Button_Deviation_Update+7)^0,c
 10044   00224A  6A1F               	clrf	(??_Button_Deviation_Update+8)^0,c
 10045   00224C  6A20               	clrf	(??_Button_Deviation_Update+9)^0,c
 10046   00224E  5017               	movf	??_Button_Deviation_Update^0,w,c
 10047   002250  5C1D               	subwf	(??_Button_Deviation_Update+6)^0,w,c
 10048   002252  6E21               	movwf	Button_Deviation_Update@deviation^0,c
 10049   002254  5018               	movf	(??_Button_Deviation_Update+1)^0,w,c
 10050   002256  581E               	subwfb	(??_Button_Deviation_Update+7)^0,w,c
 10051   002258  6E22               	movwf	(Button_Deviation_Update@deviation+1)^0,c
 10052   00225A  5019               	movf	(??_Button_Deviation_Update+2)^0,w,c
 10053   00225C  581F               	subwfb	(??_Button_Deviation_Update+8)^0,w,c
 10054   00225E  6E23               	movwf	(Button_Deviation_Update@deviation+2)^0,c
 10055   002260  501A               	movf	(??_Button_Deviation_Update+3)^0,w,c
 10056   002262  5820               	subwfb	(??_Button_Deviation_Update+9)^0,w,c
 10057   002264  6E24               	movwf	(Button_Deviation_Update@deviation+3)^0,c
 10058                           
 10059                           ;mcc_generated_files/touch/mtouch_button.c: 456:     deviation = deviation >> (button->s
      +                          caling);
 10060   002266  EE20 F010          	lfsr	2,16
 10061   00226A  5015               	movf	Button_Deviation_Update@button^0,w,c
 10062   00226C  26D9               	addwf	fsr2l,f,c
 10063   00226E  5016               	movf	(Button_Deviation_Update@button+1)^0,w,c
 10064   002270  22DA               	addwfc	fsr2h,f,c
 10065   002272  50DF               	movf	indf2,w,c
 10066   002274  6E17               	movwf	??_Button_Deviation_Update^0,c
 10067   002276  C021  F018         	movff	Button_Deviation_Update@deviation,??_Button_Deviation_Update+1
 10068   00227A  C022  F019         	movff	Button_Deviation_Update@deviation+1,??_Button_Deviation_Update+2
 10069   00227E  C023  F01A         	movff	Button_Deviation_Update@deviation+2,??_Button_Deviation_Update+3
 10070   002282  C024  F01B         	movff	Button_Deviation_Update@deviation+3,??_Button_Deviation_Update+4
 10071   002286                     u5695:
 10072   002286  6617               	tstfsz	??_Button_Deviation_Update^0,c
 10073   002288  EF48  F011         	goto	u5696
 10074   00228C  EF50  F011         	goto	u5697
 10075   002290                     u5696:
 10076   002290  341B               	rlcf	(??_Button_Deviation_Update+4)^0,w,c
 10077   002292  321B               	rrcf	(??_Button_Deviation_Update+4)^0,f,c
 10078   002294  321A               	rrcf	(??_Button_Deviation_Update+3)^0,f,c
 10079   002296  3219               	rrcf	(??_Button_Deviation_Update+2)^0,f,c
 10080   002298  3218               	rrcf	(??_Button_Deviation_Update+1)^0,f,c
 10081   00229A  2E17               	decfsz	??_Button_Deviation_Update^0,f,c
 10082   00229C  EF43  F011         	goto	u5695
 10083   0022A0                     u5697:
 10084   0022A0  C018  F021         	movff	??_Button_Deviation_Update+1,Button_Deviation_Update@deviation
 10085   0022A4  C019  F022         	movff	??_Button_Deviation_Update+2,Button_Deviation_Update@deviation+1
 10086   0022A8  C01A  F023         	movff	??_Button_Deviation_Update+3,Button_Deviation_Update@deviation+2
 10087   0022AC  C01B  F024         	movff	??_Button_Deviation_Update+4,Button_Deviation_Update@deviation+3
 10088   0022B0                     
 10089                           ;mcc_generated_files/touch/mtouch_button.c: 459:     if (deviation > ((0x7f)))
 10090   0022B0  BE24               	btfsc	(Button_Deviation_Update@deviation+3)^0,7,c
 10091   0022B2  EF66  F011         	goto	u5701
 10092   0022B6  5024               	movf	(Button_Deviation_Update@deviation+3)^0,w,c
 10093   0022B8  1023               	iorwf	(Button_Deviation_Update@deviation+2)^0,w,c
 10094   0022BA  1022               	iorwf	(Button_Deviation_Update@deviation+1)^0,w,c
 10095   0022BC  E109               	bnz	u5700
 10096   0022BE  0E80               	movlw	128
 10097   0022C0  5C21               	subwf	Button_Deviation_Update@deviation^0,w,c
 10098   0022C2  A0D8               	btfss	status,0,c
 10099   0022C4  EF66  F011         	goto	u5701
 10100   0022C8  EF68  F011         	goto	u5700
 10101   0022CC                     u5701:
 10102   0022CC  EF70  F011         	goto	l6274
 10103   0022D0                     u5700:
 10104   0022D0                     
 10105                           ;mcc_generated_files/touch/mtouch_button.c: 460:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 461:         deviation = ((0x7f));
 10106   0022D0  0E7F               	movlw	127
 10107   0022D2  6E21               	movwf	Button_Deviation_Update@deviation^0,c
 10108   0022D4  0E00               	movlw	0
 10109   0022D6  6E22               	movwf	(Button_Deviation_Update@deviation+1)^0,c
 10110   0022D8  0E00               	movlw	0
 10111   0022DA  6E23               	movwf	(Button_Deviation_Update@deviation+2)^0,c
 10112   0022DC  0E00               	movlw	0
 10113   0022DE  6E24               	movwf	(Button_Deviation_Update@deviation+3)^0,c
 10114   0022E0                     l6274:
 10115                           
 10116                           ;mcc_generated_files/touch/mtouch_button.c: 463:     if (deviation < ((-1-0x7f)))
 10117   0022E0  AE24               	btfss	(Button_Deviation_Update@deviation+3)^0,7,c
 10118   0022E2  EF80  F011         	goto	u5711
 10119   0022E6  0E80               	movlw	128
 10120   0022E8  5C21               	subwf	Button_Deviation_Update@deviation^0,w,c
 10121   0022EA  0EFF               	movlw	255
 10122   0022EC  5822               	subwfb	(Button_Deviation_Update@deviation+1)^0,w,c
 10123   0022EE  0EFF               	movlw	255
 10124   0022F0  5823               	subwfb	(Button_Deviation_Update@deviation+2)^0,w,c
 10125   0022F2  0EFF               	movlw	255
 10126   0022F4  5824               	subwfb	(Button_Deviation_Update@deviation+3)^0,w,c
 10127   0022F6  B0D8               	btfsc	status,0,c
 10128   0022F8  EF80  F011         	goto	u5711
 10129   0022FC  EF82  F011         	goto	u5710
 10130   002300                     u5711:
 10131   002300  EF8A  F011         	goto	l6278
 10132   002304                     u5710:
 10133   002304                     
 10134                           ;mcc_generated_files/touch/mtouch_button.c: 464:     {;mcc_generated_files/touch/mtouch_
      +                          button.c: 465:         deviation = ((-1-0x7f));
 10135   002304  0E80               	movlw	128
 10136   002306  6E21               	movwf	Button_Deviation_Update@deviation^0,c
 10137   002308  0EFF               	movlw	255
 10138   00230A  6E22               	movwf	(Button_Deviation_Update@deviation+1)^0,c
 10139   00230C  0EFF               	movlw	255
 10140   00230E  6E23               	movwf	(Button_Deviation_Update@deviation+2)^0,c
 10141   002310  0EFF               	movlw	255
 10142   002312  6E24               	movwf	(Button_Deviation_Update@deviation+3)^0,c
 10143   002314                     l6278:
 10144                           
 10145                           ;mcc_generated_files/touch/mtouch_button.c: 468:     button->deviation = (mtouch_button_
      +                          deviation_t)deviation;
 10146   002314  EE20 F00A          	lfsr	2,10
 10147   002318  5015               	movf	Button_Deviation_Update@button^0,w,c
 10148   00231A  26D9               	addwf	fsr2l,f,c
 10149   00231C  5016               	movf	(Button_Deviation_Update@button+1)^0,w,c
 10150   00231E  22DA               	addwfc	fsr2h,f,c
 10151   002320  C021  FFDF         	movff	Button_Deviation_Update@deviation,indf2
 10152   002324  0012               	return		;funcret
 10153   002326                     __end_of_Button_Deviation_Update:
 10154                           	callstack 0
 10155                           
 10156 ;; *************** function _MTOUCH_Button_SetNotPressedCallback *****************
 10157 ;; Defined at:
 10158 ;;		line 626 in file "mcc_generated_files/touch/mtouch_button.c"
 10159 ;; Parameters:    Size  Location     Type
 10160 ;;  callback        3   20[COMRAM] PTR FTN(enum E13138,)voi
 10161 ;;		 -> ProcessButtonRelease(1), 
 10162 ;; Auto vars:     Size  Location     Type
 10163 ;;		None
 10164 ;; Return value:  Size  Location     Type
 10165 ;;                  1    wreg      void 
 10166 ;; Registers used:
 10167 ;;		wreg, status,2, status,0
 10168 ;; Tracked objects:
 10169 ;;		On entry : 0/0
 10170 ;;		On exit  : 0/0
 10171 ;;		Unchanged: 0/0
 10172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10173 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10176 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10177 ;;Total ram usage:        3 bytes
 10178 ;; Hardware stack levels used: 1
 10179 ;; Hardware stack levels required when called: 6
 10180 ;; This function calls:
 10181 ;;		Nothing
 10182 ;; This function is called by:
 10183 ;;		_main
 10184 ;; This function uses a non-reentrant model
 10185 ;;
 10186                           
 10187                           	psect	text82
 10188   003D86                     __ptext82:
 10189                           	callstack 0
 10190   003D86                     _MTOUCH_Button_SetNotPressedCallback:
 10191                           	callstack 24
 10192   003D86                     
 10193                           ;mcc_generated_files/touch/mtouch_button.c: 626: void MTOUCH_Button_SetNotPressedCallbac
      +                          k(void (*callback)(enum mtouch_button_names));mcc_generated_files/touch/mtouch_button.c:
      +                           627: {;mcc_generated_files/touch/mtouch_button.c: 628:     callback_notPressed = callba
      +                          ck;
 10194   003D86  C015  F0E5         	movff	MTOUCH_Button_SetNotPressedCallback@callback,_callback_notPressed
 10195   003D8A  C016  F0E6         	movff	MTOUCH_Button_SetNotPressedCallback@callback+1,_callback_notPressed+1
 10196   003D8E  C017  F0E7         	movff	MTOUCH_Button_SetNotPressedCallback@callback+2,_callback_notPressed+2
 10197   003D92  0012               	return		;funcret
 10198   003D94                     __end_of_MTOUCH_Button_SetNotPressedCallback:
 10199                           	callstack 0
 10200                           
 10201 ;; *************** function _ApplicationTask *****************
 10202 ;; Defined at:
 10203 ;;		line 16 in file "application.c"
 10204 ;; Parameters:    Size  Location     Type
 10205 ;;		None
 10206 ;; Auto vars:     Size  Location     Type
 10207 ;;  motorSpeed      2   26[COMRAM] unsigned short 
 10208 ;; Return value:  Size  Location     Type
 10209 ;;                  1    wreg      void 
 10210 ;; Registers used:
 10211 ;;		wreg, status,2, status,0, cstack
 10212 ;; Tracked objects:
 10213 ;;		On entry : 0/0
 10214 ;;		On exit  : 0/0
 10215 ;;		Unchanged: 0/0
 10216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10218 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10219 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10220 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10221 ;;Total ram usage:        4 bytes
 10222 ;; Hardware stack levels used: 1
 10223 ;; Hardware stack levels required when called: 7
 10224 ;; This function calls:
 10225 ;;		_ClearButton
 10226 ;;		_ClearEvent
 10227 ;;		_GetButton
 10228 ;;		_GetEvent
 10229 ;;		_GetMotorSpeed
 10230 ;;		_PWM4_LoadDutyValue
 10231 ;; This function is called by:
 10232 ;;		_main
 10233 ;; This function uses a non-reentrant model
 10234 ;;
 10235                           
 10236                           	psect	text83
 10237   0018EA                     __ptext83:
 10238                           	callstack 0
 10239   0018EA                     _ApplicationTask:
 10240                           	callstack 23
 10241   0018EA                     
 10242                           ;application.c: 20:     switch (state)
 10243   0018EA  EF2C  F00D         	goto	l5522
 10244   0018EE                     l5432:
 10245                           
 10246                           ;application.c: 24:             if (GetEvent() != NO_KEY)
 10247   0018EE  ECE7  F01E         	call	_GetEvent	;wreg free
 10248   0018F2  0900               	iorlw	0
 10249   0018F4  B4D8               	btfsc	status,2,c
 10250   0018F6  EF7F  F00C         	goto	u4461
 10251   0018FA  EF81  F00C         	goto	u4460
 10252   0018FE                     u4461:
 10253   0018FE  EF4E  F00D         	goto	l1469
 10254   001902                     u4460:
 10255   001902                     
 10256                           ;application.c: 25:             {;application.c: 26:                 buttonNo = GetButto
      +                          n();
 10257   001902  ECEA  F01E         	call	_GetButton	;wreg free
 10258   001906  6E3F               	movwf	_buttonNo^0,c
 10259   001908                     
 10260                           ;application.c: 27:                 if (buttonNo < MAX_KEYS)
 10261   001908  0E04               	movlw	4
 10262   00190A  603F               	cpfslt	_buttonNo^0,c
 10263   00190C  EF8A  F00C         	goto	u4471
 10264   001910  EF8C  F00C         	goto	u4470
 10265   001914                     u4471:
 10266   001914  EF90  F00C         	goto	l5440
 10267   001918                     u4470:
 10268   001918                     
 10269                           ;application.c: 28:                 {;application.c: 29:                     state = (1)
      +                          ;
 10270   001918  0E00               	movlw	0
 10271   00191A  6E36               	movwf	(_state+1)^0,c
 10272   00191C  0E01               	movlw	1
 10273   00191E  6E35               	movwf	_state^0,c
 10274   001920                     l5440:
 10275                           
 10276                           ;application.c: 31:                 ClearButton();
 10277   001920  ECDA  F01E         	call	_ClearButton	;wreg free
 10278   001924                     
 10279                           ;application.c: 32:                 ClearEvent();
 10280   001924  ECD6  F01E         	call	_ClearEvent	;wreg free
 10281                           
 10282                           ;application.c: 33:             }
 10283   001928  EF4E  F00D         	goto	l1469
 10284   00192C                     l5444:
 10285                           
 10286                           ;application.c: 40:             if (buttonNo == BUTTON1)
 10287   00192C  043F               	decf	_buttonNo^0,w,c
 10288   00192E  A4D8               	btfss	status,2,c
 10289   001930  EF9C  F00C         	goto	u4481
 10290   001934  EF9E  F00C         	goto	u4480
 10291   001938                     u4481:
 10292   001938  EFA4  F00C         	goto	l5448
 10293   00193C                     u4480:
 10294   00193C                     
 10295                           ;application.c: 41:             {;application.c: 42:                 state = (2);
 10296   00193C  0E00               	movlw	0
 10297   00193E  6E36               	movwf	(_state+1)^0,c
 10298   001940  0E02               	movlw	2
 10299   001942  6E35               	movwf	_state^0,c
 10300                           
 10301                           ;application.c: 43:             }
 10302   001944  EFC6  F00C         	goto	l1418
 10303   001948                     l5448:
 10304   001948  0E02               	movlw	2
 10305   00194A  183F               	xorwf	_buttonNo^0,w,c
 10306   00194C  A4D8               	btfss	status,2,c
 10307   00194E  EFAB  F00C         	goto	u4491
 10308   001952  EFAD  F00C         	goto	u4490
 10309   001956                     u4491:
 10310   001956  EFB3  F00C         	goto	l5452
 10311   00195A                     u4490:
 10312   00195A                     
 10313                           ;application.c: 45:             {;application.c: 46:                 state = (3);
 10314   00195A  0E00               	movlw	0
 10315   00195C  6E36               	movwf	(_state+1)^0,c
 10316   00195E  0E03               	movlw	3
 10317   001960  6E35               	movwf	_state^0,c
 10318                           
 10319                           ;application.c: 47:             }
 10320   001962  EFC6  F00C         	goto	l1418
 10321   001966                     l5452:
 10322   001966  0E03               	movlw	3
 10323   001968  183F               	xorwf	_buttonNo^0,w,c
 10324   00196A  A4D8               	btfss	status,2,c
 10325   00196C  EFBA  F00C         	goto	u4501
 10326   001970  EFBC  F00C         	goto	u4500
 10327   001974                     u4501:
 10328   001974  EFC2  F00C         	goto	l5456
 10329   001978                     u4500:
 10330   001978                     
 10331                           ;application.c: 49:             {;application.c: 50:                 state = (4);
 10332   001978  0E00               	movlw	0
 10333   00197A  6E36               	movwf	(_state+1)^0,c
 10334   00197C  0E04               	movlw	4
 10335   00197E  6E35               	movwf	_state^0,c
 10336                           
 10337                           ;application.c: 51:             }
 10338   001980  EFC6  F00C         	goto	l1418
 10339   001984                     l5456:
 10340                           
 10341                           ;application.c: 53:             {;application.c: 54:                 state = (0);
 10342   001984  0E00               	movlw	0
 10343   001986  6E36               	movwf	(_state+1)^0,c
 10344   001988  0E00               	movlw	0
 10345   00198A  6E35               	movwf	_state^0,c
 10346   00198C                     l1418:
 10347                           
 10348                           ;application.c: 56:             buttonNo = NO_KEY;
 10349   00198C  0E00               	movlw	0
 10350   00198E  6E3F               	movwf	_buttonNo^0,c
 10351                           
 10352                           ;application.c: 57:             break;
 10353   001990  EF4E  F00D         	goto	l1469
 10354   001994                     l5458:
 10355                           
 10356                           ;application.c: 59:             if (motorState != (1))
 10357   001994  0433               	decf	_motorState^0,w,c
 10358   001996  1034               	iorwf	(_motorState+1)^0,w,c
 10359   001998  B4D8               	btfsc	status,2,c
 10360   00199A  EFD1  F00C         	goto	u4511
 10361   00199E  EFD3  F00C         	goto	u4510
 10362   0019A2                     u4511:
 10363   0019A2  EFE8  F00C         	goto	l5482
 10364   0019A6                     u4510:
 10365   0019A6                     
 10366                           ;application.c: 60:             {;application.c: 61:                 motorState = (1);
 10367   0019A6  0E00               	movlw	0
 10368   0019A8  6E34               	movwf	(_motorState+1)^0,c
 10369   0019AA  0E01               	movlw	1
 10370   0019AC  6E33               	movwf	_motorState^0,c
 10371   0019AE  8885               	bsf	133,4,c	;volatile
 10372   0019B0                     
 10373                           ;application.c: 63:                 PWM4_LoadDutyValue((180));
 10374   0019B0  0E00               	movlw	0
 10375   0019B2  6E16               	movwf	(PWM4_LoadDutyValue@dutyValue+1)^0,c
 10376   0019B4  0EB4               	movlw	180
 10377   0019B6  6E15               	movwf	PWM4_LoadDutyValue@dutyValue^0,c
 10378   0019B8  ECD9  F01C         	call	_PWM4_LoadDutyValue	;wreg free
 10379   0019BC  9C84               	bcf	132,6,c	;volatile
 10380   0019BE  8A84               	bsf	132,5,c	;volatile
 10381   0019C0  8884               	bsf	132,4,c	;volatile
 10382   0019C2  8C85               	bsf	133,6,c	;volatile
 10383   0019C4  8283               	bsf	131,1,c	;volatile
 10384   0019C6  8E84               	bsf	132,7,c	;volatile
 10385   0019C8  8483               	bsf	131,2,c	;volatile
 10386   0019CA  9A85               	bcf	133,5,c	;volatile
 10387   0019CC  EF4E  F00D         	goto	l1469
 10388   0019D0                     l5482:
 10389                           
 10390                           ;application.c: 69:             {;application.c: 70:                 state = (0);
 10391   0019D0  0E00               	movlw	0
 10392   0019D2  6E36               	movwf	(_state+1)^0,c
 10393   0019D4  0E00               	movlw	0
 10394   0019D6  6E35               	movwf	_state^0,c
 10395   0019D8  EF4E  F00D         	goto	l1469
 10396   0019DC                     l5484:
 10397                           
 10398                           ;application.c: 74:             if (motorState == (1))
 10399   0019DC  0433               	decf	_motorState^0,w,c
 10400   0019DE  1034               	iorwf	(_motorState+1)^0,w,c
 10401   0019E0  A4D8               	btfss	status,2,c
 10402   0019E2  EFF5  F00C         	goto	u4521
 10403   0019E6  EFF7  F00C         	goto	u4520
 10404   0019EA                     u4521:
 10405   0019EA  EFE8  F00C         	goto	l5482
 10406   0019EE                     u4520:
 10407   0019EE                     
 10408                           ;application.c: 75:             {;application.c: 76:                 motorState = (0);
 10409   0019EE  0E00               	movlw	0
 10410   0019F0  6E34               	movwf	(_motorState+1)^0,c
 10411   0019F2  0E00               	movlw	0
 10412   0019F4  6E33               	movwf	_motorState^0,c
 10413   0019F6  9885               	bcf	133,4,c	;volatile
 10414   0019F8                     
 10415                           ;application.c: 82:             PWM4_LoadDutyValue((0));
 10416   0019F8  0E00               	movlw	0
 10417   0019FA  6E16               	movwf	(PWM4_LoadDutyValue@dutyValue+1)^0,c
 10418   0019FC  0E00               	movlw	0
 10419   0019FE  6E15               	movwf	PWM4_LoadDutyValue@dutyValue^0,c
 10420   001A00  ECD9  F01C         	call	_PWM4_LoadDutyValue	;wreg free
 10421   001A04  8C84               	bsf	132,6,c	;volatile
 10422   001A06  8A84               	bsf	132,5,c	;volatile
 10423   001A08  8884               	bsf	132,4,c	;volatile
 10424   001A0A  8C85               	bsf	133,6,c	;volatile
 10425   001A0C  8283               	bsf	131,1,c	;volatile
 10426   001A0E  8E84               	bsf	132,7,c	;volatile
 10427   001A10  8A85               	bsf	133,5,c	;volatile
 10428   001A12  9483               	bcf	131,2,c	;volatile
 10429   001A14  EF4E  F00D         	goto	l1469
 10430   001A18                     l5510:
 10431                           
 10432                           ;application.c: 94:         if (motorState == (1))
 10433   001A18  0433               	decf	_motorState^0,w,c
 10434   001A1A  1034               	iorwf	(_motorState+1)^0,w,c
 10435   001A1C  A4D8               	btfss	status,2,c
 10436   001A1E  EF13  F00D         	goto	u4531
 10437   001A22  EF15  F00D         	goto	u4530
 10438   001A26                     u4531:
 10439   001A26  EFE8  F00C         	goto	l5482
 10440   001A2A                     u4530:
 10441   001A2A                     
 10442                           ;application.c: 95:         {;application.c: 97:             motorSpeed = GetMotorSpeed(
      +                          BUTTON.sliderADC_Val);
 10443   001A2A  C08F  F015         	movff	_BUTTON+2,GetMotorSpeed@adcVal
 10444   001A2E  C090  F016         	movff	_BUTTON+3,GetMotorSpeed@adcVal+1
 10445   001A32  EC9A  F00B         	call	_GetMotorSpeed	;wreg free
 10446   001A36  C015  F01B         	movff	?_GetMotorSpeed,ApplicationTask@motorSpeed
 10447   001A3A  C016  F01C         	movff	?_GetMotorSpeed+1,ApplicationTask@motorSpeed+1
 10448                           
 10449                           ;application.c: 100:             PWM4_LoadDutyValue(motorSpeed);
 10450   001A3E  C01B  F015         	movff	ApplicationTask@motorSpeed,PWM4_LoadDutyValue@dutyValue
 10451   001A42  C01C  F016         	movff	ApplicationTask@motorSpeed+1,PWM4_LoadDutyValue@dutyValue+1
 10452   001A46  ECD9  F01C         	call	_PWM4_LoadDutyValue	;wreg free
 10453   001A4A                     
 10454                           ;application.c: 101:             BUTTON.sliderADC_Val = 0;
 10455   001A4A  0E00               	movlw	0
 10456   001A4C  0100               	movlb	0	; () banked
 10457   001A4E  6F90               	movwf	(_BUTTON+3)& (0+255),b
 10458   001A50  0E00               	movlw	0
 10459   001A52  6F8F               	movwf	(_BUTTON+2)& (0+255),b
 10460                           
 10461                           ;application.c: 102:         }
 10462   001A54  EFE8  F00C         	goto	l5482
 10463   001A58                     l5522:
 10464   001A58  C035  F019         	movff	_state,??_ApplicationTask
 10465   001A5C  C036  F01A         	movff	_state+1,??_ApplicationTask+1
 10466                           
 10467                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10468                           ; Switch size 1, requested type "simple"
 10469                           ; Number of cases is 1, Range of values is 0 to 0
 10470                           ; switch strategies available:
 10471                           ; Name         Instructions Cycles
 10472                           ; simple_byte            4     3 (average)
 10473                           ;	Chosen strategy is simple_byte
 10474   001A60  501A               	movf	(??_ApplicationTask+1)^0,w,c
 10475   001A62  0A00               	xorlw	0	; case 0
 10476   001A64  B4D8               	btfsc	status,2,c
 10477   001A66  EF37  F00D         	goto	l6802
 10478   001A6A  EFE8  F00C         	goto	l5482
 10479   001A6E                     l6802:
 10480                           
 10481                           ; Switch size 1, requested type "simple"
 10482                           ; Number of cases is 5, Range of values is 0 to 4
 10483                           ; switch strategies available:
 10484                           ; Name         Instructions Cycles
 10485                           ; simple_byte           16     9 (average)
 10486                           ;	Chosen strategy is simple_byte
 10487   001A6E  5019               	movf	??_ApplicationTask^0,w,c
 10488   001A70  0A00               	xorlw	0	; case 0
 10489   001A72  B4D8               	btfsc	status,2,c
 10490   001A74  EF77  F00C         	goto	l5432
 10491   001A78  0A01               	xorlw	1	; case 1
 10492   001A7A  B4D8               	btfsc	status,2,c
 10493   001A7C  EF96  F00C         	goto	l5444
 10494   001A80  0A03               	xorlw	3	; case 2
 10495   001A82  B4D8               	btfsc	status,2,c
 10496   001A84  EFCA  F00C         	goto	l5458
 10497   001A88  0A01               	xorlw	1	; case 3
 10498   001A8A  B4D8               	btfsc	status,2,c
 10499   001A8C  EFEE  F00C         	goto	l5484
 10500   001A90  0A07               	xorlw	7	; case 4
 10501   001A92  B4D8               	btfsc	status,2,c
 10502   001A94  EF0C  F00D         	goto	l5510
 10503   001A98  EFE8  F00C         	goto	l5482
 10504   001A9C                     l1469:
 10505   001A9C  0012               	return		;funcret
 10506   001A9E                     __end_of_ApplicationTask:
 10507                           	callstack 0
 10508                           
 10509 ;; *************** function _PWM4_LoadDutyValue *****************
 10510 ;; Defined at:
 10511 ;;		line 62 in file "mcc_generated_files/pwm/src/pwm4.c"
 10512 ;; Parameters:    Size  Location     Type
 10513 ;;  dutyValue       2   20[COMRAM] unsigned short 
 10514 ;; Auto vars:     Size  Location     Type
 10515 ;;		None
 10516 ;; Return value:  Size  Location     Type
 10517 ;;                  1    wreg      void 
 10518 ;; Registers used:
 10519 ;;		wreg, status,2, status,0
 10520 ;; Tracked objects:
 10521 ;;		On entry : 0/0
 10522 ;;		On exit  : 0/0
 10523 ;;		Unchanged: 0/0
 10524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10527 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10528 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10529 ;;Total ram usage:        4 bytes
 10530 ;; Hardware stack levels used: 1
 10531 ;; Hardware stack levels required when called: 6
 10532 ;; This function calls:
 10533 ;;		Nothing
 10534 ;; This function is called by:
 10535 ;;		_ApplicationTask
 10536 ;; This function uses a non-reentrant model
 10537 ;;
 10538                           
 10539                           	psect	text84
 10540   0039B2                     __ptext84:
 10541                           	callstack 0
 10542   0039B2                     _PWM4_LoadDutyValue:
 10543                           	callstack 23
 10544   0039B2                     
 10545                           ;mcc_generated_files/pwm/src/pwm4.c: 62:  void PWM4_LoadDutyValue(uint16_t dutyValue);mc
      +                          c_generated_files/pwm/src/pwm4.c: 63:  {;mcc_generated_files/pwm/src/pwm4.c: 65:      PW
      +                          M4DCH = (uint8_t) ((dutyValue & 0x03FCu) >> 2);
 10546   0039B2  C015  F017         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
 10547   0039B6  C016  F018         	movff	PWM4_LoadDutyValue@dutyValue+1,??_PWM4_LoadDutyValue+1
 10548   0039BA  90D8               	bcf	status,0,c
 10549   0039BC  3218               	rrcf	(??_PWM4_LoadDutyValue+1)^0,f,c
 10550   0039BE  3217               	rrcf	??_PWM4_LoadDutyValue^0,f,c
 10551   0039C0  90D8               	bcf	status,0,c
 10552   0039C2  3218               	rrcf	(??_PWM4_LoadDutyValue+1)^0,f,c
 10553   0039C4  3217               	rrcf	??_PWM4_LoadDutyValue^0,f,c
 10554   0039C6  5017               	movf	??_PWM4_LoadDutyValue^0,w,c
 10555   0039C8  6EA0               	movwf	160,c	;volatile
 10556                           
 10557                           ;mcc_generated_files/pwm/src/pwm4.c: 68:      PWM4DCL = (uint8_t) ((dutyValue & 0x0003u)
      +                           << 6);
 10558   0039CA  C015  F017         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
 10559   0039CE  0E03               	movlw	3
 10560   0039D0  1617               	andwf	??_PWM4_LoadDutyValue^0,f,c
 10561   0039D2  0E06               	movlw	6
 10562   0039D4  6E18               	movwf	(??_PWM4_LoadDutyValue+1)^0,c
 10563   0039D6                     u4295:
 10564   0039D6  90D8               	bcf	status,0,c
 10565   0039D8  3617               	rlcf	??_PWM4_LoadDutyValue^0,f,c
 10566   0039DA  2E18               	decfsz	(??_PWM4_LoadDutyValue+1)^0,f,c
 10567   0039DC  EFEB  F01C         	goto	u4295
 10568   0039E0  5017               	movf	??_PWM4_LoadDutyValue^0,w,c
 10569   0039E2  6E9F               	movwf	159,c	;volatile
 10570   0039E4  0012               	return		;funcret
 10571   0039E6                     __end_of_PWM4_LoadDutyValue:
 10572                           	callstack 0
 10573                           
 10574 ;; *************** function _GetMotorSpeed *****************
 10575 ;; Defined at:
 10576 ;;		line 160 in file "application.c"
 10577 ;; Parameters:    Size  Location     Type
 10578 ;;  adcVal          2   20[COMRAM] unsigned short 
 10579 ;; Auto vars:     Size  Location     Type
 10580 ;;  retVal          2   22[COMRAM] unsigned short 
 10581 ;; Return value:  Size  Location     Type
 10582 ;;                  2   20[COMRAM] unsigned short 
 10583 ;; Registers used:
 10584 ;;		wreg, status,2, status,0
 10585 ;; Tracked objects:
 10586 ;;		On entry : 0/0
 10587 ;;		On exit  : 0/0
 10588 ;;		Unchanged: 0/0
 10589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10591 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10593 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10594 ;;Total ram usage:        4 bytes
 10595 ;; Hardware stack levels used: 1
 10596 ;; Hardware stack levels required when called: 6
 10597 ;; This function calls:
 10598 ;;		Nothing
 10599 ;; This function is called by:
 10600 ;;		_ApplicationTask
 10601 ;; This function uses a non-reentrant model
 10602 ;;
 10603                           
 10604                           	psect	text85
 10605   001734                     __ptext85:
 10606                           	callstack 0
 10607   001734                     _GetMotorSpeed:
 10608                           	callstack 23
 10609   001734                     
 10610                           ;application.c: 164:     if (adcVal < ((20)))
 10611   001734  5016               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10612   001736  E107               	bnz	u4301
 10613   001738  0E14               	movlw	20
 10614   00173A  5C15               	subwf	GetMotorSpeed@adcVal^0,w,c
 10615   00173C  B0D8               	btfsc	status,0,c
 10616   00173E  EFA3  F00B         	goto	u4301
 10617   001742  EFA5  F00B         	goto	u4300
 10618   001746                     u4301:
 10619   001746  EFB1  F00B         	goto	l5336
 10620   00174A                     u4300:
 10621   00174A  8C84               	bsf	132,6,c	;volatile
 10622   00174C  8A84               	bsf	132,5,c	;volatile
 10623   00174E  8884               	bsf	132,4,c	;volatile
 10624   001750  8C85               	bsf	133,6,c	;volatile
 10625   001752  8283               	bsf	131,1,c	;volatile
 10626   001754  8E84               	bsf	132,7,c	;volatile
 10627   001756                     l5334:
 10628                           
 10629                           ;application.c: 168:         retVal = (0);
 10630   001756  0E00               	movlw	0
 10631   001758  6E18               	movwf	(GetMotorSpeed@retVal+1)^0,c
 10632   00175A  0E00               	movlw	0
 10633   00175C  6E17               	movwf	GetMotorSpeed@retVal^0,c
 10634                           
 10635                           ;application.c: 169:     }
 10636   00175E  EF70  F00C         	goto	l5372
 10637   001762                     l5336:
 10638   001762  5016               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10639   001764  E109               	bnz	u4310
 10640   001766  0E14               	movlw	20
 10641   001768  5C15               	subwf	GetMotorSpeed@adcVal^0,w,c
 10642   00176A  A0D8               	btfss	status,0,c
 10643   00176C  EFBA  F00B         	goto	u4311
 10644   001770  EFBC  F00B         	goto	u4310
 10645   001774                     u4311:
 10646   001774  EFD3  F00B         	goto	l5342
 10647   001778                     u4310:
 10648   001778  5016               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10649   00177A  E107               	bnz	u4321
 10650   00177C  0E3C               	movlw	60
 10651   00177E  5C15               	subwf	GetMotorSpeed@adcVal^0,w,c
 10652   001780  B0D8               	btfsc	status,0,c
 10653   001782  EFC5  F00B         	goto	u4321
 10654   001786  EFC7  F00B         	goto	u4320
 10655   00178A                     u4321:
 10656   00178A  EFD3  F00B         	goto	l5342
 10657   00178E                     u4320:
 10658   00178E  9C84               	bcf	132,6,c	;volatile
 10659   001790  8A84               	bsf	132,5,c	;volatile
 10660   001792  8884               	bsf	132,4,c	;volatile
 10661   001794  8C85               	bsf	133,6,c	;volatile
 10662   001796  8283               	bsf	131,1,c	;volatile
 10663   001798  8E84               	bsf	132,7,c	;volatile
 10664   00179A                     
 10665                           ;application.c: 174:         retVal = ((180));
 10666   00179A  0E00               	movlw	0
 10667   00179C  6E18               	movwf	(GetMotorSpeed@retVal+1)^0,c
 10668   00179E  0EB4               	movlw	180
 10669   0017A0  6E17               	movwf	GetMotorSpeed@retVal^0,c
 10670                           
 10671                           ;application.c: 175:     }
 10672   0017A2  EF70  F00C         	goto	l5372
 10673   0017A6                     l5342:
 10674   0017A6  5016               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10675   0017A8  E109               	bnz	u4330
 10676   0017AA  0E3C               	movlw	60
 10677   0017AC  5C15               	subwf	GetMotorSpeed@adcVal^0,w,c
 10678   0017AE  A0D8               	btfss	status,0,c
 10679   0017B0  EFDC  F00B         	goto	u4331
 10680   0017B4  EFDE  F00B         	goto	u4330
 10681   0017B8                     u4331:
 10682   0017B8  EFF5  F00B         	goto	l5348
 10683   0017BC                     u4330:
 10684   0017BC  5016               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10685   0017BE  E107               	bnz	u4341
 10686   0017C0  0E64               	movlw	100
 10687   0017C2  5C15               	subwf	GetMotorSpeed@adcVal^0,w,c
 10688   0017C4  B0D8               	btfsc	status,0,c
 10689   0017C6  EFE7  F00B         	goto	u4341
 10690   0017CA  EFE9  F00B         	goto	u4340
 10691   0017CE                     u4341:
 10692   0017CE  EFF5  F00B         	goto	l5348
 10693   0017D2                     u4340:
 10694   0017D2  9C84               	bcf	132,6,c	;volatile
 10695   0017D4  9A84               	bcf	132,5,c	;volatile
 10696   0017D6  8884               	bsf	132,4,c	;volatile
 10697   0017D8  8C85               	bsf	133,6,c	;volatile
 10698   0017DA  8283               	bsf	131,1,c	;volatile
 10699   0017DC  8E84               	bsf	132,7,c	;volatile
 10700   0017DE                     
 10701                           ;application.c: 180:         retVal = (((180)) + (70));
 10702   0017DE  0E00               	movlw	0
 10703   0017E0  6E18               	movwf	(GetMotorSpeed@retVal+1)^0,c
 10704   0017E2  0EFA               	movlw	250
 10705   0017E4  6E17               	movwf	GetMotorSpeed@retVal^0,c
 10706                           
 10707                           ;application.c: 181:     }
 10708   0017E6  EF70  F00C         	goto	l5372
 10709   0017EA                     l5348:
 10710   0017EA  5016               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10711   0017EC  E109               	bnz	u4350
 10712   0017EE  0E64               	movlw	100
 10713   0017F0  5C15               	subwf	GetMotorSpeed@adcVal^0,w,c
 10714   0017F2  A0D8               	btfss	status,0,c
 10715   0017F4  EFFE  F00B         	goto	u4351
 10716   0017F8  EF00  F00C         	goto	u4350
 10717   0017FC                     u4351:
 10718   0017FC  EF17  F00C         	goto	l5354
 10719   001800                     u4350:
 10720   001800  5016               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10721   001802  E107               	bnz	u4361
 10722   001804  0E8C               	movlw	140
 10723   001806  5C15               	subwf	GetMotorSpeed@adcVal^0,w,c
 10724   001808  B0D8               	btfsc	status,0,c
 10725   00180A  EF09  F00C         	goto	u4361
 10726   00180E  EF0B  F00C         	goto	u4360
 10727   001812                     u4361:
 10728   001812  EF17  F00C         	goto	l5354
 10729   001816                     u4360:
 10730   001816  9C84               	bcf	132,6,c	;volatile
 10731   001818  9A84               	bcf	132,5,c	;volatile
 10732   00181A  9884               	bcf	132,4,c	;volatile
 10733   00181C  8C85               	bsf	133,6,c	;volatile
 10734   00181E  8283               	bsf	131,1,c	;volatile
 10735   001820  8E84               	bsf	132,7,c	;volatile
 10736   001822                     
 10737                           ;application.c: 186:         retVal = ((((180)) + (70)) + (70));
 10738   001822  0E01               	movlw	1
 10739   001824  6E18               	movwf	(GetMotorSpeed@retVal+1)^0,c
 10740   001826  0E40               	movlw	64
 10741   001828  6E17               	movwf	GetMotorSpeed@retVal^0,c
 10742                           
 10743                           ;application.c: 187:     }
 10744   00182A  EF70  F00C         	goto	l5372
 10745   00182E                     l5354:
 10746   00182E  5016               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10747   001830  E109               	bnz	u4370
 10748   001832  0E8C               	movlw	140
 10749   001834  5C15               	subwf	GetMotorSpeed@adcVal^0,w,c
 10750   001836  A0D8               	btfss	status,0,c
 10751   001838  EF20  F00C         	goto	u4371
 10752   00183C  EF22  F00C         	goto	u4370
 10753   001840                     u4371:
 10754   001840  EF39  F00C         	goto	l5360
 10755   001844                     u4370:
 10756   001844  5016               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10757   001846  E107               	bnz	u4381
 10758   001848  0EB4               	movlw	180
 10759   00184A  5C15               	subwf	GetMotorSpeed@adcVal^0,w,c
 10760   00184C  B0D8               	btfsc	status,0,c
 10761   00184E  EF2B  F00C         	goto	u4381
 10762   001852  EF2D  F00C         	goto	u4380
 10763   001856                     u4381:
 10764   001856  EF39  F00C         	goto	l5360
 10765   00185A                     u4380:
 10766   00185A  9C84               	bcf	132,6,c	;volatile
 10767   00185C  9A84               	bcf	132,5,c	;volatile
 10768   00185E  9884               	bcf	132,4,c	;volatile
 10769   001860  9C85               	bcf	133,6,c	;volatile
 10770   001862  8283               	bsf	131,1,c	;volatile
 10771   001864  8E84               	bsf	132,7,c	;volatile
 10772   001866                     
 10773                           ;application.c: 192:         retVal = (((((180)) + (70)) + (70)) + (70));
 10774   001866  0E01               	movlw	1
 10775   001868  6E18               	movwf	(GetMotorSpeed@retVal+1)^0,c
 10776   00186A  0E86               	movlw	134
 10777   00186C  6E17               	movwf	GetMotorSpeed@retVal^0,c
 10778                           
 10779                           ;application.c: 193:     }
 10780   00186E  EF70  F00C         	goto	l5372
 10781   001872                     l5360:
 10782   001872  5016               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10783   001874  E109               	bnz	u4390
 10784   001876  0EB4               	movlw	180
 10785   001878  5C15               	subwf	GetMotorSpeed@adcVal^0,w,c
 10786   00187A  A0D8               	btfss	status,0,c
 10787   00187C  EF42  F00C         	goto	u4391
 10788   001880  EF44  F00C         	goto	u4390
 10789   001884                     u4391:
 10790   001884  EF5B  F00C         	goto	l5366
 10791   001888                     u4390:
 10792   001888  5016               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10793   00188A  E107               	bnz	u4401
 10794   00188C  0ED7               	movlw	215
 10795   00188E  5C15               	subwf	GetMotorSpeed@adcVal^0,w,c
 10796   001890  B0D8               	btfsc	status,0,c
 10797   001892  EF4D  F00C         	goto	u4401
 10798   001896  EF4F  F00C         	goto	u4400
 10799   00189A                     u4401:
 10800   00189A  EF5B  F00C         	goto	l5366
 10801   00189E                     u4400:
 10802   00189E  9C84               	bcf	132,6,c	;volatile
 10803   0018A0  9A84               	bcf	132,5,c	;volatile
 10804   0018A2  9884               	bcf	132,4,c	;volatile
 10805   0018A4  9C85               	bcf	133,6,c	;volatile
 10806   0018A6  9283               	bcf	131,1,c	;volatile
 10807   0018A8  8E84               	bsf	132,7,c	;volatile
 10808   0018AA                     
 10809                           ;application.c: 198:         retVal = ((((((180)) + (70)) + (70)) + (70)) + (70));
 10810   0018AA  0E01               	movlw	1
 10811   0018AC  6E18               	movwf	(GetMotorSpeed@retVal+1)^0,c
 10812   0018AE  0ECC               	movlw	204
 10813   0018B0  6E17               	movwf	GetMotorSpeed@retVal^0,c
 10814                           
 10815                           ;application.c: 199:     }
 10816   0018B2  EF70  F00C         	goto	l5372
 10817   0018B6                     l5366:
 10818   0018B6  5016               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10819   0018B8  E109               	bnz	u4410
 10820   0018BA  0ED7               	movlw	215
 10821   0018BC  5C15               	subwf	GetMotorSpeed@adcVal^0,w,c
 10822   0018BE  A0D8               	btfss	status,0,c
 10823   0018C0  EF64  F00C         	goto	u4411
 10824   0018C4  EF66  F00C         	goto	u4410
 10825   0018C8                     u4411:
 10826   0018C8  EFAB  F00B         	goto	l5334
 10827   0018CC                     u4410:
 10828   0018CC  9C84               	bcf	132,6,c	;volatile
 10829   0018CE  9A84               	bcf	132,5,c	;volatile
 10830   0018D0  9884               	bcf	132,4,c	;volatile
 10831   0018D2  9C85               	bcf	133,6,c	;volatile
 10832   0018D4  9283               	bcf	131,1,c	;volatile
 10833   0018D6  9E84               	bcf	132,7,c	;volatile
 10834   0018D8                     
 10835                           ;application.c: 204:         retVal = (530);
 10836   0018D8  0E02               	movlw	2
 10837   0018DA  6E18               	movwf	(GetMotorSpeed@retVal+1)^0,c
 10838   0018DC  0E12               	movlw	18
 10839   0018DE  6E17               	movwf	GetMotorSpeed@retVal^0,c
 10840   0018E0                     l5372:
 10841                           
 10842                           ;application.c: 210:     return retVal;
 10843   0018E0  C017  F015         	movff	GetMotorSpeed@retVal,?_GetMotorSpeed
 10844   0018E4  C018  F016         	movff	GetMotorSpeed@retVal+1,?_GetMotorSpeed+1
 10845   0018E8  0012               	return		;funcret
 10846   0018EA                     __end_of_GetMotorSpeed:
 10847                           	callstack 0
 10848                           
 10849 ;; *************** function _GetEvent *****************
 10850 ;; Defined at:
 10851 ;;		line 140 in file "application.c"
 10852 ;; Parameters:    Size  Location     Type
 10853 ;;		None
 10854 ;; Auto vars:     Size  Location     Type
 10855 ;;		None
 10856 ;; Return value:  Size  Location     Type
 10857 ;;                  1    wreg      enum E13277
 10858 ;; Registers used:
 10859 ;;		wreg, status,2
 10860 ;; Tracked objects:
 10861 ;;		On entry : 0/0
 10862 ;;		On exit  : 0/0
 10863 ;;		Unchanged: 0/0
 10864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10869 ;;Total ram usage:        0 bytes
 10870 ;; Hardware stack levels used: 1
 10871 ;; Hardware stack levels required when called: 6
 10872 ;; This function calls:
 10873 ;;		Nothing
 10874 ;; This function is called by:
 10875 ;;		_ApplicationTask
 10876 ;; This function uses a non-reentrant model
 10877 ;;
 10878                           
 10879                           	psect	text86
 10880   003DCE                     __ptext86:
 10881                           	callstack 0
 10882   003DCE                     _GetEvent:
 10883                           	callstack 23
 10884   003DCE                     
 10885                           ;application.c: 142:     return BUTTON.keyStatus;
 10886   003DCE  0100               	movlb	0	; () banked
 10887   003DD0  518E               	movf	(_BUTTON+1)& (0+255),w,b
 10888   003DD2                     
 10889                           ; BSR set to: 0
 10890   003DD2  0012               	return		;funcret
 10891   003DD4                     __end_of_GetEvent:
 10892                           	callstack 0
 10893                           
 10894 ;; *************** function _GetButton *****************
 10895 ;; Defined at:
 10896 ;;		line 150 in file "application.c"
 10897 ;; Parameters:    Size  Location     Type
 10898 ;;		None
 10899 ;; Auto vars:     Size  Location     Type
 10900 ;;		None
 10901 ;; Return value:  Size  Location     Type
 10902 ;;                  1    wreg      enum E13283
 10903 ;; Registers used:
 10904 ;;		wreg, status,2
 10905 ;; Tracked objects:
 10906 ;;		On entry : 0/0
 10907 ;;		On exit  : 0/0
 10908 ;;		Unchanged: 0/0
 10909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10914 ;;Total ram usage:        0 bytes
 10915 ;; Hardware stack levels used: 1
 10916 ;; Hardware stack levels required when called: 6
 10917 ;; This function calls:
 10918 ;;		Nothing
 10919 ;; This function is called by:
 10920 ;;		_ApplicationTask
 10921 ;; This function uses a non-reentrant model
 10922 ;;
 10923                           
 10924                           	psect	text87
 10925   003DD4                     __ptext87:
 10926                           	callstack 0
 10927   003DD4                     _GetButton:
 10928                           	callstack 23
 10929   003DD4                     
 10930                           ;application.c: 152:     return BUTTON.key;
 10931   003DD4  0100               	movlb	0	; () banked
 10932   003DD6  518D               	movf	_BUTTON& (0+255),w,b
 10933   003DD8                     
 10934                           ; BSR set to: 0
 10935   003DD8  0012               	return		;funcret
 10936   003DDA                     __end_of_GetButton:
 10937                           	callstack 0
 10938                           
 10939 ;; *************** function _ClearEvent *****************
 10940 ;; Defined at:
 10941 ;;		line 145 in file "application.c"
 10942 ;; Parameters:    Size  Location     Type
 10943 ;;		None
 10944 ;; Auto vars:     Size  Location     Type
 10945 ;;		None
 10946 ;; Return value:  Size  Location     Type
 10947 ;;                  1    wreg      void 
 10948 ;; Registers used:
 10949 ;;		wreg, status,2
 10950 ;; Tracked objects:
 10951 ;;		On entry : 0/0
 10952 ;;		On exit  : 0/0
 10953 ;;		Unchanged: 0/0
 10954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10959 ;;Total ram usage:        0 bytes
 10960 ;; Hardware stack levels used: 1
 10961 ;; Hardware stack levels required when called: 6
 10962 ;; This function calls:
 10963 ;;		Nothing
 10964 ;; This function is called by:
 10965 ;;		_ApplicationTask
 10966 ;; This function uses a non-reentrant model
 10967 ;;
 10968                           
 10969                           	psect	text88
 10970   003DAC                     __ptext88:
 10971                           	callstack 0
 10972   003DAC                     _ClearEvent:
 10973                           	callstack 23
 10974   003DAC                     
 10975                           ;application.c: 147:     BUTTON.keyStatus = KEY_NO_ACTION;
 10976   003DAC  0E00               	movlw	0
 10977   003DAE  0100               	movlb	0	; () banked
 10978   003DB0  6F8E               	movwf	(_BUTTON+1)& (0+255),b
 10979   003DB2                     
 10980                           ; BSR set to: 0
 10981   003DB2  0012               	return		;funcret
 10982   003DB4                     __end_of_ClearEvent:
 10983                           	callstack 0
 10984                           
 10985 ;; *************** function _ClearButton *****************
 10986 ;; Defined at:
 10987 ;;		line 155 in file "application.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;		None
 10990 ;; Auto vars:     Size  Location     Type
 10991 ;;		None
 10992 ;; Return value:  Size  Location     Type
 10993 ;;                  1    wreg      void 
 10994 ;; Registers used:
 10995 ;;		wreg, status,2
 10996 ;; Tracked objects:
 10997 ;;		On entry : 0/0
 10998 ;;		On exit  : 0/0
 10999 ;;		Unchanged: 0/0
 11000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11005 ;;Total ram usage:        0 bytes
 11006 ;; Hardware stack levels used: 1
 11007 ;; Hardware stack levels required when called: 6
 11008 ;; This function calls:
 11009 ;;		Nothing
 11010 ;; This function is called by:
 11011 ;;		_ApplicationTask
 11012 ;; This function uses a non-reentrant model
 11013 ;;
 11014                           
 11015                           	psect	text89
 11016   003DB4                     __ptext89:
 11017                           	callstack 0
 11018   003DB4                     _ClearButton:
 11019                           	callstack 23
 11020   003DB4                     
 11021                           ;application.c: 157:     BUTTON.key = NO_KEY;
 11022   003DB4  0E00               	movlw	0
 11023   003DB6  0100               	movlb	0	; () banked
 11024   003DB8  6F8D               	movwf	_BUTTON& (0+255),b
 11025   003DBA                     
 11026                           ; BSR set to: 0
 11027   003DBA  0012               	return		;funcret
 11028   003DBC                     __end_of_ClearButton:
 11029                           	callstack 0
 11030                           
 11031 ;; *************** function _INTERRUPT_InterruptManager *****************
 11032 ;; Defined at:
 11033 ;;		line 80 in file "mcc_generated_files/system/src/interrupt.c"
 11034 ;; Parameters:    Size  Location     Type
 11035 ;;		None
 11036 ;; Auto vars:     Size  Location     Type
 11037 ;;		None
 11038 ;; Return value:  Size  Location     Type
 11039 ;;                  1    wreg      void 
 11040 ;; Registers used:
 11041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 11042 ;; Tracked objects:
 11043 ;;		On entry : 0/0
 11044 ;;		On exit  : 0/0
 11045 ;;		Unchanged: 0/0
 11046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11049 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11050 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11051 ;;Total ram usage:        6 bytes
 11052 ;; Hardware stack levels used: 1
 11053 ;; Hardware stack levels required when called: 5
 11054 ;; This function calls:
 11055 ;;		_ADCC_ThresholdISR
 11056 ;;		_PIN_MANAGER_IOC
 11057 ;; This function is called by:
 11058 ;;		Interrupt level 2
 11059 ;; This function uses a non-reentrant model
 11060 ;;
 11061                           
 11062                           	psect	intcode
 11063   000008                     __pintcode:
 11064                           	callstack 0
 11065   000008                     _INTERRUPT_InterruptManager:
 11066                           	callstack 18
 11067                           
 11068                           ; BSR set to: 0
 11069                           ;incstack = 0
 11070   000008  824B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11071   00000A  CFFA F00F          	movff	pclath,??_INTERRUPT_InterruptManager
 11072   00000E  CFFB F010          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 11073   000012  CFD9 F011          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 11074   000016  CFDA F012          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 11075   00001A  CFF3 F013          	movff	prodl,??_INTERRUPT_InterruptManager+4
 11076   00001E  CFF4 F014          	movff	prodh,??_INTERRUPT_InterruptManager+5
 11077   000022                     
 11078                           ;mcc_generated_files/system/src/interrupt.c: 83:     if(PIE0bits.IOCIE == 1 && PIR0bits.
      +                          IOCIF == 1)
 11079   000022  010E               	movlb	14	; () banked
 11080   000024  A9BD               	btfss	189,4,b	;volatile
 11081   000026  EF17  F000         	goto	i2u459_41
 11082   00002A  EF19  F000         	goto	i2u459_40
 11083   00002E                     i2u459_41:
 11084   00002E  EF24  F000         	goto	i2l360
 11085   000032                     i2u459_40:
 11086   000032                     
 11087                           ; BSR set to: 14
 11088   000032  A9C5               	btfss	197,4,b	;volatile
 11089   000034  EF1E  F000         	goto	i2u460_41
 11090   000038  EF20  F000         	goto	i2u460_40
 11091   00003C                     i2u460_41:
 11092   00003C  EF24  F000         	goto	i2l360
 11093   000040                     i2u460_40:
 11094   000040                     
 11095                           ; BSR set to: 14
 11096                           ;mcc_generated_files/system/src/interrupt.c: 84:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 85:         PIN_MANAGER_IOC();
 11097   000040  ECF4  F01E         	call	_PIN_MANAGER_IOC	;wreg free
 11098                           
 11099                           ;mcc_generated_files/system/src/interrupt.c: 86:     }
 11100   000044  EF3D  F000         	goto	i2l366
 11101   000048                     i2l360:
 11102                           
 11103                           ; BSR set to: 14
 11104   000048  ACF2               	btfss	242,6,c	;volatile
 11105   00004A  EF29  F000         	goto	i2u461_41
 11106   00004E  EF2B  F000         	goto	i2u461_40
 11107   000052                     i2u461_41:
 11108   000052  EF3D  F000         	goto	i2l366
 11109   000056                     i2u461_40:
 11110   000056                     
 11111                           ; BSR set to: 14
 11112                           ;mcc_generated_files/system/src/interrupt.c: 88:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 89:         if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
 11113   000056  A3BE               	btfss	190,1,b	;volatile
 11114   000058  EF30  F000         	goto	i2u462_41
 11115   00005C  EF32  F000         	goto	i2u462_40
 11116   000060                     i2u462_41:
 11117   000060  EF3D  F000         	goto	i2l365
 11118   000064                     i2u462_40:
 11119   000064                     
 11120                           ; BSR set to: 14
 11121   000064  A3C6               	btfss	198,1,b	;volatile
 11122   000066  EF37  F000         	goto	i2u463_41
 11123   00006A  EF39  F000         	goto	i2u463_40
 11124   00006E                     i2u463_41:
 11125   00006E  EF3D  F000         	goto	i2l365
 11126   000072                     i2u463_40:
 11127   000072                     
 11128                           ; BSR set to: 14
 11129                           ;mcc_generated_files/system/src/interrupt.c: 90:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 91:             ADCC_ThresholdISR();
 11130   000072  EC8A  F01C         	call	_ADCC_ThresholdISR	;wreg free
 11131                           
 11132                           ;mcc_generated_files/system/src/interrupt.c: 92:         }
 11133   000076  EF3D  F000         	goto	i2l366
 11134   00007A                     i2l365:
 11135   00007A                     i2l366:
 11136   00007A  C014  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 11137   00007E  C013  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 11138   000082  C012  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 11139   000086  C011  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 11140   00008A  C010  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 11141   00008E  C00F  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 11142   000092  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11143   000094  0011               	retfie		f
 11144   000096                     __end_of_INTERRUPT_InterruptManager:
 11145                           	callstack 0
 11146                           
 11147 ;; *************** function _PIN_MANAGER_IOC *****************
 11148 ;; Defined at:
 11149 ;;		line 130 in file "mcc_generated_files/system/src/pins.c"
 11150 ;; Parameters:    Size  Location     Type
 11151 ;;		None
 11152 ;; Auto vars:     Size  Location     Type
 11153 ;;		None
 11154 ;; Return value:  Size  Location     Type
 11155 ;;                  1    wreg      void 
 11156 ;; Registers used:
 11157 ;;		None
 11158 ;; Tracked objects:
 11159 ;;		On entry : 0/0
 11160 ;;		On exit  : 0/0
 11161 ;;		Unchanged: 0/0
 11162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11167 ;;Total ram usage:        0 bytes
 11168 ;; Hardware stack levels used: 1
 11169 ;; This function calls:
 11170 ;;		Nothing
 11171 ;; This function is called by:
 11172 ;;		_INTERRUPT_InterruptManager
 11173 ;; This function uses a non-reentrant model
 11174 ;;
 11175                           
 11176                           	psect	text91
 11177   003DE8                     __ptext91:
 11178                           	callstack 0
 11179   003DE8                     _PIN_MANAGER_IOC:
 11180                           	callstack 22
 11181   003DE8  0012               	return		;funcret
 11182   003DEA                     __end_of_PIN_MANAGER_IOC:
 11183                           	callstack 0
 11184                           
 11185 ;; *************** function _ADCC_ThresholdISR *****************
 11186 ;; Defined at:
 11187 ;;		line 285 in file "mcc_generated_files/adc/src/adcc.c"
 11188 ;; Parameters:    Size  Location     Type
 11189 ;;		None
 11190 ;; Auto vars:     Size  Location     Type
 11191 ;;		None
 11192 ;; Return value:  Size  Location     Type
 11193 ;;                  1    wreg      void 
 11194 ;; Registers used:
 11195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 11196 ;; Tracked objects:
 11197 ;;		On entry : 0/0
 11198 ;;		On exit  : 0/0
 11199 ;;		Unchanged: 0/0
 11200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11205 ;;Total ram usage:        0 bytes
 11206 ;; Hardware stack levels used: 1
 11207 ;; Hardware stack levels required when called: 4
 11208 ;; This function calls:
 11209 ;;		NULL
 11210 ;;		_ADCC_DefaultADTI_ISR
 11211 ;;		_ADCC_ThresholdISR_mTouch
 11212 ;; This function is called by:
 11213 ;;		_INTERRUPT_InterruptManager
 11214 ;; This function uses a non-reentrant model
 11215 ;;
 11216                           
 11217                           	psect	text92
 11218   003914                     __ptext92:
 11219                           	callstack 0
 11220   003914                     _ADCC_ThresholdISR:
 11221                           	callstack 18
 11222   003914                     
 11223                           ;mcc_generated_files/adc/src/adcc.c: 288:     PIR1bits.ADTIF = 0;
 11224   003914  010E               	movlb	14	; () banked
 11225   003916  93C6               	bcf	198,1,b	;volatile
 11226   003918                     
 11227                           ; BSR set to: 14
 11228                           ;mcc_generated_files/adc/src/adcc.c: 290:     if (ADCC_ADTI_InterruptHandler != ((void*)
      +                          0))
 11229   003918  0100               	movlb	0	; () banked
 11230   00391A  51FD               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 11231   00391C  11FE               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 11232   00391E  11FF               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 11233   003920  B4D8               	btfsc	status,2,c
 11234   003922  EF95  F01C         	goto	i2u444_41
 11235   003926  EF97  F01C         	goto	i2u444_40
 11236   00392A                     i2u444_41:
 11237   00392A  EFA4  F01C         	goto	i2l232
 11238   00392E                     i2u444_40:
 11239   00392E                     
 11240                           ; BSR set to: 0
 11241                           ;mcc_generated_files/adc/src/adcc.c: 291:     {;mcc_generated_files/adc/src/adcc.c: 292:
      +                                   ADCC_ADTI_InterruptHandler();
 11242   00392E  D802               	call	i2u445_48
 11243   003930  EFA4  F01C         	goto	i2u445_49
 11244   003934                     i2u445_48:
 11245   003934  0005               	push	
 11246   003936  6EFA               	movwf	pclath,c
 11247   003938  51FD               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 11248   00393A  6EFD               	movwf	tosl,c
 11249   00393C  51FE               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 11250   00393E  6EFE               	movwf	tosh,c
 11251   003940  51FF               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 11252   003942  6EFF               	movwf	tosu,c
 11253   003944  50FA               	movf	pclath,w,c
 11254   003946  0012               	return		;indir
 11255   003948                     i2u445_49:
 11256   003948                     i2l232:
 11257   003948  0012               	return		;funcret
 11258   00394A                     __end_of_ADCC_ThresholdISR:
 11259                           	callstack 0
 11260                           
 11261 ;; *************** function _ADCC_DefaultADTI_ISR *****************
 11262 ;; Defined at:
 11263 ;;		line 301 in file "mcc_generated_files/adc/src/adcc.c"
 11264 ;; Parameters:    Size  Location     Type
 11265 ;;		None
 11266 ;; Auto vars:     Size  Location     Type
 11267 ;;		None
 11268 ;; Return value:  Size  Location     Type
 11269 ;;                  1    wreg      void 
 11270 ;; Registers used:
 11271 ;;		None
 11272 ;; Tracked objects:
 11273 ;;		On entry : 0/0
 11274 ;;		On exit  : 0/0
 11275 ;;		Unchanged: 0/0
 11276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11281 ;;Total ram usage:        0 bytes
 11282 ;; Hardware stack levels used: 1
 11283 ;; This function calls:
 11284 ;;		Nothing
 11285 ;; This function is called by:
 11286 ;;		_ADCC_Initialize
 11287 ;;		_ADCC_ThresholdISR
 11288 ;; This function uses a non-reentrant model
 11289 ;;
 11290                           
 11291                           	psect	text93
 11292   003DEA                     __ptext93:
 11293                           	callstack 0
 11294   003DEA                     _ADCC_DefaultADTI_ISR:
 11295                           	callstack 21
 11296   003DEA  0012               	return		;funcret
 11297   003DEC                     __end_of_ADCC_DefaultADTI_ISR:
 11298                           	callstack 0
 11299                           
 11300 ;; *************** function _ADCC_ThresholdISR_mTouch *****************
 11301 ;; Defined at:
 11302 ;;		line 538 in file "mcc_generated_files/touch/mtouch_sensor.c"
 11303 ;; Parameters:    Size  Location     Type
 11304 ;;		None
 11305 ;; Auto vars:     Size  Location     Type
 11306 ;;		None
 11307 ;; Return value:  Size  Location     Type
 11308 ;;                  1    wreg      void 
 11309 ;; Registers used:
 11310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11311 ;; Tracked objects:
 11312 ;;		On entry : 0/0
 11313 ;;		On exit  : 0/0
 11314 ;;		Unchanged: 0/0
 11315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11320 ;;Total ram usage:        0 bytes
 11321 ;; Hardware stack levels used: 1
 11322 ;; Hardware stack levels required when called: 3
 11323 ;; This function calls:
 11324 ;;		_MTOUCH_Sensor_Service
 11325 ;; This function is called by:
 11326 ;;		_MTOUCH_Sensor_ADCC_Initialize
 11327 ;;		_ADCC_ThresholdISR
 11328 ;; This function uses a non-reentrant model
 11329 ;;
 11330                           
 11331                           	psect	text94
 11332   003DA2                     __ptext94:
 11333                           	callstack 0
 11334   003DA2                     _ADCC_ThresholdISR_mTouch:
 11335                           	callstack 18
 11336   003DA2                     
 11337                           ;mcc_generated_files/touch/mtouch_sensor.c: 541:     PIR1bits.ADTIF = 0;
 11338   003DA2  010E               	movlb	14	; () banked
 11339   003DA4  93C6               	bcf	198,1,b	;volatile
 11340   003DA6                     
 11341                           ; BSR set to: 14
 11342                           ;mcc_generated_files/touch/mtouch_sensor.c: 542:     MTOUCH_Sensor_Service();
 11343   003DA6  EC9E  F012         	call	_MTOUCH_Sensor_Service	;wreg free
 11344   003DAA  0012               	return		;funcret
 11345   003DAC                     __end_of_ADCC_ThresholdISR_mTouch:
 11346                           	callstack 0
 11347                           
 11348 ;; *************** function _MTOUCH_Sensor_Service *****************
 11349 ;; Defined at:
 11350 ;;		line 551 in file "mcc_generated_files/touch/mtouch_sensor.c"
 11351 ;; Parameters:    Size  Location     Type
 11352 ;;		None
 11353 ;; Auto vars:     Size  Location     Type
 11354 ;;  sensor          1   13[COMRAM] PTR struct .
 11355 ;;		 -> mtouch_sensor(50), 
 11356 ;; Return value:  Size  Location     Type
 11357 ;;                  1    wreg      void 
 11358 ;; Registers used:
 11359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11360 ;; Tracked objects:
 11361 ;;		On entry : 0/0
 11362 ;;		On exit  : 0/0
 11363 ;;		Unchanged: 0/0
 11364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11367 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11368 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11369 ;;Total ram usage:        3 bytes
 11370 ;; Hardware stack levels used: 1
 11371 ;; Hardware stack levels required when called: 2
 11372 ;; This function calls:
 11373 ;;		_Sensor_setCalibrated
 11374 ;;		_Sensor_setSampled
 11375 ;;		_abs
 11376 ;;		i2_Sensor_SetTrisBit
 11377 ;;		i2_Sensor_isCalibrated
 11378 ;;		i2_Sensor_scheduleNextScan
 11379 ;; This function is called by:
 11380 ;;		_ADCC_ThresholdISR_mTouch
 11381 ;; This function uses a non-reentrant model
 11382 ;;
 11383                           
 11384                           	psect	text95
 11385   00253C                     __ptext95:
 11386                           	callstack 0
 11387   00253C                     _MTOUCH_Sensor_Service:
 11388                           	callstack 18
 11389   00253C                     
 11390                           ;mcc_generated_files/touch/mtouch_sensor.c: 553:     mtouch_sensor_t* sensor;;mcc_genera
      +                          ted_files/touch/mtouch_sensor.c: 555:     Sensor_SetTrisBit(currentScanSensor,0);
 11391   00253C  0E00               	movlw	0
 11392   00253E  6E01               	movwf	i2Sensor_SetTrisBit@TrisBit^0,c
 11393   002540  5045               	movf	_currentScanSensor^0,w,c
 11394   002542  EC69  F018         	call	i2_Sensor_SetTrisBit
 11395   002546                     
 11396                           ;mcc_generated_files/touch/mtouch_sensor.c: 557:     if(scanInterrupted)
 11397   002546  5043               	movf	_scanInterrupted^0,w,c	;volatile
 11398   002548  B4D8               	btfsc	status,2,c
 11399   00254A  EFA9  F012         	goto	i2u421_41
 11400   00254E  EFAB  F012         	goto	i2u421_40
 11401   002552                     i2u421_41:
 11402   002552  EFAF  F012         	goto	i2l1217
 11403   002556                     i2u421_40:
 11404   002556                     
 11405                           ;mcc_generated_files/touch/mtouch_sensor.c: 558:     {;mcc_generated_files/touch/mtouch_
      +                          sensor.c: 559:         ADCON0bits.ADON = 0;
 11406   002556  010F               	movlb	15	; () banked
 11407   002558  9F5B               	bcf	91,7,b	;volatile
 11408                           
 11409                           ;mcc_generated_files/touch/mtouch_sensor.c: 560:     }
 11410   00255A  EF0D  F013         	goto	i2l5230
 11411   00255E                     i2l1217:
 11412                           
 11413                           ;mcc_generated_files/touch/mtouch_sensor.c: 562:     {;mcc_generated_files/touch/mtouch_
      +                          sensor.c: 563:         ADCON0bits.ADON = 0;
 11414   00255E  010F               	movlb	15	; () banked
 11415   002560  9F5B               	bcf	91,7,b	;volatile
 11416   002562                     
 11417                           ; BSR set to: 15
 11418                           ;mcc_generated_files/touch/mtouch_sensor.c: 564:         sensor = &mtouch_sensor[current
      +                          ScanSensor];
 11419   002562  5045               	movf	_currentScanSensor^0,w,c
 11420   002564  0D0A               	mullw	10
 11421   002566  50F3               	movf	243,w,c
 11422   002568  0F9B               	addlw	low _mtouch_sensor
 11423   00256A  6E0E               	movwf	MTOUCH_Sensor_Service@sensor^0,c
 11424   00256C                     
 11425                           ; BSR set to: 15
 11426                           ;mcc_generated_files/touch/mtouch_sensor.c: 565:         if(!Sensor_isCalibrated(sensor)
      +                          )
 11427   00256C  C00E  F001         	movff	MTOUCH_Sensor_Service@sensor,i2Sensor_isCalibrated@sensor
 11428   002570  EC3E  F01E         	call	i2_Sensor_isCalibrated	;wreg free
 11429   002574  0900               	iorlw	0
 11430   002576  A4D8               	btfss	status,2,c
 11431   002578  EFC0  F012         	goto	i2u422_41
 11432   00257C  EFC2  F012         	goto	i2u422_40
 11433   002580                     i2u422_41:
 11434   002580  EFC8  F012         	goto	i2l5218
 11435   002584                     i2u422_40:
 11436   002584                     
 11437                           ;mcc_generated_files/touch/mtouch_sensor.c: 566:         {;mcc_generated_files/touch/mto
      +                          uch_sensor.c: 568:             Sensor_setCalibrated(sensor);
 11438   002584  C00E  F001         	movff	MTOUCH_Sensor_Service@sensor,Sensor_setCalibrated@sensor
 11439   002588  EC5A  F01E         	call	_Sensor_setCalibrated	;wreg free
 11440                           
 11441                           ;mcc_generated_files/touch/mtouch_sensor.c: 569:         }
 11442   00258C  EFCC  F012         	goto	i2l5220
 11443   002590                     i2l5218:
 11444                           
 11445                           ;mcc_generated_files/touch/mtouch_sensor.c: 571:         {;mcc_generated_files/touch/mto
      +                          uch_sensor.c: 572:             Sensor_setSampled(sensor);
 11446   002590  C00E  F001         	movff	MTOUCH_Sensor_Service@sensor,Sensor_setSampled@sensor
 11447   002594  ECCA  F01E         	call	_Sensor_setSampled	;wreg free
 11448   002598                     i2l5220:
 11449                           
 11450                           ;mcc_generated_files/touch/mtouch_sensor.c: 575:         if((mtouch_sensor_packetsample_
      +                          t)
 11451   002598  5045               	movf	_currentScanSensor^0,w,c
 11452   00259A  0D02               	mullw	2
 11453   00259C  50F3               	movf	243,w,c
 11454   00259E  0F7E               	addlw	low _packet_sample
 11455   0025A0  6ED9               	movwf	fsr2l,c
 11456   0025A2  6ADA               	clrf	fsr2h,c
 11457   0025A4  CFDE F00C          	movff	postinc2,??_MTOUCH_Sensor_Service
 11458   0025A8  CFDD F00D          	movff	postdec2,??_MTOUCH_Sensor_Service+1
 11459   0025AC  506D               	movf	109,w,c	;volatile
 11460   0025AE  5C0C               	subwf	??_MTOUCH_Sensor_Service^0,w,c
 11461   0025B0  6E01               	movwf	abs@a^0,c
 11462   0025B2  506E               	movf	110,w,c	;volatile
 11463   0025B4  580D               	subwfb	(??_MTOUCH_Sensor_Service+1)^0,w,c
 11464   0025B6  6E02               	movwf	(abs@a+1)^0,c
 11465   0025B8  ECF3  F01C         	call	_abs	;wreg free
 11466   0025BC  5002               	movf	(?_abs+1)^0,w,c
 11467   0025BE  E109               	bnz	i2u423_40
 11468   0025C0  0E65               	movlw	101
 11469   0025C2  5C01               	subwf	?_abs^0,w,c
 11470   0025C4  A0D8               	btfss	status,0,c
 11471   0025C6  EFE7  F012         	goto	i2u423_41
 11472   0025CA  EFE9  F012         	goto	i2u423_40
 11473   0025CE                     i2u423_41:
 11474   0025CE  EFF3  F012         	goto	i2l5224
 11475   0025D2                     i2u423_40:
 11476   0025D2                     
 11477                           ;mcc_generated_files/touch/mtouch_sensor.c: 578:         {;mcc_generated_files/touch/mto
      +                          uch_sensor.c: 579:             mtouch_sensor[currentScanSensor].active = 1;
 11478   0025D2  5045               	movf	_currentScanSensor^0,w,c
 11479   0025D4  0D0A               	mullw	10
 11480   0025D6  50F3               	movf	243,w,c
 11481   0025D8  0FA4               	addlw	low (_mtouch_sensor+9)
 11482   0025DA  6ED9               	movwf	fsr2l,c
 11483   0025DC  6ADA               	clrf	fsr2h,c
 11484   0025DE  0100               	movlb	0	; () banked
 11485   0025E0  84DF               	bsf	indf2,2,c
 11486                           
 11487                           ;mcc_generated_files/touch/mtouch_sensor.c: 580:         }
 11488   0025E2  EFFB  F012         	goto	i2l5226
 11489   0025E6                     i2l5224:
 11490                           
 11491                           ;mcc_generated_files/touch/mtouch_sensor.c: 582:         {;mcc_generated_files/touch/mto
      +                          uch_sensor.c: 583:             mtouch_sensor[currentScanSensor].active = 0;
 11492   0025E6  5045               	movf	_currentScanSensor^0,w,c
 11493   0025E8  0D0A               	mullw	10
 11494   0025EA  50F3               	movf	243,w,c
 11495   0025EC  0FA4               	addlw	low (_mtouch_sensor+9)
 11496   0025EE  6ED9               	movwf	fsr2l,c
 11497   0025F0  6ADA               	clrf	fsr2h,c
 11498   0025F2  0100               	movlb	0	; () banked
 11499   0025F4  94DF               	bcf	indf2,2,c
 11500   0025F6                     i2l5226:
 11501                           
 11502                           ; BSR set to: 0
 11503                           ;mcc_generated_files/touch/mtouch_sensor.c: 591:         if(!lowpowerActivated)
 11504   0025F6  5042               	movf	_lowpowerActivated^0,w,c
 11505   0025F8  A4D8               	btfss	status,2,c
 11506   0025FA  EF01  F013         	goto	i2u424_41
 11507   0025FE  EF03  F013         	goto	i2u424_40
 11508   002602                     i2u424_41:
 11509   002602  EF0D  F013         	goto	i2l5230
 11510   002606                     i2u424_40:
 11511   002606                     
 11512                           ; BSR set to: 0
 11513                           ;mcc_generated_files/touch/mtouch_sensor.c: 592:             packet_sample[currentScanSe
      +                          nsor] = ADFLTR;
 11514   002606  5045               	movf	_currentScanSensor^0,w,c
 11515   002608  0D02               	mullw	2
 11516   00260A  50F3               	movf	243,w,c
 11517   00260C  0F7E               	addlw	low _packet_sample
 11518   00260E  6ED9               	movwf	fsr2l,c
 11519   002610  6ADA               	clrf	fsr2h,c
 11520   002612  CF6D FFDE          	movff	3949,postinc2	;volatile
 11521   002616  CF6E FFDD          	movff	3950,postdec2	;volatile
 11522   00261A                     i2l5230:
 11523                           
 11524                           ;mcc_generated_files/touch/mtouch_sensor.c: 595:     if(lowpowerActivated == 1u)
 11525   00261A  0442               	decf	_lowpowerActivated^0,w,c
 11526   00261C  A4D8               	btfss	status,2,c
 11527   00261E  EF13  F013         	goto	i2u425_41
 11528   002622  EF15  F013         	goto	i2u425_40
 11529   002626                     i2u425_41:
 11530   002626  EF19  F013         	goto	i2l5234
 11531   00262A                     i2u425_40:
 11532   00262A                     
 11533                           ;mcc_generated_files/touch/mtouch_sensor.c: 596:     {;mcc_generated_files/touch/mtouch_
      +                          sensor.c: 597:         sampling_flag = 0;
 11534   00262A  0E00               	movlw	0
 11535   00262C  6E44               	movwf	_sampling_flag^0,c
 11536                           
 11537                           ;mcc_generated_files/touch/mtouch_sensor.c: 598:     }
 11538   00262E  EF1B  F013         	goto	i2l1226
 11539   002632                     i2l5234:
 11540                           
 11541                           ;mcc_generated_files/touch/mtouch_sensor.c: 600:     {;mcc_generated_files/touch/mtouch_
      +                          sensor.c: 601:         Sensor_scheduleNextScan();
 11542   002632  ECDA  F00E         	call	i2_Sensor_scheduleNextScan	;wreg free
 11543   002636                     i2l1226:
 11544   002636  0012               	return		;funcret
 11545   002638                     __end_of_MTOUCH_Sensor_Service:
 11546                           	callstack 0
 11547                           
 11548 ;; *************** function i2_Sensor_scheduleNextScan *****************
 11549 ;; Defined at:
 11550 ;;		line 405 in file "mcc_generated_files/touch/mtouch_sensor.c"
 11551 ;; Parameters:    Size  Location     Type
 11552 ;;		None
 11553 ;; Auto vars:     Size  Location     Type
 11554 ;;  sensor          1   10[COMRAM] PTR struct .
 11555 ;;		 -> mtouch_sensor(50), 
 11556 ;;  skipScan        1    9[COMRAM] _Bool 
 11557 ;;  state           1    8[COMRAM] _Bool 
 11558 ;; Return value:  Size  Location     Type
 11559 ;;                  1    wreg      void 
 11560 ;; Registers used:
 11561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11562 ;; Tracked objects:
 11563 ;;		On entry : 0/0
 11564 ;;		On exit  : 0/0
 11565 ;;		Unchanged: 0/0
 11566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11568 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11569 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11570 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11571 ;;Total ram usage:        7 bytes
 11572 ;; Hardware stack levels used: 1
 11573 ;; Hardware stack levels required when called: 1
 11574 ;; This function calls:
 11575 ;;		i2_MTOUCH_Sensor_isEnabled
 11576 ;;		i2_MTOUCH_Sensor_wasSampled
 11577 ;;		i2_Sensor_SetTrisBit
 11578 ;;		i2_Sensor_isCalibrated
 11579 ;;		i2_Sensor_isCalibratingAcqTime
 11580 ;; This function is called by:
 11581 ;;		_MTOUCH_Sensor_Service
 11582 ;; This function uses a non-reentrant model
 11583 ;;
 11584                           
 11585                           	psect	text96
 11586   001DB4                     __ptext96:
 11587                           	callstack 0
 11588   001DB4                     i2_Sensor_scheduleNextScan:
 11589                           	callstack 18
 11590   001DB4                     
 11591                           ;mcc_generated_files/touch/mtouch_sensor.c: 407:     mtouch_sensor_t* sensor;;mcc_genera
      +                          ted_files/touch/mtouch_sensor.c: 408:     _Bool skipScan = (_Bool)0;
 11592   001DB4  0E00               	movlw	0
 11593   001DB6  6E0A               	movwf	i2Sensor_scheduleNextScan@skipScan^0,c
 11594                           
 11595                           ;mcc_generated_files/touch/mtouch_sensor.c: 409:     _Bool state = (_Bool)GIE;
 11596   001DB8  0E00               	movlw	0
 11597   001DBA  BEF2               	btfsc	4082,7,c	;volatile
 11598   001DBC  0E01               	movlw	1
 11599   001DBE  6E09               	movwf	i2Sensor_scheduleNextScan@state^0,c
 11600                           
 11601                           ;mcc_generated_files/touch/mtouch_sensor.c: 412:     while(MTOUCH_Sensor_wasSampled(curr
      +                          entScanSensor) || !MTOUCH_Sensor_isEnabled(currentScanSensor))
 11602   001DC0  EFF4  F00E         	goto	i2l4970
 11603   001DC4                     i2l4966:
 11604                           
 11605                           ;mcc_generated_files/touch/mtouch_sensor.c: 413:     {;mcc_generated_files/touch/mtouch_
      +                          sensor.c: 414:         if(++currentScanSensor == 5u)
 11606   001DC4  2A45               	incf	_currentScanSensor^0,f,c
 11607   001DC6  0E05               	movlw	5
 11608   001DC8  1845               	xorwf	_currentScanSensor^0,w,c
 11609   001DCA  A4D8               	btfss	status,2,c
 11610   001DCC  EFEA  F00E         	goto	i2u385_41
 11611   001DD0  EFEC  F00E         	goto	i2u385_40
 11612   001DD4                     i2u385_41:
 11613   001DD4  EFF4  F00E         	goto	i2l4970
 11614   001DD8                     i2u385_40:
 11615   001DD8                     
 11616                           ;mcc_generated_files/touch/mtouch_sensor.c: 415:         {;mcc_generated_files/touch/mto
      +                          uch_sensor.c: 416:             currentScanSensor = 0;
 11617   001DD8  0E00               	movlw	0
 11618   001DDA  6E45               	movwf	_currentScanSensor^0,c
 11619                           
 11620                           ;mcc_generated_files/touch/mtouch_sensor.c: 417:             sampling_flag = 0;
 11621   001DDC  0E00               	movlw	0
 11622   001DDE  6E44               	movwf	_sampling_flag^0,c
 11623                           
 11624                           ;mcc_generated_files/touch/mtouch_sensor.c: 418:             skipScan = 1;
 11625   001DE0  0E01               	movlw	1
 11626   001DE2  6E0A               	movwf	i2Sensor_scheduleNextScan@skipScan^0,c
 11627                           
 11628                           ;mcc_generated_files/touch/mtouch_sensor.c: 419:             break;
 11629   001DE4  EF0A  F00F         	goto	i2l4974
 11630   001DE8                     i2l4970:
 11631                           
 11632                           ;mcc_generated_files/touch/mtouch_sensor.c: 412:     while(MTOUCH_Sensor_wasSampled(curr
      +                          entScanSensor) || !MTOUCH_Sensor_isEnabled(currentScanSensor))
 11633   001DE8  5045               	movf	_currentScanSensor^0,w,c
 11634   001DEA  ECFD  F01B         	call	i2_MTOUCH_Sensor_wasSampled
 11635   001DEE  0900               	iorlw	0
 11636   001DF0  A4D8               	btfss	status,2,c
 11637   001DF2  EFFD  F00E         	goto	i2u386_41
 11638   001DF6  EFFF  F00E         	goto	i2u386_40
 11639   001DFA                     i2u386_41:
 11640   001DFA  EFE2  F00E         	goto	i2l4966
 11641   001DFE                     i2u386_40:
 11642   001DFE  5045               	movf	_currentScanSensor^0,w,c
 11643   001E00  EC1A  F01C         	call	i2_MTOUCH_Sensor_isEnabled
 11644   001E04  0900               	iorlw	0
 11645   001E06  B4D8               	btfsc	status,2,c
 11646   001E08  EF08  F00F         	goto	i2u387_41
 11647   001E0C  EF0A  F00F         	goto	i2u387_40
 11648   001E10                     i2u387_41:
 11649   001E10  EFE2  F00E         	goto	i2l4966
 11650   001E14                     i2u387_40:
 11651   001E14                     i2l4974:
 11652                           
 11653                           ;mcc_generated_files/touch/mtouch_sensor.c: 424:     if(skipScan==0)
 11654   001E14  500A               	movf	i2Sensor_scheduleNextScan@skipScan^0,w,c
 11655   001E16  A4D8               	btfss	status,2,c
 11656   001E18  EF10  F00F         	goto	i2u388_41
 11657   001E1C  EF12  F00F         	goto	i2u388_40
 11658   001E20                     i2u388_41:
 11659   001E20  EF9C  F00F         	goto	i2l1190
 11660   001E24                     i2u388_40:
 11661   001E24                     
 11662                           ;mcc_generated_files/touch/mtouch_sensor.c: 425:     {;mcc_generated_files/touch/mtouch_
      +                          sensor.c: 426:         sensor = &mtouch_sensor[currentScanSensor];
 11663   001E24  5045               	movf	_currentScanSensor^0,w,c
 11664   001E26  0D0A               	mullw	10
 11665   001E28  50F3               	movf	243,w,c
 11666   001E2A  0F9B               	addlw	low _mtouch_sensor
 11667   001E2C  6E0B               	movwf	i2Sensor_scheduleNextScan@sensor^0,c
 11668   001E2E                     
 11669                           ;mcc_generated_files/touch/mtouch_sensor.c: 427:         if(Sensor_isCalibrated(sensor))
 11670   001E2E  C00B  F001         	movff	i2Sensor_scheduleNextScan@sensor,i2Sensor_isCalibrated@sensor
 11671   001E32  EC3E  F01E         	call	i2_Sensor_isCalibrated	;wreg free
 11672   001E36  0900               	iorlw	0
 11673   001E38  B4D8               	btfsc	status,2,c
 11674   001E3A  EF21  F00F         	goto	i2u389_41
 11675   001E3E  EF23  F00F         	goto	i2u389_40
 11676   001E42                     i2u389_41:
 11677   001E42  EF34  F00F         	goto	i2l4982
 11678   001E46                     i2u389_40:
 11679   001E46                     
 11680                           ;mcc_generated_files/touch/mtouch_sensor.c: 428:         {;mcc_generated_files/touch/mto
      +                          uch_sensor.c: 429:             ADACQ = (mtouch_sensor_time_t)sensor->acquisition_time;
 11681   001E46  500B               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 11682   001E48  6ED9               	movwf	fsr2l,c
 11683   001E4A  6ADA               	clrf	fsr2h,c
 11684   001E4C  0E03               	movlw	3
 11685   001E4E  26D9               	addwf	fsr2l,f,c
 11686   001E50  50DF               	movf	indf2,w,c
 11687   001E52  010F               	movlb	15	; () banked
 11688   001E54  6F57               	movwf	87,b	;volatile
 11689                           
 11690                           ;mcc_generated_files/touch/mtouch_sensor.c: 430:             ADPRE = (mtouch_sensor_time
      +                          _t)sensor->precharge_time;
 11691   001E56  500B               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 11692   001E58  6ED9               	movwf	fsr2l,c
 11693   001E5A  6ADA               	clrf	fsr2h,c
 11694   001E5C  0E02               	movlw	2
 11695   001E5E  26D9               	addwf	fsr2l,f,c
 11696   001E60  50DF               	movf	indf2,w,c
 11697   001E62  6F59               	movwf	89,b	;volatile
 11698                           
 11699                           ;mcc_generated_files/touch/mtouch_sensor.c: 431:         }
 11700   001E64  EF56  F00F         	goto	i2l4988
 11701   001E68                     i2l4982:
 11702                           
 11703                           ;mcc_generated_files/touch/mtouch_sensor.c: 433:         {;mcc_generated_files/touch/mto
      +                          uch_sensor.c: 434:             if(Sensor_isCalibratingAcqTime(sensor))
 11704   001E68  C00B  F001         	movff	i2Sensor_scheduleNextScan@sensor,i2Sensor_isCalibratingAcqTime@sensor
 11705   001E6C  EC2F  F01E         	call	i2_Sensor_isCalibratingAcqTime	;wreg free
 11706   001E70  0900               	iorlw	0
 11707   001E72  B4D8               	btfsc	status,2,c
 11708   001E74  EF3E  F00F         	goto	i2u390_41
 11709   001E78  EF40  F00F         	goto	i2u390_40
 11710   001E7C                     i2u390_41:
 11711   001E7C  EF51  F00F         	goto	i2l4986
 11712   001E80                     i2u390_40:
 11713   001E80                     
 11714                           ;mcc_generated_files/touch/mtouch_sensor.c: 435:             {;mcc_generated_files/touch
      +                          /mtouch_sensor.c: 436:                 ADPRE = (mtouch_sensor_time_t)sensor->precharge_t
      +                          ime;
 11715   001E80  500B               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 11716   001E82  6ED9               	movwf	fsr2l,c
 11717   001E84  6ADA               	clrf	fsr2h,c
 11718   001E86  0E02               	movlw	2
 11719   001E88  26D9               	addwf	fsr2l,f,c
 11720   001E8A  50DF               	movf	indf2,w,c
 11721   001E8C  010F               	movlb	15	; () banked
 11722   001E8E  6F59               	movwf	89,b	;volatile
 11723                           
 11724                           ;mcc_generated_files/touch/mtouch_sensor.c: 437:                 ADACQ = (mtouch_sensor_
      +                          time_t)sensor->acquisition_time;
 11725   001E90  500B               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 11726   001E92  6ED9               	movwf	fsr2l,c
 11727   001E94  6ADA               	clrf	fsr2h,c
 11728   001E96  0E03               	movlw	3
 11729   001E98  26D9               	addwf	fsr2l,f,c
 11730   001E9A  50DF               	movf	indf2,w,c
 11731   001E9C  6F57               	movwf	87,b	;volatile
 11732                           
 11733                           ;mcc_generated_files/touch/mtouch_sensor.c: 438:             }
 11734   001E9E  EF56  F00F         	goto	i2l4988
 11735   001EA2                     i2l4986:
 11736                           
 11737                           ;mcc_generated_files/touch/mtouch_sensor.c: 440:             {;mcc_generated_files/touch
      +                          /mtouch_sensor.c: 441:                 ADPRE = ((mtouch_sensor_time_t)((mtouch_sensor_ti
      +                          me_t)48 << (uint8_t)2));
 11738   001EA2  0EC0               	movlw	192
 11739   001EA4  010F               	movlb	15	; () banked
 11740   001EA6  6F59               	movwf	89,b	;volatile
 11741                           
 11742                           ;mcc_generated_files/touch/mtouch_sensor.c: 442:                 ADACQ = ((mtouch_sensor
      +                          _time_t)((mtouch_sensor_time_t)48 << (uint8_t)2));
 11743   001EA8  0EC0               	movlw	192
 11744   001EAA  6F57               	movwf	87,b	;volatile
 11745   001EAC                     i2l4988:
 11746                           
 11747                           ; BSR set to: 15
 11748                           ;mcc_generated_files/touch/mtouch_sensor.c: 446:         ADPRE +=(uint8_t)sample_delay;
 11749   001EAC  5040               	movf	_sample_delay^0,w,c	;volatile
 11750   001EAE  2759               	addwf	89,f,b	;volatile
 11751   001EB0                     
 11752                           ; BSR set to: 15
 11753                           ;mcc_generated_files/touch/mtouch_sensor.c: 447:         ADPCH = (uint8_t)sensor->adpch;
 11754   001EB0  500B               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 11755   001EB2  6ED9               	movwf	fsr2l,c
 11756   001EB4  6ADA               	clrf	fsr2h,c
 11757   001EB6  0E01               	movlw	1
 11758   001EB8  26D9               	addwf	fsr2l,f,c
 11759   001EBA  50DF               	movf	indf2,w,c
 11760   001EBC  6F5A               	movwf	90,b	;volatile
 11761   001EBE                     
 11762                           ; BSR set to: 15
 11763                           ;mcc_generated_files/touch/mtouch_sensor.c: 448:         ADRPT = (uint8_t)(sensor->overs
      +                          ampling>>1);
 11764   001EBE  500B               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 11765   001EC0  6ED9               	movwf	fsr2l,c
 11766   001EC2  6ADA               	clrf	fsr2h,c
 11767   001EC4  0E04               	movlw	4
 11768   001EC6  26D9               	addwf	fsr2l,f,c
 11769   001EC8  CFDE F005          	movff	postinc2,??i2_Sensor_scheduleNextScan
 11770   001ECC  CFDD F006          	movff	postdec2,??i2_Sensor_scheduleNextScan+1
 11771   001ED0  90D8               	bcf	status,0,c
 11772   001ED2  3006               	rrcf	(??i2_Sensor_scheduleNextScan+1)^0,w,c
 11773   001ED4  6E08               	movwf	(??i2_Sensor_scheduleNextScan+3)^0,c
 11774   001ED6  3005               	rrcf	??i2_Sensor_scheduleNextScan^0,w,c
 11775   001ED8  6E07               	movwf	(??i2_Sensor_scheduleNextScan+2)^0,c
 11776   001EDA  5007               	movf	(??i2_Sensor_scheduleNextScan+2)^0,w,c
 11777   001EDC  6E61               	movwf	97,c	;volatile
 11778   001EDE                     
 11779                           ; BSR set to: 15
 11780                           ;mcc_generated_files/touch/mtouch_sensor.c: 449:         ADCAP = (uint8_t)sensor->addcap
      +                          ;
 11781   001EDE  500B               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 11782   001EE0  6ED9               	movwf	fsr2l,c
 11783   001EE2  6ADA               	clrf	fsr2h,c
 11784   001EE4  0E06               	movlw	6
 11785   001EE6  26D9               	addwf	fsr2l,f,c
 11786   001EE8  50DF               	movf	indf2,w,c
 11787   001EEA  6F58               	movwf	88,b	;volatile
 11788   001EEC                     
 11789                           ; BSR set to: 15
 11790                           ;mcc_generated_files/touch/mtouch_sensor.c: 450:         ADCON0bits.ADON = 1;
 11791   001EEC  8F5B               	bsf	91,7,b	;volatile
 11792   001EEE                     
 11793                           ; BSR set to: 15
 11794                           ;mcc_generated_files/touch/mtouch_sensor.c: 451:         sampling_flag= 1;
 11795   001EEE  0E01               	movlw	1
 11796   001EF0  6E44               	movwf	_sampling_flag^0,c
 11797   001EF2                     
 11798                           ; BSR set to: 15
 11799                           ;mcc_generated_files/touch/mtouch_sensor.c: 452:         Sensor_SetTrisBit(currentScanSe
      +                          nsor,1);
 11800   001EF2  0E01               	movlw	1
 11801   001EF4  6E01               	movwf	i2Sensor_SetTrisBit@TrisBit^0,c
 11802   001EF6  5045               	movf	_currentScanSensor^0,w,c
 11803   001EF8  EC69  F018         	call	i2_Sensor_SetTrisBit
 11804   001EFC                     
 11805                           ;mcc_generated_files/touch/mtouch_sensor.c: 453:         GIE = 0;
 11806   001EFC  9EF2               	bcf	4082,7,c	;volatile
 11807   001EFE                     
 11808                           ;mcc_generated_files/touch/mtouch_sensor.c: 454:         ADCON0bits.GO = 1;
 11809   001EFE  010F               	movlb	15	; () banked
 11810   001F00  815B               	bsf	91,0,b	;volatile
 11811   001F02                     
 11812                           ; BSR set to: 15
 11813                           ;mcc_generated_files/touch/mtouch_sensor.c: 455:         ADACC = ((mtouch_sensor_packets
      +                          ample_t)(sensor->oversampling)<<9);
 11814   001F02  500B               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 11815   001F04  6ED9               	movwf	fsr2l,c
 11816   001F06  6ADA               	clrf	fsr2h,c
 11817   001F08  0E04               	movlw	4
 11818   001F0A  26D9               	addwf	fsr2l,f,c
 11819   001F0C  CFDE F005          	movff	postinc2,??i2_Sensor_scheduleNextScan
 11820   001F10  CFDD F006          	movff	postdec2,??i2_Sensor_scheduleNextScan+1
 11821   001F14  0E09               	movlw	9
 11822   001F16                     i2u391_45:
 11823   001F16  90D8               	bcf	status,0,c
 11824   001F18  3605               	rlcf	??i2_Sensor_scheduleNextScan^0,f,c
 11825   001F1A  3606               	rlcf	(??i2_Sensor_scheduleNextScan+1)^0,f,c
 11826   001F1C  2EE8               	decfsz	wreg,f,c
 11827   001F1E  EF8B  F00F         	goto	i2u391_45
 11828   001F22  C005  FF6B         	movff	??i2_Sensor_scheduleNextScan,3947	;volatile
 11829   001F26  C006  FF6C         	movff	??i2_Sensor_scheduleNextScan+1,3948	;volatile
 11830   001F2A                     
 11831                           ; BSR set to: 15
 11832                           ;mcc_generated_files/touch/mtouch_sensor.c: 456:         GIE = state;
 11833   001F2A  B009               	btfsc	i2Sensor_scheduleNextScan@state^0,0,c
 11834   001F2C  D002               	bra	i2u392_45
 11835   001F2E  9EF2               	bcf	4082,7,c	;volatile
 11836   001F30  D001               	bra	i2u392_46
 11837   001F32                     i2u392_45:
 11838   001F32  8EF2               	bsf	4082,7,c	;volatile
 11839   001F34                     i2u392_46:
 11840   001F34                     
 11841                           ;mcc_generated_files/touch/mtouch_sensor.c: 457:         scanInterrupted = 0;
 11842   001F34  0E00               	movlw	0
 11843   001F36  6E43               	movwf	_scanInterrupted^0,c	;volatile
 11844   001F38                     i2l1190:
 11845   001F38  0012               	return		;funcret
 11846   001F3A                     __end_ofi2_Sensor_scheduleNextScan:
 11847                           	callstack 0
 11848                           
 11849 ;; *************** function i2_Sensor_isCalibratingAcqTime *****************
 11850 ;; Defined at:
 11851 ;;		line 829 in file "mcc_generated_files/touch/mtouch_sensor.c"
 11852 ;; Parameters:    Size  Location     Type
 11853 ;;  sensor          1    0[COMRAM] PTR struct .
 11854 ;;		 -> mtouch_sensor(50), 
 11855 ;; Auto vars:     Size  Location     Type
 11856 ;;		None
 11857 ;; Return value:  Size  Location     Type
 11858 ;;                  1    wreg      _Bool 
 11859 ;; Registers used:
 11860 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11861 ;; Tracked objects:
 11862 ;;		On entry : 0/0
 11863 ;;		On exit  : 0/0
 11864 ;;		Unchanged: 0/0
 11865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11866 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11869 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11870 ;;Total ram usage:        1 bytes
 11871 ;; Hardware stack levels used: 1
 11872 ;; This function calls:
 11873 ;;		Nothing
 11874 ;; This function is called by:
 11875 ;;		i2_Sensor_scheduleNextScan
 11876 ;; This function uses a non-reentrant model
 11877 ;;
 11878                           
 11879                           	psect	text97
 11880   003C5E                     __ptext97:
 11881                           	callstack 0
 11882   003C5E                     i2_Sensor_isCalibratingAcqTime:
 11883                           	callstack 18
 11884   003C5E                     
 11885                           ;mcc_generated_files/touch/mtouch_sensor.c: 829: static __attribute__((inline)) _Bool Se
      +                          nsor_isCalibratingAcqTime(mtouch_sensor_t* sensor);mcc_generated_files/touch/mtouch_sens
      +                          or.c: 830: {;mcc_generated_files/touch/mtouch_sensor.c: 831:     return (_Bool)sensor->a
      +                          cqTime_cal;
 11886   003C5E  5001               	movf	i2Sensor_isCalibratingAcqTime@sensor^0,w,c
 11887   003C60  6ED9               	movwf	fsr2l,c
 11888   003C62  6ADA               	clrf	fsr2h,c
 11889   003C64  0E09               	movlw	9
 11890   003C66  26D9               	addwf	fsr2l,f,c
 11891   003C68  B8DF               	btfsc	indf2,4,c
 11892   003C6A  EF39  F01E         	goto	i2u339_41
 11893   003C6E  EF3C  F01E         	goto	i2u339_40
 11894   003C72                     i2u339_41:
 11895   003C72  0E01               	movlw	1
 11896   003C74  EF3D  F01E         	goto	i2u339_46
 11897   003C78                     i2u339_40:
 11898   003C78  0E00               	movlw	0
 11899   003C7A                     i2u339_46:
 11900   003C7A  0012               	return		;funcret
 11901   003C7C                     __end_ofi2_Sensor_isCalibratingAcqTime:
 11902                           	callstack 0
 11903                           
 11904 ;; *************** function i2_Sensor_isCalibrated *****************
 11905 ;; Defined at:
 11906 ;;		line 811 in file "mcc_generated_files/touch/mtouch_sensor.c"
 11907 ;; Parameters:    Size  Location     Type
 11908 ;;  sensor          1    0[COMRAM] PTR struct .
 11909 ;;		 -> mtouch_sensor(50), 
 11910 ;; Auto vars:     Size  Location     Type
 11911 ;;		None
 11912 ;; Return value:  Size  Location     Type
 11913 ;;                  1    wreg      _Bool 
 11914 ;; Registers used:
 11915 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11916 ;; Tracked objects:
 11917 ;;		On entry : 0/0
 11918 ;;		On exit  : 0/0
 11919 ;;		Unchanged: 0/0
 11920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11921 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11924 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11925 ;;Total ram usage:        1 bytes
 11926 ;; Hardware stack levels used: 1
 11927 ;; This function calls:
 11928 ;;		Nothing
 11929 ;; This function is called by:
 11930 ;;		_MTOUCH_Sensor_Service
 11931 ;;		i2_Sensor_scheduleNextScan
 11932 ;; This function uses a non-reentrant model
 11933 ;;
 11934                           
 11935                           	psect	text98
 11936   003C7C                     __ptext98:
 11937                           	callstack 0
 11938   003C7C                     i2_Sensor_isCalibrated:
 11939                           	callstack 18
 11940   003C7C                     
 11941                           ;mcc_generated_files/touch/mtouch_sensor.c: 811: static __attribute__((inline)) _Bool Se
      +                          nsor_isCalibrated(mtouch_sensor_t* sensor);mcc_generated_files/touch/mtouch_sensor.c: 81
      +                          2: {;mcc_generated_files/touch/mtouch_sensor.c: 813:     return (_Bool)sensor->calibrate
      +                          d;
 11942   003C7C  5001               	movf	i2Sensor_isCalibrated@sensor^0,w,c
 11943   003C7E  6ED9               	movwf	fsr2l,c
 11944   003C80  6ADA               	clrf	fsr2h,c
 11945   003C82  0E09               	movlw	9
 11946   003C84  26D9               	addwf	fsr2l,f,c
 11947   003C86  B6DF               	btfsc	indf2,3,c
 11948   003C88  EF48  F01E         	goto	i2u338_41
 11949   003C8C  EF4B  F01E         	goto	i2u338_40
 11950   003C90                     i2u338_41:
 11951   003C90  0E01               	movlw	1
 11952   003C92  EF4C  F01E         	goto	i2u338_46
 11953   003C96                     i2u338_40:
 11954   003C96  0E00               	movlw	0
 11955   003C98                     i2u338_46:
 11956   003C98  0012               	return		;funcret
 11957   003C9A                     __end_ofi2_Sensor_isCalibrated:
 11958                           	callstack 0
 11959                           
 11960 ;; *************** function i2_Sensor_SetTrisBit *****************
 11961 ;; Defined at:
 11962 ;;		line 242 in file "mcc_generated_files/touch/mtouch_sensor.c"
 11963 ;; Parameters:    Size  Location     Type
 11964 ;;  sensor          1    wreg     enum E13072
 11965 ;;  TrisBit         1    0[COMRAM] unsigned char 
 11966 ;; Auto vars:     Size  Location     Type
 11967 ;;  sensor          1    3[COMRAM] enum E13072
 11968 ;; Return value:  Size  Location     Type
 11969 ;;                  1    wreg      void 
 11970 ;; Registers used:
 11971 ;;		wreg, status,2, status,0
 11972 ;; Tracked objects:
 11973 ;;		On entry : 0/0
 11974 ;;		On exit  : 0/0
 11975 ;;		Unchanged: 0/0
 11976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11977 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11978 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11979 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11980 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11981 ;;Total ram usage:        4 bytes
 11982 ;; Hardware stack levels used: 1
 11983 ;; This function calls:
 11984 ;;		Nothing
 11985 ;; This function is called by:
 11986 ;;		_MTOUCH_Sensor_Service
 11987 ;;		i2_Sensor_scheduleNextScan
 11988 ;; This function uses a non-reentrant model
 11989 ;;
 11990                           
 11991                           	psect	text99
 11992   0030D2                     __ptext99:
 11993                           	callstack 0
 11994   0030D2                     i2_Sensor_SetTrisBit:
 11995                           	callstack 18
 11996                           
 11997                           ;incstack = 0
 11998                           ;i2Sensor_SetTrisBit@sensor stored from wreg
 11999   0030D2  6E04               	movwf	i2Sensor_SetTrisBit@sensor^0,c
 12000   0030D4                     
 12001                           ;mcc_generated_files/touch/mtouch_sensor.c: 242: static void Sensor_SetTrisBit(enum mtou
      +                          ch_sensor_names sensor,uint8_t TrisBit);mcc_generated_files/touch/mtouch_sensor.c: 243: 
      +                          {;mcc_generated_files/touch/mtouch_sensor.c: 244:     switch(sensor)
 12002   0030D4  EF8F  F018         	goto	i2l4666
 12003   0030D8                     i2l1137:
 12004                           
 12005                           ;mcc_generated_files/touch/mtouch_sensor.c: 247:             TRISAbits.TRISA2 = TrisBit;
 12006   0030D8  B001               	btfsc	i2Sensor_SetTrisBit@TrisBit^0,0,c
 12007   0030DA  D002               	bra	i2u331_45
 12008   0030DC  9487               	bcf	135,2,c	;volatile
 12009   0030DE  D001               	bra	i2u331_46
 12010   0030E0                     i2u331_45:
 12011   0030E0  8487               	bsf	135,2,c	;volatile
 12012   0030E2                     i2u331_46:
 12013                           
 12014                           ;mcc_generated_files/touch/mtouch_sensor.c: 248:             break;
 12015   0030E2  EFB0  F018         	goto	i2l1144
 12016   0030E6                     i2l1139:
 12017                           
 12018                           ;mcc_generated_files/touch/mtouch_sensor.c: 250:             TRISDbits.TRISD7 = TrisBit;
 12019   0030E6  B001               	btfsc	i2Sensor_SetTrisBit@TrisBit^0,0,c
 12020   0030E8  D002               	bra	i2u332_45
 12021   0030EA  9E8A               	bcf	138,7,c	;volatile
 12022   0030EC  D001               	bra	i2u332_46
 12023   0030EE                     i2u332_45:
 12024   0030EE  8E8A               	bsf	138,7,c	;volatile
 12025   0030F0                     i2u332_46:
 12026                           
 12027                           ;mcc_generated_files/touch/mtouch_sensor.c: 251:             break;
 12028   0030F0  EFB0  F018         	goto	i2l1144
 12029   0030F4                     i2l1140:
 12030                           
 12031                           ;mcc_generated_files/touch/mtouch_sensor.c: 253:             TRISBbits.TRISB4 = TrisBit;
 12032   0030F4  B001               	btfsc	i2Sensor_SetTrisBit@TrisBit^0,0,c
 12033   0030F6  D002               	bra	i2u333_45
 12034   0030F8  9888               	bcf	136,4,c	;volatile
 12035   0030FA  D001               	bra	i2u333_46
 12036   0030FC                     i2u333_45:
 12037   0030FC  8888               	bsf	136,4,c	;volatile
 12038   0030FE                     i2u333_46:
 12039                           
 12040                           ;mcc_generated_files/touch/mtouch_sensor.c: 254:             break;
 12041   0030FE  EFB0  F018         	goto	i2l1144
 12042   003102                     i2l1141:
 12043                           
 12044                           ;mcc_generated_files/touch/mtouch_sensor.c: 256:             TRISAbits.TRISA5 = TrisBit;
 12045   003102  B001               	btfsc	i2Sensor_SetTrisBit@TrisBit^0,0,c
 12046   003104  D002               	bra	i2u334_45
 12047   003106  9A87               	bcf	135,5,c	;volatile
 12048   003108  D001               	bra	i2u334_46
 12049   00310A                     i2u334_45:
 12050   00310A  8A87               	bsf	135,5,c	;volatile
 12051   00310C                     i2u334_46:
 12052                           
 12053                           ;mcc_generated_files/touch/mtouch_sensor.c: 257:             break;
 12054   00310C  EFB0  F018         	goto	i2l1144
 12055   003110                     i2l1142:
 12056                           
 12057                           ;mcc_generated_files/touch/mtouch_sensor.c: 259:             TRISAbits.TRISA4 = TrisBit;
 12058   003110  B001               	btfsc	i2Sensor_SetTrisBit@TrisBit^0,0,c
 12059   003112  D002               	bra	i2u335_45
 12060   003114  9887               	bcf	135,4,c	;volatile
 12061   003116  D001               	bra	i2u335_46
 12062   003118                     i2u335_45:
 12063   003118  8887               	bsf	135,4,c	;volatile
 12064   00311A                     i2u335_46:
 12065                           
 12066                           ;mcc_generated_files/touch/mtouch_sensor.c: 260:             break;
 12067   00311A  EFB0  F018         	goto	i2l1144
 12068   00311E                     i2l4666:
 12069   00311E  5004               	movf	i2Sensor_SetTrisBit@sensor^0,w,c
 12070   003120  6E02               	movwf	??i2_Sensor_SetTrisBit^0,c
 12071   003122  6A03               	clrf	(??i2_Sensor_SetTrisBit+1)^0,c
 12072                           
 12073                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12074                           ; Switch size 1, requested type "simple"
 12075                           ; Number of cases is 1, Range of values is 0 to 0
 12076                           ; switch strategies available:
 12077                           ; Name         Instructions Cycles
 12078                           ; simple_byte            4     3 (average)
 12079                           ;	Chosen strategy is simple_byte
 12080   003124  5003               	movf	(??i2_Sensor_SetTrisBit+1)^0,w,c
 12081   003126  0A00               	xorlw	0	; case 0
 12082   003128  B4D8               	btfsc	status,2,c
 12083   00312A  EF99  F018         	goto	i2l6804
 12084   00312E  EFB0  F018         	goto	i2l1144
 12085   003132                     i2l6804:
 12086                           
 12087                           ; Switch size 1, requested type "simple"
 12088                           ; Number of cases is 5, Range of values is 0 to 4
 12089                           ; switch strategies available:
 12090                           ; Name         Instructions Cycles
 12091                           ; simple_byte           16     9 (average)
 12092                           ;	Chosen strategy is simple_byte
 12093   003132  5002               	movf	??i2_Sensor_SetTrisBit^0,w,c
 12094   003134  0A00               	xorlw	0	; case 0
 12095   003136  B4D8               	btfsc	status,2,c
 12096   003138  EF6C  F018         	goto	i2l1137
 12097   00313C  0A01               	xorlw	1	; case 1
 12098   00313E  B4D8               	btfsc	status,2,c
 12099   003140  EF73  F018         	goto	i2l1139
 12100   003144  0A03               	xorlw	3	; case 2
 12101   003146  B4D8               	btfsc	status,2,c
 12102   003148  EF7A  F018         	goto	i2l1140
 12103   00314C  0A01               	xorlw	1	; case 3
 12104   00314E  B4D8               	btfsc	status,2,c
 12105   003150  EF81  F018         	goto	i2l1141
 12106   003154  0A07               	xorlw	7	; case 4
 12107   003156  B4D8               	btfsc	status,2,c
 12108   003158  EF88  F018         	goto	i2l1142
 12109   00315C  EFB0  F018         	goto	i2l1144
 12110   003160                     i2l1144:
 12111   003160  0012               	return		;funcret
 12112   003162                     __end_ofi2_Sensor_SetTrisBit:
 12113                           	callstack 0
 12114                           
 12115 ;; *************** function i2_MTOUCH_Sensor_wasSampled *****************
 12116 ;; Defined at:
 12117 ;;		line 851 in file "mcc_generated_files/touch/mtouch_sensor.c"
 12118 ;; Parameters:    Size  Location     Type
 12119 ;;  sensor          1    wreg     enum E13072
 12120 ;; Auto vars:     Size  Location     Type
 12121 ;;  sensor          1    0[COMRAM] enum E13072
 12122 ;; Return value:  Size  Location     Type
 12123 ;;                  1    wreg      _Bool 
 12124 ;; Registers used:
 12125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12126 ;; Tracked objects:
 12127 ;;		On entry : 0/0
 12128 ;;		On exit  : 0/0
 12129 ;;		Unchanged: 0/0
 12130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 12131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12134 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12135 ;;Total ram usage:        1 bytes
 12136 ;; Hardware stack levels used: 1
 12137 ;; This function calls:
 12138 ;;		Nothing
 12139 ;; This function is called by:
 12140 ;;		i2_Sensor_scheduleNextScan
 12141 ;; This function uses a non-reentrant model
 12142 ;;
 12143                           
 12144                           	psect	text100
 12145   0037FA                     __ptext100:
 12146                           	callstack 0
 12147   0037FA                     i2_MTOUCH_Sensor_wasSampled:
 12148                           	callstack 18
 12149                           
 12150                           ;incstack = 0
 12151                           ;i2MTOUCH_Sensor_wasSampled@sensor stored from wreg
 12152   0037FA  6E01               	movwf	i2MTOUCH_Sensor_wasSampled@sensor^0,c
 12153   0037FC                     
 12154                           ;mcc_generated_files/touch/mtouch_sensor.c: 851: _Bool MTOUCH_Sensor_wasSampled(enum mto
      +                          uch_sensor_names sensor);mcc_generated_files/touch/mtouch_sensor.c: 852: {;mcc_generated
      +                          _files/touch/mtouch_sensor.c: 853:     if(sensor < 5u)
 12155   0037FC  0E05               	movlw	5
 12156   0037FE  6001               	cpfslt	i2MTOUCH_Sensor_wasSampled@sensor^0,c
 12157   003800  EF04  F01C         	goto	i2u340_41
 12158   003804  EF06  F01C         	goto	i2u340_40
 12159   003808                     i2u340_41:
 12160   003808  EF18  F01C         	goto	i2l4700
 12161   00380C                     i2u340_40:
 12162   00380C                     
 12163                           ;mcc_generated_files/touch/mtouch_sensor.c: 854:         return (_Bool)mtouch_sensor[sen
      +                          sor].sampled;
 12164   00380C  5001               	movf	i2MTOUCH_Sensor_wasSampled@sensor^0,w,c
 12165   00380E  0D0A               	mullw	10
 12166   003810  50F3               	movf	243,w,c
 12167   003812  0FA4               	addlw	low (_mtouch_sensor+9)
 12168   003814  6ED9               	movwf	fsr2l,c
 12169   003816  6ADA               	clrf	fsr2h,c
 12170   003818  0100               	movlb	0	; () banked
 12171   00381A  B2DF               	btfsc	indf2,1,c
 12172   00381C  EF12  F01C         	goto	i2u341_41
 12173   003820  EF15  F01C         	goto	i2u341_40
 12174   003824                     i2u341_41:
 12175   003824  0E01               	movlw	1
 12176   003826  EF16  F01C         	goto	i2u341_46
 12177   00382A                     i2u341_40:
 12178   00382A  0E00               	movlw	0
 12179   00382C                     i2u341_46:
 12180   00382C  EF19  F01C         	goto	i2l1330
 12181   003830                     i2l4700:
 12182                           
 12183                           ;mcc_generated_files/touch/mtouch_sensor.c: 856:         return 0;
 12184   003830  0E00               	movlw	0
 12185   003832                     i2l1330:
 12186   003832  0012               	return		;funcret
 12187   003834                     __end_ofi2_MTOUCH_Sensor_wasSampled:
 12188                           	callstack 0
 12189                           
 12190 ;; *************** function i2_MTOUCH_Sensor_isEnabled *****************
 12191 ;; Defined at:
 12192 ;;		line 739 in file "mcc_generated_files/touch/mtouch_sensor.c"
 12193 ;; Parameters:    Size  Location     Type
 12194 ;;  sensor          1    wreg     enum E13072
 12195 ;; Auto vars:     Size  Location     Type
 12196 ;;  sensor          1    0[COMRAM] enum E13072
 12197 ;; Return value:  Size  Location     Type
 12198 ;;                  1    wreg      _Bool 
 12199 ;; Registers used:
 12200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12201 ;; Tracked objects:
 12202 ;;		On entry : 0/0
 12203 ;;		On exit  : 0/0
 12204 ;;		Unchanged: 0/0
 12205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 12206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12207 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12209 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12210 ;;Total ram usage:        1 bytes
 12211 ;; Hardware stack levels used: 1
 12212 ;; This function calls:
 12213 ;;		Nothing
 12214 ;; This function is called by:
 12215 ;;		i2_Sensor_scheduleNextScan
 12216 ;; This function uses a non-reentrant model
 12217 ;;
 12218                           
 12219                           	psect	text101
 12220   003834                     __ptext101:
 12221                           	callstack 0
 12222   003834                     i2_MTOUCH_Sensor_isEnabled:
 12223                           	callstack 18
 12224                           
 12225                           ;incstack = 0
 12226                           ;i2MTOUCH_Sensor_isEnabled@sensor stored from wreg
 12227   003834  6E01               	movwf	i2MTOUCH_Sensor_isEnabled@sensor^0,c
 12228   003836                     
 12229                           ;mcc_generated_files/touch/mtouch_sensor.c: 739: _Bool MTOUCH_Sensor_isEnabled(enum mtou
      +                          ch_sensor_names sensor);mcc_generated_files/touch/mtouch_sensor.c: 740: {;mcc_generated_
      +                          files/touch/mtouch_sensor.c: 741:     if(sensor < 5u)
 12230   003836  0E05               	movlw	5
 12231   003838  6001               	cpfslt	i2MTOUCH_Sensor_isEnabled@sensor^0,c
 12232   00383A  EF21  F01C         	goto	i2u336_41
 12233   00383E  EF23  F01C         	goto	i2u336_40
 12234   003842                     i2u336_41:
 12235   003842  EF35  F01C         	goto	i2l4680
 12236   003846                     i2u336_40:
 12237   003846                     
 12238                           ;mcc_generated_files/touch/mtouch_sensor.c: 742:         return (_Bool)mtouch_sensor[sen
      +                          sor].enabled;
 12239   003846  5001               	movf	i2MTOUCH_Sensor_isEnabled@sensor^0,w,c
 12240   003848  0D0A               	mullw	10
 12241   00384A  50F3               	movf	243,w,c
 12242   00384C  0FA4               	addlw	low (_mtouch_sensor+9)
 12243   00384E  6ED9               	movwf	fsr2l,c
 12244   003850  6ADA               	clrf	fsr2h,c
 12245   003852  0100               	movlb	0	; () banked
 12246   003854  B0DF               	btfsc	indf2,0,c
 12247   003856  EF2F  F01C         	goto	i2u337_41
 12248   00385A  EF32  F01C         	goto	i2u337_40
 12249   00385E                     i2u337_41:
 12250   00385E  0E01               	movlw	1
 12251   003860  EF33  F01C         	goto	i2u337_46
 12252   003864                     i2u337_40:
 12253   003864  0E00               	movlw	0
 12254   003866                     i2u337_46:
 12255   003866  EF36  F01C         	goto	i2l1282
 12256   00386A                     i2l4680:
 12257                           
 12258                           ;mcc_generated_files/touch/mtouch_sensor.c: 744:         return 0;
 12259   00386A  0E00               	movlw	0
 12260   00386C                     i2l1282:
 12261   00386C  0012               	return		;funcret
 12262   00386E                     __end_ofi2_MTOUCH_Sensor_isEnabled:
 12263                           	callstack 0
 12264                           
 12265 ;; *************** function _abs *****************
 12266 ;; Defined at:
 12267 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
 12268 ;; Parameters:    Size  Location     Type
 12269 ;;  a               2    0[COMRAM] int 
 12270 ;; Auto vars:     Size  Location     Type
 12271 ;;		None
 12272 ;; Return value:  Size  Location     Type
 12273 ;;                  2    0[COMRAM] int 
 12274 ;; Registers used:
 12275 ;;		wreg, status,2, status,0
 12276 ;; Tracked objects:
 12277 ;;		On entry : 0/0
 12278 ;;		On exit  : 0/0
 12279 ;;		Unchanged: 0/0
 12280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 12281 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12283 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12284 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12285 ;;Total ram usage:        4 bytes
 12286 ;; Hardware stack levels used: 1
 12287 ;; This function calls:
 12288 ;;		Nothing
 12289 ;; This function is called by:
 12290 ;;		_MTOUCH_Sensor_Service
 12291 ;;		_Sensor_autoCalibration
 12292 ;; This function uses a non-reentrant model
 12293 ;;
 12294                           
 12295                           	psect	text102
 12296   0039E6                     __ptext102:
 12297                           	callstack 0
 12298   0039E6                     _abs:
 12299                           	callstack 19
 12300   0039E6  BE02               	btfsc	(abs@a+1)^0,7,c
 12301   0039E8  EFF8  F01C         	goto	i2u382_41
 12302   0039EC  EFFA  F01C         	goto	i2u382_40
 12303   0039F0                     i2u382_41:
 12304   0039F0  EF00  F01D         	goto	i2l2271
 12305   0039F4                     i2u382_40:
 12306   0039F4  C001  F001         	movff	abs@a,?_abs
 12307   0039F8  C002  F002         	movff	abs@a+1,?_abs+1
 12308   0039FC  EF0C  F01D         	goto	i2l2274
 12309   003A00                     i2l2271:
 12310   003A00  C001  F003         	movff	abs@a,??_abs
 12311   003A04  C002  F004         	movff	abs@a+1,??_abs+1
 12312   003A08  1E03               	comf	??_abs^0,f,c
 12313   003A0A  1E04               	comf	(??_abs+1)^0,f,c
 12314   003A0C  4A03               	infsnz	??_abs^0,f,c
 12315   003A0E  2A04               	incf	(??_abs+1)^0,f,c
 12316   003A10  C003  F001         	movff	??_abs,?_abs
 12317   003A14  C004  F002         	movff	??_abs+1,?_abs+1
 12318   003A18                     i2l2274:
 12319   003A18  0012               	return		;funcret
 12320   003A1A                     __end_of_abs:
 12321                           	callstack 0
 12322                           
 12323 ;; *************** function _Sensor_setSampled *****************
 12324 ;; Defined at:
 12325 ;;		line 864 in file "mcc_generated_files/touch/mtouch_sensor.c"
 12326 ;; Parameters:    Size  Location     Type
 12327 ;;  sensor          1    0[COMRAM] PTR struct .
 12328 ;;		 -> mtouch_sensor(50), 
 12329 ;; Auto vars:     Size  Location     Type
 12330 ;;		None
 12331 ;; Return value:  Size  Location     Type
 12332 ;;                  1    wreg      void 
 12333 ;; Registers used:
 12334 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12335 ;; Tracked objects:
 12336 ;;		On entry : 0/0
 12337 ;;		On exit  : 0/0
 12338 ;;		Unchanged: 0/0
 12339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 12340 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12343 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12344 ;;Total ram usage:        1 bytes
 12345 ;; Hardware stack levels used: 1
 12346 ;; This function calls:
 12347 ;;		Nothing
 12348 ;; This function is called by:
 12349 ;;		_MTOUCH_Sensor_Service
 12350 ;; This function uses a non-reentrant model
 12351 ;;
 12352                           
 12353                           	psect	text103
 12354   003D94                     __ptext103:
 12355                           	callstack 0
 12356   003D94                     _Sensor_setSampled:
 12357                           	callstack 19
 12358   003D94                     
 12359                           ;mcc_generated_files/touch/mtouch_sensor.c: 864: static __attribute__((inline)) void Sen
      +                          sor_setSampled(mtouch_sensor_t* sensor);mcc_generated_files/touch/mtouch_sensor.c: 865: 
      +                          {;mcc_generated_files/touch/mtouch_sensor.c: 866:     sensor->sampled = 1;
 12360   003D94  5001               	movf	Sensor_setSampled@sensor^0,w,c
 12361   003D96  6ED9               	movwf	fsr2l,c
 12362   003D98  6ADA               	clrf	fsr2h,c
 12363   003D9A  0E09               	movlw	9
 12364   003D9C  26D9               	addwf	fsr2l,f,c
 12365   003D9E  82DF               	bsf	indf2,1,c
 12366   003DA0  0012               	return		;funcret
 12367   003DA2                     __end_of_Sensor_setSampled:
 12368                           	callstack 0
 12369                           
 12370 ;; *************** function _Sensor_setCalibrated *****************
 12371 ;; Defined at:
 12372 ;;		line 816 in file "mcc_generated_files/touch/mtouch_sensor.c"
 12373 ;; Parameters:    Size  Location     Type
 12374 ;;  sensor          1    0[COMRAM] PTR struct .
 12375 ;;		 -> mtouch_sensor(50), 
 12376 ;; Auto vars:     Size  Location     Type
 12377 ;;		None
 12378 ;; Return value:  Size  Location     Type
 12379 ;;                  1    wreg      void 
 12380 ;; Registers used:
 12381 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12382 ;; Tracked objects:
 12383 ;;		On entry : 0/0
 12384 ;;		On exit  : 0/0
 12385 ;;		Unchanged: 0/0
 12386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 12387 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12390 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12391 ;;Total ram usage:        1 bytes
 12392 ;; Hardware stack levels used: 1
 12393 ;; This function calls:
 12394 ;;		Nothing
 12395 ;; This function is called by:
 12396 ;;		_MTOUCH_Sensor_Service
 12397 ;;		_Sensor_autoCalibration
 12398 ;; This function uses a non-reentrant model
 12399 ;;
 12400                           
 12401                           	psect	text104
 12402   003CB4                     __ptext104:
 12403                           	callstack 0
 12404   003CB4                     _Sensor_setCalibrated:
 12405                           	callstack 19
 12406   003CB4                     
 12407                           ;mcc_generated_files/touch/mtouch_sensor.c: 816: static void Sensor_setCalibrated(mtouch
      +                          _sensor_t* sensor);mcc_generated_files/touch/mtouch_sensor.c: 817: {;mcc_generated_files
      +                          /touch/mtouch_sensor.c: 818:     sensor->calibrated = 1;
 12408   003CB4  5001               	movf	Sensor_setCalibrated@sensor^0,w,c
 12409   003CB6  6ED9               	movwf	fsr2l,c
 12410   003CB8  6ADA               	clrf	fsr2h,c
 12411   003CBA  0E09               	movlw	9
 12412   003CBC  26D9               	addwf	fsr2l,f,c
 12413   003CBE  86DF               	bsf	indf2,3,c
 12414                           
 12415                           ;mcc_generated_files/touch/mtouch_sensor.c: 819:     sensor->acqTime_cal = 0;
 12416   003CC0  5001               	movf	Sensor_setCalibrated@sensor^0,w,c
 12417   003CC2  6ED9               	movwf	fsr2l,c
 12418   003CC4  6ADA               	clrf	fsr2h,c
 12419   003CC6  0E09               	movlw	9
 12420   003CC8  26D9               	addwf	fsr2l,f,c
 12421   003CCA  98DF               	bcf	indf2,4,c
 12422   003CCC  0012               	return		;funcret
 12423   003CCE                     __end_of_Sensor_setCalibrated:
 12424                           	callstack 0
 12425                           
 12426                           	psect	rparam
 12427   000000                     
 12428                           	psect	temp
 12429   00004B                     btemp:
 12430                           	callstack 0
 12431   00004B                     	ds	1
 12432   000000                     int$flags	set	btemp
 12433   000000                     wtemp8	set	btemp+1
 12434   000000                     ttemp5	set	btemp+1
 12435   000000                     ttemp6	set	btemp+4
 12436   000000                     ttemp7	set	btemp+8
 12437                           
 12438                           	psect	config
 12439                           
 12440                           ;Config register CONFIG1L @ 0x300000
 12441                           ;	External Oscillator mode Selection bits
 12442                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
 12443                           ;	Power-up default value for COSC bits
 12444                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
 12445   300000                     	org	3145728
 12446   300000  FF                 	db	255
 12447                           
 12448                           ;Config register CONFIG1H @ 0x300001
 12449                           ;	Clock Out Enable bit
 12450                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 12451                           ;	Clock Switch Enable bit
 12452                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 12453                           ;	Fail-Safe Clock Monitor Enable bit
 12454                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 12455   300001                     	org	3145729
 12456   300001  FF                 	db	255
 12457                           
 12458                           ;Config register CONFIG2L @ 0x300002
 12459                           ;	Master Clear Enable bit
 12460                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
 12461                           ;	Power-up Timer Enable bit
 12462                           ;	PWRTE = OFF, Power up timer disabled
 12463                           ;	Low-power BOR enable bit
 12464                           ;	LPBOREN = OFF, Low power BOR is disabled
 12465                           ;	Brown-out Reset Enable bits
 12466                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 12467   300002                     	org	3145730
 12468   300002  FF                 	db	255
 12469                           
 12470                           ;Config register CONFIG2H @ 0x300003
 12471                           ;	Brown Out Reset Voltage selection bits
 12472                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
 12473                           ;	ZCD Disable bit
 12474                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 12475                           ;	PPSLOCK bit One-Way Set Enable bit
 12476                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 12477                           ;	Stack Full/Underflow Reset Enable bit
 12478                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12479                           ;	Extended Instruction Set Enable bit
 12480                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 12481   300003                     	org	3145731
 12482   300003  FF                 	db	255
 12483                           
 12484                           ;Config register CONFIG3L @ 0x300004
 12485                           ;	WDT Period Select bits
 12486                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12487                           ;	WDT operating mode
 12488                           ;	WDTE = OFF, WDT Disabled
 12489   300004                     	org	3145732
 12490   300004  9F                 	db	159
 12491                           
 12492                           ;Config register CONFIG3H @ 0x300005
 12493                           ;	WDT Window Select bits
 12494                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 12495                           ;	WDT input clock selector
 12496                           ;	WDTCCS = SC, Software Control
 12497   300005                     	org	3145733
 12498   300005  FF                 	db	255
 12499                           
 12500                           ;Config register CONFIG4L @ 0x300006
 12501                           ;	Write Protection Block 0
 12502                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 12503                           ;	Write Protection Block 1
 12504                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 12505                           ;	Write Protection Block 2
 12506                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 12507                           ;	Write Protection Block 3
 12508                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 12509                           ;	Write Protection Block 4
 12510                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
 12511                           ;	Write Protection Block 5
 12512                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
 12513                           ;	Write Protection Block 6
 12514                           ;	WRT6 = OFF, Block 6 (018000-01BFFFh) not write-protected
 12515                           ;	Write Protection Block 7
 12516                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
 12517   300006                     	org	3145734
 12518   300006  FF                 	db	255
 12519                           
 12520                           ;Config register CONFIG4H @ 0x300007
 12521                           ;	Configuration Register Write Protection bit
 12522                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 12523                           ;	Boot Block Write Protection bit
 12524                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 12525                           ;	Data EEPROM Write Protection bit
 12526                           ;	WRTD = OFF, Data EEPROM not write-protected
 12527                           ;	Scanner Enable bit
 12528                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 12529                           ;	Low Voltage Programming Enable bit
 12530                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 12531   300007                     	org	3145735
 12532   300007  FF                 	db	255
 12533                           
 12534                           ;Config register CONFIG5L @ 0x300008
 12535                           ;	UserNVM Program Memory Code Protection bit
 12536                           ;	CP = OFF, UserNVM code protection disabled
 12537                           ;	DataNVM Memory Code Protection bit
 12538                           ;	CPD = OFF, DataNVM code protection disabled
 12539   300008                     	org	3145736
 12540   300008  FF                 	db	255
 12541                           
 12542                           ;Config register CONFIG5H @ 0x300009
 12543                           ;	unspecified, using default values
 12544   300009                     	org	3145737
 12545   300009  FF                 	db	255
 12546                           
 12547                           ;Config register CONFIG6L @ 0x30000A
 12548                           ;	Table Read Protection Block 0
 12549                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 12550                           ;	Table Read Protection Block 1
 12551                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 12552                           ;	Table Read Protection Block 2
 12553                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 12554                           ;	Table Read Protection Block 3
 12555                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 12556                           ;	Table Read Protection Block 4
 12557                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
 12558                           ;	Table Read Protection Block 5
 12559                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
 12560                           ;	Table Read Protection Block 6
 12561                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
 12562                           ;	Table Read Protection Block 7
 12563                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
 12564   30000A                     	org	3145738
 12565   30000A  FF                 	db	255
 12566                           
 12567                           ;Config register CONFIG6H @ 0x30000B
 12568                           ;	Boot Block Table Read Protection bit
 12569                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 12570   30000B                     	org	3145739
 12571   30000B  FF                 	db	255
 12572                           tosu	equ	0xFFF
 12573                           tosh	equ	0xFFE
 12574                           tosl	equ	0xFFD
 12575                           stkptr	equ	0xFFC
 12576                           pclatu	equ	0xFFB
 12577                           pclath	equ	0xFFA
 12578                           pcl	equ	0xFF9
 12579                           tblptru	equ	0xFF8
 12580                           tblptrh	equ	0xFF7
 12581                           tblptrl	equ	0xFF6
 12582                           tablat	equ	0xFF5
 12583                           prodh	equ	0xFF4
 12584                           prodl	equ	0xFF3
 12585                           indf0	equ	0xFEF
 12586                           postinc0	equ	0xFEE
 12587                           postdec0	equ	0xFED
 12588                           preinc0	equ	0xFEC
 12589                           plusw0	equ	0xFEB
 12590                           fsr0h	equ	0xFEA
 12591                           fsr0l	equ	0xFE9
 12592                           wreg	equ	0xFE8
 12593                           indf1	equ	0xFE7
 12594                           postinc1	equ	0xFE6
 12595                           postdec1	equ	0xFE5
 12596                           preinc1	equ	0xFE4
 12597                           plusw1	equ	0xFE3
 12598                           fsr1h	equ	0xFE2
 12599                           fsr1l	equ	0xFE1
 12600                           bsr	equ	0xFE0
 12601                           indf2	equ	0xFDF
 12602                           postinc2	equ	0xFDE
 12603                           postdec2	equ	0xFDD
 12604                           preinc2	equ	0xFDC
 12605                           plusw2	equ	0xFDB
 12606                           fsr2h	equ	0xFDA
 12607                           fsr2l	equ	0xFD9
 12608                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    153
    Data        47
    BSS         218
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     50      74
    BANK0           160     15     160
    BANK1           256     16     118
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultADTI_ISR(), ADCC_ThresholdISR_mTouch(), NULL(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultADTI_ISR(), ADCC_ThresholdISR_mTouch(), 

    Button_Baseline_Initialize@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_Baseline_Update@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_Check_AKS_Block@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_Check_AKS_Block@check_button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_Deviation_Update@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_Reading_Update@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_Reading_Update_Helper@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_Service@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_State_Initializing@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_State_NotPressed@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_State_Pressed@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_StateMachine	PTR FTN(PTR struct .,)void [3] size(3) Largest target is 1
		 -> Button_State_Initializing(), Button_State_NotPressed(), Button_State_Pressed(), 

    Button_StateMachine$0	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_Tick_helper@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_Unscaled_Deviation_Get@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    calculate_contact_size@slider	PTR struct . size(2) Largest target is 17
		 -> mtouch_slider(BANK1[17]), 

    calculate_position@slider	PTR struct . size(2) Largest target is 17
		 -> mtouch_slider(BANK1[17]), 

    calculate_raw_position@slider	PTR struct . size(2) Largest target is 17
		 -> mtouch_slider(BANK1[17]), 

    callback_notPressed	PTR FTN(enum E13138,)void  size(3) Largest target is 1
		 -> Button_DefaultCallback(), ProcessButtonRelease(), 

    callback_position_changed	PTR FTN(enum E13201,)void  size(3) Largest target is 1
		 -> ProcessSliderChange(), Slider_DefaultCallback(), 

    callback_pressed	PTR FTN(enum E13138,)void  size(3) Largest target is 1
		 -> Button_DefaultCallback(), 

    callback_pressed@mtouch_slider$F1529	PTR FTN(enum E13201,)void  size(3) Largest target is 1
		 -> Slider_DefaultCallback(), 

    callback_released	PTR FTN(enum E13201,)void  size(3) Largest target is 1
		 -> Slider_DefaultCallback(), 

    callback_sampled	PTR FTN(enum E13072,)void  size(3) Largest target is 1
		 -> Sensor_DefaultCallback(), 

    get_difference@slider	PTR struct . size(2) Largest target is 17
		 -> mtouch_slider(BANK1[17]), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), mtouch_sensor(BANK0[50]), 

    memcpy@d1	PTR void  size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), mtouch_sensor(BANK0[50]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 85
		 -> mtouch_button_init(CODE[85]), mtouch_sensor_init(CODE[50]), 

    memcpy@s1	PTR const void  size(1) Largest target is 85
		 -> mtouch_button_init(CODE[85]), mtouch_sensor_init(CODE[50]), 

    moving_average_filter@slider	PTR struct . size(2) Largest target is 17
		 -> mtouch_slider(BANK1[17]), 

    MTOUCH_Button_Initialize@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    MTOUCH_Button_SetNotPressedCallback@callback	PTR FTN(enum E13138,)void  size(3) Largest target is 1
		 -> ProcessButtonRelease(), 

    MTOUCH_Sensor_Sampled_ResetAll@sensor	PTR struct . size(1) Largest target is 50
		 -> mtouch_sensor(BANK0[50]), 

    MTOUCH_Sensor_Service@sensor	PTR struct . size(1) Largest target is 50
		 -> mtouch_sensor(BANK0[50]), 

    MTOUCH_Slider_SetPositionChangedCallback@callback	PTR FTN(enum E13201,)void  size(3) Largest target is 1
		 -> ProcessSliderChange(), 

    positional_hysteresis@slider	PTR struct . size(2) Largest target is 17
		 -> mtouch_slider(BANK1[17]), 

    S400$4$0	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_DefaultOverflowCallback(), 

    S400TMR_INTERFACE$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_Initialize(), 

    S400TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR2_PeriodCountSet(), 

    S400TMR_INTERFACE$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_Start(), 

    S400TMR_INTERFACE$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_Stop(), 

    S400TMR_INTERFACE$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_Tasks(), 

    S400TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR2_OverflowCallbackRegister(), 

    Sensor_isCalibrated@sensor	PTR struct . size(1) Largest target is 50
		 -> mtouch_sensor(BANK0[50]), 

    Sensor_isCalibratingAcqTime@sensor	PTR struct . size(1) Largest target is 50
		 -> mtouch_sensor(BANK0[50]), 

    Sensor_RawSample_Update@sensor	PTR struct . size(1) Largest target is 50
		 -> mtouch_sensor(BANK0[50]), 

    Sensor_Sampled_Reset@sensor	PTR struct . size(1) Largest target is 50
		 -> mtouch_sensor(BANK0[50]), 

    Sensor_scheduleNextScan@sensor	PTR struct . size(1) Largest target is 50
		 -> mtouch_sensor(BANK0[50]), 

    Sensor_setCalibrated@sensor	PTR struct . size(1) Largest target is 50
		 -> mtouch_sensor(BANK0[50]), 

    Sensor_setSampled@sensor	PTR struct . size(1) Largest target is 50
		 -> mtouch_sensor(BANK0[50]), 

    Slider_FindLeft@slider	PTR struct . size(2) Largest target is 17
		 -> mtouch_slider(BANK1[17]), 

    Slider_FindMiddle@slider	PTR struct . size(2) Largest target is 17
		 -> mtouch_slider(BANK1[17]), 

    Slider_FindRight@slider	PTR struct . size(2) Largest target is 17
		 -> mtouch_slider(BANK1[17]), 

    Slider_Initialize@slider	PTR struct . size(2) Largest target is 17
		 -> mtouch_slider(BANK1[17]), 

    Slider_Service@slider	PTR struct . size(2) Largest target is 17
		 -> mtouch_slider(BANK1[17]), 

    sp__memcpy	PTR void  size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), mtouch_sensor(BANK0[50]), 

    Timer2$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_Initialize(), 

    Timer2$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR2_PeriodCountSet(), 

    Timer2$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_Start(), 

    Timer2$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_Stop(), 

    Timer2$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_Tasks(), 

    Timer2$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR2_OverflowCallbackRegister(), 

    TMR2_OverflowCallback	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_DefaultOverflowCallback(), NULL(), 

    TMR2_OverflowCallbackRegister@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_DefaultOverflowCallback(), 


Critical Paths under _main in COMRAM

    _TMR2_Initialize->_TMR2_OverflowCallbackRegister
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _MTOUCH_Tick->_MTOUCH_Button_Tick
    _MTOUCH_Button_Tick->_Button_Tick_helper
    _Slider_Service->_calculate_position
    _calculate_position->_positional_hysteresis
    _positional_hysteresis->_get_difference
    _moving_average_filter->_get_difference
    _calculate_raw_position->_interpolate
    _interpolate->_divide
    _calculate_contact_size->_Slider_FindMiddle
    _Slider_FindRight->_MTOUCH_Button_Deviation_Get
    _Slider_FindMiddle->_MTOUCH_Button_Deviation_Get
    _Slider_FindLeft->_MTOUCH_Button_Deviation_Get
    _ProcessSliderChange->_MTOUCH_Slider_Position_Get
    _MTOUCH_Sensor_SampleAll->_MTOUCH_Sensor_isSamplingComplete
    _MTOUCH_Sensor_postAcquisitionProcess->_Sensor_RawSample_Update
    _Sensor_RawSample_Update->_medianFilter
    _MTOUCH_Sensor_isSamplingComplete->_Sensor_scheduleNextScan
    _Sensor_scheduleNextScan->_Sensor_SetTrisBit
    _MTOUCH_Initialize->_MTOUCH_Button_InitializeAll
    _MTOUCH_Initialize->_MTOUCH_Sensor_InitializeAll
    _MTOUCH_Slider_InitializeAll->_Slider_Initialize
    _MTOUCH_Sensor_ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
    _MTOUCH_Sensor_InitializeAll->_memcpy
    _MTOUCH_Sensor_Initialize->_MTOUCH_Sensor_Calibrate
    _MTOUCH_Sensor_Initialize->_MTOUCH_Sensor_Enable
    _MTOUCH_Sensor_Initialize->_Sensor_Sampled_Reset
    _MTOUCH_Button_InitializeAll->_memcpy
    _MTOUCH_Button_ServiceAll->_Button_Service
    _Button_Service->_Button_State_Pressed
    _Button_State_NotPressed->_Button_Check_AKS_Block
    _MTOUCH_Button_Initialize->_MTOUCH_Sensor_Calibrate
    _Button_Check_AKS_Block->_Button_Unscaled_Deviation_Get
    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Button_Reading_Update->_Button_Reading_Update_Helper
    _Button_Reading_Update_Helper->_MTOUCH_Sensor_RawSample_Get
    _ApplicationTask->_GetMotorSpeed
    _ApplicationTask->_PWM4_LoadDutyValue

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _ADCC_ThresholdISR_mTouch->_MTOUCH_Sensor_Service
    _MTOUCH_Sensor_Service->i2_Sensor_scheduleNextScan
    i2_Sensor_scheduleNextScan->i2_Sensor_SetTrisBit

Critical Paths under _main in BANK0

    _MTOUCH_Service_Mainloop->_MTOUCH_Slider_ServiceAll
    _MTOUCH_Slider_ServiceAll->_Slider_Service
    _calculate_position->_calculate_raw_position

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _MTOUCH_Slider_ServiceAll->_Slider_Service
    _Slider_Service->_calculate_position

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   28035
                    _ApplicationTask
_MTOUCH_Button_SetNotPressedCallback
            _MTOUCH_Service_Mainloop
_MTOUCH_Slider_SetPositionChangedCal
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    3567
                    _ADCC_Initialize
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
                  _MTOUCH_Initialize
             _PIN_MANAGER_Initialize
                    _PWM4_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
      _TMR2_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _TMR2_OverflowCallbackRegister                        3     0      3      98
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      98
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      98
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      98
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     174
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Slider_SetPositionChangedCallback             3     0      3      98
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Service_Mainloop                              0     0      0   23605
           _MTOUCH_Button_ServiceAll
                  _MTOUCH_Initialize
            _MTOUCH_Sensor_SampleAll
     _MTOUCH_Sensor_Sampled_ResetAll
           _MTOUCH_Slider_ServiceAll
                        _MTOUCH_Tick
                 _MTOUCH_needReburst
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_needReburst                                   1     1      0      15
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Tick                                          0     0      0     313
                 _MTOUCH_Button_Tick
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_Tick                                   1     1      0     313
                                             24 COMRAM     1     1      0
                 _Button_Tick_helper
 ---------------------------------------------------------------------------------
 (4) _Button_Tick_helper                                   4     2      2     214
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Slider_ServiceAll                             1     1      0   12280
                                             14 BANK0      1     1      0
                     _Slider_Service
 ---------------------------------------------------------------------------------
 (3) _Slider_Service                                      14    14      0   12181
                                             10 BANK0      4     4      0
                                              6 BANK1     10    10      0
            _MTOUCH_Button_isPressed
                _ProcessSliderChange *
             _Slider_DefaultCallback *
             _calculate_contact_size
                 _calculate_position
 ---------------------------------------------------------------------------------
 (4) _calculate_position                                   8     6      2    9551
                                             48 COMRAM     2     0      2
                                              0 BANK1      6     6      0
             _calculate_raw_position
              _moving_average_filter
              _positional_hysteresis
 ---------------------------------------------------------------------------------
 (5) _positional_hysteresis                               15    11      4    1813
                                             33 COMRAM    15    11      4
                     _get_difference
 ---------------------------------------------------------------------------------
 (5) _moving_average_filter                               14    10      4    1667
                                             33 COMRAM    14    10      4
                     _get_difference
 ---------------------------------------------------------------------------------
 (6) _get_difference                                      13     7      6     893
                                             20 COMRAM    13     7      6
 ---------------------------------------------------------------------------------
 (5) _calculate_raw_position                              17    15      2    5659
                                             40 COMRAM     7     5      2
                                              0 BANK0     10    10      0
                             _divide
                        _interpolate
 ---------------------------------------------------------------------------------
 (6) _interpolate                                         13     6      7    2753
                                             27 COMRAM    13     6      7
                             _divide
 ---------------------------------------------------------------------------------
 (7) _divide                                               7     2      5    1823
                                             20 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) _calculate_contact_size                               6     4      2    1444
                                             33 COMRAM     6     4      2
                    _Slider_FindLeft
                  _Slider_FindMiddle
                   _Slider_FindRight
 ---------------------------------------------------------------------------------
 (5) _Slider_FindRight                                    10     8      2     310
                                             21 COMRAM    10     8      2
        _MTOUCH_Button_Deviation_Get
 ---------------------------------------------------------------------------------
 (5) _Slider_FindMiddle                                   12    10      2     508
                                             21 COMRAM    12    10      2
        _MTOUCH_Button_Deviation_Get
 ---------------------------------------------------------------------------------
 (5) _Slider_FindLeft                                      4     2      2     341
                                             21 COMRAM     4     2      2
        _MTOUCH_Button_Deviation_Get
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Button_Deviation_Get                          1     1      0      62
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Slider_DefaultCallback                               1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _ProcessSliderChange                                  1     1      0      62
         _MTOUCH_Slider_Position_Get
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Slider_Position_Get                           3     1      2      62
                                             20 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_isPressed                              2     2      0      62
                                             20 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Sensor_SampleAll                              0     0      0    2103
   _MTOUCH_Sensor_isSamplingComplete
_MTOUCH_Sensor_postAcquisitionProces
            _Sensor_FrequencyHopping
 ---------------------------------------------------------------------------------
 (3) _Sensor_FrequencyHopping                              0     0      0       0
             _Sensor_setSamplePeriod
 ---------------------------------------------------------------------------------
 (4) _Sensor_setSamplePeriod                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_postAcquisitionProcess                 1     1      0     761
                                             30 COMRAM     1     1      0
             _Sensor_DefaultCallback
            _Sensor_RawSample_Update
 ---------------------------------------------------------------------------------
 (4) _Sensor_RawSample_Update                              3     2      1     649
                                             27 COMRAM     3     2      1
                       _medianFilter
 ---------------------------------------------------------------------------------
 (5) _medianFilter                                         7     5      2     462
                                             20 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _Sensor_DefaultCallback                               1     1      0       0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_isSamplingComplete                     1     1      0    1342
                                             31 COMRAM     1     1      0
            _MTOUCH_Sensor_isEnabled
           _MTOUCH_Sensor_isSampling
           _MTOUCH_Sensor_wasSampled
            _Sensor_scheduleNextScan
 ---------------------------------------------------------------------------------
 (4) _Sensor_scheduleNextScan                              7     7      0    1088
                                             24 COMRAM     7     7      0
            _MTOUCH_Sensor_isEnabled
           _MTOUCH_Sensor_wasSampled
                  _Sensor_SetTrisBit
                _Sensor_isCalibrated
        _Sensor_isCalibratingAcqTime
 ---------------------------------------------------------------------------------
 (5) _Sensor_isCalibratingAcqTime                          1     0      1     174
                                             20 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (5) _Sensor_isCalibrated                                  1     0      1     148
                                             20 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (5) _Sensor_SetTrisBit                                    4     3      1     258
                                             20 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_isSampling                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Initialize                                    0     0      0    3001
        _MTOUCH_Button_InitializeAll
        _MTOUCH_Sensor_InitializeAll
     _MTOUCH_Sensor_Sampled_ResetAll
      _MTOUCH_Sensor_Scan_Initialize
        _MTOUCH_Slider_InitializeAll
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Slider_InitializeAll                          1     1      0     267
                                             23 COMRAM     1     1      0
                  _Slider_Initialize
 ---------------------------------------------------------------------------------
 (4) _Slider_Initialize                                    3     3      0     199
                                             20 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Scan_Initialize                        0     0      0     174
      _MTOUCH_Sensor_ADCC_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_ADCC_Initialize                        0     0      0     174
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (5) _ADCC_SetADTIInterruptHandler                         3     0      3     174
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Sampled_ResetAll                       2     2      0     242
                                             21 COMRAM     2     2      0
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_InitializeAll                          1     1      0    1220
                                             29 COMRAM     1     1      0
           _MTOUCH_Sensor_Initialize
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_Initialize                             1     1      0     373
                                             21 COMRAM     1     1      0
            _MTOUCH_Sensor_Calibrate
               _MTOUCH_Sensor_Enable
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (4) _Sensor_Sampled_Reset                                 1     0      1     174
                                             20 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Enable                                 1     1      0      44
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_InitializeAll                          1     1      0    1098
                                             29 COMRAM     1     1      0
           _MTOUCH_Button_Initialize
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                               9     4      5     748
                                             20 COMRAM     9     4      5
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Button_ServiceAll                             1     1      0    5651
                                              0 BANK0      1     1      0
                     _Button_Service
 ---------------------------------------------------------------------------------
 (3) _Button_Service                                       4     4      0    5552
                                             46 COMRAM     4     4      0
            _Button_Deviation_Update
              _Button_Reading_Update
          _Button_State_Initializing *
            _Button_State_NotPressed *
               _Button_State_Pressed *
           _MTOUCH_Button_Initialize
         _MTOUCH_Sensor_isCalibrated
           _MTOUCH_Sensor_wasSampled
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_wasSampled                             1     1      0      62
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_isCalibrated                           1     1      0      62
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Button_State_Pressed                                 7     5      2     657
                                             39 COMRAM     7     5      2
             _Button_DefaultCallback *
           _MTOUCH_Button_Initialize
               _ProcessButtonRelease *
 ---------------------------------------------------------------------------------
 (5) _ProcessButtonRelease                                 3     3      0      31
                                             20 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _Button_State_NotPressed                              5     3      2    2325
                                             39 COMRAM     5     3      2
             _Button_Baseline_Update
             _Button_Check_AKS_Block
             _Button_DefaultCallback
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_Initialize                             3     3      0     251
                                             21 COMRAM     3     3      0
            _MTOUCH_Sensor_Calibrate
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Calibrate                              1     1      0      62
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Button_DefaultCallback                               1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _Button_Check_AKS_Block                              11     9      2     995
                                             28 COMRAM    11     9      2
      _Button_Unscaled_Deviation_Get
            _MTOUCH_Sensor_isEnabled
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_isEnabled                              1     1      0      62
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Button_Unscaled_Deviation_Get                        8     6      2     242
                                             20 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _Button_State_Initializing                            6     4      2     952
                                             39 COMRAM     6     4      2
         _Button_Baseline_Initialize
             _Button_Baseline_Update
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Update                               6     4      2     428
                                             20 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Initialize                           6     4      2     245
                                             23 COMRAM     6     4      2
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (4) _Button_Reading_Update                                2     0      2     611
                                             27 COMRAM     2     0      2
       _Button_Reading_Update_Helper
 ---------------------------------------------------------------------------------
 (5) _Button_Reading_Update_Helper                         4     2      2     459
                                             23 COMRAM     4     2      2
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_RawSample_Get                          3     1      2      62
                                             20 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _Button_Deviation_Update                             16    14      2     350
                                             20 COMRAM    16    14      2
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Button_SetNotPressedCallback                  3     0      3      98
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _ApplicationTask                                      4     4      0     667
                                             24 COMRAM     4     4      0
                        _ClearButton
                         _ClearEvent
                          _GetButton
                           _GetEvent
                      _GetMotorSpeed
                 _PWM4_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM4_LoadDutyValue                                   4     2      2     272
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _GetMotorSpeed                                        4     2      2     371
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _GetEvent                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetButton                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearEvent                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearButton                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           6     6      0    1575
                                             14 COMRAM     6     6      0
                  _ADCC_ThresholdISR
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (9) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ADCC_ThresholdISR                                    0     0      0    1575
                                NULL *
               _ADCC_DefaultADTI_ISR *
           _ADCC_ThresholdISR_mTouch *
 ---------------------------------------------------------------------------------
 (10) _ADCC_ThresholdISR_mTouch                            0     0      0    1575
              _MTOUCH_Sensor_Service
 ---------------------------------------------------------------------------------
 (11) _MTOUCH_Sensor_Service                               3     3      0    1575
                                             11 COMRAM     3     3      0
               _Sensor_setCalibrated
                  _Sensor_setSampled
                                _abs
                i2_Sensor_SetTrisBit
              i2_Sensor_isCalibrated
          i2_Sensor_scheduleNextScan
 ---------------------------------------------------------------------------------
 (12) i2_Sensor_scheduleNextScan                           7     7      0     662
                                              4 COMRAM     7     7      0
          i2_MTOUCH_Sensor_isEnabled
         i2_MTOUCH_Sensor_wasSampled
                i2_Sensor_SetTrisBit
              i2_Sensor_isCalibrated
      i2_Sensor_isCalibratingAcqTime
 ---------------------------------------------------------------------------------
 (13) i2_Sensor_isCalibratingAcqTime                       1     0      1      48
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (13) i2_Sensor_isCalibrated                               1     0      1      74
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (13) i2_Sensor_SetTrisBit                                 4     3      1     184
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (13) i2_MTOUCH_Sensor_wasSampled                          1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_MTOUCH_Sensor_isEnabled                           1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _abs                                                 4     2      2     218
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _Sensor_setSampled                                   1     0      1      98
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (12) _Sensor_setCalibrated                                1     0      1     272
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (10) _ADCC_DefaultADTI_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ApplicationTask
     _ClearButton
     _ClearEvent
     _GetButton
     _GetEvent
     _GetMotorSpeed
     _PWM4_LoadDutyValue
   _MTOUCH_Button_SetNotPressedCallback
   _MTOUCH_Service_Mainloop
     _MTOUCH_Button_ServiceAll
       _Button_Service
         _Button_Deviation_Update
         _Button_Reading_Update
           _Button_Reading_Update_Helper
             _MTOUCH_Sensor_RawSample_Get
         _Button_State_Initializing *
           _Button_Baseline_Initialize
             _MTOUCH_Sensor_RawSample_Get
           _Button_Baseline_Update
         _Button_State_NotPressed *
           _Button_Baseline_Update
           _Button_Check_AKS_Block
             _Button_Unscaled_Deviation_Get
             _MTOUCH_Sensor_isEnabled
           _Button_DefaultCallback
           _MTOUCH_Button_Initialize
             _MTOUCH_Sensor_Calibrate
         _Button_State_Pressed *
           _Button_DefaultCallback *
           _MTOUCH_Button_Initialize *
           _ProcessButtonRelease *
         _MTOUCH_Button_Initialize *
         _MTOUCH_Sensor_isCalibrated *
         _MTOUCH_Sensor_wasSampled *
     _MTOUCH_Initialize
       _MTOUCH_Button_InitializeAll
         _MTOUCH_Button_Initialize
         _memcpy
       _MTOUCH_Sensor_InitializeAll
         _MTOUCH_Sensor_Initialize
           _MTOUCH_Sensor_Calibrate
           _MTOUCH_Sensor_Enable
           _Sensor_Sampled_Reset
         _memcpy
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
       _MTOUCH_Sensor_Scan_Initialize
         _MTOUCH_Sensor_ADCC_Initialize
           _ADCC_SetADTIInterruptHandler
       _MTOUCH_Slider_InitializeAll
         _Slider_Initialize
     _MTOUCH_Sensor_SampleAll
       _MTOUCH_Sensor_isSamplingComplete
         _MTOUCH_Sensor_isEnabled
         _MTOUCH_Sensor_isSampling
         _MTOUCH_Sensor_wasSampled
         _Sensor_scheduleNextScan
           _MTOUCH_Sensor_isEnabled
           _MTOUCH_Sensor_wasSampled
           _Sensor_SetTrisBit
           _Sensor_isCalibrated
           _Sensor_isCalibratingAcqTime
       _MTOUCH_Sensor_postAcquisitionProcess
         _Sensor_DefaultCallback
         _Sensor_RawSample_Update
           _medianFilter
       _Sensor_FrequencyHopping
         _Sensor_setSamplePeriod
     _MTOUCH_Sensor_Sampled_ResetAll
     _MTOUCH_Slider_ServiceAll
       _Slider_Service
         _MTOUCH_Button_isPressed
         _ProcessSliderChange *
           _MTOUCH_Slider_Position_Get
         _Slider_DefaultCallback *
         _calculate_contact_size *
           _Slider_FindLeft
             _MTOUCH_Button_Deviation_Get
           _Slider_FindMiddle
             _MTOUCH_Button_Deviation_Get
           _Slider_FindRight
             _MTOUCH_Button_Deviation_Get
         _calculate_position *
           _calculate_raw_position
             _divide
             _interpolate
               _divide
           _moving_average_filter
             _get_difference
           _positional_hysteresis
             _get_difference
     _MTOUCH_Tick
       _MTOUCH_Button_Tick
         _Button_Tick_helper
     _MTOUCH_needReburst
   _MTOUCH_Slider_SetPositionChangedCallback
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _MTOUCH_Initialize
     _PIN_MANAGER_Initialize
     _PWM4_Initialize
     _TMR2_Initialize
       _TMR2_OverflowCallbackRegister

 _INTERRUPT_InterruptManager (ROOT)
   _ADCC_ThresholdISR
     NULL(Fake) *
     _ADCC_DefaultADTI_ISR *
     _ADCC_ThresholdISR_mTouch *
       _MTOUCH_Sensor_Service
         _Sensor_setCalibrated
         _Sensor_setSampled
         _abs
         i2_Sensor_SetTrisBit
         i2_Sensor_isCalibrated
         i2_Sensor_scheduleNextScan
           i2_MTOUCH_Sensor_isEnabled
           i2_MTOUCH_Sensor_wasSampled
           i2_Sensor_SetTrisBit
           i2_Sensor_isCalibrated
           i2_Sensor_isCalibratingAcqTime
   _PIN_MANAGER_IOC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      50        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFR          100      0       0      49        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     10      76       7       46.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      F      A0       5      100.0%
BITBIGSFR_1lll      9E      0       0      46        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     32      4A       1       78.7%
BITBIGSFR_1hhhh     32      0       0      33        0.0%
BITBIGSFR_1hhhh     27      0       0      38        0.0%
BITBIGSFR_1hhhh     1F      0       0      39        0.0%
BITBANK14           1F      0       0      30        0.0%
BANK14              1F      0       0      31        0.0%
BIGRAM_1            1F      0       0      48        0.0%
BITBIGSFR_1hhhh     13      0       0      36        0.0%
BITBIGSFR_1hhhh     13      0       0      37        0.0%
BITBIGSFR_1hhhh      D      0       0      32        0.0%
BITBIGSFR_1hhhh      C      0       0      34        0.0%
BITBIGSFR_1hhhh      B      0       0      35        0.0%
BITBIGSFR_1hhhh      B      0       0      40        0.0%
BITBIGSFR_1lhh       9      0       0      43        0.0%
BITBIGSFR_1llh       6      0       0      45        0.0%
BITBIGSFR_1lhl       2      0       0      44        0.0%
BITBIGSFR_1hhl       1      0       0      41        0.0%
BITBIGSFR_1hl        1      0       0      42        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     160      47        0.0%
DATA                 0      0     160       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed May 08 13:37:39 2024

                      calculate_raw_position@ref_node 00EB                          ?_MTOUCH_Sensor_RawSample_Get 0015  
                      ?_TMR2_OverflowCallbackRegister 0015                        MTOUCH_Slider_ServiceAll@slider 00F9  
                                    _Slider_FindRight 2B72                                   _ProcessSliderChange 3C9A  
                                                  l32 3D10                                                    l42 3DC0  
                                                  l45 3DDC                                                    l38 34F6  
                                                  l64 3CE4                                     _Slider_FindMiddle 2D9E  
              positional_hysteresis@filtered_position 002B                                                   l402 3D3E  
                                                 l235 3D76                                                   l147 32C4  
                                                 l307 3D30                                                   l500 28F2  
                      calculate_raw_position@position 00F3                                                   l422 3BE4  
                                                 l505 1694                                                   l602 2F00  
                                                 l610 2434                                                   l355 370A  
                                                 l283 3A76                                                   l524 3AA2  
                                                 l605 3452                                                   l509 1732  
                                                 l701 27F4                                                   l519 253A  
                                                 l376 3D5A                                                   l633 20A2  
                                                 l801 3040                                                   l529 3390  
                                                 l562 374A                                                   l644 3D92  
                                                 l484 3912                                                   l572 3ACE  
                                                 l820 1548                                                   l581 34A6  
                                                 l717 280C                                                   l741 26EA  
                                                 l389 3D4C                                                   l638 3DE6  
                                                 l494 2AA0                                                   l718 2814  
                                                 l726 2D9C                                                   l742 2708  
                                                 l734 21FA                                                   l479 332C  
                                                 l743 2730                                                   l824 31EC  
                                                 l489 3BA8                                                   l578 2324  
                                                 l754 2E4A                                                   l755 2E52  
                                                 l739 2696                                                   l764 2B70  
                                                 l772 2C30                                                   l748 29CC  
                                                 l597 3A48                                                   l790 1286  
                                                 l856 38DC                                                   l882 3AF4  
                                                 l796 2FAA                                                   l877 3C3E  
                                                 l885 3DE2                                                   l888 3D68  
                                                 l993 2CE6                                                   _GIE 7F97  
                                                 _PR2 0FBB                            ??_INT0_SetInterruptHandler 0018  
                                  ?_Slider_FindMiddle 0016                                                   _abs 39E6  
                                     _TMR2_Initialize 3A4A                                       _PWM4_Initialize 3CE6  
                                                 prod 0FF3                                                   tosl 0FFD  
                                                 wreg 0FE8                      ??_MTOUCH_Sensor_Sampled_ResetAll 0016  
                     ?_MTOUCH_Sensor_Sampled_ResetAll 0001                                          divide@result 001A  
                           ?_MTOUCH_Sensor_Initialize 0001                                ?_positional_hysteresis 0022  
                                 ??_Slider_FindMiddle 0018                                _calculate_contact_size 2F02  
                                                l1010 39E4                                                  l1007 3CFA  
                                                ?_abs 0001                                                  l1140 3064  
                                                l1133 3C5C                                                  l1141 3072  
                                                l1142 3080                                                  l1230 3B3E  
                                                l1304 3B86                                                  l1152 397C  
                                                l1144 30D0                                                  l1312 3C20  
                                                l1208 36C4                                                  l1137 3048  
                                                l1321 3C02                                                  l1234 39B0  
                                                l1330 3784                                                  l1147 35E4  
                                                l1139 3056                                                  l1163 3B1A  
                                                l1500 174E                                                  l1308 37BE  
                                                l1340 3DE0                                                  l1253 1C2C  
                                                l1245 3546                                                  l1510 178E  
                                                l1502 1750                                                  l1334 3D84  
                                                l1326 367C                                                  l1190 1DB2  
                                                l1159 33F4                                  ?_ProcessSliderChange 0001  
                                                l1520 1798                                                  l1512 1790  
                                                l1504 1752                                                  l1264 3DC6  
                                                l1530 17D8                                                  l1514 1792  
                                                l1506 1754                                                  l1418 198C  
                                                l1282 37F8                                                  l1178 3DCC  
                                                l1267 3DE4                                                  l1540 1818  
                                                l1532 17DA                                                  l1524 17D2  
                                                l1516 1794                                                  l1542 181A  
                                                l1534 17DC                                                  l1526 17D4  
                                                l1518 1796                                                  l1278 3B62  
                                                l1560 1862                                                  l1552 185A  
                                                l1544 181C                                                  l1528 17D6  
                                                l2280 3596                                                  l1480 3CB2  
                                                l1570 18A2                                                  l1562 1864  
                                                l1554 185C                                                  l1546 181E  
                                                l1538 1816                                                  l1483 3DD2  
                                                l1492 3DBA                                                  l1580 18CC  
                                                l1572 18A4                                                  l1556 185E  
                                                l1548 1820                                                  l1469 1A9C  
                                                l1477 3632                                                  l1486 3DB2  
                                                l1590 18D6                                                  l1582 18CE  
                                                l1574 18A6                                                  l1566 189E  
                                                l1558 1860                                                  l3430 2C96  
                                                l1584 18D0                                                  l1576 18A8  
                                                l1568 18A0                                                  l1496 174A  
                                                l6000 2014                                                  l5040 3C22  
                                                l5200 36AC                                                  l3440 2CA4  
                                                l3432 2C98                                                  l1489 3DD8  
                                                l1593 18E8                                                  l1586 18D2  
                                                l1498 174C                                                  l6010 205E  
                                                l5050 3634                                                  l5202 36B2  
                                                l3442 2CA6                                                  l3434 2C9A  
                                                l3426 2C32                                                  l1588 18D4  
                                                l5060 3DC8                                                  l5044 3C26  
                                                l5204 36B4                                                  l6100 2E02  
                                                l5300 36C6                                                  l3444 2CA8  
                                                l3436 2C9C                                                  l3428 2C5A  
                                                l6022 2E54                                                  l6006 201A  
                                                l5054 3656                                                  l5046 3C2C  
                                                l6110 2AC8                                                  l6102 2E04  
                                                l6030 20A4                                                  l5310 36F8  
                                                l5302 36CE                                                  l3438 2CA2  
                                                l3446 3CE6                                                  l5312 39B2  
                                                l6024 2E70                                                  l6008 2044  
                                                l6016 2080                                                  l5056 365E  
                                                l5048 3C2E                                                  l4600 1AA0  
                                                l6112 2AE4                                                  l6120 2B44  
                                                l6104 2AA2                                                  l6200 1210  
                                                l6040 20FE                                                  l6032 20A8  
                                                l5080 3D32                                                  l5304 36DE  
                                                l5322 3DD4                                                  l5330 1734  
                                                l6026 2EA4                                                  l6018 20A0  
                                                l5058 3662                                                  l4610 1B52  
                                                l4602 1AD4                                                  l6210 38B8  
                                                l6122 2B52                                                  l6114 2B12  
                                                l6106 2AB2                                                  l6130 2B72  
                                                l6202 1252                                                  l6050 2170  
                                                l6042 210E                                                  l6034 20B8  
                                                l3394 3CCE                                                  l5306 36E2  
                                                l5074 3D24                                                  l5340 179A  
                                                l5332 1734                                                  l5500 1A0C  
                                                l6028 2EDA                                                  l6220 35E8  
                                                l6300 15DA                                                  l4604 1AEC  
                                                l6124 2B60                                                  l6116 2B30  
                                                l6108 2AB6                                                  l6140 2C12  
                                                l6132 2BCA                                                  l6204 127E  
                                                l6060 21DE                                                  l6052 217C  
                                                l6044 2112                                                  l6036 20CC  
                                                l3388 3DDA                                                  l5076 3D4E  
                                                l5308 36F4                                                  l5326 3DB4  
                                                l5318 3DCE                                                  l5350 1800  
                                                l5342 17A6                                                  l5334 1756  
                                                l5510 1A18                                                  l5502 1A0E  
                                                l5430 18EA                                                  l6222 35EC  
                                                l6310 1672                                                  l6302 1616  
                                                l4606 1AF6                                                  l5190 367E  
                                                l6126 2B68                                                  l6118 2B38  
                                                l6142 2C20                                                  l6134 2BE6  
                                                l6150 0FBE                                                  l6070 2670  
                                                l6054 218C                                                  l6062 21F2  
                                                l6046 2122                                                  l6038 20F0  
                                                l5078 3D40                                                  l5328 3DAC  
                                                l5360 1872                                                  l5352 1822  
                                                l5344 17BC                                                  l5336 1762  
                                                l5512 1A2A                                                  l5504 1A10  
                                                l5440 1920                                                  l5432 18EE  
                                                l6224 35FA                                                  l6320 16E4  
                                                l6304 1632                                                  l6312 1684  
                                                l6240 356C                                                  l4296 3D6A  
                                                l6400 1C78                                                  l4624 1BB0  
                                                l4616 1B6A                                                  l4608 1B24  
                                                l6216 38D4                                                  l6208 38A8  
                                                l6144 2C28                                                  l6136 2BF8  
                                                l6160 101A                                                  l6152 0FCE  
                                                l6080 26F2                                                  l6072 2682  
                                                l6056 21BC                                                  l6048 2152  
                                                l5362 1888                                                  l5354 182E  
                                                l5346 17DE                                                  l5338 1778  
                                                l5514 1A4A                                                  l5506 1A12  
                                                l5450 195A                                                  l5442 1924  
                                                l5434 1902                                                  l5522 1A58  
                                                l5426 3D86                                                  l6330 2466  
                                                l6322 1716                                                  l6314 16B0  
                                                l6242 3578                                                  l6234 3548  
                                                l6410 1CE2                                                  l6402 1C8E  
                                                l4618 1B98                                                  l6090 2DA6  
                                                l6138 2C04                                                  l6170 10BE  
                                                l6162 1046                                                  l6154 0FDA  
                                                l6082 2700                                                  l6074 26A2  
                                                l6066 2638                                                  l5290 32C0  
                                                l5282 325C                                                  l5364 18AA  
                                                l5356 1844                                                  l5348 17EA  
                                                l5372 18E0                                                  l5460 19A6  
                                                l5452 1966                                                  l5444 192C  
                                                l5436 1908                                                  l6260 3A28  
                                                l6228 3608                                                  l6332 2490  
                                                l6324 1726                                                  l6316 16CC  
                                                l6308 1652                                                  l6236 3558  
                                                l6244 357C                                                  l4580 3D78  
                                                l6420 1D38                                                  l6412 1CFA  
                                                l6404 1C9E                                                  l4636 1BFA  
                                                l4628 1BC8                                                  l5196 3682  
                                                l5188 3DC2                                                  l6092 2DB6  
                                                l6180 113E                                                  l6172 10E2  
                                                l6164 1070                                                  l6156 0FE2  
                                                l6148 0F9C                                                  l6076 26B0  
                                                l6084 2728                                                  l6068 264C  
                                                l6500 128C                                                  l6340 334C  
                                                l5428 3D5C                                                  l5284 32AA  
                                                l5292 3A4A                                                  l5366 18B6  
                                                l5358 1866                                                  l5470 19C0  
                                                l5462 19AE                                                  l5454 1978  
                                                l5446 193C                                                  l5438 1918  
                                                l6270 22B0                                                  l6262 3A2A  
                                                l6334 24E0                                                  l6326 2436  
                                                l6254 37BC                                                  l6246 3788  
                                                l6238 356A                                                  l2990 3DDE  
                                                l4582 3044                                                  l6430 1D76  
                                                l6422 1D58                                                  l6414 1D1C  
                                                l6406 1CA8                                                  l5198 369E  
                                                l6094 2DCA                                                  l6190 1184  
                                                l6182 1146                                                  l6174 10F8  
                                                l6166 1080                                                  l6158 0FF2  
                                                l6078 26C0                                                  l6510 12F2  
                                                l6502 129A                                                  l6342 337C  
                                                l5286 32AE                                                  l5294 3A5E  
                                                l5368 18D8                                                  l5480 19CA  
                                                l5472 19C2                                                  l5464 19B0  
                                                l5456 1984                                                  l5448 1948  
                                                l6272 22D0                                                  l6264 3A36  
                                                l6336 2514                                                  l6328 2458  
                                                l6280 2816                                                  l6248 3798  
                                                l4576 3B42                                                  l4592 3C04  
                                                l6432 1D78                                                  l6424 1D66  
                                                l6416 1D26                                                  l6408 1CC0  
                                                l6600 3B0A                                                  l6352 3748  
                                                l6344 370E                                                  l6440 3C9A  
                                                l6096 2DD8                                                  l6088 2D9E  
                                                l6360 2F5C                                                  l6192 119A  
                                                l6184 1164                                                  l6176 1100  
                                                l6168 109C                                                  l6520 13A2  
                                                l6512 130C                                                  l6504 12AA  
                                                l5288 32B0                                                  l5296 3A6E  
                                                l5490 19F8                                                  l5474 19C4  
                                                l5466 19BC                                                  l5482 19D0  
                                                l5458 1994                                                  l6274 22E0  
                                                l6266 3A3C                                                  l6258 3A1A  
                                                l6290 288C                                                  l6282 283A  
                                                l4578 3B52                                                  l4586 308E  
                                                l6434 1D7C                                                  l6426 1D68  
                                                l6418 1D2A                                                  l6346 371E  
                                                l6442 3CA4                                                  l6098 2DF6  
                                                l6362 2F6C                                                  l6194 11A6  
                                                l6186 116A                                                  l6178 111C  
                                                l6530 13EA                                                  l6522 13AA  
                                                l6514 1332                                                  l6506 12BA  
                                                l6338 332E                                                  l5298 3A72  
                                                l5492 1A04                                                  l5484 19DC  
                                                l5476 19C6                                                  l5468 19BE  
                                                l6276 2304                                                  l6268 21FC  
                                                l5900 37D2                                                  l6284 284A  
                                                l6292 154A                                                  l6620 3B94  
                                                l6612 3B88                                                  l6460 38F6  
                                                l6452 3964                                                  l6444 394A  
                                                l4860 3174                                                  l4596 3BE6  
                                                l6436 1DA4                                                  l6428 1D6C  
                                                l4940 34F8                                                  l6604 3B10  
                                                l6364 2F78                                                  l6356 2F02  
                                                l6196 11B2                                                  l6188 1172  
                                                l6380 3008                                                  l6372 2FAC  
                                                l6540 1496                                                  l6532 13F8  
                                                l6524 13C4                                                  l6516 1354  
                                                l6508 12D6                                                  l6700 3876  
                                                l5494 1A06                                                  l5486 19EE  
                                                l5478 19C8                                                  l6278 2314  
                                                l6286 2856                                                  l6294 1582  
                                                l6622 3B98                                                  l6470 3902  
                                                l6454 396A                                                  l6446 3960  
                                                l4870 31CC                                                  l4862 3184  
                                                l6438 1DAE                                                  l4950 3534  
                                                l4942 350C                                                  l6606 3B14  
                                                l6366 2F9A                                                  l6358 2F3E  
                                                l6198 11E8                                                  l5910 2CE8  
                                                l6382 301C                                                  l6374 2FC0  
                                                l6550 14F0                                                  l6542 14A0  
                                                l6526 13DA                                                  l6518 1382  
                                                l6534 1444                                                  l6630 3AE0  
                                                l6702 3886                                                  l5496 1A08  
                                                l5488 19F6                                                  l6800 361C  
                                                l6288 2868                                                  l6296 15B8  
                                                l6456 396C                                                  l4880 35CE  
                                                l4872 31DC                                                  l4864 3192  
                                                l6392 1C2E                                                  l4944 351A  
                                                l6608 3B18                                                  l6368 2FA2  
                                                l5840 2780                                                  l5832 2752  
                                                l5824 2732                                                  l5920 2D6A  
                                                l5912 2D02                                                  l6384 3038  
                                                l6376 2FE0                                                  l6560 153C  
                                                l6552 1504                                                  l6536 1456  
                                                l6544 14B4                                                  l6528 13E0  
                                                l6632 3AE4                                                  l6624 3AD0  
                                                l6480 3A90                                                  l6472 3A78  
                                                l6640 34BC                                                  l6704 3896  
                                                l6802 1A6E                                                  l5498 1A0A  
                                                l5906 37F6                                                  l6298 15C8  
                                                l6490 2A24                                                  l6618 3B8E  
                                                l6466 38FA                                                  l6458 38DE  
                                                l4882 35D2                                                  l4866 31A0  
                                                l4858 3164                                                  l6394 1C3E  
                                                l6570 3396                                                  l4946 351C  
                                                l4954 3B1C                                                  l5850 27AA  
                                                l5842 2782                                                  l5834 2754  
                                                l5826 273A                                                  l5930 290A  
                                                l5922 2D88                                                  l5914 2D1E  
                                                l6378 2FEC                                                  l6562 1542  
                                                l6554 1524                                                  l6546 14C8  
                                                l6538 1486                                                  l6482 3A92  
                                                l6634 3DBC                                                  l6642 34C0  
                                                l6706 389A                                                  l6492 2A30  
                                                l6484 29D0                                                  l6468 3900  
                                                l6388 3C42                                                  l4884 35D4  
                                                l4868 31BC                                                  l6396 1C52  
                                                l6572 33AC                                                  l6564 3392  
                                                l4948 352E                                                  l4956 3B2E  
                                                l5860 27E2                                                  l5852 27C0  
                                                l5844 278C                                                  l5836 275E  
                                                l5828 273C                                                  l5932 2930  
                                                l5916 2D2C                                                  l5924 2D94  
                                                l6556 1528                                                  l6548 14EE  
                                                l6628 3ADA                                                  l6660 34F4  
                                                l6652 34DE                                                  l6644 34C4  
                                                l6636 34A8                                                  l5950 330A  
                                                l5942 32C8                                                  l6494 2A3C  
                                                l6486 29E0                                                  l4878 3598  
                                                l6590 3CFC                                                  l6398 1C62  
                                                l6574 33C2                                                  l6582 33E0  
                                                l4958 3B32                                                  l5870 3AA6  
                                                l5862 27F8                                                  l5854 27C8  
                                                l5846 279E                                                  l5838 276C  
                                                l5934 297A                                                  l5918 2D5A  
                                                l6558 152A                                                  l6478 3A7C  
                                                l6654 34E6                                                  l6646 34C4  
                                                l6638 34B8                                                  l6670 3BC8  
                                                l5952 331A                                                  l5944 32D8  
                                                l6496 2A58                                                  l6488 2A02  
                                                l6592 3D04                                                  l6584 33E2  
                                                l6576 33D6                                                  l5872 3AB6  
                                                l5864 2808                                                  l5856 27CC  
                                                l5848 27A8                                                  l5936 29A0  
                                                l5928 28F4                                                  l6656 34EC  
                                                l6648 34D8                                                  l6672 3BD0  
                                                l5970 2326                                                  l5882 3454  
                                                l5866 3B66                                                  l5946 32E6  
                                                l5962 3782                                                  l5954 374E  
                                                l6498 2A66                                                  l6594 3D08  
                                                l6586 33F2                                                  l6578 33DA  
                                                l5858 27D2                                                  l5938 29C4  
                                                l6658 34F0                                                  l6674 3BD4  
                                                l5972 2334                                                  l5980 1F3A  
                                                l5868 3B76                                                  l5948 32FA  
                                                l5956 375E                                                  l6596 3D0C  
                                                l6676 3BDC                                                  l5894 39A8  
                                                l5886 3980                                                  l5966 33F6  
                                                l5974 2336                                                  l5990 1F98  
                                                l5982 1F4A                                                  l6598 3AF6  
                                                l5878 3ACC                                                  l6678 3BE0  
                                                l6694 386E                                                  l5888 3990  
                                                l5968 3430                                                  l5976 23B2  
                                                l5992 1FBE                                                  l5984 1F74  
                                                l6696 3872                                                  l5978 23B8  
                                                l5898 37C2                                                  l5994 1FC2  
                                                l5986 1F7C                                                  l6698 3874  
                                                l5996 1FE0                                                  l5998 1FF6  
                                                l6798 30A2                         ?_Button_Reading_Update_Helper 0018  
                                                _LATA 0F82                                                  _LATB 0F83  
                                                _LATC 0F84                                                  _LATD 0F85  
                                                _LATE 0F86                                                  u3300 1C28  
                                                u3205 306C                                                  u3301 1C24  
                                                u3206 306E                                                  u3230 3C1E  
                                                u3215 307A                                                  u3231 3C18  
                                                u3216 307C                                                  u3240 3C00  
                                                u4200 36C4                                                  u5000 27C0  
                                                u3225 3088                                                  u3241 3BFA  
                                                u4201 36C0                                                  u5001 27BC  
                                                u3170 3B52                                                  u3226 308A  
                                                u3250 1AEC                                                  u5010 27E2  
                                                _T2PR 0FBB                                                  u3171 3B4E  
                                                u3251 1AE8                                                  u5011 27DE  
                                                u4300 174A                                                  u3236 3C20  
                                                u3260 1B24                                                  u5020 27F0  
                                                u5100 2D1E                                                  u4301 1746  
                                                u3261 1B20                                                  u5021 27EC  
                                                u5101 2D1A                                                  u4310 1778  
                                                u3246 3C02                                                  u3270 1B52  
                                                u5030 2808                                                  u5110 2D2C  
                                                u4311 1774                                                  u3271 1B4E  
                                                u5031 2804                                                  u5111 2D28  
                                                u4400 189E                                                  u4320 178E  
                                                u5200 2362                                                  u5040 3B76  
                                                u6000 1CFA                                                  u3280 1B98  
                                                u5120 2D5A                                                  u4401 189A  
                                                u4321 178A                                                  u5041 3B72  
                                                u3185 3050                                                  u6001 1CF6  
                                                u3281 1B94                                                  u5121 2D56  
                                                u4410 18CC                                                  u4330 17BC  
                                                u5210 23E4                                                  u3186 3052  
                                                u3290 1BF6                                                  u5050 3AB6  
                                                u5130 2D88                                                  u4411 18C8  
                                                u4331 17B8                                                  u3195 305E  
                                                u3291 1BF2                                                  u5051 3AB2  
                                                u5131 2D84                                                  u4340 17D2  
                                                u4500 1978                                                  u5300 2E70  
                                                u5060 3480                                                  u5220 1F94  
                                                u3196 3060                                                  u5140 290A  
                                                u6100 12AA                                                  u4341 17CE  
                                                u4501 1974                                                  u5301 2E6C  
                                                u5205 2358                                                  u5221 1F90  
                                                u5141 2906                                                  u6101 12A6  
                                                u4350 1800                                                  u4510 19A6  
                                                u5070 3990                                                  u5230 1FBA  
                                                u6030 397C                                                  u4190 369E  
                                                u5310 20FE                                                  u6110 12D6  
                                                u4351 17FC                                                  u4511 19A2  
                                                u5071 398C                                                  u5215 23DA  
                                                u5231 1FB6                                                  u6031 3978  
                                                u6015 1D90                                                  u4191 369A  
                                                u5311 20FA                                                  u6111 12D2  
                                                u4360 1816                                                  u4520 19EE  
                                                u5080 37D2                                                  u5240 1FE0  
                                                u5160 375E                                                  u6040 3912  
                                                u5400 2E4A                                                  u5320 2122  
                                                u6200 14EE                                                  u6120 12F2  
                                                u4361 1812                                                  u4521 19EA  
                                                u5065 3476                                                  u5081 37CE  
                                                u5241 1FDC                                                  u5225 1F86  
                                                u5161 375A                                                  u6041 390E  
                                                u6025 1DAC                                                  u5401 2E46  
                                                u5321 211E                                                  u6201 14EA  
                                                u6121 12EE                                                  u4370 1844  
                                                u4530 1A2A                                                  u5090 37F0  
                                                u5250 1FF6                                                  u5170 377C  
                                                u3730 3174                                                  u6026 1DAE  
                                                u5410 2AC8                                                  u5154 2948  
                                                u5330 2152                                                  u6050 3AA2  
                                                u4371 1840                                                  u4531 1A26  
                                                u5091 37EA                                                  u5251 1FF2  
                                                u5171 3776                                                  u3731 3170  
                                                u5411 2AC4                                                  u5155 2942  
                                                u5331 214E                                                  u6051 3A9E  
                                                u4380 185A                                                  u4460 1902  
                                                u5260 2014                                                  u6060 2A02  
                                                u6220 33AC                                                  u5420 2AE4  
                                                u5340 218C                                                  u6140 1382  
                                                u6300 34D8                                                  u4381 1856  
                                                u4461 18FE                                                  u5261 2010  
                                                u6061 29FE                                                  u6221 33A8  
                                                u5421 2AE0                                                  u5341 2188  
                                                u6141 137E                                                  u6301 34D4  
                                                u4390 1888                                                  u4470 1918  
                                                u5190 2334                                                  u5270 205E  
                                                u6070 2A24                                                  u6230 33C2  
                                                u3830 351A                                                  u5430 2B30  
                                                u5350 21BC                                                  u6150 13A2  
                                                u6134 1324                                                  u4391 1884  
                                                u4295 39D6                                                  u4471 1914  
                                                u5191 2330                                                  u5271 205A  
                                                u6071 2A20                                                  u6231 33BE  
                                                u3831 3516                                                  u5431 2B2C  
                                                u5351 21B8                                                  u6151 139E  
                                                u6135 131E                                                  u4480 193C  
                                                u5096 37F2                                                  u5280 207C  
                                                u5176 377E                                                  u6080 2A58  
                                                u6240 33D6                                                  u3840 3B2E  
                                                u5440 2B60                                                  u5520 1080  
                                                u5504 1008                                                  u5360 2682  
                                                u6160 13DA                                                  u4481 1938  
                                                u5185 343E                                                  u5281 2078  
                                                u6081 2A54                                                  u6241 33D2  
                                                u3841 3B2A                                                  u5441 2B5C  
                                                u5521 107C                                                  u5505 1002  
                                                u5361 267E                                                  u6161 13D6  
                                                u4490 195A                                                  u5290 20A0  
                                                u6250 33F2                                                  u5450 2BCA  
                                                u5610 1252                                                  u5530 109C  
                                                u5514 1038                                                  u5370 2696  
                                                u6218 150A                                                  u6170 1444  
                                                u4491 1956                                                  u5291 209C  
                                                u6251 33EE                                                  u5451 2BC6  
                                                u5611 124E                                                  u5531 1098  
                                                u5515 1032                                                  u5371 2692  
                                                u6219 1524                                                  u6171 1440  
                                                u5700 22D0                                                  u6260 3B0A  
                                                u5460 2BE6                                                  u5604 1228  
                                                u5540 10F8                                                  u5380 26B0  
                                                u6180 1456                                                  u5701 22CC  
                                                u6261 3B06                                                  u5461 2BE2  
                                                u5605 1222                                                  u5541 10F4  
                                                u5381 26AC                                                  u6181 1452  
                                                u5710 2304                                                  u6270 3BA8  
                                                u3950 3C3E                                                  u5630 38B8  
                                                u5390 2DF6                                                  u5470 2C20  
                                                u5550 111C                                                  u6190 1486  
                                                u5711 2300                                                  u5295 2092  
                                                u6271 3BA4                                                  u3951 3C3A  
                                                u5631 38B4                                                  u5391 2DF2  
                                                u5471 2C1C                                                  u5551 1118  
                                                u6191 1482                                                  u5720 283A  
                                                u5800 16B0                                                  u5640 3596  
                                                u3960 3652                                                  u5624 126A  
                                                u5560 113E                                                  u5480 0FCE  
                                                u6280 3AF4                                                  u5721 2836  
                                                u5801 16AC                                                  u5641 3592  
                                                u3961 364E                                                  u5625 1264  
                                                u5561 113A                                                  u5481 0FCA  
                                                u6281 3AF0                                                  u5730 288C  
                                                u5810 16CC                                                  u5650 3798  
                                                u6098 2A8C                                                  u3970 367C  
                                                u5570 1184                                                  u5490 0FF2  
                                                u6290 34B8                                                  u5731 2888  
                                                u5811 16C8                                                  u5651 3794  
                                                u6099 2AA0                                                  u3971 3678  
                                                u5571 1180                                                  u5491 0FEE  
                                                u6291 34B4                                                  u5740 28B8  
                                                u5820 1716                                                  u5660 37B6  
                                                u5900 3742                                                  u5580 119A  
                                                u5821 1712                                                  u5661 37B0  
                                                u5901 373C                                                  u5581 1196  
                                                u5670 3A28                                                  u5830 2458  
                                                u5750 1582                                                  u5910 3744  
                                                u5671 3A24                                                  u5831 2454  
                                                u5751 157E                                                  u5680 2228  
                                                u5760 15B8                                                  u5920 2F5C  
                                                u4960 274E                                                  u5745 28AE  
                                                u5761 15B4                                                  u5921 2F58  
                                                u4961 274A                                                  u5850 24E0  
                                                u5770 1616                                                  u5666 37B8  
                                                u5930 2F9A                                                  u4970 276C  
                                                u5594 1202                                                  u5851 24DC  
                                                u5771 1612                                                  u5931 2F96  
                                                u4971 2768                                                  u5595 11FC  
                                                u5780 1632                                                  u4980 277C  
                                                u5940 2FE0                                                  u5685 221E  
                                                u5781 162E                                                  u4981 2778  
                                                u5941 2FDC                                                  u5790 164E  
                                                u5950 1C52                                                  u4990 279A  
                                                u5870 334C                                                  u5695 2286  
                                                u5791 164A                                                  u5951 1C4E  
                                                u4991 2796                                                  u5871 3348  
                                                u5696 2290                                                  u5848 246C  
                                                u5960 1C78                                                  u5880 337C  
                                                u5697 22A0                                                  u5849 248C  
                                                u5961 1C74                                                  u5881 3378  
                                                u5970 1C8E                                                  u5890 371E  
                                                u5971 1C8A                                                  u5891 371A  
                                                u5868 251A                                                  u5980 1C9E  
                                                u5869 253A                                                  u5981 1C9A  
                                                u5990 1CC0                                                  u5991 1CBC  
                          Button_State_Pressed@button 0028                                                  _TMR2 0FBA  
                                                _WPUA 0F0B                                                  _WPUB 0F13  
                                                _WPUC 0F1B                                                  _WPUD 0F20  
                                                _WPUE 0F28                                   _sensor_medianBuffer 0060  
                                  _MTOUCH_needReburst 3DDA                                                  abs@a 0001  
                                                _main 386E                                                  fsr1h 0FE2  
                                                fsr2h 0FDA                                                  indf1 0FE7  
                                                indf2 0FDF                                                  fsr1l 0FE1  
                                                fsr2l 0FD9                                                  btemp 004B  
                      get_difference@current_position 0019                           moving_average_filter@slider 0022  
                                          _ClearEvent 3DAC                             ?_INT2_SetInterruptHandler 0015  
                                                prodh 0FF4                                                  prodl 0FF3  
                                                start 0096                             ??_Sensor_FrequencyHopping 0015  
                                 ?_MTOUCH_needReburst 0001                  MTOUCH_Slider_Position_Get@sliderName 0017  
                                        ___param_bank 0000                                         ?_medianFilter 0015  
                    __end_of_MTOUCH_Slider_ServiceAll 3AF6                                  get_difference@slider 0015  
                            ?_MTOUCH_Service_Mainloop 0001                               ?_Button_Check_AKS_Block 001D  
                                               ??_abs 0003                             __end_of_Slider_FindMiddle 2E54  
              MTOUCH_Sensor_isSamplingComplete@sensor 0020                           ?_Button_Baseline_Initialize 0018  
                       ??_MTOUCH_Sensor_RawSample_Get 0017                         Sensor_RawSample_Update@sensor 001C  
                       Sensor_RawSample_Update@result 001D                               __end_of_ApplicationTask 1A9E  
                                   _Slider_Initialize 3162                   __end_of_Sensor_isCalibratingAcqTime 3C04  
                      ?i2_Sensor_isCalibratingAcqTime 0001                           _Sensor_isCalibratingAcqTime 3BE6  
                                               _ADACC 0F6B                                                 _ADACQ 0F57  
                                               _ADCAP 0F58                                                 _ADACT 0F51  
                                               ?_main 0001                                                 _ADCLK 0F52  
                                               _ADCNT 0F62                                                 _ADPCH 0F5A  
                                               _ADREF 0F53                                                 _ADPRE 0F59  
                                               _ADRPT 0F61                                                 _T2CON 0FBC  
                                               _IOCAF 0F05                                                 _T2HLT 0FBD  
                                               _IOCBF 0F0D                                                 _IOCCF 0F15  
                                               _IOCAN 0F06                                                 _IOCEF 0F22  
                                               _IOCAP 0F07                                                 _IOCBN 0F0E  
                                               _IOCBP 0F0F                                                 _IOCCN 0F16  
                                               _IOCCP 0F17                                                 _IOCEN 0F23  
                                               _IOCEP 0F24                            _ADCC_ADTI_InterruptHandler 00FD  
                                               _T2TMR 0FBA                                                 _T2RST 0FBF  
                                               i2l232 3948                                                 i2l238 3DEA  
                                               i2l360 0048                                                 i2l365 007A  
                                               i2l366 007A                                                 i2l996 3DE8  
                                               _OSCEN 0ED7                                    _PWM4_LoadDutyValue 39B2  
                                  ?_Slider_Initialize 0001                                                 _TRISA 0F87  
                                               _TRISB 0F88                                                 _TRISC 0F89  
                                               _TRISD 0F8A                                                 _TRISE 0F8B  
                   MTOUCH_Slider_InitializeAll@slider 0018                                   i2_Sensor_SetTrisBit 30D2  
                                ??_MTOUCH_needReburst 0015                               __end_of_PIN_MANAGER_IOC 3DEA  
               __end_of_MTOUCH_Sensor_Scan_Initialize 3DCE                         _MTOUCH_Sensor_Scan_Initialize 3DC8  
                             Sensor_setSampled@sensor 0001                                 ??_ProcessSliderChange 0018  
                     __end_of_Sensor_scheduleNextScan 1DB4                                   ?_PWM4_LoadDutyValue 0015  
                                 ??_Slider_Initialize 0015                                                 _state 0035  
                            _INT1_SetInterruptHandler 3D40                              ??_calculate_raw_position 002B  
                                               pclath 0FFA                                                 pclatu 0FFB  
                                         _ClearButton 3DB4                                                 tablat 0FF5  
                              ??_ADCC_DefaultADTI_ISR 0001                                  _Sensor_Sampled_Reset 3D78  
                                               plusw2 0FDB                moving_average_filter@filtered_position 0028  
                                               ttemp5 004C                                                 ttemp6 004F  
                                               ttemp7 0053                    __end_of_MTOUCH_Slider_Position_Get 38DE  
                          _MTOUCH_Slider_Position_Get 38A6                                                 status 0FD8  
                                               wtemp8 004C                                        divide@exponent 0019  
                              ?i2_Sensor_isCalibrated 0001                                  ?i2_Sensor_SetTrisBit 0001  
                                    __end_of_GetEvent 3DD4                                          ?_interpolate 001C  
                                      ??_medianFilter 0017                                       __initialization 31EE  
                              _Sensor_setSamplePeriod 3B1C                        __end_of_Button_Check_AKS_Block 20A4  
                                        __end_of_main 38A6                                  _Sensor_setCalibrated 3CB4  
                                ??_PWM4_LoadDutyValue 0017                             __end_of_Slider_Initialize 31EE  
                             __end_of_PWM4_Initialize 3CFC                               __end_of_TMR2_Initialize 3A78  
                         ?_INTERRUPT_InterruptManager 0001                      __end_of_MTOUCH_Button_Initialize 332E  
                                              ??_main 0033                                      ??_get_difference 001B  
                                       __activetblptr 0003                               _MTOUCH_Sensor_Calibrate 3B64  
                             ??_Button_Reading_Update 001E                      __end_of_ADCC_ThresholdISR_mTouch 3DAC  
                MTOUCH_Sensor_Sampled_ResetAll@sensor 0017                              ?_Button_Deviation_Update 0015  
                                        ?_MTOUCH_Tick 0001                          Button_Baseline_Update@button 0015  
                                              _ADACCH 0F6C                                                _ADACCL 0F6B  
                                              _ADCON0 0F5B                                                _ADCON1 0F54  
                                              _ADCON2 0F55                                                _ADCON3 0F56  
                                              _ADFLTR 0F6D                                                _ADERRH 0F6A  
                                              _ADERRL 0F69                                                _ADLTHH 0F66  
                                              _ADLTHL 0F65                                                _ADRESH 0F5F  
                                              _ADRESL 0F5E                                                _ADSTAT 0F60  
                                              _ADUTHH 0F68                                                _ADUTHL 0F67  
                                   interpolate@delta1 001C                                     interpolate@delta2 001E  
                                   interpolate@delta3 0020                                                _ANSELA 0F0C  
                                              _ANSELB 0F14                                                _ANSELC 0F1C  
                                              _ANSELD 0F21                                                _ANSELE 0F29  
                                              _RA3PPS 0EE5                           positional_hysteresis@slider 0022  
                               __end_of_GetMotorSpeed 18EA                                                _ODCONA 0F0A  
                                              _ODCONB 0F12                                                _ODCONC 0F1A  
                                              _ODCOND 0F1F                                                _ODCONE 0F27  
                                              i2l1140 30F4                                                i2l1141 3102  
                                              i2l1142 3110                                                i2l1214 3DAA  
                                              i2l1144 3160                                                i2l1312 3C98  
                                              i2l1137 30D8                                                i2l1321 3C7A  
                                              i2l1217 255E                                                i2l1330 3832  
                                              i2l1226 2636                                                i2l1315 3CCC  
                                              i2l1139 30E6                                                _BUTTON 008D  
                                              i2l1190 1F38                                                i2l1337 3DA0  
                                              i2l1282 386C                                                i2l2271 3A00  
                                              i2l5000 1EF2                                                i2l2274 3A18  
                                              i2l5010 1F34                                                i2l5002 1EFC  
                                              i2l5004 1EFE                                                i2l5006 1F02  
                                              i2l5008 1F2A                                                i2l5210 2556  
                                              i2l5220 2598                                                i2l5212 2562  
                                              i2l5222 25D2                                                i2l5214 256C  
                                              i2l5230 261A                                                i2l5206 253C  
                                              i2l5232 262A                                                i2l5224 25E6  
                                              i2l5216 2584                                                i2l5208 2546  
                                              i2l5234 2632                                                i2l5226 25F6  
                                              i2l5218 2590                                                i2l5314 3DA2  
                                              i2l5410 3914                                                i2l4700 3830  
                                              i2l5228 2606                                                i2l5316 3DA6  
                                              i2l5412 3918                                                i2l5414 392E  
                                              _INLVLA 0F08                                                _INLVLB 0F10  
                               ?_Sensor_Sampled_Reset 0015                                                _INLVLC 0F18  
                                              _INLVLD 0F1D                                                _INLVLE 0F25  
                                              i2l4662 30D4                                                i2l5550 0040  
                                              i2l4680 386A                                                i2l4672 3836  
                                              i2l5552 0056                                                i2l4674 3846  
                                              i2l4666 311E                                                i2l5554 0064  
                                              i2l5546 0022                                                i2l4692 37FC  
                                              i2l4684 3C7C                                                i2l5556 0072  
                                              i2l5548 0032                                                i2l4934 39E6  
                                              i2l4694 380C                                                i2l4952 3D94  
                                              i2l4936 39F4                                                i2l4688 3C5E  
                                              i2l4938 3CB4                                                i2l4970 1DE8  
                                              i2l6804 3132                                                i2l4980 1E46  
                                              i2l4972 1DFE                                                i2l4964 1DB4  
                                              i2l4990 1EB0                                                i2l4982 1E68  
                                              i2l4974 1E14                                                i2l4966 1DC4  
                                              i2l4992 1EBE                                                i2l4984 1E80  
                                              i2l4976 1E24                                                i2l4968 1DD8  
                                              i2l4994 1EDE                                                i2l4986 1EA2  
                                              i2l4978 1E2E                                                i2l4996 1EEC  
                                              i2l4988 1EAC                                                i2l4998 1EEE  
                           ProcessSliderChange@slider 0001                   __end_of_MTOUCH_Slider_InitializeAll 3C40  
                         _MTOUCH_Slider_InitializeAll 3C22                                                _OSCFRQ 0ED9  
                                   interpolate@rtnval 0027                     MTOUCH_Button_InitializeAll@button 001E  
                                         ?_ClearEvent 0001                        ??_Button_Reading_Update_Helper 001A  
                               ??i2_Sensor_SetTrisBit 0002                                _Button_DefaultCallback 3DE6  
                     __end_of_MTOUCH_Service_Mainloop 34F8                                   _Sensor_isCalibrated 3C04  
                                              _Timer2 0F01                           MTOUCH_Sensor_Service@sensor 000E  
                              _Sensor_DefaultCallback 3DE4                                         _packet_sample 007E  
                               ?_Sensor_setCalibrated 0001                                     _ADCC_ThresholdISR 3914  
                        _TMR2_DefaultOverflowCallback 0000                          Sensor_DefaultCallback@sensor 0001  
                       __end_of_moving_average_filter 2732                                                _divide 2732  
                                              _memcpy 3548                                    ?_ADCC_ThresholdISR 0001  
                                              clear_0 3234                                                clear_1 3240  
                                              clear_2 324C                      __end_of_MTOUCH_Button_ServiceAll 3BAA  
                                              isa$std 0001                                      ?_ApplicationTask 0001  
                            _MTOUCH_Slider_ServiceAll 3AD0                         __end_of_MTOUCH_Sensor_Service 2638  
                                   ?_CLOCK_Initialize 0001                        i2Sensor_scheduleNextScan@state 0009  
                                     _ADCC_Initialize 325C                          _INT2_DefaultInterruptHandler 0000  
                                       _middle_signal 0037                               _MTOUCH_Sensor_SampleAll 3AF6  
                                  ??_CLOCK_Initialize 0015                          Button_DefaultCallback@button 0001  
                                 ??_ADCC_ThresholdISR 000F                                          __mediumconst 0000  
                                ?_Sensor_isCalibrated 0015                                                tblptrh 0FF7  
                                              tblptrl 0FF6                                                tblptru 0FF8  
                            ?_Sensor_RawSample_Update 001C                               ?_Button_Baseline_Update 0015  
            INT2_SetInterruptHandler@InterruptHandler 0015              INT1_SetInterruptHandler@InterruptHandler 0015  
            INT0_SetInterruptHandler@InterruptHandler 0015          ADCC_SetADTIInterruptHandler@InterruptHandler 0015  
                                    ?_PIN_MANAGER_IOC 0001                    calculate_contact_size@contact_size 0026  
                     MTOUCH_Sensor_RawSample_Get@name 0017                              __end_of_Slider_FindRight 2C32  
                                   _SYSTEM_Initialize 3BC8                                            __accesstop 0060  
                             __end_of__initialization 3252                        ?_MTOUCH_Sensor_Scan_Initialize 0001  
                                  ?_SYSTEM_Initialize 0001                                   _Button_StateMachine 00CD  
                                   __end_of_GetButton 3DDA                                         ___rparam_used 0001  
                          __end_of_Button_Tick_helper 3392                                     ??_Slider_FindLeft 0018  
                       Slider_FindMiddle@channelDelta 001D              calculate_raw_position@interpolation_bits 00F1  
                       MTOUCH_Sensor_Calibrate@sensor 0015                             __end_of_ADCC_ThresholdISR 394A  
                           ?_MTOUCH_Sensor_isSampling 0001                                        __pcstackCOMRAM 0001  
                                      _Slider_Service 1288                               _MTOUCH_Button_isPressed 370C  
                                        __pidataBANK0 3BAA                                          __pidataBANK1 3D12  
         __end_of_MTOUCH_Button_SetNotPressedCallback 3D94                 ??_MTOUCH_Button_SetNotPressedCallback 0018  
                ?_MTOUCH_Button_SetNotPressedCallback 0015                   _MTOUCH_Button_SetNotPressedCallback 3D86  
                                     divide@numerator 0015                                   ??_SYSTEM_Initialize 001F  
                      ?_Button_Unscaled_Deviation_Get 0015                            __end_of_MTOUCH_Button_Tick 3AA4  
                    __end_of_MTOUCH_Sensor_Initialize 3C5E                             ??_MTOUCH_Sensor_Calibrate 0015  
                                    ?_PWM4_Initialize 0001                                      ?_TMR2_Initialize 0001  
                        ??i2_MTOUCH_Sensor_wasSampled 0001                              calculate_position@slider 0031  
                     __end_of_Button_Deviation_Update 2326                           PWM4_LoadDutyValue@dutyValue 0015  
                                      _Button_Service 29CE                            ?_Button_State_Initializing 0028  
                                Button_Service@button 0031                               ??_positional_hysteresis 0026  
                               ??_Sensor_isCalibrated 0016                        __end_of_Button_Baseline_Update 2436  
                             ?_calculate_contact_size 0022                      __end_of_INT2_SetInterruptHandler 3D40  
                            _MTOUCH_Button_Initialize 32C6                       ??_TMR2_OverflowCallbackRegister 0018  
                            ??_Slider_DefaultCallback 0015                                             ?_GetEvent 0001  
                                __end_of_medianFilter 1C2E                               _Button_State_NotPressed 154A  
                           __end_of_SYSTEM_Initialize 3BE6                                     _lowpowerActivated 0042  
                    MTOUCH_Sensor_isCalibrated@sensor 0015                                ??_Sensor_Sampled_Reset 0016  
                            _ADCC_ThresholdISR_mTouch 3DA2                                            __pbssBANK0 0060  
                                          __pbssBANK1 0100                            ?i2_MTOUCH_Sensor_isEnabled 0001  
                             _MTOUCH_Sensor_isEnabled 37C0                                 _INT0_InterruptHandler 0097  
                  calculate_raw_position@deadband_set 00EC                            __end_of_mtouch_button_init 0F68  
                              __end_of_Slider_Service 154A                                ??_Sensor_setCalibrated 0002  
                 calculate_position@filtered_position 0168                               Sensor_SetTrisBit@sensor 0018  
                             __end_of_ADCC_Initialize 32C6                        MTOUCH_Sensor_wasSampled@sensor 0015  
                    i2MTOUCH_Sensor_wasSampled@sensor 0001                                               ?_divide 0015  
                                             _ADFLTRH 0F6E                                               _ADFLTRL 0F6D  
                              __end_of_Button_Service 2AA2                                               ?_memcpy 0015  
                              _calculate_raw_position 0F9C                                               _ADPREVH 0F5D  
                                             _ADPREVL 0F5C                   __end_of_MTOUCH_Button_InitializeAll 3914  
                         _MTOUCH_Button_InitializeAll 38DE                  __end_of_ADCC_SetADTIInterruptHandler 3D78  
                        _ADCC_SetADTIInterruptHandler 3D6A                                               _ADSTPTH 0F64  
                                             _ADSTPTL 0F63                   __end_of_MTOUCH_Sensor_InitializeAll 397E  
                         _MTOUCH_Sensor_InitializeAll 394A                             ??_MTOUCH_Sensor_SampleAll 0021  
                     __end_of_Sensor_RawSample_Update 3548                             ?_MTOUCH_Sensor_wasSampled 0001  
                      __end_of_calculate_contact_size 2FAC                             Sensor_isCalibrated@sensor 0015  
                          ??_INT1_SetInterruptHandler 0018                     __end_of_Button_State_Initializing 28F4  
                            _MTOUCH_Button_ServiceAll 3B88                            calculate_raw_position@size 00F2  
                                             _OSCCON1 0ED3                                               _OSCCON3 0ED5  
                                          ??_GetEvent 0015                                               _OSCTUNE 0ED8  
                                             _PWM4DCH 0FA0                                               _PWM4DCL 0F9F  
                                             _PWM4CON 0FA1                                               _SLRCONA 0F09  
                                             _SLRCONB 0F11                                               _SLRCONC 0F19  
                                             _SLRCOND 0F1E                                               _SLRCONE 0F26  
                        __end_of_Button_State_Pressed 253C                          ?_MTOUCH_Button_Deviation_Get 0001  
                          i2Sensor_SetTrisBit@TrisBit 0001                      Button_Baseline_Initialize@button 0018  
                        __end_of_ProcessButtonRelease 3634                                          ?_ClearButton 0001  
                     ??i2_Sensor_isCalibratingAcqTime 0002                               ??i2_Sensor_isCalibrated 0002  
                   __end_ofi2_MTOUCH_Sensor_isEnabled 386E                 positional_hysteresis@current_position 0024  
                         ?_MTOUCH_Slider_Position_Get 0015                             ?_INT0_SetInterruptHandler 0015  
                             ?_Sensor_setSamplePeriod 0001                             ??_MTOUCH_Button_isPressed 0015  
                                          _freq_index 0041                                       ?_Slider_Service 0001  
                                             __Hparam 0000                                     _Sensor_SetTrisBit 3042  
                                             __Lparam 0000      MTOUCH_Slider_SetPositionChangedCallback@callback 0015  
                                  ?_Sensor_SetTrisBit 0015      __end_of_MTOUCH_Slider_SetPositionChangedCallback 3D6A  
          ??_MTOUCH_Slider_SetPositionChangedCallback 0018             ?_MTOUCH_Slider_SetPositionChangedCallback 0015  
            _MTOUCH_Slider_SetPositionChangedCallback 3D5C                        MTOUCH_Button_Initialize@button 0017  
                                        __psmallconst 0F00                                       ?_Button_Service 0001  
                                             __pcinit 31EE                                               __ramtop 0F00  
                                     _scanInterrupted 0043                                               __ptext0 386E  
                                             __ptext1 3BC8                                               __ptext2 3A4A  
                                             __ptext3 3D24                                               __ptext4 3CE6  
                                             __ptext5 2C32                                               __ptext6 36C6  
                                             __ptext7 3D32                                               __ptext8 3D40  
                                             __ptext9 3D4E                           Button_Reading_Update@button 001C  
                                 ??_Sensor_SetTrisBit 0016                         ?_ADCC_SetADTIInterruptHandler 0015  
                            _MTOUCH_Sensor_Initialize 3C40                           __end_of_ProcessSliderChange 3CB4  
                                           _T2CONbits 0FBC                            __end_of_calculate_position 3042  
                           ??_Button_State_NotPressed 002A                              ??_PIN_MANAGER_Initialize 0015  
                                           _T2HLTbits 0FBD                               Slider_Initialize@slider 0016  
                       __end_of_Button_Reading_Update 3A4A                     MTOUCH_Sensor_InitializeAll@sensor 001E  
                                    _callback_sampled 00D9                             ??_MTOUCH_Sensor_isEnabled 0015  
       TMR2_OverflowCallbackRegister@InterruptHandler 0015                          Button_Check_AKS_Block@button 001D  
                                    _callback_pressed 00E8                        MTOUCH_Sensor_Initialize@sensor 0016  
                       Sensor_scheduleNextScan@sensor 001F                       i2Sensor_scheduleNextScan@sensor 000B  
                                end_of_initialization 3252                              Slider_Service@sliderName 0173  
                       ??_MTOUCH_Button_Deviation_Get 0015                                             _T2RSTbits 0FBF  
                            _INT2_SetInterruptHandler 3D32                              Slider_FindRight@ref_node 001F  
                             ?_Button_DefaultCallback 0001                                               memcpy@d 001B  
                                             memcpy@n 0018                                               memcpy@s 001D  
                      __end_of_Sensor_setSamplePeriod 3B40                            __end_of_mtouch_sensor_init 0F9A  
                            ?_Sensor_FrequencyHopping 0001                                          ??_ClearEvent 0015  
                           __end_of_Sensor_SetTrisBit 30D2                        calculate_position@raw_position 016A  
                                 GetMotorSpeed@adcVal 0015                               ?_Sensor_DefaultCallback 0001  
                        calculate_raw_position@slider 0029                         positional_hysteresis@distance 002F  
                        ??_MTOUCH_Sensor_isCalibrated 0015                            ??_MTOUCH_Slider_ServiceAll 0033  
                                 GetMotorSpeed@retVal 0017                   __end_of_MTOUCH_Sensor_RawSample_Get 39B2  
                         _MTOUCH_Sensor_RawSample_Get 397E                          calculate_contact_size@slider 0022  
                                          _resol_bits 004A                                               postdec1 0FE5  
                                             postdec2 0FDD                                               postinc0 0FEE  
                                             postinc1 0FE6                                               postinc2 0FDE  
                                          _motorState 0033                            ?i2_Sensor_scheduleNextScan 0001  
                             _Sensor_scheduleNextScan 1C2E                                   _mtouch_request_init 0048  
                                    ?_ADCC_Initialize 0001                    __end_ofi2_MTOUCH_Sensor_wasSampled 3834  
                          i2_MTOUCH_Sensor_wasSampled 37FA                                 _INT1_InterruptHandler 0094  
                                           _TMR2_Stop 0000                         positional_hysteresis@polarity 002E  
                                  __end_of_ClearEvent 3DB4                         Button_Deviation_Update@button 0015  
                                           _TRISAbits 0F87                                             _TRISBbits 0F88  
                                           _TRISDbits 0F8A                         MTOUCH_Sensor_isEnabled@sensor 0015  
                     i2MTOUCH_Sensor_isEnabled@sensor 0001                            MTOUCH_Sensor_Enable@sensor 0015  
                                     _Slider_FindLeft 2AA2                                   _callback_notPressed 00E5  
                    __end_of_MTOUCH_Sensor_isSampling 3DE2                        __end_of_Button_DefaultCallback 3DE8  
                         __end_ofi2_Sensor_SetTrisBit 3162                     Slider_Service@valid_contact_found 016D  
                                   ?_Slider_FindRight 0016                                    get_difference@diff 0020  
                          Sensor_setCalibrated@sensor 0001                        __end_of_Sensor_DefaultCallback 3DE6  
                                  ??_Slider_FindRight 0018             calculate_raw_position@interpolation_scale 00EE  
                                  medianFilter@sensor 001B                        moving_average_filter@dist_temp 002C  
               __end_ofi2_Sensor_isCalibratingAcqTime 3C7C                         i2_Sensor_isCalibratingAcqTime 3C5E  
                              _Slider_DefaultCallback 3DE2                                             _GetButton 3DD4  
                                        _medianFilter 1A9E                                        __end_of_Timer2 0F13  
                        __end_of_INTERRUPT_Initialize 370C                                  _Button_State_Pressed 2436  
                        _INT0_DefaultInterruptHandler 0000                 __end_of_MTOUCH_Sensor_ADCC_Initialize 35E6  
                       _MTOUCH_Sensor_ADCC_Initialize 3598                     __end_ofi2_Sensor_scheduleNextScan 1F3A  
                          ??_MTOUCH_Button_Initialize 0016                                  _ProcessButtonRelease 35E6  
         MTOUCH_Button_SetNotPressedCallback@callback 0015                       ??_MTOUCH_Sensor_Scan_Initialize 0018  
                                      __end_of_divide 2816                                 _moving_average_filter 2638  
                                  _Button_Tick_helper 332E                                        __end_of_memcpy 3598  
                                 MTOUCH_Button_Tick@i 0019                            ??_ADCC_ThresholdISR_mTouch 000F  
                         ??_Button_State_Initializing 002A                                 _MTOUCH_Sensor_Service 253C  
                                 start_initialization 31EE                               _MTOUCH_Service_Mainloop 34A8  
                                  _MTOUCH_Button_Tick 3A78                       ??_Button_Unscaled_Deviation_Get 0017  
                                 ?_Button_Tick_helper 0015                                           __end_of_abs 3A1A  
                       __end_of_positional_hysteresis 21FC                       __end_of_Sensor_FrequencyHopping 3DC8  
                         ??i2_MTOUCH_Sensor_isEnabled 0001                                   ?_MTOUCH_Button_Tick 0001  
                     Button_State_Initializing@button 0028                              ??_Button_Check_AKS_Block 001F  
                             medianFilter@bufferIndex 0088                      _wheel_sensor_middle_channel_zero 0046  
                    __end_of_MTOUCH_Sensor_wasSampled 3786                             ??_Sensor_scheduleNextScan 0019  
                                ??_Button_Tick_helper 0017                          __end_of_MTOUCH_Sensor_Enable 3B64  
                     get_difference@previous_position 0017                               ?_calculate_raw_position 0029  
                                          ?_GetButton 0001                                 ?_Button_State_Pressed 0028  
                                         _CCPTMRSbits 0FAD                                              ??_divide 001A  
                               ?_ProcessButtonRelease 0001                            ??_MTOUCH_Button_ServiceAll 0033  
                                         __pdataBANK0 00CD                                           __pdataBANK1 0155  
                                            ??_memcpy 001A                            ProcessButtonRelease@button 0017  
                         __end_of_Sensor_isCalibrated 3C22                          ??_Button_Baseline_Initialize 001A  
                              Slider_FindRight@slider 0016                                  ??_MTOUCH_Button_Tick 0019  
                                  _mtouch_button_init 0F13                            Sensor_Sampled_Reset@sensor 0015  
                             __end_of_Slider_FindLeft 2B72                          ?_Sensor_isCalibratingAcqTime 0015  
                                         __pbssCOMRAM 0033                      __end_of_INT0_SetInterruptHandler 3D5C  
                                       _sampling_flag 0044                                         __pcstackBANK0 00EB  
                                       __pcstackBANK1 0166              __end_of_MTOUCH_Sensor_isSamplingComplete 33F6  
                  ??_MTOUCH_Sensor_isSamplingComplete 0020                     ?_MTOUCH_Sensor_isSamplingComplete 0001  
                    _MTOUCH_Sensor_isSamplingComplete 3392                               Slider_FindLeft@ref_node 0019  
                            Sensor_SetTrisBit@TrisBit 0015                        MTOUCH_Button_ServiceAll@button 00EB  
                                    ??_Slider_Service 00F5                                         _GetMotorSpeed 1734  
                               _INT2_InterruptHandler 0091                               _Button_Deviation_Update 21FC  
                               _TMR2_OverflowCallback 00FA                         __end_ofi2_Sensor_isCalibrated 3C9A  
                           _Button_State_Initializing 2816                              _MTOUCH_Sensor_isSampling 3DDE  
                  __end_of_MTOUCH_Sensor_isCalibrated 37C0                            _MTOUCH_Sensor_isCalibrated 3786  
                                           __pnvBANK0 00FA                                     _Sensor_setSampled 3D94  
                      __end_of_calculate_raw_position 1288                                 Slider_FindLeft@slider 0016  
                                       ??_interpolate 0023                                _PIN_MANAGER_Initialize 2C32  
                                    ??_Button_Service 002F                              ?_MTOUCH_Sensor_Calibrate 0001  
                                  ?_Sensor_setSampled 0001                         Slider_FindMiddle@maximumDelta 001F  
                                           __pintcode 0008                    Button_Reading_Update_Helper@button 0018  
                          ??_MTOUCH_Sensor_Initialize 0016                positional_hysteresis@previous_position 0029  
                                           __ptext100 37FA                                             __ptext101 3834  
                                           __ptext102 39E6                                             __ptext103 3D94  
                                           __ptext104 3CB4                             ApplicationTask@motorSpeed 001B  
                              ?_moving_average_filter 0022                             i2_MTOUCH_Sensor_isEnabled 3834  
                        ??_INTERRUPT_InterruptManager 000F                                   ??_Sensor_setSampled 0002  
                           ??_MTOUCH_Service_Mainloop 0033                      get_difference@rollover_threshold 001E  
                              ?_MTOUCH_Sensor_Service 0001                                           __smallconst 0F00  
                          ??_INT2_SetInterruptHandler 0018                        ?_MTOUCH_Sensor_ADCC_Initialize 0001  
        __end_of_MTOUCH_Sensor_postAcquisitionProcess 36C6                ??_MTOUCH_Sensor_postAcquisitionProcess 001F  
               ?_MTOUCH_Sensor_postAcquisitionProcess 0001                  _MTOUCH_Sensor_postAcquisitionProcess 367E  
                       ??_Sensor_isCalibratingAcqTime 0016                                         ??_MTOUCH_Tick 001A  
                           i2Sensor_SetTrisBit@sensor 0004                                              _T2CLKCON 0FBE  
                                   _sliderGroupStatus 009A                                  _INTERRUPT_Initialize 36C6  
Button_Check_AKS_Block@surplus_deviation_check_button 0024                                    Slider_FindMiddle@i 0021  
                                      ?_GetMotorSpeed 0015                 __end_of_Button_Unscaled_Deviation_Get 34A8  
                       _Button_Unscaled_Deviation_Get 3454                                      _CLOCK_Initialize 3CCE  
                  Button_Check_AKS_Block@check_button 0026                             __end_of_Sensor_setSampled 3DA2  
                                  _calculate_position 2FAC                          ?_MTOUCH_Slider_InitializeAll 0001  
                     positional_hysteresis@hyst_width 002D                                              _LATBbits 0F83  
                                            _LATCbits 0F84                                              _LATDbits 0F85  
                                   ??_ApplicationTask 0019                               _Sensor_RawSample_Update 34F8  
                           ?_INT1_SetInterruptHandler 0015                                              _PIE0bits 0EBD  
                                            _PIE1bits 0EBE                                              i2u331_45 30E0  
                                            i2u331_46 30E2                                              i2u340_40 380C  
                                            i2u340_41 3808                                              i2u332_45 30EE  
                                            i2u332_46 30F0                                              i2u341_40 382A  
                                            i2u421_40 2556                                              i2u341_41 3824  
                                            i2u421_41 2552                                              i2u333_45 30FC  
                                            i2u341_46 382C                                              i2u333_46 30FE  
                                            i2u422_40 2584                                              i2u422_41 2580  
                                            i2u334_45 310A                                              i2u334_46 310C  
                                            i2u423_40 25D2                                              i2u423_41 25CE  
                                            _PIR0bits 0EC5                                              i2u335_45 3118  
                                            i2u335_46 311A                                              i2u336_40 3846  
                                            i2u424_40 2606                                              i2u336_41 3842  
                                            i2u424_41 2602                                              i2u337_40 3864  
                                            i2u425_40 262A                                              i2u337_41 385E  
                                            i2u425_41 2626                                              _PIR1bits 0EC6  
                                            i2u337_46 3866                                              i2u338_40 3C96  
                                            i2u338_41 3C90                                              i2u338_46 3C98  
                                            i2u339_40 3C78                                              i2u339_41 3C72  
                                            i2u339_46 3C7A                                              i2u444_40 392E  
                                            i2u460_40 0040                                              i2u444_41 392A  
                                            i2u460_41 003C                                              i2u461_40 0056  
                                            i2u461_41 0052                                              i2u382_40 39F4  
                                            i2u390_40 1E80                                              i2u445_48 3934  
                                            i2u462_40 0064                                              i2u382_41 39F0  
                                            i2u390_41 1E7C                                              i2u445_49 3948  
                                            i2u462_41 0060                                              i2u463_40 0072  
                                            i2u463_41 006E                                              _PIR4bits 0EC9  
                                            i2u391_45 1F16                                              i2u392_45 1F32  
                                            i2u392_46 1F34                                              i2u385_40 1DD8  
                                            i2u385_41 1DD4                                              i2u386_40 1DFE  
                                            i2u386_41 1DFA                                              i2u387_40 1E14  
                                            i2u459_40 0032                                              i2u387_41 1E10  
                                            i2u459_41 002E                                              i2u388_40 1E24  
                                            i2u388_41 1E20                                              i2u389_40 1E46  
                                            i2u389_41 1E42                                ??_Button_State_Pressed 002A  
                                 ?_calculate_position 0031                                           ??_GetButton 0015  
              __end_of_MTOUCH_Sensor_Sampled_ResetAll 367E                        _MTOUCH_Sensor_Sampled_ResetAll 3634  
                                 interpolate@num_bits 0022                                ??_ProcessButtonRelease 0015  
                            ?_MTOUCH_Sensor_SampleAll 0001                                     ??_PIN_MANAGER_IOC 0001  
                                  _mtouch_sensor_init 0F68                           ??i2_Sensor_scheduleNextScan 0005  
                         ?i2_MTOUCH_Sensor_wasSampled 0001                              _MTOUCH_Sensor_wasSampled 374C  
                                  _mtouch_time_toScan 0049                              ??_Button_Baseline_Update 0017  
                                 __end_of_interpolate 29CE                          __end_of_ADCC_DefaultADTI_ISR 3DEC  
                                          _ADCON0bits 0F5B                                            _ADCON1bits 0F54  
                                          _ADCON2bits 0F55                                            _ADCON3bits 0F56  
               Button_Check_AKS_Block@currentAKSGroup 0023                                      ?_Slider_FindLeft 0016  
                          __end_of_MTOUCH_needReburst 3DDE                                  ??_calculate_position 0033  
                                            _GetEvent 3DCE                moving_average_filter@previous_position 002A  
                                _MTOUCH_Sensor_Enable 3B40                             _callback_position_changed 00E2  
                                           copy_data0 3202                                             copy_data1 3222  
                            Button_Tick_helper@button 0015                             ??_Button_Deviation_Update 0017  
                               ?_INTERRUPT_Initialize 0001                                 _Button_Reading_Update 3A1A  
                                      _get_difference 2CE8                              _INT0_SetInterruptHandler 3D4E  
                            ?_MTOUCH_Button_isPressed 0001                                     ??_TMR2_Initialize 0018  
                                   ??_PWM4_Initialize 0015                                   __end_of_MTOUCH_Tick 3DC2  
                                   _MTOUCH_Initialize 3CFC                       __end_of_MTOUCH_Sensor_Calibrate 3B88  
                             ?_Slider_DefaultCallback 0001                                           _left_signal 003B  
                       ??_MTOUCH_Slider_InitializeAll 0018                                            _ADSTATbits 0F60  
                                  ?_MTOUCH_Initialize 0001                                              __Hrparam 0000  
                          __end_of_PWM4_LoadDutyValue 39E6                                             memcpy@tmp 001A  
                                            __Lrparam 0000                               Slider_FindMiddle@slider 0016  
                                        _sample_delay 0040                            Slider_Service@group_status 016C  
                                         _middle_node 0047                                     divide@denominator 0017  
            MTOUCH_Sensor_postAcquisitionProcess@name 001F                              ??_calculate_contact_size 0024  
                  __end_of_Button_Baseline_Initialize 3454                            _Button_Baseline_Initialize 33F6  
                                 ??_MTOUCH_Initialize 001F                              ?_Button_State_NotPressed 0028  
                              _Button_Check_AKS_Block 1F3A                           i2Sensor_isCalibrated@sensor 0001  
                                  Button_Service@name 0030                              ?_MTOUCH_Sensor_isEnabled 0001  
                           ?_MTOUCH_Slider_ServiceAll 0001                   __end_of_MTOUCH_Button_Deviation_Get 3AD0  
                         _MTOUCH_Button_Deviation_Get 3AA4                                __end_of_get_difference 2D9E  
                               ?_MTOUCH_Sensor_Enable 0001                                              __ptext10 3CCE  
                                            __ptext11 325C                                              __ptext20 2FAC  
                                            __ptext12 3D5C                                              __ptext21 20A4  
                                            __ptext13 34A8                                              __ptext30 2AA2  
                                            __ptext22 2638                                              __ptext14 3DDA  
                                            __ptext31 3AA4                                              __ptext23 2CE8  
                                            __ptext15 3DBC                                              __ptext40 34F8  
                                            __ptext32 3C9A                                              __ptext24 0F9C  
                                            __ptext16 3A78                                              __ptext41 1A9E  
                                            __ptext33 3DE2                                              __ptext25 28F4  
                                            __ptext17 332E                                              __ptext50 3C22  
                                            __ptext42 3DE4                                              __ptext34 38A6  
                                            __ptext26 2732                                              __ptext18 3AD0  
                                            __ptext51 3162                                              __ptext43 3392  
                                            __ptext35 370C                                              __ptext27 2F02  
                                            __ptext19 1288                                              __ptext60 38DE  
                                            __ptext52 3DC8                                              __ptext44 1C2E  
                                            __ptext36 3AF6                                              __ptext28 2B72  
                                            __ptext61 3548                                              __ptext53 3598  
                                            __ptext45 3BE6                                              __ptext37 3DC2  
                                            __ptext29 2D9E                                              __ptext70 35E6  
                                            __ptext62 3B88                                              __ptext54 3D6A  
                                            __ptext46 3C04                                              __ptext38 3B1C  
                                            __ptext71 32C6                                              __ptext63 29CE  
                                            __ptext55 3634                                              __ptext47 3042  
                                            __ptext39 367E                                              __ptext80 397E  
                                            __ptext72 3B64                                              __ptext64 374C  
                                            __ptext56 394A                                              __ptext48 3DDE  
                                            __ptext81 21FC                                              __ptext73 1F3A  
                                            __ptext65 3786                                              __ptext57 3C40  
                                            __ptext49 3CFC                                              __ptext82 3D86  
                                            __ptext74 37C0                                              __ptext66 154A  
                                            __ptext58 3D78                                              __ptext91 3DE8  
                                            __ptext83 18EA                                              __ptext75 3454  
                                            __ptext67 2816                                              __ptext59 3B40  
                                            __ptext92 3914                                              __ptext84 39B2  
                                            __ptext76 2326                                              __ptext68 2436  
                                            __ptext93 3DEA                                              __ptext85 1734  
                                            __ptext77 33F6                                              __ptext69 3DE6  
                                            __ptext94 3DA2                                              __ptext86 3DCE  
                                            __ptext78 3A1A                                              __ptext95 253C  
                                            __ptext87 3DD4                                              __ptext79 2E54  
                                            __ptext96 1DB4                                              __ptext88 3DAC  
                                            __ptext97 3C5E                                              __ptext89 3DB4  
                                            __ptext98 3C7C                                              __ptext99 30D2  
                                     ??_GetMotorSpeed 0017                          Slider_DefaultCallback@slider 0001  
                           i2_Sensor_scheduleNextScan 1DB4                                          _right_signal 0039  
                           __end_of_MTOUCH_Initialize 3D12                             ??_Sensor_RawSample_Update 001D  
                                            _freq_hop 00D6                        __end_of_Slider_DefaultCallback 3DE4  
                                   _currentScanSensor 0045                                              _buttonNo 003F  
               __end_of_TMR2_OverflowCallbackRegister 3D32                         _TMR2_OverflowCallbackRegister 3D24  
                     __end_of_MTOUCH_Sensor_SampleAll 3B1C                                           _interpolate 28F4  
                              Slider_Service@position 016E                                              isa$xinst 0000  
                                            int$flags 004B                                     _callback_released 00DC  
                  __end_of_INTERRUPT_InterruptManager 0096                            _INTERRUPT_InterruptManager 0008  
                        _INT1_DefaultInterruptHandler 0000                          ?_MTOUCH_Button_InitializeAll 0001  
                        ?_MTOUCH_Sensor_InitializeAll 0001   Button_Check_AKS_Block@surplus_deviation_this_button 0021  
                                       _mtouch_button 0100                                            _INTCONbits 0FF2  
                                       _mtouch_slider 0155                                         _mtouch_sensor 009B  
                                            memcpy@d1 0015                                              memcpy@s1 0017  
                     __end_of_MTOUCH_Button_isPressed 374C                              ??_Sensor_setSamplePeriod 0015  
                          ??_MTOUCH_Sensor_isSampling 0015                            calculate_position@position 0166  
                              ??_INTERRUPT_Initialize 0018                                       ?_get_difference 0015  
                                         _MTOUCH_Tick 3DBC                                ?_Button_Reading_Update 001C  
                                 _TMR2_PeriodCountSet 0000                           Slider_Initialize@sliderName 0015  
                    Button_Deviation_Update@deviation 0021                          MTOUCH_Button_Initialize@name 0016  
                                       ??_ClearButton 0015                                 _positional_hysteresis 20A4  
                                            intlevel2 0000                             ?_MTOUCH_Button_Initialize 0001  
                             ?_PIN_MANAGER_Initialize 0001                             ?_ADCC_ThresholdISR_mTouch 0001  
                                _ADCC_DefaultADTI_ISR 3DEA                          ??_MTOUCH_Slider_Position_Get 0017  
                 Button_Unscaled_Deviation_Get@button 0015                           ?_MTOUCH_Sensor_isCalibrated 0001  
                _callback_pressed@mtouch_slider$F1529 00DF                          Sensor_scheduleNextScan@state 001D  
                               Slider_Service@segment 0171                 moving_average_filter@current_position 0024  
                             ??_moving_average_filter 0026                       __end_of_Button_State_NotPressed 1734  
                             _Sensor_FrequencyHopping 3DC2                               ??_MTOUCH_Sensor_Service 000C  
                                         _resol_value 003D                          __end_of_Sensor_Sampled_Reset 3D86  
                     __end_of_MTOUCH_Sensor_isEnabled 37FA                              __end_of_CLOCK_Initialize 3CE6  
                     Sensor_scheduleNextScan@skipScan 001E                     i2Sensor_scheduleNextScan@skipScan 000A  
                       ??_MTOUCH_Button_InitializeAll 001E                              ??_Button_DefaultCallback 0015  
                       ??_MTOUCH_Sensor_InitializeAll 001E                       MTOUCH_Button_Deviation_Get@name 0015  
                              ??_MTOUCH_Sensor_Enable 0015                      __end_of_INT1_SetInterruptHandler 3D4E  
                                Slider_Service@slider 0174                     Sensor_isCalibratingAcqTime@sensor 0015  
                 i2Sensor_isCalibratingAcqTime@sensor 0001                                       _ApplicationTask 18EA  
                            ??_Sensor_DefaultCallback 0015                         moving_average_filter@distance 002E  
                                Slider_Service@status 0170                          __end_of_Sensor_setCalibrated 3CCE  
                __end_of_Button_Reading_Update_Helper 2F02                          _Button_Reading_Update_Helper 2E54  
                                          _TMR2_Tasks 0000                        calculate_raw_position@deadband 00EF  
                                          _TMR2_Start 0000                             ?_MTOUCH_Button_ServiceAll 0001  
                       Button_State_NotPressed@button 0028                        ??_ADCC_SetADTIInterruptHandler 0018  
                      __end_of_PIN_MANAGER_Initialize 2CE8                                     ??_ADCC_Initialize 0018  
                              _Button_Baseline_Update 2326                              ?_Sensor_scheduleNextScan 0001  
                               ?_ADCC_DefaultADTI_ISR 0001                                       _PIN_MANAGER_IOC 3DE8  
                     ??_MTOUCH_Sensor_ADCC_Initialize 0018                           MTOUCH_Button_isPressed@name 0016  
                          ??_MTOUCH_Sensor_wasSampled 0015                                   __end_of_ClearButton 3DBC  
                               i2_Sensor_isCalibrated 3C7C  
