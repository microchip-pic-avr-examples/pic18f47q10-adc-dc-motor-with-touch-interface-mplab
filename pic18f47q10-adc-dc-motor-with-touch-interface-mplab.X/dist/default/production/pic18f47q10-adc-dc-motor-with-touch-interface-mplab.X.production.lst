

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Sep 29 15:27:27 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F47Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,inline
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1,inline
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,delta=1
   107                           	psect	text91,global,reloc=2,class=CODE,delta=1
   108                           	psect	text92,global,reloc=2,class=CODE,delta=1
   109                           	psect	text93,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text94,global,reloc=2,class=CODE,delta=1
   111                           	psect	text95,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text96,global,reloc=2,class=CODE,delta=1
   113                           	psect	text97,global,reloc=2,class=CODE,delta=1
   114                           	psect	text98,global,reloc=2,class=CODE,delta=1
   115                           	psect	text99,global,reloc=2,class=CODE,delta=1,inline
   116                           	psect	text100,global,reloc=2,class=CODE,delta=1
   117                           	psect	text101,global,reloc=2,class=CODE,delta=1
   118                           	psect	text102,global,reloc=2,class=CODE,delta=1,inline
   119                           	psect	text103,global,reloc=2,class=CODE,delta=1
   120                           	psect	text104,global,reloc=2,class=CODE,delta=1
   121                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   122                           	psect	text105,global,reloc=2,class=CODE,delta=1
   123                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   124                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   125                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   126                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   127  0000                     
   128                           ; Version 2.30
   129                           ; Generated 20/08/2020 GMT
   130                           ; 
   131                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   132                           ; All rights reserved.
   133                           ; 
   134                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   135                           ; 
   136                           ; Redistribution and use in source and binary forms, with or without modification, are
   137                           ; permitted provided that the following conditions are met:
   138                           ; 
   139                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   140                           ;        conditions and the following disclaimer.
   141                           ; 
   142                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   143                           ;        of conditions and the following disclaimer in the documentation and/or other
   144                           ;        materials provided with the distribution. Publication is not required when
   145                           ;        this file is used in an embedded application.
   146                           ; 
   147                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   148                           ;        software without specific prior written permission.
   149                           ; 
   150                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   151                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   152                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   153                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   154                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   155                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   156                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   157                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   158                           ; 
   159                           ; 
   160                           ; Code-generator required, PIC18F47Q10 Definitions
   161                           ; 
   162                           ; SFR Addresses
   163  0000                     
   164                           	psect	idataBANK0
   165  003E4A                     __pidataBANK0:
   166                           	callstack 0
   167                           
   168                           ;initializer for _Button_StateMachine
   169  003E4A  A0                 	db	low _Button_State_Initializing
   170  003E4B  2C                 	db	high _Button_State_Initializing
   171  003E4C  00                 	db	low (_Button_State_Initializing shr (0+16))
   172  003E4D  28                 	db	low _Button_State_NotPressed
   173  003E4E  15                 	db	high _Button_State_NotPressed
   174  003E4F  00                 	db	low (_Button_State_NotPressed shr (0+16))
   175  003E50  C4                 	db	low _Button_State_Pressed
   176  003E51  27                 	db	high _Button_State_Pressed
   177  003E52  00                 	db	low (_Button_State_Pressed shr (0+16))
   178                           
   179                           ;initializer for _callback_released
   180  003E53  E2                 	db	low _Slider_DefaultCallback
   181  003E54  41                 	db	high _Slider_DefaultCallback
   182  003E55  00                 	db	low (_Slider_DefaultCallback shr (0+16))
   183                           
   184                           ;initializer for _callback_pressed@mtouch_slider$F1229
   185  003E56  E2                 	db	low _Slider_DefaultCallback
   186  003E57  41                 	db	high _Slider_DefaultCallback
   187  003E58  00                 	db	low (_Slider_DefaultCallback shr (0+16))
   188                           
   189                           ;initializer for _callback_position_changed
   190  003E59  E2                 	db	low _Slider_DefaultCallback
   191  003E5A  41                 	db	high _Slider_DefaultCallback
   192  003E5B  00                 	db	low (_Slider_DefaultCallback shr (0+16))
   193                           
   194                           ;initializer for _callback_notPressed
   195  003E5C  E6                 	db	low _Button_DefaultCallback
   196  003E5D  41                 	db	high _Button_DefaultCallback
   197  003E5E  00                 	db	low (_Button_DefaultCallback shr (0+16))
   198                           
   199                           ;initializer for _callback_pressed
   200  003E5F  E6                 	db	low _Button_DefaultCallback
   201  003E60  41                 	db	high _Button_DefaultCallback
   202  003E61  00                 	db	low (_Button_DefaultCallback shr (0+16))
   203                           
   204                           ;initializer for _freq_hop
   205  003E62  00                 	db	0
   206  003E63  1E                 	db	30
   207  003E64  3C                 	db	60
   208                           
   209                           ;initializer for _callback_sampled
   210  003E65  E4                 	db	low _Sensor_DefaultCallback
   211  003E66  41                 	db	high _Sensor_DefaultCallback
   212  003E67  00                 	db	low (_Sensor_DefaultCallback shr (0+16))
   213                           
   214                           ;initializer for _mtouch_slider
   215  003E68  00                 	db	0
   216  003E69  00                 	db	0
   217  003E6A  02                 	db	2
   218  003E6B  03                 	db	3
   219  003E6C  80                 	db	128
   220  003E6D  0F                 	db	15
   221  003E6E  0064               	dw	100
   222  003E70  00                 	db	0
   223  003E71  00                 	db	0
   224  003E72  0000               	dw	0
   225  003E74  0000               	dw	0
   226  003E76  0000               	dw	0
   227  003E78  00                 	db	0
   228                           
   229                           	psect	smallconst
   230  000F00                     __psmallconst:
   231                           	callstack 0
   232  000F00  00                 	db	0
   233  000F01                     _mtouch_button_init:
   234                           	callstack 0
   235  000F01  00                 	db	0
   236  000F02  00                 	db	0
   237  000F03  00                 	db	0
   238  000F04  00                 	db	0
   239  000F05  0000               	dw	0
   240  000F07  0000               	dw	0
   241  000F09  0000               	dw	0
   242  000F0B  00                 	db	0
   243  000F0C  0000               	dw	0
   244  000F0E  0000               	dw	0
   245  000F10  64                 	db	100
   246  000F11  01                 	db	1
   247  000F12  01                 	db	1
   248  000F13  01                 	db	1
   249  000F14  00                 	db	0
   250  000F15  00                 	db	0
   251  000F16  0000               	dw	0
   252  000F18  0000               	dw	0
   253  000F1A  0000               	dw	0
   254  000F1C  00                 	db	0
   255  000F1D  0000               	dw	0
   256  000F1F  0000               	dw	0
   257  000F21  64                 	db	100
   258  000F22  01                 	db	1
   259  000F23  02                 	db	2
   260  000F24  04                 	db	4
   261  000F25  00                 	db	0
   262  000F26  01                 	db	1
   263  000F27  0000               	dw	0
   264  000F29  0000               	dw	0
   265  000F2B  0000               	dw	0
   266  000F2D  00                 	db	0
   267  000F2E  0000               	dw	0
   268  000F30  0000               	dw	0
   269  000F32  64                 	db	100
   270  000F33  01                 	db	1
   271  000F34  03                 	db	3
   272  000F35  03                 	db	3
   273  000F36  00                 	db	0
   274  000F37  01                 	db	1
   275  000F38  0000               	dw	0
   276  000F3A  0000               	dw	0
   277  000F3C  0000               	dw	0
   278  000F3E  00                 	db	0
   279  000F3F  0000               	dw	0
   280  000F41  0000               	dw	0
   281  000F43  64                 	db	100
   282  000F44  01                 	db	1
   283  000F45  04                 	db	4
   284  000F46  02                 	db	2
   285  000F47  00                 	db	0
   286  000F48  01                 	db	1
   287  000F49  0000               	dw	0
   288  000F4B  0000               	dw	0
   289  000F4D  0000               	dw	0
   290  000F4F  00                 	db	0
   291  000F50  0000               	dw	0
   292  000F52  0000               	dw	0
   293  000F54  64                 	db	100
   294  000F55  01                 	db	1
   295  000F56                     __end_of_mtouch_button_init:
   296                           	callstack 0
   297  000F56                     _mtouch_sensor_init:
   298                           	callstack 0
   299  000F56  00                 	db	0
   300  000F57  02                 	db	2
   301  000F58  C0                 	db	192
   302  000F59  40                 	db	64
   303  000F5A  20                 	db	32
   304  000F5B  00                 	db	0
   305  000F5C  0000               	dw	0
   306  000F5E  00                 	db	0
   307  000F5F  01                 	db	1
   308  000F60  1F                 	db	31
   309  000F61  C0                 	db	192
   310  000F62  40                 	db	64
   311  000F63  20                 	db	32
   312  000F64  00                 	db	0
   313  000F65  0000               	dw	0
   314  000F67  00                 	db	0
   315  000F68  02                 	db	2
   316  000F69  04                 	db	4
   317  000F6A  C0                 	db	192
   318  000F6B  40                 	db	64
   319  000F6C  20                 	db	32
   320  000F6D  00                 	db	0
   321  000F6E  0000               	dw	0
   322  000F70  00                 	db	0
   323  000F71  03                 	db	3
   324  000F72  05                 	db	5
   325  000F73  C0                 	db	192
   326  000F74  40                 	db	64
   327  000F75  20                 	db	32
   328  000F76  00                 	db	0
   329  000F77  0000               	dw	0
   330  000F79  00                 	db	0
   331  000F7A  04                 	db	4
   332  000F7B  0C                 	db	12
   333  000F7C  C0                 	db	192
   334  000F7D  40                 	db	64
   335  000F7E  20                 	db	32
   336  000F7F  00                 	db	0
   337  000F80  0000               	dw	0
   338  000F82  00                 	db	0
   339  000F83                     __end_of_mtouch_sensor_init:
   340                           	callstack 0
   341  000F83  00                 	db	0	; dummy byte at the end
   342  0000                     
   343                           	psect	nvBANK0
   344  0000FD                     __pnvBANK0:
   345                           	callstack 0
   346  0000FD                     _ADCC_ADTI_InterruptHandler:
   347                           	callstack 0
   348  0000FD                     	ds	3
   349  0000                     _PIR4bits	set	3785
   350  0000                     _RA3PPS	set	3813
   351  0000                     _PMD5	set	3809
   352  0000                     _PMD4	set	3808
   353  0000                     _PMD3	set	3807
   354  0000                     _PMD2	set	3806
   355  0000                     _PMD1	set	3805
   356  0000                     _PMD0	set	3804
   357  0000                     _OSCTUNE	set	3800
   358  0000                     _OSCFRQ	set	3801
   359  0000                     _OSCEN	set	3799
   360  0000                     _OSCCON3	set	3797
   361  0000                     _OSCCON1	set	3795
   362  0000                     _PIE1bits	set	3774
   363  0000                     _PIR1bits	set	3782
   364  0000                     _ADCON1bits	set	3924
   365  0000                     _ADPREVL	set	3932
   366  0000                     _ADPREVH	set	3933
   367  0000                     _ADCON2bits	set	3925
   368  0000                     _ADCON3bits	set	3926
   369  0000                     _ADRESL	set	3934
   370  0000                     _ADRESH	set	3935
   371  0000                     _ADACT	set	3921
   372  0000                     _INLVLE	set	3877
   373  0000                     _INLVLD	set	3869
   374  0000                     _INLVLC	set	3864
   375  0000                     _INLVLB	set	3856
   376  0000                     _INLVLA	set	3848
   377  0000                     _SLRCONE	set	3878
   378  0000                     _SLRCOND	set	3870
   379  0000                     _SLRCONC	set	3865
   380  0000                     _SLRCONB	set	3857
   381  0000                     _SLRCONA	set	3849
   382  0000                     _ODCOND	set	3871
   383  0000                     _ODCONC	set	3866
   384  0000                     _ODCONB	set	3858
   385  0000                     _ODCONA	set	3850
   386  0000                     _ODCONE	set	3879
   387  0000                     _WPUC	set	3867
   388  0000                     _WPUA	set	3851
   389  0000                     _WPUB	set	3859
   390  0000                     _WPUE	set	3880
   391  0000                     _WPUD	set	3872
   392  0000                     _ANSELA	set	3852
   393  0000                     _ANSELE	set	3881
   394  0000                     _ANSELB	set	3860
   395  0000                     _ANSELC	set	3868
   396  0000                     _ANSELD	set	3873
   397  0000                     _ADCON0bits	set	3931
   398  0000                     _ADPCH	set	3930
   399  0000                     _ADPRE	set	3929
   400  0000                     _ADACQ	set	3927
   401  0000                     _ADCON0	set	3931
   402  0000                     _ADCON3	set	3926
   403  0000                     _ADCON2	set	3925
   404  0000                     _ADCON1	set	3924
   405  0000                     _ADCAP	set	3928
   406  0000                     _ADREF	set	3923
   407  0000                     _ADCLK	set	3922
   408  0000                     _ADFLTR	set	3949
   409  0000                     _ADACC	set	3947
   410  0000                     _LATBbits	set	3971
   411  0000                     _LATDbits	set	3973
   412  0000                     _LATCbits	set	3972
   413  0000                     _PR2	set	4027
   414  0000                     _TMR2	set	4026
   415  0000                     _T2CONbits	set	4028
   416  0000                     _T2RSTbits	set	4031
   417  0000                     _T2HLTbits	set	4029
   418  0000                     _T2CON	set	4028
   419  0000                     _T2TMR	set	4026
   420  0000                     _T2PR	set	4027
   421  0000                     _T2RST	set	4031
   422  0000                     _T2HLT	set	4029
   423  0000                     _T2CLKCON	set	4030
   424  0000                     _ADERRL	set	3945
   425  0000                     _ADERRH	set	3946
   426  0000                     _ADFLTRL	set	3949
   427  0000                     _ADFLTRH	set	3950
   428  0000                     _ADSTATbits	set	3936
   429  0000                     _ADACCL	set	3947
   430  0000                     _ADACCH	set	3948
   431  0000                     _ADCNT	set	3938
   432  0000                     _ADSTAT	set	3936
   433  0000                     _CCPTMRSbits	set	4013
   434  0000                     _PWM4DCL	set	3999
   435  0000                     _PWM4DCH	set	4000
   436  0000                     _PWM4CON	set	4001
   437  0000                     _INTCONbits	set	4082
   438  0000                     _TRISD	set	3978
   439  0000                     _TRISC	set	3977
   440  0000                     _TRISB	set	3976
   441  0000                     _TRISA	set	3975
   442  0000                     _TRISE	set	3979
   443  0000                     _LATC	set	3972
   444  0000                     _LATB	set	3971
   445  0000                     _LATA	set	3970
   446  0000                     _LATD	set	3973
   447  0000                     _LATE	set	3974
   448  0000                     _ADRPT	set	3937
   449  0000                     _ADSTPTH	set	3940
   450  0000                     _ADSTPTL	set	3939
   451  0000                     _ADUTHH	set	3944
   452  0000                     _ADUTHL	set	3943
   453  0000                     _ADLTHH	set	3942
   454  0000                     _ADLTHL	set	3941
   455  0000                     _TRISBbits	set	3976
   456  0000                     _TRISDbits	set	3978
   457  0000                     _TRISAbits	set	3975
   458  0000                     _GIE	set	32663
   459                           
   460                           ; #config settings
   461                           
   462                           	psect	cinit
   463  003984                     __pcinit:
   464                           	callstack 0
   465  003984                     start_initialization:
   466                           	callstack 0
   467  003984                     __initialization:
   468                           	callstack 0
   469                           
   470                           ; Initialize objects allocated to BANK0 (47 bytes)
   471                           ; load TBLPTR registers with __pidataBANK0
   472  003984  0E4A               	movlw	low __pidataBANK0
   473  003986  6EF6               	movwf	tblptrl,c
   474  003988  0E3E               	movlw	high __pidataBANK0
   475  00398A  6EF7               	movwf	tblptrh,c
   476  00398C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   477  00398E  6EF8               	movwf	tblptru,c
   478  003990  EE00  F0C4         	lfsr	0,__pdataBANK0
   479  003994  EE10 F02F          	lfsr	1,47
   480  003998                     copy_data0:
   481  003998  0009               	tblrd		*+
   482  00399A  CFF5 FFEE          	movff	tablat,postinc0
   483  00399E  50E5               	movf	postdec1,w,c
   484  0039A0  50E1               	movf	fsr1l,w,c
   485  0039A2  E1FA               	bnz	copy_data0
   486                           
   487                           ; Clear objects allocated to BANK1 (85 bytes)
   488  0039A4  EE01  F000         	lfsr	0,__pbssBANK1
   489  0039A8  0E55               	movlw	85
   490  0039AA                     clear_0:
   491  0039AA  6AEE               	clrf	postinc0,c
   492  0039AC  06E8               	decf	wreg,f,c
   493  0039AE  E1FD               	bnz	clear_0
   494                           
   495                           ; Clear objects allocated to BANK0 (100 bytes)
   496  0039B0  EE00  F060         	lfsr	0,__pbssBANK0
   497  0039B4  0E64               	movlw	100
   498  0039B6                     clear_1:
   499  0039B6  6AEE               	clrf	postinc0,c
   500  0039B8  06E8               	decf	wreg,f,c
   501  0039BA  E1FD               	bnz	clear_1
   502                           
   503                           ; Clear objects allocated to COMRAM (22 bytes)
   504  0039BC  EE00  F034         	lfsr	0,__pbssCOMRAM
   505  0039C0  0E16               	movlw	22
   506  0039C2                     clear_2:
   507  0039C2  6AEE               	clrf	postinc0,c
   508  0039C4  06E8               	decf	wreg,f,c
   509  0039C6  E1FD               	bnz	clear_2
   510  0039C8                     end_of_initialization:
   511                           	callstack 0
   512  0039C8                     __end_of__initialization:
   513                           	callstack 0
   514  0039C8  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   515  0039CA  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   516  0039CC  0100               	movlb	0
   517  0039CE  EF6C  F01E         	goto	_main	;jump to C main() function
   518                           
   519                           	psect	bssCOMRAM
   520  000034                     __pbssCOMRAM:
   521                           	callstack 0
   522  000034                     _motorState:
   523                           	callstack 0
   524  000034                     	ds	2
   525  000036                     _middle_signal:
   526                           	callstack 0
   527  000036                     	ds	2
   528  000038                     _right_signal:
   529                           	callstack 0
   530  000038                     	ds	2
   531  00003A                     _left_signal:
   532                           	callstack 0
   533  00003A                     	ds	2
   534  00003C                     _resol_value:
   535                           	callstack 0
   536  00003C                     	ds	2
   537  00003E                     _buttonNo:
   538                           	callstack 0
   539  00003E                     	ds	1
   540  00003F                     _wheel_sensor_middle_channel_zero:
   541                           	callstack 0
   542  00003F                     	ds	1
   543  000040                     _middle_node:
   544                           	callstack 0
   545  000040                     	ds	1
   546  000041                     _mtouch_request_init:
   547                           	callstack 0
   548  000041                     	ds	1
   549  000042                     _mtouch_time_toScan:
   550                           	callstack 0
   551  000042                     	ds	1
   552  000043                     _sample_delay:
   553                           	callstack 0
   554  000043                     	ds	1
   555  000044                     _freq_index:
   556                           	callstack 0
   557  000044                     	ds	1
   558  000045                     _lowpowerActivated:
   559                           	callstack 0
   560  000045                     	ds	1
   561  000046                     _scanInterrupted:
   562                           	callstack 0
   563  000046                     	ds	1
   564  000047                     _sampling_flag:
   565                           	callstack 0
   566  000047                     	ds	1
   567  000048                     _currentScanSensor:
   568                           	callstack 0
   569  000048                     	ds	1
   570  000049                     _resol_bits:
   571                           	callstack 0
   572  000049                     	ds	1
   573                           
   574                           	psect	bssBANK0
   575  000060                     __pbssBANK0:
   576                           	callstack 0
   577  000060                     _sensor_medianBuffer:
   578                           	callstack 0
   579  000060                     	ds	30
   580  00007E                     _packet_sample:
   581                           	callstack 0
   582  00007E                     	ds	10
   583  000088                     medianFilter@bufferIndex:
   584                           	callstack 0
   585  000088                     	ds	5
   586  00008D                     _BUTTON:
   587                           	callstack 0
   588  00008D                     	ds	4
   589  000091                     Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter:
   590                           	callstack 0
   591  000091                     	ds	3
   592  000094                     _state:
   593                           	callstack 0
   594  000094                     	ds	2
   595  000096                     _sliderGroupStatus:
   596                           	callstack 0
   597  000096                     	ds	1
   598  000097                     _mtouch_sensor:
   599                           	callstack 0
   600  000097                     	ds	45
   601                           
   602                           	psect	dataBANK0
   603  0000C4                     __pdataBANK0:
   604                           	callstack 0
   605  0000C4                     _Button_StateMachine:
   606                           	callstack 0
   607  0000C4                     	ds	9
   608  0000CD                     _callback_released:
   609                           	callstack 0
   610  0000CD                     	ds	3
   611  0000D0                     _callback_pressed@mtouch_slider$F1229:
   612                           	callstack 0
   613  0000D0                     	ds	3
   614  0000D3                     _callback_position_changed:
   615                           	callstack 0
   616  0000D3                     	ds	3
   617  0000D6                     _callback_notPressed:
   618                           	callstack 0
   619  0000D6                     	ds	3
   620  0000D9                     _callback_pressed:
   621                           	callstack 0
   622  0000D9                     	ds	3
   623  0000DC                     _freq_hop:
   624                           	callstack 0
   625  0000DC                     	ds	3
   626  0000DF                     _callback_sampled:
   627                           	callstack 0
   628  0000DF                     	ds	3
   629  0000E2                     _mtouch_slider:
   630                           	callstack 0
   631  0000E2                     	ds	17
   632                           
   633                           	psect	bssBANK1
   634  000100                     __pbssBANK1:
   635                           	callstack 0
   636  000100                     _mtouch_button:
   637                           	callstack 0
   638  000100                     	ds	85
   639                           
   640                           	psect	cstackBANK1
   641  000155                     __pcstackBANK1:
   642                           	callstack 0
   643  000155                     ?_calculate_position:
   644                           	callstack 0
   645  000155                     calculate_position@slider:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x0
   649  000155                     	ds	2
   650  000157                     calculate_position@position:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x2
   654  000157                     	ds	2
   655  000159                     calculate_position@filtered_position:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x4
   659  000159                     	ds	2
   660  00015B                     calculate_position@raw_position:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x6
   664  00015B                     	ds	2
   665  00015D                     ??_Slider_Service:
   666                           
   667                           ; 1 bytes @ 0x8
   668  00015D                     	ds	4
   669  000161                     Slider_Service@group_status:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0xC
   673  000161                     	ds	1
   674  000162                     Slider_Service@valid_contact_found:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0xD
   678  000162                     	ds	1
   679  000163                     Slider_Service@position:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0xE
   683  000163                     	ds	2
   684  000165                     Slider_Service@status:
   685                           	callstack 0
   686                           
   687                           ; 1 bytes @ 0x10
   688  000165                     	ds	1
   689  000166                     Slider_Service@segment:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x11
   693  000166                     	ds	2
   694  000168                     Slider_Service@sliderName:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x13
   698  000168                     	ds	1
   699  000169                     Slider_Service@slider:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x14
   703  000169                     	ds	2
   704                           
   705                           	psect	cstackBANK0
   706  0000F3                     __pcstackBANK0:
   707                           	callstack 0
   708  0000F3                     MTOUCH_Button_ServiceAll@button:
   709                           	callstack 0
   710  0000F3                     calculate_raw_position@ref_node:
   711                           	callstack 0
   712                           
   713                           ; 1 bytes @ 0x0
   714  0000F3                     	ds	1
   715  0000F4                     calculate_raw_position@deadband_set:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x1
   719  0000F4                     	ds	2
   720  0000F6                     calculate_raw_position@interpolation_scale:
   721                           	callstack 0
   722                           
   723                           ; 1 bytes @ 0x3
   724  0000F6                     	ds	1
   725  0000F7                     calculate_raw_position@deadband:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x4
   729  0000F7                     	ds	2
   730  0000F9                     calculate_raw_position@interpolation_bits:
   731                           	callstack 0
   732                           
   733                           ; 1 bytes @ 0x6
   734  0000F9                     	ds	1
   735  0000FA                     calculate_raw_position@size:
   736                           	callstack 0
   737                           
   738                           ; 1 bytes @ 0x7
   739  0000FA                     	ds	1
   740  0000FB                     calculate_raw_position@position:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x8
   744  0000FB                     	ds	2
   745                           
   746                           	psect	cstackCOMRAM
   747  000001                     __pcstackCOMRAM:
   748                           	callstack 0
   749  000001                     ?i2_abs:
   750                           	callstack 0
   751  000001                     i2Sensor_SetTrisBit@TrisBit:
   752                           	callstack 0
   753  000001                     i2MTOUCH_Sensor_isEnabled@sensor:
   754                           	callstack 0
   755  000001                     i2MTOUCH_Sensor_wasSampled@sensor:
   756                           	callstack 0
   757  000001                     Sensor_setCalibrated@sensor:
   758                           	callstack 0
   759  000001                     Sensor_setCalibratAcqTime@sensor:
   760                           	callstack 0
   761  000001                     Sensor_setSampled@sensor:
   762                           	callstack 0
   763  000001                     i2Sensor_isCalibrated@sensor:
   764                           	callstack 0
   765  000001                     i2Sensor_isCalibratingAcqTime@sensor:
   766                           	callstack 0
   767  000001                     i2abs@a:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x0
   771  000001                     	ds	1
   772  000002                     ??i2_Sensor_SetTrisBit:
   773                           
   774                           ; 1 bytes @ 0x1
   775  000002                     	ds	1
   776  000003                     ??i2_abs:
   777                           
   778                           ; 1 bytes @ 0x2
   779  000003                     	ds	1
   780  000004                     i2Sensor_SetTrisBit@sensor:
   781                           	callstack 0
   782                           
   783                           ; 1 bytes @ 0x3
   784  000004                     	ds	1
   785  000005                     ??i2_Sensor_scheduleNextScan:
   786  000005                     Sensor_autoCalibration@sensor:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x4
   790  000005                     	ds	2
   791  000007                     ??_Sensor_autoCalibration:
   792  000007                     i2Sensor_scheduleNextScan@state:
   793                           	callstack 0
   794                           
   795                           ; 1 bytes @ 0x6
   796  000007                     	ds	1
   797  000008                     i2Sensor_scheduleNextScan@skipScan:
   798                           	callstack 0
   799                           
   800                           ; 1 bytes @ 0x7
   801  000008                     	ds	1
   802  000009                     i2Sensor_scheduleNextScan@sensor:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x8
   806  000009                     	ds	2
   807  00000B                     Sensor_autoCalibration@name:
   808                           	callstack 0
   809                           
   810                           ; 1 bytes @ 0xA
   811  00000B                     	ds	1
   812  00000C                     ??_MTOUCH_Sensor_Service:
   813                           
   814                           ; 1 bytes @ 0xB
   815  00000C                     	ds	2
   816  00000E                     MTOUCH_Sensor_Service@sensor:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0xD
   820  00000E                     	ds	2
   821  000010                     ??_INTERRUPT_InterruptManager:
   822                           
   823                           ; 1 bytes @ 0xF
   824  000010                     	ds	6
   825  000016                     ??_ProcessButtonRelease:
   826  000016                     ?_MTOUCH_Slider_Position_Get:
   827                           	callstack 0
   828  000016                     ?_abs:
   829                           	callstack 0
   830  000016                     ?_medianFilter:
   831                           	callstack 0
   832  000016                     ?_MTOUCH_Sensor_RawSample_Get:
   833                           	callstack 0
   834  000016                     ?_Button_Unscaled_Deviation_Get:
   835                           	callstack 0
   836  000016                     ?_divide:
   837                           	callstack 0
   838  000016                     ?_get_difference:
   839                           	callstack 0
   840  000016                     ?_GetMotorSpeed:
   841                           	callstack 0
   842  000016                     Sensor_SetTrisBit@TrisBit:
   843                           	callstack 0
   844  000016                     MTOUCH_Sensor_Enable@sensor:
   845                           	callstack 0
   846  000016                     MTOUCH_Sensor_isEnabled@sensor:
   847                           	callstack 0
   848  000016                     MTOUCH_Sensor_Calibrate@sensor:
   849                           	callstack 0
   850  000016                     MTOUCH_Sensor_isCalibrated@sensor:
   851                           	callstack 0
   852  000016                     MTOUCH_Sensor_wasSampled@sensor:
   853                           	callstack 0
   854  000016                     MTOUCH_Button_Deviation_Get@name:
   855                           	callstack 0
   856  000016                     Slider_Initialize@sliderName:
   857                           	callstack 0
   858  000016                     Sensor_isCalibrated@sensor:
   859                           	callstack 0
   860  000016                     Sensor_isCalibratingAcqTime@sensor:
   861                           	callstack 0
   862  000016                     Sensor_Sampled_Reset@sensor:
   863                           	callstack 0
   864  000016                     Button_Tick_helper@button:
   865                           	callstack 0
   866  000016                     Button_Deviation_Update@button:
   867                           	callstack 0
   868  000016                     Button_Unscaled_Deviation_Get@button:
   869                           	callstack 0
   870  000016                     Button_Baseline_Update@button:
   871                           	callstack 0
   872  000016                     divide@numerator:
   873                           	callstack 0
   874  000016                     get_difference@slider:
   875                           	callstack 0
   876  000016                     PWM4_LoadDutyValue@dutyValue:
   877                           	callstack 0
   878  000016                     GetMotorSpeed@adcVal:
   879                           	callstack 0
   880  000016                     abs@a:
   881                           	callstack 0
   882  000016                     memcpy@d1:
   883                           	callstack 0
   884  000016                     MTOUCH_Button_SetNotPressedCallback@callback:
   885                           	callstack 0
   886  000016                     MTOUCH_Slider_SetPositionChangedCallback@callback:
   887                           	callstack 0
   888  000016                     ADCC_SetADTIInterruptHandler@InterruptHandler:
   889                           	callstack 0
   890                           
   891                           ; 3 bytes @ 0x15
   892  000016                     	ds	1
   893  000017                     ??_Sensor_SetTrisBit:
   894  000017                     ?_Slider_FindMiddle:
   895                           	callstack 0
   896  000017                     ?_Slider_FindLeft:
   897                           	callstack 0
   898  000017                     ?_Slider_FindRight:
   899                           	callstack 0
   900  000017                     MTOUCH_Button_Initialize@name:
   901                           	callstack 0
   902  000017                     MTOUCH_Button_isPressed@name:
   903                           	callstack 0
   904  000017                     Slider_FindMiddle@slider:
   905                           	callstack 0
   906  000017                     Slider_FindLeft@slider:
   907                           	callstack 0
   908  000017                     Slider_FindRight@slider:
   909                           	callstack 0
   910  000017                     Slider_Initialize@slider:
   911                           	callstack 0
   912                           
   913                           ; 2 bytes @ 0x16
   914  000017                     	ds	1
   915  000018                     ??_abs:
   916  000018                     ??_medianFilter:
   917  000018                     ??_Button_Deviation_Update:
   918  000018                     ??_Button_Baseline_Update:
   919  000018                     ??_Button_Unscaled_Deviation_Get:
   920  000018                     ??_PWM4_LoadDutyValue:
   921  000018                     MTOUCH_Sensor_Initialize@sensor:
   922                           	callstack 0
   923  000018                     MTOUCH_Sensor_RawSample_Get@name:
   924                           	callstack 0
   925  000018                     MTOUCH_Slider_Position_Get@sliderName:
   926                           	callstack 0
   927  000018                     ProcessButtonRelease@button:
   928                           	callstack 0
   929  000018                     MTOUCH_Sensor_Sampled_ResetAll@sensor:
   930                           	callstack 0
   931  000018                     MTOUCH_Button_Initialize@button:
   932                           	callstack 0
   933  000018                     divide@denominator:
   934                           	callstack 0
   935  000018                     get_difference@previous_position:
   936                           	callstack 0
   937  000018                     GetMotorSpeed@retVal:
   938                           	callstack 0
   939  000018                     memcpy@s1:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0x17
   943  000018                     	ds	1
   944  000019                     ??_Slider_FindMiddle:
   945  000019                     ??_Slider_FindLeft:
   946  000019                     ??_Slider_FindRight:
   947  000019                     Sensor_SetTrisBit@sensor:
   948                           	callstack 0
   949  000019                     MTOUCH_Slider_InitializeAll@slider:
   950                           	callstack 0
   951  000019                     Button_Reading_Update_Helper@button:
   952                           	callstack 0
   953  000019                     Button_Baseline_Initialize@button:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x18
   957  000019                     	ds	1
   958  00001A                     ??_Sensor_scheduleNextScan:
   959  00001A                     ??_Sensor_FrequencyHopping_Autotune_Process:
   960  00001A                     ??_ApplicationTask:
   961  00001A                     MTOUCH_Button_Tick@i:
   962                           	callstack 0
   963  00001A                     divide@exponent:
   964                           	callstack 0
   965  00001A                     Slider_FindLeft@ref_node:
   966                           	callstack 0
   967  00001A                     get_difference@current_position:
   968                           	callstack 0
   969  00001A                     memcpy@n:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x19
   973  00001A                     	ds	1
   974  00001B                     ??_Button_Baseline_Initialize:
   975  00001B                     ??_Button_Reading_Update_Helper:
   976  00001B                     divide@result:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x1A
   980  00001B                     	ds	1
   981  00001C                     ??_get_difference:
   982  00001C                     Sensor_scheduleNextScan@state:
   983                           	callstack 0
   984  00001C                     ApplicationTask@motorSpeed:
   985                           	callstack 0
   986  00001C                     memcpy@d:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x1B
   990  00001C                     	ds	1
   991  00001D                     ?_interpolate:
   992                           	callstack 0
   993  00001D                     Sensor_scheduleNextScan@skipScan:
   994                           	callstack 0
   995  00001D                     medianFilter@sensor:
   996                           	callstack 0
   997  00001D                     Button_Reading_Update@button:
   998                           	callstack 0
   999  00001D                     interpolate@delta1:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x1C
  1003  00001D                     	ds	1
  1004  00001E                     Sensor_scheduleNextScan@sensor:
  1005                           	callstack 0
  1006  00001E                     Sensor_RawSample_Update@sensor:
  1007                           	callstack 0
  1008  00001E                     Button_Check_AKS_Block@button:
  1009                           	callstack 0
  1010  00001E                     Slider_FindMiddle@channelDelta:
  1011                           	callstack 0
  1012  00001E                     memcpy@s:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x1D
  1016  00001E                     	ds	1
  1017  00001F                     get_difference@rollover_threshold:
  1018                           	callstack 0
  1019  00001F                     interpolate@delta2:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x1E
  1023  00001F                     	ds	1
  1024  000020                     ??_Button_Check_AKS_Block:
  1025  000020                     MTOUCH_Sensor_isSamplingComplete@sensor:
  1026                           	callstack 0
  1027  000020                     Slider_FindRight@ref_node:
  1028                           	callstack 0
  1029  000020                     memcpy@tmp:
  1030                           	callstack 0
  1031  000020                     Sensor_RawSample_Update@result:
  1032                           	callstack 0
  1033  000020                     Slider_FindMiddle@maximumDelta:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x1F
  1037  000020                     	ds	1
  1038  000021                     MTOUCH_Sensor_InitializeAll@sensor:
  1039                           	callstack 0
  1040  000021                     MTOUCH_Button_InitializeAll@button:
  1041                           	callstack 0
  1042  000021                     get_difference@diff:
  1043                           	callstack 0
  1044  000021                     interpolate@delta3:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x20
  1048  000021                     	ds	1
  1049  000022                     MTOUCH_Sensor_postAcquisitionProcess@name:
  1050                           	callstack 0
  1051  000022                     Sensor_FrequencyHopping_Autotune_Process@newfrequencyFound:
  1052                           	callstack 0
  1053  000022                     Slider_FindMiddle@i:
  1054                           	callstack 0
  1055  000022                     Button_Check_AKS_Block@surplus_deviation_this_button:
  1056                           	callstack 0
  1057  000022                     Button_Deviation_Update@deviation:
  1058                           	callstack 0
  1059                           
  1060                           ; 4 bytes @ 0x21
  1061  000022                     	ds	1
  1062  000023                     ?_positional_hysteresis:
  1063                           	callstack 0
  1064  000023                     ?_moving_average_filter:
  1065                           	callstack 0
  1066  000023                     ?_calculate_contact_size:
  1067                           	callstack 0
  1068  000023                     interpolate@num_bits:
  1069                           	callstack 0
  1070  000023                     Sensor_FrequencyHopping_Autotune_Process@variance:
  1071                           	callstack 0
  1072  000023                     positional_hysteresis@slider:
  1073                           	callstack 0
  1074  000023                     moving_average_filter@slider:
  1075                           	callstack 0
  1076  000023                     calculate_contact_size@slider:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x22
  1080  000023                     	ds	1
  1081  000024                     ??_interpolate:
  1082  000024                     Button_Check_AKS_Block@currentAKSGroup:
  1083                           	callstack 0
  1084                           
  1085                           ; 1 bytes @ 0x23
  1086  000024                     	ds	1
  1087  000025                     ??_calculate_contact_size:
  1088  000025                     Sensor_FrequencyHopping_Autotune_Process@maxVariance:
  1089                           	callstack 0
  1090  000025                     Button_Check_AKS_Block@surplus_deviation_check_button:
  1091                           	callstack 0
  1092  000025                     positional_hysteresis@current_position:
  1093                           	callstack 0
  1094  000025                     moving_average_filter@current_position:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x24
  1098  000025                     	ds	2
  1099  000027                     ??_positional_hysteresis:
  1100  000027                     ??_moving_average_filter:
  1101  000027                     Sensor_FrequencyHopping_Autotune_Process@sensor:
  1102                           	callstack 0
  1103  000027                     Button_Check_AKS_Block@check_button:
  1104                           	callstack 0
  1105  000027                     calculate_contact_size@contact_size:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x26
  1109  000027                     	ds	1
  1110  000028                     Sensor_FrequencyHopping_Autotune_Process@selectedFrequency:
  1111                           	callstack 0
  1112  000028                     interpolate@rtnval:
  1113                           	callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x27
  1116  000028                     	ds	1
  1117  000029                     Sensor_FrequencyHopping_Autotune_Process@frequencyIndex:
  1118                           	callstack 0
  1119  000029                     Button_State_Initializing@button:
  1120                           	callstack 0
  1121  000029                     Button_State_NotPressed@button:
  1122                           	callstack 0
  1123  000029                     Button_State_Pressed@button:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x28
  1127  000029                     	ds	1
  1128  00002A                     ?_calculate_raw_position:
  1129                           	callstack 0
  1130  00002A                     positional_hysteresis@previous_position:
  1131                           	callstack 0
  1132  00002A                     calculate_raw_position@slider:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x29
  1136  00002A                     	ds	1
  1137  00002B                     ??_Button_State_Initializing:
  1138  00002B                     ??_Button_State_NotPressed:
  1139  00002B                     ??_Button_State_Pressed:
  1140  00002B                     moving_average_filter@filtered_position:
  1141                           	callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x2A
  1144  00002B                     	ds	1
  1145  00002C                     ??_calculate_raw_position:
  1146  00002C                     positional_hysteresis@filtered_position:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x2B
  1150  00002C                     	ds	1
  1151  00002D                     moving_average_filter@previous_position:
  1152                           	callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x2C
  1155  00002D                     	ds	1
  1156  00002E                     positional_hysteresis@hyst_width:
  1157                           	callstack 0
  1158                           
  1159                           ; 1 bytes @ 0x2D
  1160  00002E                     	ds	1
  1161  00002F                     positional_hysteresis@polarity:
  1162                           	callstack 0
  1163  00002F                     moving_average_filter@dist_temp:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x2E
  1167  00002F                     	ds	1
  1168  000030                     ??_Button_Service:
  1169  000030                     positional_hysteresis@distance:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x2F
  1173  000030                     	ds	1
  1174  000031                     Button_Service@name:
  1175                           	callstack 0
  1176  000031                     moving_average_filter@distance:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x30
  1180  000031                     	ds	1
  1181  000032                     Button_Service@button:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x31
  1185  000032                     	ds	1
  1186  000033                     MTOUCH_Slider_ServiceAll@slider:
  1187                           	callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x32
  1190  000033                     	ds	1
  1191  000034                     
  1192                           ; 1 bytes @ 0x33
  1193 ;;
  1194 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1195 ;;
  1196 ;; *************** function _main *****************
  1197 ;; Defined at:
  1198 ;;		line 50 in file "main.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1216 ;;Total ram usage:        0 bytes
  1217 ;; Hardware stack levels required when called:   13
  1218 ;; This function calls:
  1219 ;;		_ApplicationTask
  1220 ;;		_MTOUCH_Button_SetNotPressedCallback
  1221 ;;		_MTOUCH_Service_Mainloop
  1222 ;;		_MTOUCH_Slider_SetPositionChangedCallback
  1223 ;;		_SYSTEM_Initialize
  1224 ;; This function is called by:
  1225 ;;		Startup code after reset
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text0
  1230  003CD8                     __ptext0:
  1231                           	callstack 0
  1232  003CD8                     _main:
  1233                           	callstack 18
  1234  003CD8                     
  1235                           ;main.c: 53:     SYSTEM_Initialize();
  1236  003CD8  ECDC  F01F         	call	_SYSTEM_Initialize	;wreg free
  1237  003CDC                     
  1238                           ;main.c: 60:     (INTCONbits.GIE = 1);
  1239  003CDC  8EF2               	bsf	242,7,c	;volatile
  1240  003CDE                     
  1241                           ;main.c: 66:     (INTCONbits.PEIE = 1);
  1242  003CDE  8CF2               	bsf	242,6,c	;volatile
  1243  003CE0                     
  1244                           ;main.c: 72:     MTOUCH_Button_SetNotPressedCallback(ProcessButtonRelease);
  1245  003CE0  0E20               	movlw	low _ProcessButtonRelease
  1246  003CE2  6E16               	movwf	MTOUCH_Button_SetNotPressedCallback@callback^0,c
  1247  003CE4  0E3A               	movlw	high _ProcessButtonRelease
  1248  003CE6  6E17               	movwf	(MTOUCH_Button_SetNotPressedCallback@callback+1)^0,c
  1249  003CE8  0E00               	movlw	low (_ProcessButtonRelease shr (0+16))
  1250  003CEA  6E18               	movwf	(MTOUCH_Button_SetNotPressedCallback@callback+2)^0,c
  1251  003CEC  ECC6  F020         	call	_MTOUCH_Button_SetNotPressedCallback	;wreg free
  1252  003CF0                     
  1253                           ;main.c: 73:     MTOUCH_Slider_SetPositionChangedCallback(ProcessSliderChange);
  1254  003CF0  0EF2               	movlw	low _ProcessSliderChange
  1255  003CF2  6E16               	movwf	MTOUCH_Slider_SetPositionChangedCallback@callback^0,c
  1256  003CF4  0E40               	movlw	high _ProcessSliderChange
  1257  003CF6  6E17               	movwf	(MTOUCH_Slider_SetPositionChangedCallback@callback+1)^0,c
  1258  003CF8  0E00               	movlw	low (_ProcessSliderChange shr (0+16))
  1259  003CFA  6E18               	movwf	(MTOUCH_Slider_SetPositionChangedCallback@callback+2)^0,c
  1260  003CFC  ECB8  F020         	call	_MTOUCH_Slider_SetPositionChangedCallback	;wreg free
  1261  003D00                     l6635:
  1262                           
  1263                           ;main.c: 75:     {;main.c: 77:         MTOUCH_Service_Mainloop();
  1264  003D00  EC9A  F01C         	call	_MTOUCH_Service_Mainloop	;wreg free
  1265  003D04                     
  1266                           ;main.c: 79:         ApplicationTask();
  1267  003D04  EC7A  F00D         	call	_ApplicationTask	;wreg free
  1268  003D08  EF80  F01E         	goto	l6635
  1269  003D0C  EF37  F000         	goto	start
  1270  003D10                     __end_of_main:
  1271                           	callstack 0
  1272                           
  1273 ;; *************** function _SYSTEM_Initialize *****************
  1274 ;; Defined at:
  1275 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;		None
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;		None
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      void 
  1282 ;; Registers used:
  1283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1293 ;;Total ram usage:        0 bytes
  1294 ;; Hardware stack levels used:    1
  1295 ;; Hardware stack levels required when called:   10
  1296 ;; This function calls:
  1297 ;;		_ADCC_Initialize
  1298 ;;		_INTERRUPT_Initialize
  1299 ;;		_MTOUCH_Initialize
  1300 ;;		_OSCILLATOR_Initialize
  1301 ;;		_PIN_MANAGER_Initialize
  1302 ;;		_PMD_Initialize
  1303 ;;		_PWM4_Initialize
  1304 ;;		_TMR2_Initialize
  1305 ;; This function is called by:
  1306 ;;		_main
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text1
  1311  003FB8                     __ptext1:
  1312                           	callstack 0
  1313  003FB8                     _SYSTEM_Initialize:
  1314                           	callstack 20
  1315  003FB8                     
  1316                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1317  003FB8  ECEB  F020         	call	_INTERRUPT_Initialize	;wreg free
  1318  003FBC                     
  1319                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1320  003FBC  EC6B  F020         	call	_PMD_Initialize	;wreg free
  1321  003FC0                     
  1322                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1323  003FC0  EC86  F01A         	call	_PIN_MANAGER_Initialize	;wreg free
  1324  003FC4                     
  1325                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1326  003FC4  EC86  F020         	call	_OSCILLATOR_Initialize	;wreg free
  1327  003FC8                     
  1328                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  1329  003FC8  EC02  F01B         	call	_ADCC_Initialize	;wreg free
  1330  003FCC                     
  1331                           ;mcc_generated_files/mcc.c: 57:     PWM4_Initialize();
  1332  003FCC  EC92  F020         	call	_PWM4_Initialize	;wreg free
  1333  003FD0                     
  1334                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  1335  003FD0  EC3E  F020         	call	_TMR2_Initialize	;wreg free
  1336  003FD4                     
  1337                           ;mcc_generated_files/mcc.c: 59:     MTOUCH_Initialize();
  1338  003FD4  EC9D  F020         	call	_MTOUCH_Initialize	;wreg free
  1339  003FD8  0012               	return		;funcret
  1340  003FDA                     __end_of_SYSTEM_Initialize:
  1341                           	callstack 0
  1342                           
  1343 ;; *************** function _TMR2_Initialize *****************
  1344 ;; Defined at:
  1345 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;		None
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;		None
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      void 
  1352 ;; Registers used:
  1353 ;;		wreg, status,2
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1363 ;;Total ram usage:        0 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; Hardware stack levels required when called:    6
  1366 ;; This function calls:
  1367 ;;		Nothing
  1368 ;; This function is called by:
  1369 ;;		_SYSTEM_Initialize
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           	psect	text2
  1374  00407C                     __ptext2:
  1375                           	callstack 0
  1376  00407C                     _TMR2_Initialize:
  1377                           	callstack 23
  1378  00407C                     
  1379                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  1380  00407C  0E01               	movlw	1
  1381  00407E  6EBE               	movwf	190,c	;volatile
  1382                           
  1383                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  1384  004080  0E00               	movlw	0
  1385  004082  6EBD               	movwf	189,c	;volatile
  1386                           
  1387                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  1388  004084  0E00               	movlw	0
  1389  004086  6EBF               	movwf	191,c	;volatile
  1390                           
  1391                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xC7;
  1392  004088  0EC7               	movlw	199
  1393  00408A  6EBB               	movwf	187,c	;volatile
  1394                           
  1395                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  1396  00408C  0E00               	movlw	0
  1397  00408E  6EBA               	movwf	186,c	;volatile
  1398  004090                     
  1399                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  1400  004090  010E               	movlb	14	; () banked
  1401  004092  93C9               	bcf	201,1,b	;volatile
  1402                           
  1403                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
  1404  004094  0E80               	movlw	128
  1405  004096  6EBC               	movwf	188,c	;volatile
  1406  004098                     
  1407                           ; BSR set to: 14
  1408  004098  0012               	return		;funcret
  1409  00409A                     __end_of_TMR2_Initialize:
  1410                           	callstack 0
  1411                           
  1412 ;; *************** function _PWM4_Initialize *****************
  1413 ;; Defined at:
  1414 ;;		line 58 in file "mcc_generated_files/pwm4.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;		None
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;		None
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		wreg, status,2
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1432 ;;Total ram usage:        0 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; Hardware stack levels required when called:    6
  1435 ;; This function calls:
  1436 ;;		Nothing
  1437 ;; This function is called by:
  1438 ;;		_SYSTEM_Initialize
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text3
  1443  004124                     __ptext3:
  1444                           	callstack 0
  1445  004124                     _PWM4_Initialize:
  1446                           	callstack 23
  1447  004124                     
  1448                           ;mcc_generated_files/pwm4.c: 62:     PWM4CON = 0x80;
  1449  004124  0E80               	movlw	128
  1450  004126  6EA1               	movwf	161,c	;volatile
  1451                           
  1452                           ;mcc_generated_files/pwm4.c: 65:     PWM4DCH = 0x00;
  1453  004128  0E00               	movlw	0
  1454  00412A  6EA0               	movwf	160,c	;volatile
  1455                           
  1456                           ;mcc_generated_files/pwm4.c: 68:     PWM4DCL = 0x00;
  1457  00412C  0E00               	movlw	0
  1458  00412E  6E9F               	movwf	159,c	;volatile
  1459                           
  1460                           ;mcc_generated_files/pwm4.c: 71:     CCPTMRSbits.P4TSEL = 1;
  1461  004130  50AD               	movf	173,w,c	;volatile
  1462  004132  0B3F               	andlw	-193
  1463  004134  0940               	iorlw	64
  1464  004136  6EAD               	movwf	173,c	;volatile
  1465  004138  0012               	return		;funcret
  1466  00413A                     __end_of_PWM4_Initialize:
  1467                           	callstack 0
  1468                           
  1469 ;; *************** function _PMD_Initialize *****************
  1470 ;; Defined at:
  1471 ;;		line 76 in file "mcc_generated_files/mcc.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1489 ;;Total ram usage:        0 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:    6
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_SYSTEM_Initialize
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text4
  1500  0040D6                     __ptext4:
  1501                           	callstack 0
  1502  0040D6                     _PMD_Initialize:
  1503                           	callstack 23
  1504  0040D6                     
  1505                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
  1506  0040D6  0E00               	movlw	0
  1507  0040D8  010E               	movlb	14	; () banked
  1508  0040DA  6FDC               	movwf	220,b	;volatile
  1509                           
  1510                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
  1511  0040DC  0E00               	movlw	0
  1512  0040DE  6FDD               	movwf	221,b	;volatile
  1513                           
  1514                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
  1515  0040E0  0E00               	movlw	0
  1516  0040E2  6FDE               	movwf	222,b	;volatile
  1517                           
  1518                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
  1519  0040E4  0E00               	movlw	0
  1520  0040E6  6FDF               	movwf	223,b	;volatile
  1521                           
  1522                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
  1523  0040E8  0E00               	movlw	0
  1524  0040EA  6FE0               	movwf	224,b	;volatile
  1525                           
  1526                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
  1527  0040EC  0E00               	movlw	0
  1528  0040EE  6FE1               	movwf	225,b	;volatile
  1529  0040F0                     
  1530                           ; BSR set to: 14
  1531  0040F0  0012               	return		;funcret
  1532  0040F2                     __end_of_PMD_Initialize:
  1533                           	callstack 0
  1534                           
  1535 ;; *************** function _PIN_MANAGER_Initialize *****************
  1536 ;; Defined at:
  1537 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;		None
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, status,2
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1555 ;;Total ram usage:        0 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:    6
  1558 ;; This function calls:
  1559 ;;		Nothing
  1560 ;; This function is called by:
  1561 ;;		_SYSTEM_Initialize
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text5
  1566  00350C                     __ptext5:
  1567                           	callstack 0
  1568  00350C                     _PIN_MANAGER_Initialize:
  1569                           	callstack 23
  1570  00350C                     
  1571                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1572  00350C  0E00               	movlw	0
  1573  00350E  6E86               	movwf	134,c	;volatile
  1574                           
  1575                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x60;
  1576  003510  0E60               	movlw	96
  1577  003512  6E85               	movwf	133,c	;volatile
  1578                           
  1579                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1580  003514  0E00               	movlw	0
  1581  003516  6E82               	movwf	130,c	;volatile
  1582                           
  1583                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x06;
  1584  003518  0E06               	movlw	6
  1585  00351A  6E83               	movwf	131,c	;volatile
  1586                           
  1587                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0xF0;
  1588  00351C  0EF0               	movlw	240
  1589  00351E  6E84               	movwf	132,c	;volatile
  1590                           
  1591                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  1592  003520  0E07               	movlw	7
  1593  003522  6E8B               	movwf	139,c	;volatile
  1594                           
  1595                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xF7;
  1596  003524  0EF7               	movlw	247
  1597  003526  6E87               	movwf	135,c	;volatile
  1598                           
  1599                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF9;
  1600  003528  0EF9               	movlw	249
  1601  00352A  6E88               	movwf	136,c	;volatile
  1602                           
  1603                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x0F;
  1604  00352C  0E0F               	movlw	15
  1605  00352E  6E89               	movwf	137,c	;volatile
  1606                           
  1607                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x8F;
  1608  003530  0E8F               	movlw	143
  1609  003532  6E8A               	movwf	138,c	;volatile
  1610                           
  1611                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x8F;
  1612  003534  0E8F               	movlw	143
  1613  003536  010F               	movlb	15	; () banked
  1614  003538  6F21               	movwf	33,b	;volatile
  1615                           
  1616                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x0B;
  1617  00353A  0E0B               	movlw	11
  1618  00353C  6F1C               	movwf	28,b	;volatile
  1619                           
  1620                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xF9;
  1621  00353E  0EF9               	movlw	249
  1622  003540  6F14               	movwf	20,b	;volatile
  1623                           
  1624                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  1625  003542  0E07               	movlw	7
  1626  003544  6F29               	movwf	41,b	;volatile
  1627                           
  1628                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xF7;
  1629  003546  0EF7               	movlw	247
  1630  003548  6F0C               	movwf	12,b	;volatile
  1631                           
  1632                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  1633  00354A  0E00               	movlw	0
  1634  00354C  6F20               	movwf	32,b	;volatile
  1635                           
  1636                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  1637  00354E  0E00               	movlw	0
  1638  003550  6F28               	movwf	40,b	;volatile
  1639                           
  1640                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  1641  003552  0E00               	movlw	0
  1642  003554  6F13               	movwf	19,b	;volatile
  1643                           
  1644                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  1645  003556  0E00               	movlw	0
  1646  003558  6F0B               	movwf	11,b	;volatile
  1647                           
  1648                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  1649  00355A  0E00               	movlw	0
  1650  00355C  6F1B               	movwf	27,b	;volatile
  1651                           
  1652                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  1653  00355E  0E00               	movlw	0
  1654  003560  6F27               	movwf	39,b	;volatile
  1655                           
  1656                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  1657  003562  0E00               	movlw	0
  1658  003564  6F0A               	movwf	10,b	;volatile
  1659                           
  1660                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  1661  003566  0E00               	movlw	0
  1662  003568  6F12               	movwf	18,b	;volatile
  1663                           
  1664                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  1665  00356A  0E00               	movlw	0
  1666  00356C  6F1A               	movwf	26,b	;volatile
  1667                           
  1668                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  1669  00356E  0E00               	movlw	0
  1670  003570  6F1F               	movwf	31,b	;volatile
  1671  003572                     
  1672                           ; BSR set to: 15
  1673                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  1674  003572  6909               	setf	9,b	;volatile
  1675  003574                     
  1676                           ; BSR set to: 15
  1677                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  1678  003574  6911               	setf	17,b	;volatile
  1679  003576                     
  1680                           ; BSR set to: 15
  1681                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  1682  003576  6919               	setf	25,b	;volatile
  1683  003578                     
  1684                           ; BSR set to: 15
  1685                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  1686  003578  691E               	setf	30,b	;volatile
  1687                           
  1688                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  1689  00357A  0E07               	movlw	7
  1690  00357C  6F26               	movwf	38,b	;volatile
  1691  00357E                     
  1692                           ; BSR set to: 15
  1693                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  1694  00357E  6908               	setf	8,b	;volatile
  1695  003580                     
  1696                           ; BSR set to: 15
  1697                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  1698  003580  6910               	setf	16,b	;volatile
  1699  003582                     
  1700                           ; BSR set to: 15
  1701                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  1702  003582  6918               	setf	24,b	;volatile
  1703  003584                     
  1704                           ; BSR set to: 15
  1705                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  1706  003584  691D               	setf	29,b	;volatile
  1707                           
  1708                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  1709  003586  0E0F               	movlw	15
  1710  003588  6F25               	movwf	37,b	;volatile
  1711                           
  1712                           ;mcc_generated_files/pin_manager.c: 127:     RA3PPS = 0x08;
  1713  00358A  0E08               	movlw	8
  1714  00358C  010E               	movlb	14	; () banked
  1715  00358E  6FE5               	movwf	229,b	;volatile
  1716  003590                     
  1717                           ; BSR set to: 14
  1718  003590  0012               	return		;funcret
  1719  003592                     __end_of_PIN_MANAGER_Initialize:
  1720                           	callstack 0
  1721                           
  1722 ;; *************** function _OSCILLATOR_Initialize *****************
  1723 ;; Defined at:
  1724 ;;		line 62 in file "mcc_generated_files/mcc.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;		None
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;		None
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      void 
  1731 ;; Registers used:
  1732 ;;		wreg, status,2
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1742 ;;Total ram usage:        0 bytes
  1743 ;; Hardware stack levels used:    1
  1744 ;; Hardware stack levels required when called:    6
  1745 ;; This function calls:
  1746 ;;		Nothing
  1747 ;; This function is called by:
  1748 ;;		_SYSTEM_Initialize
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text6
  1753  00410C                     __ptext6:
  1754                           	callstack 0
  1755  00410C                     _OSCILLATOR_Initialize:
  1756                           	callstack 23
  1757  00410C                     
  1758                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
  1759  00410C  0E60               	movlw	96
  1760  00410E  010E               	movlb	14	; () banked
  1761  004110  6FD3               	movwf	211,b	;volatile
  1762                           
  1763                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
  1764  004112  0E00               	movlw	0
  1765  004114  6FD5               	movwf	213,b	;volatile
  1766                           
  1767                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
  1768  004116  0E00               	movlw	0
  1769  004118  6FD7               	movwf	215,b	;volatile
  1770                           
  1771                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x06;
  1772  00411A  0E06               	movlw	6
  1773  00411C  6FD9               	movwf	217,b	;volatile
  1774                           
  1775                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
  1776  00411E  0E00               	movlw	0
  1777  004120  6FD8               	movwf	216,b	;volatile
  1778  004122                     
  1779                           ; BSR set to: 14
  1780  004122  0012               	return		;funcret
  1781  004124                     __end_of_OSCILLATOR_Initialize:
  1782                           	callstack 0
  1783                           
  1784 ;; *************** function _INTERRUPT_Initialize *****************
  1785 ;; Defined at:
  1786 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;		None
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		None
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1804 ;;Total ram usage:        0 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:    6
  1807 ;; This function calls:
  1808 ;;		Nothing
  1809 ;; This function is called by:
  1810 ;;		_SYSTEM_Initialize
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	text7
  1815  0041D6                     __ptext7:
  1816                           	callstack 0
  1817  0041D6                     _INTERRUPT_Initialize:
  1818                           	callstack 23
  1819  0041D6                     
  1820                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  1821  0041D6  9AF2               	bcf	242,5,c	;volatile
  1822  0041D8  0012               	return		;funcret
  1823  0041DA                     __end_of_INTERRUPT_Initialize:
  1824                           	callstack 0
  1825                           
  1826 ;; *************** function _ADCC_Initialize *****************
  1827 ;; Defined at:
  1828 ;;		line 63 in file "mcc_generated_files/adcc.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;		None
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;		None
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      void 
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, status,0, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1846 ;;Total ram usage:        0 bytes
  1847 ;; Hardware stack levels used:    1
  1848 ;; Hardware stack levels required when called:    7
  1849 ;; This function calls:
  1850 ;;		_ADCC_SetADTIInterruptHandler
  1851 ;; This function is called by:
  1852 ;;		_SYSTEM_Initialize
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text8
  1857  003604                     __ptext8:
  1858                           	callstack 0
  1859  003604                     _ADCC_Initialize:
  1860                           	callstack 22
  1861  003604                     
  1862                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
  1863  003604  0E00               	movlw	0
  1864  003606  6E65               	movwf	101,c	;volatile
  1865                           
  1866                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
  1867  003608  0E00               	movlw	0
  1868  00360A  6E66               	movwf	102,c	;volatile
  1869                           
  1870                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
  1871  00360C  0E00               	movlw	0
  1872  00360E  6E67               	movwf	103,c	;volatile
  1873                           
  1874                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
  1875  003610  0E00               	movlw	0
  1876  003612  6E68               	movwf	104,c	;volatile
  1877                           
  1878                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
  1879  003614  0E00               	movlw	0
  1880  003616  6E63               	movwf	99,c	;volatile
  1881                           
  1882                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
  1883  003618  0E00               	movlw	0
  1884  00361A  6E64               	movwf	100,c	;volatile
  1885                           
  1886                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
  1887  00361C  0E00               	movlw	0
  1888  00361E  6E61               	movwf	97,c	;volatile
  1889                           
  1890                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
  1891  003620  0E00               	movlw	0
  1892  003622  010F               	movlb	15	; () banked
  1893  003624  6F5A               	movwf	90,b	;volatile
  1894                           
  1895                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
  1896  003626  0E00               	movlw	0
  1897  003628  6F58               	movwf	88,b	;volatile
  1898                           
  1899                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
  1900  00362A  0E00               	movlw	0
  1901  00362C  6F59               	movwf	89,b	;volatile
  1902                           
  1903                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
  1904  00362E  0E00               	movlw	0
  1905  003630  6F54               	movwf	84,b	;volatile
  1906                           
  1907                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x10;
  1908  003632  0E10               	movlw	16
  1909  003634  6F55               	movwf	85,b	;volatile
  1910                           
  1911                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
  1912  003636  0E00               	movlw	0
  1913  003638  6F56               	movwf	86,b	;volatile
  1914                           
  1915                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
  1916  00363A  0E00               	movlw	0
  1917  00363C  6E60               	movwf	96,c	;volatile
  1918                           
  1919                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
  1920  00363E  0E00               	movlw	0
  1921  003640  6F53               	movwf	83,b	;volatile
  1922                           
  1923                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x00;
  1924  003642  0E00               	movlw	0
  1925  003644  6F51               	movwf	81,b	;volatile
  1926                           
  1927                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x00;
  1928  003646  0E00               	movlw	0
  1929  003648  6F52               	movwf	82,b	;volatile
  1930                           
  1931                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0x84;
  1932  00364A  0E84               	movlw	132
  1933  00364C  6F5B               	movwf	91,b	;volatile
  1934                           
  1935                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0x00;
  1936  00364E  0E00               	movlw	0
  1937  003650  6F57               	movwf	87,b	;volatile
  1938  003652                     
  1939                           ; BSR set to: 15
  1940                           ;mcc_generated_files/adcc.c: 107:     PIR1bits.ADTIF = 0;
  1941  003652  010E               	movlb	14	; () banked
  1942  003654  93C6               	bcf	198,1,b	;volatile
  1943  003656                     
  1944                           ; BSR set to: 14
  1945                           ;mcc_generated_files/adcc.c: 109:     PIE1bits.ADTIE = 1;
  1946  003656  83BE               	bsf	190,1,b	;volatile
  1947  003658                     
  1948                           ; BSR set to: 14
  1949                           ;mcc_generated_files/adcc.c: 111:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
  1950  003658  0EE8               	movlw	low _ADCC_DefaultInterruptHandler
  1951  00365A  6E16               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler^0,c
  1952  00365C  0E41               	movlw	high _ADCC_DefaultInterruptHandler
  1953  00365E  6E17               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)^0,c
  1954  003660  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
  1955  003662  6E18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)^0,c
  1956  003664  ECBF  F020         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  1957  003668  0012               	return		;funcret
  1958  00366A                     __end_of_ADCC_Initialize:
  1959                           	callstack 0
  1960                           
  1961 ;; *************** function _MTOUCH_Slider_SetPositionChangedCallback *****************
  1962 ;; Defined at:
  1963 ;;		line 1000 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  callback        3   21[COMRAM] PTR FTN(enum E12944,)voi
  1966 ;;		 -> ProcessSliderChange(1), 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1978 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1981 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1982 ;;Total ram usage:        3 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:    6
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_main
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text9
  1993  004170                     __ptext9:
  1994                           	callstack 0
  1995  004170                     _MTOUCH_Slider_SetPositionChangedCallback:
  1996                           	callstack 24
  1997  004170                     
  1998                           ;mcc_generated_files/mtouch/mtouch_slider.c: 1000: void MTOUCH_Slider_SetPositionChanged
      +                          Callback(void (*callback)(enum mtouch_slider_names));mcc_generated_files/mtouch/mtouch_s
      +                          lider.c: 1001: {;mcc_generated_files/mtouch/mtouch_slider.c: 1002:     callback_position
      +                          _changed = callback;
  1999  004170  C016  F0D3         	movff	MTOUCH_Slider_SetPositionChangedCallback@callback,_callback_position_changed
  2000  004174  C017  F0D4         	movff	MTOUCH_Slider_SetPositionChangedCallback@callback+1,_callback_position_changed+1
  2001  004178  C018  F0D5         	movff	MTOUCH_Slider_SetPositionChangedCallback@callback+2,_callback_position_changed+2
  2002  00417C  0012               	return		;funcret
  2003  00417E                     __end_of_MTOUCH_Slider_SetPositionChangedCallback:
  2004                           	callstack 0
  2005                           
  2006 ;; *************** function _MTOUCH_Service_Mainloop *****************
  2007 ;; Defined at:
  2008 ;;		line 98 in file "mcc_generated_files/mtouch/mtouch.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;		None
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;		None
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      _Bool 
  2015 ;; Registers used:
  2016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2026 ;;Total ram usage:        0 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; Hardware stack levels required when called:   12
  2029 ;; This function calls:
  2030 ;;		_MTOUCH_Button_ServiceAll
  2031 ;;		_MTOUCH_Initialize
  2032 ;;		_MTOUCH_Sensor_SampleAll
  2033 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  2034 ;;		_MTOUCH_Slider_ServiceAll
  2035 ;;		_MTOUCH_Tick
  2036 ;;		_MTOUCH_needReburst
  2037 ;; This function is called by:
  2038 ;;		_main
  2039 ;;		_touch_example
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text10
  2044  003934                     __ptext10:
  2045                           	callstack 0
  2046  003934                     _MTOUCH_Service_Mainloop:
  2047                           	callstack 18
  2048  003934                     
  2049                           ;mcc_generated_files/mtouch/mtouch.c: 100:     if(mtouch_request_init)
  2050  003934  5041               	movf	_mtouch_request_init^0,w,c
  2051  003936  B4D8               	btfsc	status,2,c
  2052  003938  EFA0  F01C         	goto	u6261
  2053  00393C  EFA2  F01C         	goto	u6260
  2054  003940                     u6261:
  2055  003940  EFA6  F01C         	goto	l6557
  2056  003944                     u6260:
  2057  003944                     
  2058                           ;mcc_generated_files/mtouch/mtouch.c: 101:     {;mcc_generated_files/mtouch/mtouch.c: 10
      +                          2:         MTOUCH_Initialize();
  2059  003944  EC9D  F020         	call	_MTOUCH_Initialize	;wreg free
  2060  003948                     
  2061                           ;mcc_generated_files/mtouch/mtouch.c: 103:         mtouch_request_init = 0;
  2062  003948  0E00               	movlw	0
  2063  00394A  6E41               	movwf	_mtouch_request_init^0,c
  2064  00394C                     l6557:
  2065                           
  2066                           ;mcc_generated_files/mtouch/mtouch.c: 106:     mtouch_time_toScan = 1;
  2067  00394C  0E01               	movlw	1
  2068  00394E  6E42               	movwf	_mtouch_time_toScan^0,c
  2069  003950                     
  2070                           ;mcc_generated_files/mtouch/mtouch.c: 109:     {;mcc_generated_files/mtouch/mtouch.c: 11
      +                          0:             if(MTOUCH_Sensor_SampleAll() == 0)
  2071  003950  ECA5  F01F         	call	_MTOUCH_Sensor_SampleAll	;wreg free
  2072  003954  0900               	iorlw	0
  2073  003956  A4D8               	btfss	status,2,c
  2074  003958  EFB0  F01C         	goto	u6271
  2075  00395C  EFB2  F01C         	goto	u6270
  2076  003960                     u6271:
  2077  003960  EFB5  F01C         	goto	l6567
  2078  003964                     u6270:
  2079  003964                     
  2080                           ;mcc_generated_files/mtouch/mtouch.c: 111:                 return 0;
  2081  003964  0E00               	movlw	0
  2082  003966  EFC1  F01C         	goto	l647
  2083  00396A                     l6567:
  2084                           
  2085                           ;mcc_generated_files/mtouch/mtouch.c: 112:             MTOUCH_Button_ServiceAll();
  2086  00396A  ECED  F01F         	call	_MTOUCH_Button_ServiceAll	;wreg free
  2087                           
  2088                           ;mcc_generated_files/mtouch/mtouch.c: 113:             MTOUCH_Slider_ServiceAll();
  2089  00396E  ECB8  F01F         	call	_MTOUCH_Slider_ServiceAll	;wreg free
  2090  003972                     
  2091                           ;mcc_generated_files/mtouch/mtouch.c: 114:             mtouch_time_toScan = MTOUCH_needR
      +                          eburst();
  2092  003972  ECED  F020         	call	_MTOUCH_needReburst	;wreg free
  2093  003976  6E42               	movwf	_mtouch_time_toScan^0,c
  2094  003978                     
  2095                           ;mcc_generated_files/mtouch/mtouch.c: 115:             MTOUCH_Sensor_Sampled_ResetAll();
  2096  003978  EC71  F01C         	call	_MTOUCH_Sensor_Sampled_ResetAll	;wreg free
  2097  00397C                     
  2098                           ;mcc_generated_files/mtouch/mtouch.c: 116:             MTOUCH_Tick();
  2099  00397C  ECDF  F020         	call	_MTOUCH_Tick	;wreg free
  2100  003980                     
  2101                           ;mcc_generated_files/mtouch/mtouch.c: 117:             return 1;
  2102  003980  0E01               	movlw	1
  2103  003982                     l647:
  2104  003982  0012               	return		;funcret
  2105  003984                     __end_of_MTOUCH_Service_Mainloop:
  2106                           	callstack 0
  2107                           
  2108 ;; *************** function _MTOUCH_needReburst *****************
  2109 ;; Defined at:
  2110 ;;		line 140 in file "mcc_generated_files/mtouch/mtouch.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;  needReburst     1    0        _Bool 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      _Bool 
  2117 ;; Registers used:
  2118 ;;		wreg
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2125 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2127 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2128 ;;Total ram usage:        1 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    6
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_MTOUCH_Service_Mainloop
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text11
  2139  0041DA                     __ptext11:
  2140                           	callstack 0
  2141  0041DA                     _MTOUCH_needReburst:
  2142                           	callstack 23
  2143  0041DA                     
  2144                           ;mcc_generated_files/mtouch/mtouch.c: 144:     return needReburst;
  2145  0041DA  0E00               	movlw	0
  2146  0041DC  0012               	return		;funcret
  2147  0041DE                     __end_of_MTOUCH_needReburst:
  2148                           	callstack 0
  2149                           
  2150 ;; *************** function _MTOUCH_Tick *****************
  2151 ;; Defined at:
  2152 ;;		line 130 in file "mcc_generated_files/mtouch/mtouch.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;		None
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;		None
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2170 ;;Total ram usage:        0 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    8
  2173 ;; This function calls:
  2174 ;;		_MTOUCH_Button_Tick
  2175 ;; This function is called by:
  2176 ;;		_MTOUCH_Service_Mainloop
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           	psect	text12
  2181  0041BE                     __ptext12:
  2182                           	callstack 0
  2183  0041BE                     _MTOUCH_Tick:
  2184                           	callstack 21
  2185  0041BE                     
  2186                           ;mcc_generated_files/mtouch/mtouch.c: 132:     MTOUCH_Button_Tick();
  2187  0041BE  EC3D  F01F         	call	_MTOUCH_Button_Tick	;wreg free
  2188  0041C2  0012               	return		;funcret
  2189  0041C4                     __end_of_MTOUCH_Tick:
  2190                           	callstack 0
  2191                           
  2192 ;; *************** function _MTOUCH_Button_Tick *****************
  2193 ;; Defined at:
  2194 ;;		line 347 in file "mcc_generated_files/mtouch/mtouch_button.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;		None
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;  i               1   25[COMRAM] unsigned char 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  1    wreg      void 
  2201 ;; Registers used:
  2202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2209 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2211 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2212 ;;Total ram usage:        1 bytes
  2213 ;; Hardware stack levels used:    1
  2214 ;; Hardware stack levels required when called:    7
  2215 ;; This function calls:
  2216 ;;		_Button_Tick_helper
  2217 ;; This function is called by:
  2218 ;;		_MTOUCH_Tick
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           	psect	text13
  2223  003E7A                     __ptext13:
  2224                           	callstack 0
  2225  003E7A                     _MTOUCH_Button_Tick:
  2226                           	callstack 21
  2227  003E7A                     
  2228                           ;mcc_generated_files/mtouch/mtouch_button.c: 349:     uint8_t i;;mcc_generated_files/mto
      +                          uch/mtouch_button.c: 350:     for (i = 0; i < 5u; i++)
  2229  003E7A  0E00               	movlw	0
  2230  003E7C  6E1A               	movwf	MTOUCH_Button_Tick@i^0,c
  2231  003E7E                     l5197:
  2232                           
  2233                           ;mcc_generated_files/mtouch/mtouch_button.c: 351:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 352:         Button_Tick_helper(&mtouch_button[i]);
  2234  003E7E  501A               	movf	MTOUCH_Button_Tick@i^0,w,c
  2235  003E80  0D11               	mullw	17
  2236  003E82  0E00               	movlw	low _mtouch_button
  2237  003E84  24F3               	addwf	243,w,c
  2238  003E86  6E16               	movwf	Button_Tick_helper@button^0,c
  2239  003E88  0E01               	movlw	high _mtouch_button
  2240  003E8A  20F4               	addwfc	prodh,w,c
  2241  003E8C  6E17               	movwf	(Button_Tick_helper@button+1)^0,c
  2242  003E8E  EC35  F01B         	call	_Button_Tick_helper	;wreg free
  2243  003E92                     
  2244                           ;mcc_generated_files/mtouch/mtouch_button.c: 353:     }
  2245  003E92  2A1A               	incf	MTOUCH_Button_Tick@i^0,f,c
  2246  003E94  0E04               	movlw	4
  2247  003E96  641A               	cpfsgt	MTOUCH_Button_Tick@i^0,c
  2248  003E98  EF50  F01F         	goto	u4321
  2249  003E9C  EF52  F01F         	goto	u4320
  2250  003EA0                     u4321:
  2251  003EA0  EF3F  F01F         	goto	l5197
  2252  003EA4                     u4320:
  2253  003EA4  0012               	return		;funcret
  2254  003EA6                     __end_of_MTOUCH_Button_Tick:
  2255                           	callstack 0
  2256                           
  2257 ;; *************** function _Button_Tick_helper *****************
  2258 ;; Defined at:
  2259 ;;		line 355 in file "mcc_generated_files/mtouch/mtouch_button.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  button          2   21[COMRAM] PTR struct .
  2262 ;;		 -> mtouch_button(85), 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2274 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2276 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2277 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2278 ;;Total ram usage:        4 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    6
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_MTOUCH_Button_Tick
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text14
  2289  00366A                     __ptext14:
  2290                           	callstack 0
  2291  00366A                     _Button_Tick_helper:
  2292                           	callstack 21
  2293  00366A                     
  2294                           ;mcc_generated_files/mtouch/mtouch_button.c: 355: static void Button_Tick_helper(mtouch_
      +                          button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 356: {;mcc_generated_files
      +                          /mtouch/mtouch_button.c: 358:     if ((button->state) == MTOUCH_BUTTON_STATE_pressed)
  2295  00366A  EE20 F002          	lfsr	2,2
  2296  00366E  5016               	movf	Button_Tick_helper@button^0,w,c
  2297  003670  26D9               	addwf	fsr2l,f,c
  2298  003672  5017               	movf	(Button_Tick_helper@button+1)^0,w,c
  2299  003674  22DA               	addwfc	fsr2h,f,c
  2300  003676  0E02               	movlw	2
  2301  003678  18DE               	xorwf	postinc2,w,c
  2302  00367A  A4D8               	btfss	status,2,c
  2303  00367C  EF42  F01B         	goto	u4001
  2304  003680  EF44  F01B         	goto	u4000
  2305  003684                     u4001:
  2306  003684  EF66  F01B         	goto	l495
  2307  003688                     u4000:
  2308  003688                     
  2309                           ;mcc_generated_files/mtouch/mtouch_button.c: 359:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 360:         (button->counter)++;
  2310  003688  EE20 F00B          	lfsr	2,11
  2311  00368C  5016               	movf	Button_Tick_helper@button^0,w,c
  2312  00368E  26D9               	addwf	fsr2l,f,c
  2313  003690  5017               	movf	(Button_Tick_helper@button+1)^0,w,c
  2314  003692  22DA               	addwfc	fsr2h,f,c
  2315  003694  2ADE               	incf	postinc2,f,c
  2316  003696  0E00               	movlw	0
  2317  003698  22DD               	addwfc	postdec2,f,c
  2318                           
  2319                           ;mcc_generated_files/mtouch/mtouch_button.c: 361:         if (button->counter == (mtouch
      +                          _button_statecounter_t)0)
  2320  00369A  EE20 F00B          	lfsr	2,11
  2321  00369E  5016               	movf	Button_Tick_helper@button^0,w,c
  2322  0036A0  26D9               	addwf	fsr2l,f,c
  2323  0036A2  5017               	movf	(Button_Tick_helper@button+1)^0,w,c
  2324  0036A4  22DA               	addwfc	fsr2h,f,c
  2325  0036A6  50DE               	movf	postinc2,w,c
  2326  0036A8  10DE               	iorwf	postinc2,w,c
  2327  0036AA  A4D8               	btfss	status,2,c
  2328  0036AC  EF5A  F01B         	goto	u4011
  2329  0036B0  EF5C  F01B         	goto	u4010
  2330  0036B4                     u4011:
  2331  0036B4  EF66  F01B         	goto	l495
  2332  0036B8                     u4010:
  2333  0036B8                     
  2334                           ;mcc_generated_files/mtouch/mtouch_button.c: 362:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 363:             button->counter = (mtouch_button_statecounter_t)0xFFFF;
  2335  0036B8  EE20 F00B          	lfsr	2,11
  2336  0036BC  5016               	movf	Button_Tick_helper@button^0,w,c
  2337  0036BE  26D9               	addwf	fsr2l,f,c
  2338  0036C0  5017               	movf	(Button_Tick_helper@button+1)^0,w,c
  2339  0036C2  22DA               	addwfc	fsr2h,f,c
  2340  0036C4  0EFF               	movlw	255
  2341  0036C6  6EDE               	movwf	postinc2,c
  2342  0036C8  0EFF               	movlw	255
  2343  0036CA  6EDD               	movwf	postdec2,c
  2344  0036CC                     l495:
  2345  0036CC  0012               	return		;funcret
  2346  0036CE                     __end_of_Button_Tick_helper:
  2347                           	callstack 0
  2348                           
  2349 ;; *************** function _MTOUCH_Slider_ServiceAll *****************
  2350 ;; Defined at:
  2351 ;;		line 980 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;		None
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  slider          1   50[COMRAM] enum E12944
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      void 
  2358 ;; Registers used:
  2359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2368 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2369 ;;Total ram usage:        1 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:   11
  2372 ;; This function calls:
  2373 ;;		_Slider_Service
  2374 ;; This function is called by:
  2375 ;;		_MTOUCH_Service_Mainloop
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text15
  2380  003F70                     __ptext15:
  2381                           	callstack 0
  2382  003F70                     _MTOUCH_Slider_ServiceAll:
  2383                           	callstack 18
  2384  003F70                     
  2385                           ;mcc_generated_files/mtouch/mtouch_slider.c: 982:     enum mtouch_slider_names slider;;m
      +                          cc_generated_files/mtouch/mtouch_slider.c: 985:     sliderGroupStatus = 0u;
  2386  003F70  0E00               	movlw	0
  2387  003F72  0100               	movlb	0	; () banked
  2388  003F74  6F96               	movwf	_sliderGroupStatus& (0+255),b
  2389                           
  2390                           ;mcc_generated_files/mtouch/mtouch_slider.c: 987:     for (slider = 0u; slider < 1u; sli
      +                          der++)
  2391  003F76  0E00               	movlw	0
  2392  003F78  6E33               	movwf	MTOUCH_Slider_ServiceAll@slider^0,c
  2393  003F7A                     l6545:
  2394                           
  2395                           ;mcc_generated_files/mtouch/mtouch_slider.c: 988:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 989:         Slider_Service(slider);
  2396  003F7A  5033               	movf	MTOUCH_Slider_ServiceAll@slider^0,w,c
  2397  003F7C  EC3A  F009         	call	_Slider_Service
  2398  003F80                     
  2399                           ;mcc_generated_files/mtouch/mtouch_slider.c: 990:     }
  2400  003F80  2A33               	incf	MTOUCH_Slider_ServiceAll@slider^0,f,c
  2401  003F82  5033               	movf	MTOUCH_Slider_ServiceAll@slider^0,w,c
  2402  003F84  B4D8               	btfsc	status,2,c
  2403  003F86  EFC7  F01F         	goto	u6251
  2404  003F8A  EFC9  F01F         	goto	u6250
  2405  003F8E                     u6251:
  2406  003F8E  EFBD  F01F         	goto	l6545
  2407  003F92                     u6250:
  2408  003F92  0012               	return		;funcret
  2409  003F94                     __end_of_MTOUCH_Slider_ServiceAll:
  2410                           	callstack 0
  2411                           
  2412 ;; *************** function _Slider_Service *****************
  2413 ;; Defined at:
  2414 ;;		line 690 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  sliderName      1    wreg     enum E12944
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  sliderName      1   19[BANK1 ] enum E12944
  2419 ;;  slider          2   20[BANK1 ] PTR struct .
  2420 ;;		 -> mtouch_slider(17), 
  2421 ;;  segment         2   17[BANK1 ] unsigned short 
  2422 ;;  position        2   14[BANK1 ] unsigned short 
  2423 ;;  status          1   16[BANK1 ] unsigned char 
  2424 ;;  valid_contac    1   13[BANK1 ] unsigned char 
  2425 ;;  group_status    1   12[BANK1 ] unsigned char 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2436 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2437 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2438 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2439 ;;Total ram usage:       14 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:   10
  2442 ;; This function calls:
  2443 ;;		_MTOUCH_Button_isPressed
  2444 ;;		_ProcessSliderChange
  2445 ;;		_Slider_DefaultCallback
  2446 ;;		_calculate_contact_size
  2447 ;;		_calculate_position
  2448 ;; This function is called by:
  2449 ;;		_MTOUCH_Slider_ServiceAll
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           	psect	text16
  2454  001274                     __ptext16:
  2455                           	callstack 0
  2456  001274                     _Slider_Service:
  2457                           	callstack 18
  2458                           
  2459                           ;incstack = 0
  2460                           ;Slider_Service@sliderName stored from wreg
  2461  001274  0101               	movlb	1	; () banked
  2462  001276  6F68               	movwf	Slider_Service@sliderName& (0+255),b
  2463  001278                     
  2464                           ;mcc_generated_files/mtouch/mtouch_slider.c: 690: static void Slider_Service(enum mtouch
      +                          _slider_names sliderName);mcc_generated_files/mtouch/mtouch_slider.c: 691: {;mcc_generat
      +                          ed_files/mtouch/mtouch_slider.c: 693:     uint16_t segment, position;;mcc_generated_file
      +                          s/mtouch/mtouch_slider.c: 694:     uint8_t status = 0u, group_status = 0u;
  2465  001278  0E00               	movlw	0
  2466  00127A  0101               	movlb	1	; () banked
  2467  00127C  6F65               	movwf	Slider_Service@status& (0+255),b
  2468  00127E  0E00               	movlw	0
  2469  001280  6F61               	movwf	Slider_Service@group_status& (0+255),b
  2470                           
  2471                           ;mcc_generated_files/mtouch/mtouch_slider.c: 695:     uint8_t valid_contact_found = 0u;
  2472  001282  0E00               	movlw	0
  2473  001284  6F62               	movwf	Slider_Service@valid_contact_found& (0+255),b
  2474  001286                     
  2475                           ; BSR set to: 1
  2476                           ;mcc_generated_files/mtouch/mtouch_slider.c: 697:     if (sliderName < 1u)
  2477  001286  5168               	movf	Slider_Service@sliderName& (0+255),w,b
  2478  001288  A4D8               	btfss	status,2,c
  2479  00128A  EF49  F009         	goto	u6111
  2480  00128E  EF4B  F009         	goto	u6110
  2481  001292                     u6111:
  2482  001292  EF93  F00A         	goto	l812
  2483  001296                     u6110:
  2484  001296                     
  2485                           ; BSR set to: 1
  2486                           ;mcc_generated_files/mtouch/mtouch_slider.c: 698:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 700:         mtouch_slider_t* slider = &mtouch_slider[sliderName];
  2487  001296  5168               	movf	Slider_Service@sliderName& (0+255),w,b
  2488  001298  0D11               	mullw	17
  2489  00129A  0EE2               	movlw	low _mtouch_slider
  2490  00129C  24F3               	addwf	243,w,c
  2491  00129E  6F69               	movwf	Slider_Service@slider& (0+255),b
  2492  0012A0  0E00               	movlw	high _mtouch_slider
  2493  0012A2  20F4               	addwfc	prodh,w,c
  2494  0012A4  6F6A               	movwf	(Slider_Service@slider+1)& (0+255),b
  2495  0012A6                     
  2496                           ; BSR set to: 1
  2497                           ;mcc_generated_files/mtouch/mtouch_slider.c: 702:         if ((slider->type <= MTOUCH_TY
      +                          PE_WHEEL) || (slider->resolDeadband <= 0xCFu))
  2498  0012A6  EE20 F001          	lfsr	2,1
  2499  0012AA  5169               	movf	Slider_Service@slider& (0+255),w,b
  2500  0012AC  26D9               	addwf	fsr2l,f,c
  2501  0012AE  516A               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2502  0012B0  22DA               	addwfc	fsr2h,f,c
  2503  0012B2  0E01               	movlw	1
  2504  0012B4  64DF               	cpfsgt	indf2,c
  2505  0012B6  EF5F  F009         	goto	u6121
  2506  0012BA  EF61  F009         	goto	u6120
  2507  0012BE                     u6121:
  2508  0012BE  EF6F  F009         	goto	l6453
  2509  0012C2                     u6120:
  2510  0012C2                     
  2511                           ; BSR set to: 1
  2512  0012C2  EE20 F004          	lfsr	2,4
  2513  0012C6  5169               	movf	Slider_Service@slider& (0+255),w,b
  2514  0012C8  26D9               	addwf	fsr2l,f,c
  2515  0012CA  516A               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2516  0012CC  22DA               	addwfc	fsr2h,f,c
  2517  0012CE  0ED0               	movlw	208
  2518  0012D0  60DF               	cpfslt	indf2,c
  2519  0012D2  EF6D  F009         	goto	u6131
  2520  0012D6  EF6F  F009         	goto	u6130
  2521  0012DA                     u6131:
  2522  0012DA  EF93  F00A         	goto	l812
  2523  0012DE                     u6130:
  2524  0012DE                     l6453:
  2525                           
  2526                           ; BSR set to: 1
  2527                           ;mcc_generated_files/mtouch/mtouch_slider.c: 703:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 705:             resol_bits = (slider->resolDeadband & 0xF0u) >> 4u;
  2528  0012DE  EE20 F004          	lfsr	2,4
  2529  0012E2  5169               	movf	Slider_Service@slider& (0+255),w,b
  2530  0012E4  26D9               	addwf	fsr2l,f,c
  2531  0012E6  516A               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2532  0012E8  22DA               	addwfc	fsr2h,f,c
  2533  0012EA  50DF               	movf	indf2,w,c
  2534  0012EC  6F5D               	movwf	??_Slider_Service& (0+255),b
  2535  0012EE  395D               	swapf	??_Slider_Service& (0+255),w,b
  2536  0012F0  0B0F               	andlw	15
  2537  0012F2  0B0F               	andlw	15
  2538  0012F4  6E49               	movwf	_resol_bits^0,c
  2539  0012F6                     
  2540                           ; BSR set to: 1
  2541                           ;mcc_generated_files/mtouch/mtouch_slider.c: 706:             resol_value = (uint16_t) (
      +                          (uint16_t) 1u << resol_bits);
  2542  0012F6  C049  F15D         	movff	_resol_bits,??_Slider_Service
  2543  0012FA  0E01               	movlw	1
  2544  0012FC  6F5E               	movwf	(??_Slider_Service+1)& (0+255),b
  2545  0012FE  0E00               	movlw	0
  2546  001300  6F5F               	movwf	(??_Slider_Service+2)& (0+255),b
  2547  001302  2B5D               	incf	??_Slider_Service& (0+255),f,b
  2548  001304  EF87  F009         	goto	u6144
  2549  001308                     u6145:
  2550  001308  90D8               	bcf	status,0,c
  2551  00130A  375E               	rlcf	(??_Slider_Service+1)& (0+255),f,b
  2552  00130C  375F               	rlcf	(??_Slider_Service+2)& (0+255),f,b
  2553  00130E                     u6144:
  2554  00130E  2F5D               	decfsz	??_Slider_Service& (0+255),f,b
  2555  001310  EF84  F009         	goto	u6145
  2556  001314  C15E  F03C         	movff	??_Slider_Service+1,_resol_value
  2557  001318  C15F  F03D         	movff	??_Slider_Service+2,_resol_value+1
  2558  00131C                     
  2559                           ;mcc_generated_files/mtouch/mtouch_slider.c: 709:             slider->contactSize = calc
      +                          ulate_contact_size(slider);
  2560  00131C  C169  F023         	movff	Slider_Service@slider,calculate_contact_size@slider
  2561  001320  C16A  F024         	movff	Slider_Service@slider+1,calculate_contact_size@slider+1
  2562  001324  EC06  F019         	call	_calculate_contact_size	;wreg free
  2563  001328  0101               	movlb	1	; () banked
  2564  00132A  EE20 F00E          	lfsr	2,14
  2565  00132E  5169               	movf	Slider_Service@slider& (0+255),w,b
  2566  001330  26D9               	addwf	fsr2l,f,c
  2567  001332  516A               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2568  001334  22DA               	addwfc	fsr2h,f,c
  2569  001336  C023  FFDE         	movff	?_calculate_contact_size,postinc2
  2570  00133A  C024  FFDD         	movff	?_calculate_contact_size+1,postdec2
  2571  00133E                     
  2572                           ; BSR set to: 1
  2573                           ;mcc_generated_files/mtouch/mtouch_slider.c: 711:             if (slider->contactSize >=
      +                           slider->contactThreshold)
  2574  00133E  EE20 F006          	lfsr	2,6
  2575  001342  5169               	movf	Slider_Service@slider& (0+255),w,b
  2576  001344  26D9               	addwf	fsr2l,f,c
  2577  001346  516A               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2578  001348  22DA               	addwfc	fsr2h,f,c
  2579  00134A  EE10 F00E          	lfsr	1,14
  2580  00134E  5169               	movf	Slider_Service@slider& (0+255),w,b
  2581  001350  26E1               	addwf	fsr1l,f,c
  2582  001352  516A               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2583  001354  22E2               	addwfc	fsr1h,f,c
  2584  001356  50DE               	movf	postinc2,w,c
  2585  001358  5CE6               	subwf	postinc1,w,c
  2586  00135A  50DE               	movf	postinc2,w,c
  2587  00135C  58E6               	subwfb	postinc1,w,c
  2588  00135E  A0D8               	btfss	status,0,c
  2589  001360  EFB4  F009         	goto	u6151
  2590  001364  EFB6  F009         	goto	u6150
  2591  001368                     u6151:
  2592  001368  EF0F  F00A         	goto	l6477
  2593  00136C                     u6150:
  2594  00136C                     
  2595                           ; BSR set to: 1
  2596                           ;mcc_generated_files/mtouch/mtouch_slider.c: 712:             {;mcc_generated_files/mtou
      +                          ch/mtouch_slider.c: 714:                 if ((slider->sliderStatus & (uint8_t)((uint8_t)
      +                          3u<<0u)) == MTOUCH_SLIDER_STATE_pressed)
  2597  00136C  EE20 F010          	lfsr	2,16
  2598  001370  5169               	movf	Slider_Service@slider& (0+255),w,b
  2599  001372  26D9               	addwf	fsr2l,f,c
  2600  001374  516A               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2601  001376  22DA               	addwfc	fsr2h,f,c
  2602  001378  50DF               	movf	indf2,w,c
  2603  00137A  0B03               	andlw	3
  2604  00137C  0A02               	xorlw	2
  2605  00137E  A4D8               	btfss	status,2,c
  2606  001380  EFC4  F009         	goto	u6161
  2607  001384  EFC6  F009         	goto	u6160
  2608  001388                     u6161:
  2609  001388  EFCA  F009         	goto	l6465
  2610  00138C                     u6160:
  2611  00138C                     
  2612                           ; BSR set to: 1
  2613                           ;mcc_generated_files/mtouch/mtouch_slider.c: 715:                 {;mcc_generated_files/
      +                          mtouch/mtouch_slider.c: 716:                     valid_contact_found = 1u;
  2614  00138C  0E01               	movlw	1
  2615  00138E  6F62               	movwf	Slider_Service@valid_contact_found& (0+255),b
  2616                           
  2617                           ;mcc_generated_files/mtouch/mtouch_slider.c: 717:                 }
  2618  001390  EF0F  F00A         	goto	l6477
  2619  001394                     l6465:
  2620                           
  2621                           ; BSR set to: 1
  2622                           ;mcc_generated_files/mtouch/mtouch_slider.c: 719:                 {;mcc_generated_files/
      +                          mtouch/mtouch_slider.c: 721:                     segment = slider->startSegment;
  2623  001394  EE20 F002          	lfsr	2,2
  2624  001398  5169               	movf	Slider_Service@slider& (0+255),w,b
  2625  00139A  26D9               	addwf	fsr2l,f,c
  2626  00139C  516A               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2627  00139E  22DA               	addwfc	fsr2h,f,c
  2628  0013A0  50DF               	movf	indf2,w,c
  2629  0013A2  6F5D               	movwf	??_Slider_Service& (0+255),b
  2630  0013A4  515D               	movf	??_Slider_Service& (0+255),w,b
  2631  0013A6  6F66               	movwf	Slider_Service@segment& (0+255),b
  2632  0013A8  6B67               	clrf	(Slider_Service@segment+1)& (0+255),b
  2633  0013AA                     l6467:
  2634                           
  2635                           ; BSR set to: 1
  2636                           ;mcc_generated_files/mtouch/mtouch_slider.c: 723:                     {;mcc_generated_fi
      +                          les/mtouch/mtouch_slider.c: 724:                         if (MTOUCH_Button_isPressed(seg
      +                          ment))
  2637  0013AA  5166               	movf	Slider_Service@segment& (0+255),w,b
  2638  0013AC  EC37  F01D         	call	_MTOUCH_Button_isPressed
  2639  0013B0  0900               	iorlw	0
  2640  0013B2  B4D8               	btfsc	status,2,c
  2641  0013B4  EFDE  F009         	goto	u6171
  2642  0013B8  EFE0  F009         	goto	u6170
  2643  0013BC                     u6171:
  2644  0013BC  EFE8  F009         	goto	l6473
  2645  0013C0                     u6170:
  2646  0013C0                     
  2647                           ;mcc_generated_files/mtouch/mtouch_slider.c: 725:                         {;mcc_generate
      +                          d_files/mtouch/mtouch_slider.c: 727:                             valid_contact_found = 1
      +                          u;
  2648  0013C0  0E01               	movlw	1
  2649  0013C2  0101               	movlb	1	; () banked
  2650  0013C4  6F62               	movwf	Slider_Service@valid_contact_found& (0+255),b
  2651  0013C6                     
  2652                           ; BSR set to: 1
  2653                           ;mcc_generated_files/mtouch/mtouch_slider.c: 728:                             callback_p
      +                          ressed(sliderName);
  2654  0013C6  5168               	movf	Slider_Service@sliderName& (0+255),w,b
  2655  0013C8  ECF1  F020         	call	_Slider_DefaultCallback
  2656                           
  2657                           ;mcc_generated_files/mtouch/mtouch_slider.c: 729:                             break;
  2658  0013CC  EF0F  F00A         	goto	l6477
  2659  0013D0                     l6473:
  2660                           
  2661                           ;mcc_generated_files/mtouch/mtouch_slider.c: 733:                         segment = segm
      +                          ent + 1u;
  2662  0013D0  0E01               	movlw	1
  2663  0013D2  0101               	movlb	1	; () banked
  2664  0013D4  2566               	addwf	Slider_Service@segment& (0+255),w,b
  2665  0013D6  6F66               	movwf	Slider_Service@segment& (0+255),b
  2666  0013D8  0E00               	movlw	0
  2667  0013DA  2167               	addwfc	(Slider_Service@segment+1)& (0+255),w,b
  2668  0013DC  6F67               	movwf	(Slider_Service@segment+1)& (0+255),b
  2669  0013DE                     
  2670                           ; BSR set to: 1
  2671                           ;mcc_generated_files/mtouch/mtouch_slider.c: 735:                     }
  2672  0013DE  EE20 F002          	lfsr	2,2
  2673  0013E2  5169               	movf	Slider_Service@slider& (0+255),w,b
  2674  0013E4  26D9               	addwf	fsr2l,f,c
  2675  0013E6  516A               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2676  0013E8  22DA               	addwfc	fsr2h,f,c
  2677  0013EA  50DF               	movf	indf2,w,c
  2678  0013EC  6F5D               	movwf	??_Slider_Service& (0+255),b
  2679  0013EE  6B5E               	clrf	(??_Slider_Service+1)& (0+255),b
  2680  0013F0  EE20 F003          	lfsr	2,3
  2681  0013F4  5169               	movf	Slider_Service@slider& (0+255),w,b
  2682  0013F6  26D9               	addwf	fsr2l,f,c
  2683  0013F8  516A               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2684  0013FA  22DA               	addwfc	fsr2h,f,c
  2685  0013FC  50DF               	movf	indf2,w,c
  2686  0013FE  6F5F               	movwf	(??_Slider_Service+2)& (0+255),b
  2687  001400  515F               	movf	(??_Slider_Service+2)& (0+255),w,b
  2688  001402  275D               	addwf	??_Slider_Service& (0+255),f,b
  2689  001404  0E00               	movlw	0
  2690  001406  235E               	addwfc	(??_Slider_Service+1)& (0+255),f,b
  2691  001408  515D               	movf	??_Slider_Service& (0+255),w,b
  2692  00140A  5D66               	subwf	Slider_Service@segment& (0+255),w,b
  2693  00140C  515E               	movf	(??_Slider_Service+1)& (0+255),w,b
  2694  00140E  5967               	subwfb	(Slider_Service@segment+1)& (0+255),w,b
  2695  001410  A0D8               	btfss	status,0,c
  2696  001412  EF0D  F00A         	goto	u6181
  2697  001416  EF0F  F00A         	goto	u6180
  2698  00141A                     u6181:
  2699  00141A  EFD5  F009         	goto	l6467
  2700  00141E                     u6180:
  2701  00141E                     l6477:
  2702                           
  2703                           ;mcc_generated_files/mtouch/mtouch_slider.c: 744:             if (0u == valid_contact_fo
      +                          und)
  2704  00141E  0101               	movlb	1	; () banked
  2705  001420  5162               	movf	Slider_Service@valid_contact_found& (0+255),w,b
  2706  001422  A4D8               	btfss	status,2,c
  2707  001424  EF16  F00A         	goto	u6191
  2708  001428  EF18  F00A         	goto	u6190
  2709  00142C                     u6191:
  2710  00142C  EF49  F00A         	goto	l6487
  2711  001430                     u6190:
  2712  001430                     
  2713                           ; BSR set to: 1
  2714                           ;mcc_generated_files/mtouch/mtouch_slider.c: 745:             {;mcc_generated_files/mtou
      +                          ch/mtouch_slider.c: 747:                 slider->contactSize = 0u;
  2715  001430  EE20 F00E          	lfsr	2,14
  2716  001434  5169               	movf	Slider_Service@slider& (0+255),w,b
  2717  001436  26D9               	addwf	fsr2l,f,c
  2718  001438  516A               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2719  00143A  22DA               	addwfc	fsr2h,f,c
  2720  00143C  0E00               	movlw	0
  2721  00143E  6EDE               	movwf	postinc2,c
  2722  001440  0E00               	movlw	0
  2723  001442  6EDD               	movwf	postdec2,c
  2724                           
  2725                           ;mcc_generated_files/mtouch/mtouch_slider.c: 749:                 if ((slider->sliderSta
      +                          tus & (uint8_t)((uint8_t)3u<<0u)) == MTOUCH_SLIDER_STATE_pressed)
  2726  001444  EE20 F010          	lfsr	2,16
  2727  001448  5169               	movf	Slider_Service@slider& (0+255),w,b
  2728  00144A  26D9               	addwf	fsr2l,f,c
  2729  00144C  516A               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2730  00144E  22DA               	addwfc	fsr2h,f,c
  2731  001450  50DF               	movf	indf2,w,c
  2732  001452  0B03               	andlw	3
  2733  001454  0A02               	xorlw	2
  2734  001456  A4D8               	btfss	status,2,c
  2735  001458  EF30  F00A         	goto	u6201
  2736  00145C  EF32  F00A         	goto	u6200
  2737  001460                     u6201:
  2738  001460  EF3F  F00A         	goto	l6485
  2739  001464                     u6200:
  2740  001464                     
  2741                           ; BSR set to: 1
  2742                           ;mcc_generated_files/mtouch/mtouch_slider.c: 750:                 {;mcc_generated_files/
      +                          mtouch/mtouch_slider.c: 751:                     slider->sliderStatus = MTOUCH_SLIDER_ST
      +                          ATE_notPressed;
  2743  001464  EE20 F010          	lfsr	2,16
  2744  001468  5169               	movf	Slider_Service@slider& (0+255),w,b
  2745  00146A  26D9               	addwf	fsr2l,f,c
  2746  00146C  516A               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2747  00146E  22DA               	addwfc	fsr2h,f,c
  2748  001470  0E01               	movlw	1
  2749  001472  6EDF               	movwf	indf2,c
  2750  001474                     
  2751                           ; BSR set to: 1
  2752                           ;mcc_generated_files/mtouch/mtouch_slider.c: 752:                     callback_released(
      +                          sliderName);
  2753  001474  5168               	movf	Slider_Service@sliderName& (0+255),w,b
  2754  001476  ECF1  F020         	call	_Slider_DefaultCallback
  2755                           
  2756                           ;mcc_generated_files/mtouch/mtouch_slider.c: 753:                 }
  2757  00147A  EF84  F00A         	goto	l6501
  2758  00147E                     l6485:
  2759                           
  2760                           ; BSR set to: 1
  2761                           ;mcc_generated_files/mtouch/mtouch_slider.c: 755:                 {;mcc_generated_files/
      +                          mtouch/mtouch_slider.c: 756:                     slider->sliderStatus = MTOUCH_SLIDER_ST
      +                          ATE_notPressed;
  2762  00147E  EE20 F010          	lfsr	2,16
  2763  001482  5169               	movf	Slider_Service@slider& (0+255),w,b
  2764  001484  26D9               	addwf	fsr2l,f,c
  2765  001486  516A               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2766  001488  22DA               	addwfc	fsr2h,f,c
  2767  00148A  0E01               	movlw	1
  2768  00148C  6EDF               	movwf	indf2,c
  2769  00148E  EF84  F00A         	goto	l6501
  2770  001492                     l6487:
  2771                           
  2772                           ; BSR set to: 1
  2773                           ;mcc_generated_files/mtouch/mtouch_slider.c: 760:             {;mcc_generated_files/mtou
      +                          ch/mtouch_slider.c: 762:                 position = calculate_position(slider);
  2774  001492  C169  F155         	movff	Slider_Service@slider,calculate_position@slider
  2775  001496  C16A  F156         	movff	Slider_Service@slider+1,calculate_position@slider+1
  2776  00149A  ECA9  F019         	call	_calculate_position	;wreg free
  2777  00149E  C155  F163         	movff	?_calculate_position,Slider_Service@position
  2778  0014A2  C156  F164         	movff	?_calculate_position+1,Slider_Service@position+1
  2779  0014A6                     
  2780                           ;mcc_generated_files/mtouch/mtouch_slider.c: 765:                 if (slider->sliderPosi
      +                          tion != position)
  2781  0014A6  0101               	movlb	1	; () banked
  2782  0014A8  EE20 F00C          	lfsr	2,12
  2783  0014AC  5169               	movf	Slider_Service@slider& (0+255),w,b
  2784  0014AE  26D9               	addwf	fsr2l,f,c
  2785  0014B0  516A               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2786  0014B2  22DA               	addwfc	fsr2h,f,c
  2787  0014B4  5163               	movf	Slider_Service@position& (0+255),w,b
  2788  0014B6  18DE               	xorwf	postinc2,w,c
  2789  0014B8  E109               	bnz	u6210
  2790  0014BA  5164               	movf	(Slider_Service@position+1)& (0+255),w,b
  2791  0014BC  18DE               	xorwf	postinc2,w,c
  2792  0014BE  B4D8               	btfsc	status,2,c
  2793  0014C0  EF64  F00A         	goto	u6211
  2794  0014C4  EF66  F00A         	goto	u6210
  2795  0014C8                     u6211:
  2796  0014C8  EF81  F00A         	goto	l6497
  2797  0014CC                     u6210:
  2798  0014CC                     
  2799                           ; BSR set to: 1
  2800                           ;mcc_generated_files/mtouch/mtouch_slider.c: 766:                 {;mcc_generated_files/
      +                          mtouch/mtouch_slider.c: 767:                     status |= (uint8_t)((uint8_t)1u<<2u);
  2801  0014CC  8565               	bsf	Slider_Service@status& (0+255),2,b
  2802  0014CE                     
  2803                           ; BSR set to: 1
  2804                           ;mcc_generated_files/mtouch/mtouch_slider.c: 768:                     slider->sliderPosi
      +                          tion = position;
  2805  0014CE  EE20 F00C          	lfsr	2,12
  2806  0014D2  5169               	movf	Slider_Service@slider& (0+255),w,b
  2807  0014D4  26D9               	addwf	fsr2l,f,c
  2808  0014D6  516A               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2809  0014D8  22DA               	addwfc	fsr2h,f,c
  2810  0014DA  C163  FFDE         	movff	Slider_Service@position,postinc2
  2811  0014DE  C164  FFDD         	movff	Slider_Service@position+1,postdec2
  2812  0014E2                     
  2813                           ; BSR set to: 1
  2814                           ;mcc_generated_files/mtouch/mtouch_slider.c: 769:                     callback_position_
      +                          changed(sliderName);
  2815  0014E2  D802               	call	u6228
  2816  0014E4  EF81  F00A         	goto	u6229
  2817  0014E8                     u6228:
  2818  0014E8  0005               	push	
  2819  0014EA  6EFA               	movwf	pclath,c
  2820  0014EC  0100               	movlb	0	; () banked
  2821  0014EE  51D3               	movf	_callback_position_changed& (0+255),w,b
  2822  0014F0  6EFD               	movwf	tosl,c
  2823  0014F2  51D4               	movf	(_callback_position_changed+1)& (0+255),w,b
  2824  0014F4  6EFE               	movwf	tosh,c
  2825  0014F6  51D5               	movf	(_callback_position_changed+2)& (0+255),w,b
  2826  0014F8  6EFF               	movwf	tosu,c
  2827  0014FA  50FA               	movf	pclath,w,c
  2828  0014FC  0101               	movlb	1	; () banked
  2829  0014FE  5168               	movf	Slider_Service@sliderName& (0+255),w,b
  2830  001500  0012               	return		;indir
  2831  001502                     u6229:
  2832  001502                     l6497:
  2833                           
  2834                           ;mcc_generated_files/mtouch/mtouch_slider.c: 773:                 status |= MTOUCH_SLIDE
      +                          R_STATE_pressed;
  2835  001502  0101               	movlb	1	; () banked
  2836  001504  8365               	bsf	Slider_Service@status& (0+255),1,b
  2837  001506                     
  2838                           ; BSR set to: 1
  2839                           ;mcc_generated_files/mtouch/mtouch_slider.c: 775:                 status |= (uint8_t)((u
      +                          int8_t)1u<<7u);
  2840  001506  8F65               	bsf	Slider_Service@status& (0+255),7,b
  2841  001508                     l6501:
  2842                           
  2843                           ;mcc_generated_files/mtouch/mtouch_slider.c: 779:             slider->sliderStatus = sta
      +                          tus;
  2844  001508  0101               	movlb	1	; () banked
  2845  00150A  EE20 F010          	lfsr	2,16
  2846  00150E  5169               	movf	Slider_Service@slider& (0+255),w,b
  2847  001510  26D9               	addwf	fsr2l,f,c
  2848  001512  516A               	movf	(Slider_Service@slider+1)& (0+255),w,b
  2849  001514  22DA               	addwfc	fsr2h,f,c
  2850  001516  C165  FFDF         	movff	Slider_Service@status,indf2
  2851  00151A                     
  2852                           ; BSR set to: 1
  2853                           ;mcc_generated_files/mtouch/mtouch_slider.c: 781:             group_status |= (uint8_t) 
      +                          (status & ((uint8_t)((uint8_t)1u<<7u) | MTOUCH_SLIDER_STATE_pressed));
  2854  00151A  5165               	movf	Slider_Service@status& (0+255),w,b
  2855  00151C  0B82               	andlw	130
  2856  00151E  1361               	iorwf	Slider_Service@group_status& (0+255),f,b
  2857  001520                     
  2858                           ; BSR set to: 1
  2859                           ;mcc_generated_files/mtouch/mtouch_slider.c: 783:             sliderGroupStatus |= group
      +                          _status;
  2860  001520  5161               	movf	Slider_Service@group_status& (0+255),w,b
  2861  001522  0100               	movlb	0	; () banked
  2862  001524  1396               	iorwf	_sliderGroupStatus& (0+255),f,b
  2863  001526                     l812:
  2864  001526  0012               	return		;funcret
  2865  001528                     __end_of_Slider_Service:
  2866                           	callstack 0
  2867                           
  2868 ;; *************** function _calculate_position *****************
  2869 ;; Defined at:
  2870 ;;		line 658 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;  slider          2    0[BANK1 ] PTR struct .
  2873 ;;		 -> mtouch_slider(17), 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;  raw_position    2    6[BANK1 ] unsigned short 
  2876 ;;  filtered_pos    2    4[BANK1 ] unsigned short 
  2877 ;;  position        2    2[BANK1 ] unsigned short 
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  2    0[BANK1 ] unsigned short 
  2880 ;; Registers used:
  2881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2887 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2888 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2890 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2891 ;;Total ram usage:        8 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; Hardware stack levels required when called:    9
  2894 ;; This function calls:
  2895 ;;		_calculate_raw_position
  2896 ;;		_moving_average_filter
  2897 ;;		_positional_hysteresis
  2898 ;; This function is called by:
  2899 ;;		_Slider_Service
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           	psect	text17
  2904  003352                     __ptext17:
  2905                           	callstack 0
  2906  003352                     _calculate_position:
  2907                           	callstack 18
  2908  003352                     
  2909                           ;mcc_generated_files/mtouch/mtouch_slider.c: 658: static uint16_t calculate_position(mto
      +                          uch_slider_t* slider);mcc_generated_files/mtouch/mtouch_slider.c: 659: {;mcc_generated_f
      +                          iles/mtouch/mtouch_slider.c: 660:     uint16_t raw_position, filtered_position, position
      +                          ;;mcc_generated_files/mtouch/mtouch_slider.c: 663:     raw_position = calculate_raw_posi
      +                          tion(slider);
  2910  003352  C155  F02A         	movff	calculate_position@slider,calculate_raw_position@slider
  2911  003356  C156  F02B         	movff	calculate_position@slider+1,calculate_raw_position@slider+1
  2912  00335A  ECC2  F007         	call	_calculate_raw_position
  2913  00335E  C02A  F15B         	movff	?_calculate_raw_position,calculate_position@raw_position
  2914  003362  C02B  F15C         	movff	?_calculate_raw_position+1,calculate_position@raw_position+1
  2915  003366                     
  2916                           ;mcc_generated_files/mtouch/mtouch_slider.c: 666:     if ((slider->sliderStatus & (uint8
      +                          _t)((uint8_t)3u<<0u)) != MTOUCH_SLIDER_STATE_pressed)
  2917  003366  0101               	movlb	1	; () banked
  2918  003368  EE20 F010          	lfsr	2,16
  2919  00336C  5155               	movf	calculate_position@slider& (0+255),w,b
  2920  00336E  26D9               	addwf	fsr2l,f,c
  2921  003370  5156               	movf	(calculate_position@slider+1)& (0+255),w,b
  2922  003372  22DA               	addwfc	fsr2h,f,c
  2923  003374  50DF               	movf	indf2,w,c
  2924  003376  0B03               	andlw	3
  2925  003378  0A02               	xorlw	2
  2926  00337A  B4D8               	btfsc	status,2,c
  2927  00337C  EFC2  F019         	goto	u6001
  2928  003380  EFC4  F019         	goto	u6000
  2929  003384                     u6001:
  2930  003384  EFCA  F019         	goto	l6359
  2931  003388                     u6000:
  2932  003388                     
  2933                           ; BSR set to: 1
  2934                           ;mcc_generated_files/mtouch/mtouch_slider.c: 667:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 669:         filtered_position = raw_position;
  2935  003388  C15B  F159         	movff	calculate_position@raw_position,calculate_position@filtered_position
  2936  00338C  C15C  F15A         	movff	calculate_position@raw_position+1,calculate_position@filtered_position+1
  2937                           
  2938                           ;mcc_generated_files/mtouch/mtouch_slider.c: 670:     }
  2939  003390  EFD8  F019         	goto	l6361
  2940  003394                     l6359:
  2941                           
  2942                           ; BSR set to: 1
  2943                           ;mcc_generated_files/mtouch/mtouch_slider.c: 672:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 673:         filtered_position = moving_average_filter(slider, raw_position)
      +                          ;
  2944  003394  C155  F023         	movff	calculate_position@slider,moving_average_filter@slider
  2945  003398  C156  F024         	movff	calculate_position@slider+1,moving_average_filter@slider+1
  2946  00339C  C15B  F025         	movff	calculate_position@raw_position,moving_average_filter@current_position
  2947  0033A0  C15C  F026         	movff	calculate_position@raw_position+1,moving_average_filter@current_position+1
  2948  0033A4  EC67  F014         	call	_moving_average_filter	;wreg free
  2949  0033A8  C023  F159         	movff	?_moving_average_filter,calculate_position@filtered_position
  2950  0033AC  C024  F15A         	movff	?_moving_average_filter+1,calculate_position@filtered_position+1
  2951  0033B0                     l6361:
  2952                           
  2953                           ;mcc_generated_files/mtouch/mtouch_slider.c: 676:     slider->rawPosition = raw_position
      +                          ;
  2954  0033B0  0101               	movlb	1	; () banked
  2955  0033B2  EE20 F00A          	lfsr	2,10
  2956  0033B6  5155               	movf	calculate_position@slider& (0+255),w,b
  2957  0033B8  26D9               	addwf	fsr2l,f,c
  2958  0033BA  5156               	movf	(calculate_position@slider+1)& (0+255),w,b
  2959  0033BC  22DA               	addwfc	fsr2h,f,c
  2960  0033BE  C15B  FFDE         	movff	calculate_position@raw_position,postinc2
  2961  0033C2  C15C  FFDD         	movff	calculate_position@raw_position+1,postdec2
  2962  0033C6                     
  2963                           ; BSR set to: 1
  2964                           ;mcc_generated_files/mtouch/mtouch_slider.c: 679:     position = positional_hysteresis(s
      +                          lider, filtered_position);
  2965  0033C6  C155  F023         	movff	calculate_position@slider,positional_hysteresis@slider
  2966  0033CA  C156  F024         	movff	calculate_position@slider+1,positional_hysteresis@slider+1
  2967  0033CE  C159  F025         	movff	calculate_position@filtered_position,positional_hysteresis@current_position
  2968  0033D2  C15A  F026         	movff	calculate_position@filtered_position+1,positional_hysteresis@current_position+1
  2969  0033D6  ECCB  F010         	call	_positional_hysteresis	;wreg free
  2970  0033DA  C023  F157         	movff	?_positional_hysteresis,calculate_position@position
  2971  0033DE  C024  F158         	movff	?_positional_hysteresis+1,calculate_position@position+1
  2972  0033E2                     
  2973                           ;mcc_generated_files/mtouch/mtouch_slider.c: 681:     return position;
  2974  0033E2  C157  F155         	movff	calculate_position@position,?_calculate_position
  2975  0033E6  C158  F156         	movff	calculate_position@position+1,?_calculate_position+1
  2976  0033EA  0012               	return		;funcret
  2977  0033EC                     __end_of_calculate_position:
  2978                           	callstack 0
  2979                           
  2980 ;; *************** function _positional_hysteresis *****************
  2981 ;; Defined at:
  2982 ;;		line 289 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  slider          2   34[COMRAM] PTR struct .
  2985 ;;		 -> mtouch_slider(17), 
  2986 ;;  current_posi    2   36[COMRAM] unsigned short 
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;  distance        2   47[COMRAM] short 
  2989 ;;  filtered_pos    2   43[COMRAM] unsigned short 
  2990 ;;  previous_pos    2   41[COMRAM] unsigned short 
  2991 ;;  polarity        1   46[COMRAM] unsigned char 
  2992 ;;  hyst_width      1   45[COMRAM] unsigned char 
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  2   34[COMRAM] unsigned short 
  2995 ;; Registers used:
  2996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3002 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3003 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3004 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3005 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3006 ;;Total ram usage:       15 bytes
  3007 ;; Hardware stack levels used:    1
  3008 ;; Hardware stack levels required when called:    7
  3009 ;; This function calls:
  3010 ;;		_get_difference
  3011 ;; This function is called by:
  3012 ;;		_calculate_position
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           	psect	text18
  3017  002196                     __ptext18:
  3018                           	callstack 0
  3019  002196                     _positional_hysteresis:
  3020                           	callstack 19
  3021  002196                     
  3022                           ;mcc_generated_files/mtouch/mtouch_slider.c: 289: static uint16_t positional_hysteresis(
      +                          mtouch_slider_t* slider, uint16_t current_position);mcc_generated_files/mtouch/mtouch_sl
      +                          ider.c: 290: {;mcc_generated_files/mtouch/mtouch_slider.c: 291:     uint16_t filtered_po
      +                          sition, previous_position;;mcc_generated_files/mtouch/mtouch_slider.c: 292:     uint8_t 
      +                          hyst_width;;mcc_generated_files/mtouch/mtouch_slider.c: 293:     int16_t distance;;mcc_g
      +                          enerated_files/mtouch/mtouch_slider.c: 294:     uint8_t polarity = 0u;
  3023  002196  0E00               	movlw	0
  3024  002198  6E2F               	movwf	positional_hysteresis@polarity^0,c
  3025  00219A                     
  3026                           ;mcc_generated_files/mtouch/mtouch_slider.c: 297:     hyst_width = slider->positionHyste
      +                          resis;
  3027  00219A  EE20 F005          	lfsr	2,5
  3028  00219E  5023               	movf	positional_hysteresis@slider^0,w,c
  3029  0021A0  26D9               	addwf	fsr2l,f,c
  3030  0021A2  5024               	movf	(positional_hysteresis@slider+1)^0,w,c
  3031  0021A4  22DA               	addwfc	fsr2h,f,c
  3032  0021A6  50DF               	movf	indf2,w,c
  3033  0021A8  6E2E               	movwf	positional_hysteresis@hyst_width^0,c
  3034  0021AA                     
  3035                           ;mcc_generated_files/mtouch/mtouch_slider.c: 298:     previous_position = slider->slider
      +                          Position;
  3036  0021AA  EE20 F00C          	lfsr	2,12
  3037  0021AE  5023               	movf	positional_hysteresis@slider^0,w,c
  3038  0021B0  26D9               	addwf	fsr2l,f,c
  3039  0021B2  5024               	movf	(positional_hysteresis@slider+1)^0,w,c
  3040  0021B4  22DA               	addwfc	fsr2h,f,c
  3041  0021B6  CFDE F02A          	movff	postinc2,positional_hysteresis@previous_position
  3042  0021BA  CFDD F02B          	movff	postdec2,positional_hysteresis@previous_position+1
  3043  0021BE                     
  3044                           ;mcc_generated_files/mtouch/mtouch_slider.c: 301:     distance = get_difference(slider, 
      +                          previous_position, current_position);
  3045  0021BE  C023  F016         	movff	positional_hysteresis@slider,get_difference@slider
  3046  0021C2  C024  F017         	movff	positional_hysteresis@slider+1,get_difference@slider+1
  3047  0021C6  C02A  F018         	movff	positional_hysteresis@previous_position,get_difference@previous_position
  3048  0021CA  C02B  F019         	movff	positional_hysteresis@previous_position+1,get_difference@previous_position+1
  3049  0021CE  C025  F01A         	movff	positional_hysteresis@current_position,get_difference@current_position
  3050  0021D2  C026  F01B         	movff	positional_hysteresis@current_position+1,get_difference@current_position+1
  3051  0021D6  ECF9  F017         	call	_get_difference	;wreg free
  3052  0021DA  C016  F030         	movff	?_get_difference,positional_hysteresis@distance
  3053  0021DE  C017  F031         	movff	?_get_difference+1,positional_hysteresis@distance+1
  3054  0021E2                     
  3055                           ;mcc_generated_files/mtouch/mtouch_slider.c: 303:     if (distance < 0)
  3056  0021E2  BE31               	btfsc	(positional_hysteresis@distance+1)^0,7,c
  3057  0021E4  EFF8  F010         	goto	u5330
  3058  0021E8  EFF6  F010         	goto	u5331
  3059  0021EC                     u5331:
  3060  0021EC  EF02  F011         	goto	l6003
  3061  0021F0                     u5330:
  3062  0021F0                     
  3063                           ;mcc_generated_files/mtouch/mtouch_slider.c: 304:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 305:         distance = (0 - distance);
  3064  0021F0  5030               	movf	positional_hysteresis@distance^0,w,c
  3065  0021F2  0800               	sublw	0
  3066  0021F4  6E30               	movwf	positional_hysteresis@distance^0,c
  3067  0021F6  5031               	movf	(positional_hysteresis@distance+1)^0,w,c
  3068  0021F8  A0D8               	btfss	status,0,c
  3069  0021FA  2AE8               	incf	wreg,f,c
  3070  0021FC  0800               	sublw	0
  3071  0021FE  6E31               	movwf	(positional_hysteresis@distance+1)^0,c
  3072  002200                     
  3073                           ;mcc_generated_files/mtouch/mtouch_slider.c: 306:         polarity = 1u;
  3074  002200  0E01               	movlw	1
  3075  002202  6E2F               	movwf	positional_hysteresis@polarity^0,c
  3076  002204                     l6003:
  3077                           
  3078                           ;mcc_generated_files/mtouch/mtouch_slider.c: 311:     if ((polarity == 1u) && (distance 
      +                          > (int16_t) slider->leftHysteresis))
  3079  002204  042F               	decf	positional_hysteresis@polarity^0,w,c
  3080  002206  A4D8               	btfss	status,2,c
  3081  002208  EF08  F011         	goto	u5341
  3082  00220C  EF0A  F011         	goto	u5340
  3083  002210                     u5341:
  3084  002210  EF38  F011         	goto	l6011
  3085  002214                     u5340:
  3086  002214  EE20 F009          	lfsr	2,9
  3087  002218  5023               	movf	positional_hysteresis@slider^0,w,c
  3088  00221A  26D9               	addwf	fsr2l,f,c
  3089  00221C  5024               	movf	(positional_hysteresis@slider+1)^0,w,c
  3090  00221E  22DA               	addwfc	fsr2h,f,c
  3091  002220  50DF               	movf	indf2,w,c
  3092  002222  6E27               	movwf	??_positional_hysteresis^0,c
  3093  002224  6A28               	clrf	(??_positional_hysteresis+1)^0,c
  3094  002226  5030               	movf	positional_hysteresis@distance^0,w,c
  3095  002228  5C27               	subwf	??_positional_hysteresis^0,w,c
  3096  00222A  5028               	movf	(??_positional_hysteresis+1)^0,w,c
  3097  00222C  0A80               	xorlw	128
  3098  00222E  6E29               	movwf	(??_positional_hysteresis+2)^0,c
  3099  002230  5031               	movf	(positional_hysteresis@distance+1)^0,w,c
  3100  002232  0A80               	xorlw	128
  3101  002234  5829               	subwfb	(??_positional_hysteresis+2)^0,w,c
  3102  002236  B0D8               	btfsc	status,0,c
  3103  002238  EF20  F011         	goto	u5351
  3104  00223C  EF22  F011         	goto	u5350
  3105  002240                     u5351:
  3106  002240  EF38  F011         	goto	l6011
  3107  002244                     u5350:
  3108  002244                     
  3109                           ;mcc_generated_files/mtouch/mtouch_slider.c: 312:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 314:         slider->rightHysteresis = hyst_width;
  3110  002244  EE20 F008          	lfsr	2,8
  3111  002248  5023               	movf	positional_hysteresis@slider^0,w,c
  3112  00224A  26D9               	addwf	fsr2l,f,c
  3113  00224C  5024               	movf	(positional_hysteresis@slider+1)^0,w,c
  3114  00224E  22DA               	addwfc	fsr2h,f,c
  3115  002250  C02E  FFDF         	movff	positional_hysteresis@hyst_width,indf2
  3116                           
  3117                           ;mcc_generated_files/mtouch/mtouch_slider.c: 315:         slider->leftHysteresis = 0u;
  3118  002254  EE20 F009          	lfsr	2,9
  3119  002258  5023               	movf	positional_hysteresis@slider^0,w,c
  3120  00225A  26D9               	addwf	fsr2l,f,c
  3121  00225C  5024               	movf	(positional_hysteresis@slider+1)^0,w,c
  3122  00225E  22DA               	addwfc	fsr2h,f,c
  3123  002260  0E00               	movlw	0
  3124  002262  6EDF               	movwf	indf2,c
  3125  002264                     l6009:
  3126                           
  3127                           ;mcc_generated_files/mtouch/mtouch_slider.c: 316:         filtered_position = current_po
      +                          sition;
  3128  002264  C025  F02C         	movff	positional_hysteresis@current_position,positional_hysteresis@filtered_position
  3129  002268  C026  F02D         	movff	positional_hysteresis@current_position+1,positional_hysteresis@filtered_position+
      +                          1
  3130                           
  3131                           ;mcc_generated_files/mtouch/mtouch_slider.c: 317:     }
  3132  00226C  EF74  F011         	goto	l6021
  3133  002270                     l6011:
  3134  002270  502F               	movf	positional_hysteresis@polarity^0,w,c
  3135  002272  A4D8               	btfss	status,2,c
  3136  002274  EF3E  F011         	goto	u5361
  3137  002278  EF40  F011         	goto	u5360
  3138  00227C                     u5361:
  3139  00227C  EF6A  F011         	goto	l6019
  3140  002280                     u5360:
  3141  002280  EE20 F008          	lfsr	2,8
  3142  002284  5023               	movf	positional_hysteresis@slider^0,w,c
  3143  002286  26D9               	addwf	fsr2l,f,c
  3144  002288  5024               	movf	(positional_hysteresis@slider+1)^0,w,c
  3145  00228A  22DA               	addwfc	fsr2h,f,c
  3146  00228C  50DF               	movf	indf2,w,c
  3147  00228E  6E27               	movwf	??_positional_hysteresis^0,c
  3148  002290  6A28               	clrf	(??_positional_hysteresis+1)^0,c
  3149  002292  5030               	movf	positional_hysteresis@distance^0,w,c
  3150  002294  5C27               	subwf	??_positional_hysteresis^0,w,c
  3151  002296  5028               	movf	(??_positional_hysteresis+1)^0,w,c
  3152  002298  0A80               	xorlw	128
  3153  00229A  6E29               	movwf	(??_positional_hysteresis+2)^0,c
  3154  00229C  5031               	movf	(positional_hysteresis@distance+1)^0,w,c
  3155  00229E  0A80               	xorlw	128
  3156  0022A0  5829               	subwfb	(??_positional_hysteresis+2)^0,w,c
  3157  0022A2  B0D8               	btfsc	status,0,c
  3158  0022A4  EF56  F011         	goto	u5371
  3159  0022A8  EF58  F011         	goto	u5370
  3160  0022AC                     u5371:
  3161  0022AC  EF6A  F011         	goto	l6019
  3162  0022B0                     u5370:
  3163  0022B0                     
  3164                           ;mcc_generated_files/mtouch/mtouch_slider.c: 319:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 321:         slider->rightHysteresis = 0u;
  3165  0022B0  EE20 F008          	lfsr	2,8
  3166  0022B4  5023               	movf	positional_hysteresis@slider^0,w,c
  3167  0022B6  26D9               	addwf	fsr2l,f,c
  3168  0022B8  5024               	movf	(positional_hysteresis@slider+1)^0,w,c
  3169  0022BA  22DA               	addwfc	fsr2h,f,c
  3170  0022BC  0E00               	movlw	0
  3171  0022BE  6EDF               	movwf	indf2,c
  3172                           
  3173                           ;mcc_generated_files/mtouch/mtouch_slider.c: 322:         slider->leftHysteresis = hyst_
      +                          width;
  3174  0022C0  EE20 F009          	lfsr	2,9
  3175  0022C4  5023               	movf	positional_hysteresis@slider^0,w,c
  3176  0022C6  26D9               	addwf	fsr2l,f,c
  3177  0022C8  5024               	movf	(positional_hysteresis@slider+1)^0,w,c
  3178  0022CA  22DA               	addwfc	fsr2h,f,c
  3179  0022CC  C02E  FFDF         	movff	positional_hysteresis@hyst_width,indf2
  3180  0022D0  EF32  F011         	goto	l6009
  3181  0022D4                     l6019:
  3182                           
  3183                           ;mcc_generated_files/mtouch/mtouch_slider.c: 326:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 328:         filtered_position = slider->sliderPosition;
  3184  0022D4  EE20 F00C          	lfsr	2,12
  3185  0022D8  5023               	movf	positional_hysteresis@slider^0,w,c
  3186  0022DA  26D9               	addwf	fsr2l,f,c
  3187  0022DC  5024               	movf	(positional_hysteresis@slider+1)^0,w,c
  3188  0022DE  22DA               	addwfc	fsr2h,f,c
  3189  0022E0  CFDE F02C          	movff	postinc2,positional_hysteresis@filtered_position
  3190  0022E4  CFDD F02D          	movff	postdec2,positional_hysteresis@filtered_position+1
  3191  0022E8                     l6021:
  3192                           
  3193                           ;mcc_generated_files/mtouch/mtouch_slider.c: 331:     return filtered_position;
  3194  0022E8  C02C  F023         	movff	positional_hysteresis@filtered_position,?_positional_hysteresis
  3195  0022EC  C02D  F024         	movff	positional_hysteresis@filtered_position+1,?_positional_hysteresis+1
  3196  0022F0  0012               	return		;funcret
  3197  0022F2                     __end_of_positional_hysteresis:
  3198                           	callstack 0
  3199                           
  3200 ;; *************** function _moving_average_filter *****************
  3201 ;; Defined at:
  3202 ;;		line 341 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  slider          2   34[COMRAM] PTR struct .
  3205 ;;		 -> mtouch_slider(17), 
  3206 ;;  current_posi    2   36[COMRAM] unsigned short 
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;  distance        2   48[COMRAM] short 
  3209 ;;  dist_temp       2   46[COMRAM] unsigned short 
  3210 ;;  previous_pos    2   44[COMRAM] unsigned short 
  3211 ;;  filtered_pos    2   42[COMRAM] unsigned short 
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  2   34[COMRAM] unsigned short 
  3214 ;; Registers used:
  3215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3221 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3222 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3223 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3224 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3225 ;;Total ram usage:       16 bytes
  3226 ;; Hardware stack levels used:    1
  3227 ;; Hardware stack levels required when called:    7
  3228 ;; This function calls:
  3229 ;;		_get_difference
  3230 ;; This function is called by:
  3231 ;;		_calculate_position
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           	psect	text19
  3236  0028CE                     __ptext19:
  3237                           	callstack 0
  3238  0028CE                     _moving_average_filter:
  3239                           	callstack 19
  3240  0028CE                     
  3241                           ;mcc_generated_files/mtouch/mtouch_slider.c: 341: static uint16_t moving_average_filter(
      +                          mtouch_slider_t* slider, uint16_t current_position);mcc_generated_files/mtouch/mtouch_sl
      +                          ider.c: 342: {;mcc_generated_files/mtouch/mtouch_slider.c: 343:     uint16_t filtered_po
      +                          sition, dist_temp;;mcc_generated_files/mtouch/mtouch_slider.c: 344:     uint16_t previou
      +                          s_position;;mcc_generated_files/mtouch/mtouch_slider.c: 345:     int16_t distance;;mcc_g
      +                          enerated_files/mtouch/mtouch_slider.c: 347:     previous_position = slider->rawPosition;
  3242  0028CE  EE20 F00A          	lfsr	2,10
  3243  0028D2  5023               	movf	moving_average_filter@slider^0,w,c
  3244  0028D4  26D9               	addwf	fsr2l,f,c
  3245  0028D6  5024               	movf	(moving_average_filter@slider+1)^0,w,c
  3246  0028D8  22DA               	addwfc	fsr2h,f,c
  3247  0028DA  CFDE F02D          	movff	postinc2,moving_average_filter@previous_position
  3248  0028DE  CFDD F02E          	movff	postdec2,moving_average_filter@previous_position+1
  3249  0028E2                     
  3250                           ;mcc_generated_files/mtouch/mtouch_slider.c: 349:     distance = get_difference(slider, 
      +                          previous_position, current_position);
  3251  0028E2  C023  F016         	movff	moving_average_filter@slider,get_difference@slider
  3252  0028E6  C024  F017         	movff	moving_average_filter@slider+1,get_difference@slider+1
  3253  0028EA  C02D  F018         	movff	moving_average_filter@previous_position,get_difference@previous_position
  3254  0028EE  C02E  F019         	movff	moving_average_filter@previous_position+1,get_difference@previous_position+1
  3255  0028F2  C025  F01A         	movff	moving_average_filter@current_position,get_difference@current_position
  3256  0028F6  C026  F01B         	movff	moving_average_filter@current_position+1,get_difference@current_position+1
  3257  0028FA  ECF9  F017         	call	_get_difference	;wreg free
  3258  0028FE  C016  F031         	movff	?_get_difference,moving_average_filter@distance
  3259  002902  C017  F032         	movff	?_get_difference+1,moving_average_filter@distance+1
  3260  002906                     
  3261                           ;mcc_generated_files/mtouch/mtouch_slider.c: 352:     if ((distance == 1) || (distance =
      +                          = -1))
  3262  002906  0431               	decf	moving_average_filter@distance^0,w,c
  3263  002908  1032               	iorwf	(moving_average_filter@distance+1)^0,w,c
  3264  00290A  B4D8               	btfsc	status,2,c
  3265  00290C  EF8A  F014         	goto	u5381
  3266  002910  EF8C  F014         	goto	u5380
  3267  002914                     u5381:
  3268  002914  EF96  F014         	goto	l731
  3269  002918                     u5380:
  3270  002918  2831               	incf	moving_average_filter@distance^0,w,c
  3271  00291A  E106               	bnz	u5391
  3272  00291C  2832               	incf	(moving_average_filter@distance+1)^0,w,c
  3273  00291E  A4D8               	btfss	status,2,c
  3274  002920  EF94  F014         	goto	u5391
  3275  002924  EF96  F014         	goto	u5390
  3276  002928                     u5391:
  3277  002928  EF9C  F014         	goto	l6033
  3278  00292C                     u5390:
  3279  00292C                     l731:
  3280                           
  3281                           ;mcc_generated_files/mtouch/mtouch_slider.c: 353:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 354:         filtered_position = previous_position;
  3282  00292C  C02D  F02B         	movff	moving_average_filter@previous_position,moving_average_filter@filtered_position
  3283  002930  C02E  F02C         	movff	moving_average_filter@previous_position+1,moving_average_filter@filtered_position
      +                          +1
  3284                           
  3285                           ;mcc_generated_files/mtouch/mtouch_slider.c: 355:     }
  3286  002934  EFE5  F014         	goto	l6043
  3287  002938                     l6033:
  3288                           
  3289                           ;mcc_generated_files/mtouch/mtouch_slider.c: 357:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 359:         if (distance < 0)
  3290  002938  BE32               	btfsc	(moving_average_filter@distance+1)^0,7,c
  3291  00293A  EFA3  F014         	goto	u5400
  3292  00293E  EFA1  F014         	goto	u5401
  3293  002942                     u5401:
  3294  002942  EFC0  F014         	goto	l733
  3295  002946                     u5400:
  3296  002946                     
  3297                           ;mcc_generated_files/mtouch/mtouch_slider.c: 360:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 361:             distance = (0 - distance);
  3298  002946  5031               	movf	moving_average_filter@distance^0,w,c
  3299  002948  0800               	sublw	0
  3300  00294A  6E31               	movwf	moving_average_filter@distance^0,c
  3301  00294C  5032               	movf	(moving_average_filter@distance+1)^0,w,c
  3302  00294E  A0D8               	btfss	status,0,c
  3303  002950  2AE8               	incf	wreg,f,c
  3304  002952  0800               	sublw	0
  3305  002954  6E32               	movwf	(moving_average_filter@distance+1)^0,c
  3306  002956                     
  3307                           ;mcc_generated_files/mtouch/mtouch_slider.c: 362:             dist_temp = (uint16_t) dis
      +                          tance;
  3308  002956  C031  F02F         	movff	moving_average_filter@distance,moving_average_filter@dist_temp
  3309  00295A  C032  F030         	movff	moving_average_filter@distance+1,moving_average_filter@dist_temp+1
  3310                           
  3311                           ;mcc_generated_files/mtouch/mtouch_slider.c: 363:             dist_temp = dist_temp >> 1
      +                          u;
  3312  00295E  90D8               	bcf	status,0,c
  3313  002960  3030               	rrcf	(moving_average_filter@dist_temp+1)^0,w,c
  3314  002962  6E27               	movwf	??_moving_average_filter^0,c
  3315  002964  302F               	rrcf	moving_average_filter@dist_temp^0,w,c
  3316  002966  6E2F               	movwf	moving_average_filter@dist_temp^0,c
  3317  002968  C027  F030         	movff	??_moving_average_filter,moving_average_filter@dist_temp+1
  3318                           
  3319                           ;mcc_generated_files/mtouch/mtouch_slider.c: 364:             distance = (int16_t) (0 - 
      +                          (int16_t) dist_temp);
  3320  00296C  502F               	movf	moving_average_filter@dist_temp^0,w,c
  3321  00296E  0800               	sublw	0
  3322  002970  6E31               	movwf	moving_average_filter@distance^0,c
  3323  002972  5030               	movf	(moving_average_filter@dist_temp+1)^0,w,c
  3324  002974  A0D8               	btfss	status,0,c
  3325  002976  2AE8               	incf	wreg,f,c
  3326  002978  0800               	sublw	0
  3327  00297A  6E32               	movwf	(moving_average_filter@distance+1)^0,c
  3328                           
  3329                           ;mcc_generated_files/mtouch/mtouch_slider.c: 366:         }
  3330  00297C  EFCF  F014         	goto	l734
  3331  002980                     l733:
  3332                           
  3333                           ;mcc_generated_files/mtouch/mtouch_slider.c: 368:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 369:             dist_temp = (uint16_t) (distance);
  3334  002980  C031  F02F         	movff	moving_average_filter@distance,moving_average_filter@dist_temp
  3335  002984  C032  F030         	movff	moving_average_filter@distance+1,moving_average_filter@dist_temp+1
  3336  002988                     
  3337                           ;mcc_generated_files/mtouch/mtouch_slider.c: 370:             dist_temp = dist_temp >> 1
      +                          u;
  3338  002988  90D8               	bcf	status,0,c
  3339  00298A  3030               	rrcf	(moving_average_filter@dist_temp+1)^0,w,c
  3340  00298C  6E27               	movwf	??_moving_average_filter^0,c
  3341  00298E  302F               	rrcf	moving_average_filter@dist_temp^0,w,c
  3342  002990  6E2F               	movwf	moving_average_filter@dist_temp^0,c
  3343  002992  C027  F030         	movff	??_moving_average_filter,moving_average_filter@dist_temp+1
  3344  002996                     
  3345                           ;mcc_generated_files/mtouch/mtouch_slider.c: 371:             distance = (int16_t) (dist
      +                          _temp);
  3346  002996  C02F  F031         	movff	moving_average_filter@dist_temp,moving_average_filter@distance
  3347  00299A  C030  F032         	movff	moving_average_filter@dist_temp+1,moving_average_filter@distance+1
  3348  00299E                     l734:
  3349                           
  3350                           ;mcc_generated_files/mtouch/mtouch_slider.c: 373:         filtered_position = (previous_
      +                          position) + (uint16_t) (distance);
  3351  00299E  502D               	movf	moving_average_filter@previous_position^0,w,c
  3352  0029A0  2431               	addwf	moving_average_filter@distance^0,w,c
  3353  0029A2  6E2B               	movwf	moving_average_filter@filtered_position^0,c
  3354  0029A4  502E               	movf	(moving_average_filter@previous_position+1)^0,w,c
  3355  0029A6  2032               	addwfc	(moving_average_filter@distance+1)^0,w,c
  3356  0029A8  6E2C               	movwf	(moving_average_filter@filtered_position+1)^0,c
  3357                           
  3358                           ;mcc_generated_files/mtouch/mtouch_slider.c: 374:         filtered_position &= (resol_va
      +                          lue - 1u);
  3359  0029AA  0EFF               	movlw	255
  3360  0029AC  6E27               	movwf	??_moving_average_filter^0,c
  3361  0029AE  0EFF               	movlw	255
  3362  0029B0  6E28               	movwf	(??_moving_average_filter+1)^0,c
  3363  0029B2  C03C  F029         	movff	_resol_value,??_moving_average_filter+2
  3364  0029B6  C03D  F02A         	movff	_resol_value+1,??_moving_average_filter+3
  3365  0029BA  5027               	movf	??_moving_average_filter^0,w,c
  3366  0029BC  2629               	addwf	(??_moving_average_filter+2)^0,f,c
  3367  0029BE  5028               	movf	(??_moving_average_filter+1)^0,w,c
  3368  0029C0  222A               	addwfc	(??_moving_average_filter+3)^0,f,c
  3369  0029C2  5029               	movf	(??_moving_average_filter+2)^0,w,c
  3370  0029C4  162B               	andwf	moving_average_filter@filtered_position^0,f,c
  3371  0029C6  502A               	movf	(??_moving_average_filter+3)^0,w,c
  3372  0029C8  162C               	andwf	(moving_average_filter@filtered_position+1)^0,f,c
  3373  0029CA                     l6043:
  3374                           
  3375                           ;mcc_generated_files/mtouch/mtouch_slider.c: 377:     return filtered_position;
  3376  0029CA  C02B  F023         	movff	moving_average_filter@filtered_position,?_moving_average_filter
  3377  0029CE  C02C  F024         	movff	moving_average_filter@filtered_position+1,?_moving_average_filter+1
  3378  0029D2  0012               	return		;funcret
  3379  0029D4                     __end_of_moving_average_filter:
  3380                           	callstack 0
  3381                           
  3382 ;; *************** function _get_difference *****************
  3383 ;; Defined at:
  3384 ;;		line 251 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;  slider          2   21[COMRAM] PTR struct .
  3387 ;;		 -> mtouch_slider(17), 
  3388 ;;  previous_pos    2   23[COMRAM] unsigned short 
  3389 ;;  current_posi    2   25[COMRAM] unsigned short 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  diff            2   32[COMRAM] short 
  3392 ;;  rollover_thr    2   30[COMRAM] unsigned short 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  2   21[COMRAM] short 
  3395 ;; Registers used:
  3396 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3402 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3403 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3404 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3405 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3406 ;;Total ram usage:       13 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    6
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_positional_hysteresis
  3413 ;;		_moving_average_filter
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text20
  3418  002FF2                     __ptext20:
  3419                           	callstack 0
  3420  002FF2                     _get_difference:
  3421                           	callstack 19
  3422  002FF2                     
  3423                           ;mcc_generated_files/mtouch/mtouch_slider.c: 251: static int16_t get_difference(mtouch_s
      +                          lider_t* slider, uint16_t previous_position, uint16_t current_position);mcc_generated_fi
      +                          les/mtouch/mtouch_slider.c: 252: {;mcc_generated_files/mtouch/mtouch_slider.c: 253:     
      +                          int16_t diff;;mcc_generated_files/mtouch/mtouch_slider.c: 254:     uint16_t rollover_thr
      +                          eshold;;mcc_generated_files/mtouch/mtouch_slider.c: 257:     rollover_threshold = resol_
      +                          value >> 1u;
  3424  002FF2  90D8               	bcf	status,0,c
  3425  002FF4  303D               	rrcf	(_resol_value+1)^0,w,c
  3426  002FF6  6E1C               	movwf	??_get_difference^0,c
  3427  002FF8  303C               	rrcf	_resol_value^0,w,c
  3428  002FFA  6E1F               	movwf	get_difference@rollover_threshold^0,c
  3429  002FFC  C01C  F020         	movff	??_get_difference,get_difference@rollover_threshold+1
  3430                           
  3431                           ;mcc_generated_files/mtouch/mtouch_slider.c: 260:     diff = ((int16_t) current_position
      +                           - (int16_t) previous_position);
  3432  003000  5018               	movf	get_difference@previous_position^0,w,c
  3433  003002  5C1A               	subwf	get_difference@current_position^0,w,c
  3434  003004  6E21               	movwf	get_difference@diff^0,c
  3435  003006  5019               	movf	(get_difference@previous_position+1)^0,w,c
  3436  003008  581B               	subwfb	(get_difference@current_position+1)^0,w,c
  3437  00300A  6E22               	movwf	(get_difference@diff+1)^0,c
  3438  00300C                     
  3439                           ;mcc_generated_files/mtouch/mtouch_slider.c: 263:     if (slider->type == MTOUCH_TYPE_WH
      +                          EEL)
  3440  00300C  EE20 F001          	lfsr	2,1
  3441  003010  5016               	movf	get_difference@slider^0,w,c
  3442  003012  26D9               	addwf	fsr2l,f,c
  3443  003014  5017               	movf	(get_difference@slider+1)^0,w,c
  3444  003016  22DA               	addwfc	fsr2h,f,c
  3445  003018  04DE               	decf	postinc2,w,c
  3446  00301A  A4D8               	btfss	status,2,c
  3447  00301C  EF12  F018         	goto	u5121
  3448  003020  EF14  F018         	goto	u5120
  3449  003024                     u5121:
  3450  003024  EF4F  F018         	goto	l5873
  3451  003028                     u5120:
  3452  003028                     
  3453                           ;mcc_generated_files/mtouch/mtouch_slider.c: 264:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 265:         if (diff < (int16_t) 0u)
  3454  003028  BE22               	btfsc	(get_difference@diff+1)^0,7,c
  3455  00302A  EF1B  F018         	goto	u5130
  3456  00302E  EF19  F018         	goto	u5131
  3457  003032                     u5131:
  3458  003032  EF3A  F018         	goto	l5869
  3459  003036                     u5130:
  3460  003036                     
  3461                           ;mcc_generated_files/mtouch/mtouch_slider.c: 266:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 267:             if ((0 - (int16_t) rollover_threshold) > diff)
  3462  003036  0E00               	movlw	0
  3463  003038  6E1C               	movwf	??_get_difference^0,c
  3464  00303A  0E00               	movlw	0
  3465  00303C  6E1D               	movwf	(??_get_difference+1)^0,c
  3466  00303E  501F               	movf	get_difference@rollover_threshold^0,w,c
  3467  003040  5E1C               	subwf	??_get_difference^0,f,c
  3468  003042  5020               	movf	(get_difference@rollover_threshold+1)^0,w,c
  3469  003044  5A1D               	subwfb	(??_get_difference+1)^0,f,c
  3470  003046  501C               	movf	??_get_difference^0,w,c
  3471  003048  5C21               	subwf	get_difference@diff^0,w,c
  3472  00304A  5022               	movf	(get_difference@diff+1)^0,w,c
  3473  00304C  0A80               	xorlw	128
  3474  00304E  6E1E               	movwf	(??_get_difference+2)^0,c
  3475  003050  501D               	movf	(??_get_difference+1)^0,w,c
  3476  003052  0A80               	xorlw	128
  3477  003054  581E               	subwfb	(??_get_difference+2)^0,w,c
  3478  003056  B0D8               	btfsc	status,0,c
  3479  003058  EF30  F018         	goto	u5141
  3480  00305C  EF32  F018         	goto	u5140
  3481  003060                     u5141:
  3482  003060  EF4F  F018         	goto	l5873
  3483  003064                     u5140:
  3484  003064                     
  3485                           ;mcc_generated_files/mtouch/mtouch_slider.c: 268:             {;mcc_generated_files/mtou
      +                          ch/mtouch_slider.c: 269:                 diff = (diff + (int16_t) resol_value);
  3486  003064  5021               	movf	get_difference@diff^0,w,c
  3487  003066  243C               	addwf	_resol_value^0,w,c
  3488  003068  6E21               	movwf	get_difference@diff^0,c
  3489  00306A  5022               	movf	(get_difference@diff+1)^0,w,c
  3490  00306C  203D               	addwfc	(_resol_value+1)^0,w,c
  3491  00306E  6E22               	movwf	(get_difference@diff+1)^0,c
  3492  003070  EF4F  F018         	goto	l5873
  3493  003074                     l5869:
  3494                           
  3495                           ;mcc_generated_files/mtouch/mtouch_slider.c: 273:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 274:             if (diff > ((int16_t) rollover_threshold))
  3496  003074  5021               	movf	get_difference@diff^0,w,c
  3497  003076  5C1F               	subwf	get_difference@rollover_threshold^0,w,c
  3498  003078  5020               	movf	(get_difference@rollover_threshold+1)^0,w,c
  3499  00307A  0A80               	xorlw	128
  3500  00307C  6E1C               	movwf	??_get_difference^0,c
  3501  00307E  5022               	movf	(get_difference@diff+1)^0,w,c
  3502  003080  0A80               	xorlw	128
  3503  003082  581C               	subwfb	??_get_difference^0,w,c
  3504  003084  B0D8               	btfsc	status,0,c
  3505  003086  EF47  F018         	goto	u5151
  3506  00308A  EF49  F018         	goto	u5150
  3507  00308E                     u5151:
  3508  00308E  EF4F  F018         	goto	l5873
  3509  003092                     u5150:
  3510  003092                     
  3511                           ;mcc_generated_files/mtouch/mtouch_slider.c: 275:             {;mcc_generated_files/mtou
      +                          ch/mtouch_slider.c: 276:                 diff = (diff - (int16_t) resol_value);
  3512  003092  503C               	movf	_resol_value^0,w,c
  3513  003094  5C21               	subwf	get_difference@diff^0,w,c
  3514  003096  6E21               	movwf	get_difference@diff^0,c
  3515  003098  503D               	movf	(_resol_value+1)^0,w,c
  3516  00309A  5822               	subwfb	(get_difference@diff+1)^0,w,c
  3517  00309C  6E22               	movwf	(get_difference@diff+1)^0,c
  3518  00309E                     l5873:
  3519                           
  3520                           ;mcc_generated_files/mtouch/mtouch_slider.c: 281:     return diff;
  3521  00309E  C021  F016         	movff	get_difference@diff,?_get_difference
  3522  0030A2  C022  F017         	movff	get_difference@diff+1,?_get_difference+1
  3523  0030A6  0012               	return		;funcret
  3524  0030A8                     __end_of_get_difference:
  3525                           	callstack 0
  3526                           
  3527 ;; *************** function _calculate_raw_position *****************
  3528 ;; Defined at:
  3529 ;;		line 522 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  slider          2   41[COMRAM] PTR struct .
  3532 ;;		 -> mtouch_slider(17), 
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;  position        2    8[BANK0 ] unsigned short 
  3535 ;;  deadband        2    4[BANK0 ] unsigned short 
  3536 ;;  deadband_set    2    1[BANK0 ] unsigned short 
  3537 ;;  size            1    7[BANK0 ] unsigned char 
  3538 ;;  interpolatio    1    6[BANK0 ] unsigned char 
  3539 ;;  interpolatio    1    3[BANK0 ] unsigned char 
  3540 ;;  ref_node        1    0[BANK0 ] unsigned char 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  2   41[COMRAM] unsigned short 
  3543 ;; Registers used:
  3544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3551 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3552 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3553 ;;      Totals:         7      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3554 ;;Total ram usage:       17 bytes
  3555 ;; Hardware stack levels used:    1
  3556 ;; Hardware stack levels required when called:    8
  3557 ;; This function calls:
  3558 ;;		_divide
  3559 ;;		_interpolate
  3560 ;; This function is called by:
  3561 ;;		_calculate_position
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text21
  3566  000F84                     __ptext21:
  3567                           	callstack 0
  3568  000F84                     _calculate_raw_position:
  3569                           	callstack 18
  3570  000F84                     
  3571                           ;mcc_generated_files/mtouch/mtouch_slider.c: 522: static uint16_t calculate_raw_position
      +                          (mtouch_slider_t* slider);mcc_generated_files/mtouch/mtouch_slider.c: 523: {;mcc_generat
      +                          ed_files/mtouch/mtouch_slider.c: 524:     uint8_t ref_node;;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 525:     uint8_t interpolation_bits;;mcc_generated_files/mtouch/mtouch_s
      +                          lider.c: 526:     uint8_t interpolation_scale;;mcc_generated_files/mtouch/mtouch_slider.
      +                          c: 527:     uint8_t size;;mcc_generated_files/mtouch/mtouch_slider.c: 528:     uint16_t 
      +                          position, deadband, deadband_set;
  3572  000F84  EE20 F002          	lfsr	2,2
  3573  000F88  502A               	movf	calculate_raw_position@slider^0,w,c
  3574  000F8A  26D9               	addwf	fsr2l,f,c
  3575  000F8C  502B               	movf	(calculate_raw_position@slider+1)^0,w,c
  3576  000F8E  22DA               	addwfc	fsr2h,f,c
  3577  000F90  50DF               	movf	indf2,w,c
  3578  000F92  0100               	movlb	0	; () banked
  3579  000F94  6FF3               	movwf	calculate_raw_position@ref_node& (0+255),b
  3580                           
  3581                           ;mcc_generated_files/mtouch/mtouch_slider.c: 532:     size = slider->segmentCount;
  3582  000F96  EE20 F003          	lfsr	2,3
  3583  000F9A  502A               	movf	calculate_raw_position@slider^0,w,c
  3584  000F9C  26D9               	addwf	fsr2l,f,c
  3585  000F9E  502B               	movf	(calculate_raw_position@slider+1)^0,w,c
  3586  000FA0  22DA               	addwfc	fsr2h,f,c
  3587  000FA2  50DF               	movf	indf2,w,c
  3588  000FA4  6FFA               	movwf	calculate_raw_position@size& (0+255),b
  3589  000FA6                     
  3590                           ; BSR set to: 0
  3591                           ;mcc_generated_files/mtouch/mtouch_slider.c: 541:     if (size < 16u)
  3592  000FA6  0E10               	movlw	16
  3593  000FA8  61FA               	cpfslt	calculate_raw_position@size& (0+255),b
  3594  000FAA  EFD9  F007         	goto	u5501
  3595  000FAE  EFDB  F007         	goto	u5500
  3596  000FB2                     u5501:
  3597  000FB2  EFE1  F007         	goto	l6113
  3598  000FB6                     u5500:
  3599  000FB6                     
  3600                           ; BSR set to: 0
  3601                           ;mcc_generated_files/mtouch/mtouch_slider.c: 542:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 543:         interpolation_bits = 12u;
  3602  000FB6  0E0C               	movlw	12
  3603  000FB8  6FF9               	movwf	calculate_raw_position@interpolation_bits& (0+255),b
  3604                           
  3605                           ;mcc_generated_files/mtouch/mtouch_slider.c: 544:         interpolation_scale = 0u;
  3606  000FBA  0E00               	movlw	0
  3607  000FBC  6FF6               	movwf	calculate_raw_position@interpolation_scale& (0+255),b
  3608                           
  3609                           ;mcc_generated_files/mtouch/mtouch_slider.c: 545:     }
  3610  000FBE  EFE5  F007         	goto	l6115
  3611  000FC2                     l6113:
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;mcc_generated_files/mtouch/mtouch_slider.c: 547:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 548:         interpolation_bits = 8u;
  3615  000FC2  0E08               	movlw	8
  3616  000FC4  6FF9               	movwf	calculate_raw_position@interpolation_bits& (0+255),b
  3617                           
  3618                           ;mcc_generated_files/mtouch/mtouch_slider.c: 549:         interpolation_scale = 4u;
  3619  000FC6  0E04               	movlw	4
  3620  000FC8  6FF6               	movwf	calculate_raw_position@interpolation_scale& (0+255),b
  3621  000FCA                     l6115:
  3622                           
  3623                           ; BSR set to: 0
  3624                           ;mcc_generated_files/mtouch/mtouch_slider.c: 553:     if (wheel_sensor_middle_channel_ze
      +                          ro == 1u)
  3625  000FCA  043F               	decf	_wheel_sensor_middle_channel_zero^0,w,c
  3626  000FCC  A4D8               	btfss	status,2,c
  3627  000FCE  EFEB  F007         	goto	u5511
  3628  000FD2  EFED  F007         	goto	u5510
  3629  000FD6                     u5511:
  3630  000FD6  EF01  F008         	goto	l6119
  3631  000FDA                     u5510:
  3632  000FDA                     
  3633                           ; BSR set to: 0
  3634                           ;mcc_generated_files/mtouch/mtouch_slider.c: 554:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 555:         position = (uint16_t) ((uint16_t) (size) << interpolation_bits)
      +                          ;
  3635  000FDA  C0F9  F02C         	movff	calculate_raw_position@interpolation_bits,??_calculate_raw_position
  3636  000FDE  51FA               	movf	calculate_raw_position@size& (0+255),w,b
  3637  000FE0  6E2D               	movwf	(??_calculate_raw_position+1)^0,c
  3638  000FE2  6A2E               	clrf	(??_calculate_raw_position+2)^0,c
  3639  000FE4  2A2C               	incf	??_calculate_raw_position^0,f,c
  3640  000FE6  EFF8  F007         	goto	u5524
  3641  000FEA                     u5525:
  3642  000FEA  90D8               	bcf	status,0,c
  3643  000FEC  362D               	rlcf	(??_calculate_raw_position+1)^0,f,c
  3644  000FEE  362E               	rlcf	(??_calculate_raw_position+2)^0,f,c
  3645  000FF0                     u5524:
  3646  000FF0  2E2C               	decfsz	??_calculate_raw_position^0,f,c
  3647  000FF2  EFF5  F007         	goto	u5525
  3648  000FF6  C02D  F0FB         	movff	??_calculate_raw_position+1,calculate_raw_position@position
  3649  000FFA  C02E  F0FC         	movff	??_calculate_raw_position+2,calculate_raw_position@position+1
  3650                           
  3651                           ;mcc_generated_files/mtouch/mtouch_slider.c: 556:     }
  3652  000FFE  EF17  F008         	goto	l6121
  3653  001002                     l6119:
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;mcc_generated_files/mtouch/mtouch_slider.c: 558:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 559:         position = (uint16_t) ((middle_node - ref_node) << interpolatio
      +                          n_bits);
  3657  001002  C0F9  F02C         	movff	calculate_raw_position@interpolation_bits,??_calculate_raw_position
  3658  001006  51F3               	movf	calculate_raw_position@ref_node& (0+255),w,b
  3659  001008  C040  F02D         	movff	_middle_node,??_calculate_raw_position+1
  3660  00100C  6A2E               	clrf	(??_calculate_raw_position+2)^0,c
  3661  00100E  5E2D               	subwf	(??_calculate_raw_position+1)^0,f,c
  3662  001010  0E00               	movlw	0
  3663  001012  5A2E               	subwfb	(??_calculate_raw_position+2)^0,f,c
  3664  001014  2A2C               	incf	??_calculate_raw_position^0,f,c
  3665  001016  EF10  F008         	goto	u5534
  3666  00101A                     u5535:
  3667  00101A  90D8               	bcf	status,0,c
  3668  00101C  362D               	rlcf	(??_calculate_raw_position+1)^0,f,c
  3669  00101E  362E               	rlcf	(??_calculate_raw_position+2)^0,f,c
  3670  001020                     u5534:
  3671  001020  2E2C               	decfsz	??_calculate_raw_position^0,f,c
  3672  001022  EF0D  F008         	goto	u5535
  3673  001026  C02D  F0FB         	movff	??_calculate_raw_position+1,calculate_raw_position@position
  3674  00102A  C02E  F0FC         	movff	??_calculate_raw_position+2,calculate_raw_position@position+1
  3675  00102E                     l6121:
  3676                           
  3677                           ;mcc_generated_files/mtouch/mtouch_slider.c: 563:     position += interpolate((uint16_t)
      +                           left_signal, (uint16_t) middle_signal, (uint16_t) right_signal, interpolation_bits);
  3678  00102E  C03A  F01D         	movff	_left_signal,interpolate@delta1
  3679  001032  C03B  F01E         	movff	_left_signal+1,interpolate@delta1+1
  3680  001036  C036  F01F         	movff	_middle_signal,interpolate@delta2
  3681  00103A  C037  F020         	movff	_middle_signal+1,interpolate@delta2+1
  3682  00103E  C038  F021         	movff	_right_signal,interpolate@delta3
  3683  001042  C039  F022         	movff	_right_signal+1,interpolate@delta3+1
  3684  001046  C0F9  F023         	movff	calculate_raw_position@interpolation_bits,interpolate@num_bits
  3685  00104A  ECDF  F015         	call	_interpolate	;wreg free
  3686  00104E  501D               	movf	?_interpolate^0,w,c
  3687  001050  0100               	movlb	0	; () banked
  3688  001052  27FB               	addwf	calculate_raw_position@position& (0+255),f,b
  3689  001054  501E               	movf	(?_interpolate+1)^0,w,c
  3690  001056  23FC               	addwfc	(calculate_raw_position@position+1)& (0+255),f,b
  3691  001058                     
  3692                           ; BSR set to: 0
  3693                           ;mcc_generated_files/mtouch/mtouch_slider.c: 566:     if (size > 2u)
  3694  001058  0E02               	movlw	2
  3695  00105A  65FA               	cpfsgt	calculate_raw_position@size& (0+255),b
  3696  00105C  EF32  F008         	goto	u5541
  3697  001060  EF34  F008         	goto	u5540
  3698  001064                     u5541:
  3699  001064  EF65  F008         	goto	l6131
  3700  001068                     u5540:
  3701  001068                     
  3702                           ; BSR set to: 0
  3703                           ;mcc_generated_files/mtouch/mtouch_slider.c: 567:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 568:         if (slider->type == MTOUCH_TYPE_WHEEL)
  3704  001068  EE20 F001          	lfsr	2,1
  3705  00106C  502A               	movf	calculate_raw_position@slider^0,w,c
  3706  00106E  26D9               	addwf	fsr2l,f,c
  3707  001070  502B               	movf	(calculate_raw_position@slider+1)^0,w,c
  3708  001072  22DA               	addwfc	fsr2h,f,c
  3709  001074  04DE               	decf	postinc2,w,c
  3710  001076  A4D8               	btfss	status,2,c
  3711  001078  EF40  F008         	goto	u5551
  3712  00107C  EF42  F008         	goto	u5550
  3713  001080                     u5551:
  3714  001080  EF53  F008         	goto	l6129
  3715  001084                     u5550:
  3716  001084                     
  3717                           ; BSR set to: 0
  3718                           ;mcc_generated_files/mtouch/mtouch_slider.c: 569:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 570:             position = divide(position, (uint16_t) (size), interpol
      +                          ation_scale);
  3719  001084  C0FB  F016         	movff	calculate_raw_position@position,divide@numerator
  3720  001088  C0FC  F017         	movff	calculate_raw_position@position+1,divide@numerator+1
  3721  00108C  C0FA  F018         	movff	calculate_raw_position@size,divide@denominator
  3722  001090  6A19               	clrf	(divide@denominator+1)^0,c
  3723  001092  C0F6  F01A         	movff	calculate_raw_position@interpolation_scale,divide@exponent
  3724  001096  EC6D  F015         	call	_divide	;wreg free
  3725  00109A  C016  F0FB         	movff	?_divide,calculate_raw_position@position
  3726  00109E  C017  F0FC         	movff	?_divide+1,calculate_raw_position@position+1
  3727                           
  3728                           ;mcc_generated_files/mtouch/mtouch_slider.c: 571:         }
  3729  0010A2  EF65  F008         	goto	l6131
  3730  0010A6                     l6129:
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;mcc_generated_files/mtouch/mtouch_slider.c: 573:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 574:             position = divide(position, (uint16_t) ((uint16_t) size
      +                           - 1u), interpolation_scale);
  3734  0010A6  C0FB  F016         	movff	calculate_raw_position@position,divide@numerator
  3735  0010AA  C0FC  F017         	movff	calculate_raw_position@position+1,divide@numerator+1
  3736  0010AE  0EFF               	movlw	255
  3737  0010B0  25FA               	addwf	calculate_raw_position@size& (0+255),w,b
  3738  0010B2  6E18               	movwf	divide@denominator^0,c
  3739  0010B4  6A19               	clrf	(divide@denominator+1)^0,c
  3740  0010B6  0EFF               	movlw	255
  3741  0010B8  2219               	addwfc	(divide@denominator+1)^0,f,c
  3742  0010BA  C0F6  F01A         	movff	calculate_raw_position@interpolation_scale,divide@exponent
  3743  0010BE  EC6D  F015         	call	_divide	;wreg free
  3744  0010C2  C016  F0FB         	movff	?_divide,calculate_raw_position@position
  3745  0010C6  C017  F0FC         	movff	?_divide+1,calculate_raw_position@position+1
  3746  0010CA                     l6131:
  3747                           
  3748                           ;mcc_generated_files/mtouch/mtouch_slider.c: 579:     if (position > (uint16_t)((uint16_
      +                          t)1u << 12u))
  3749  0010CA  0100               	movlb	0	; () banked
  3750  0010CC  05FB               	decf	calculate_raw_position@position& (0+255),w,b
  3751  0010CE  0E10               	movlw	16
  3752  0010D0  59FC               	subwfb	(calculate_raw_position@position+1)& (0+255),w,b
  3753  0010D2  A0D8               	btfss	status,0,c
  3754  0010D4  EF6E  F008         	goto	u5561
  3755  0010D8  EF70  F008         	goto	u5560
  3756  0010DC                     u5561:
  3757  0010DC  EF74  F008         	goto	l6135
  3758  0010E0                     u5560:
  3759  0010E0                     
  3760                           ; BSR set to: 0
  3761                           ;mcc_generated_files/mtouch/mtouch_slider.c: 580:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 581:         position = (uint16_t)((uint16_t)1u << 12u);
  3762  0010E0  0E10               	movlw	16
  3763  0010E2  6FFC               	movwf	(calculate_raw_position@position+1)& (0+255),b
  3764  0010E4  0E00               	movlw	0
  3765  0010E6  6FFB               	movwf	calculate_raw_position@position& (0+255),b
  3766  0010E8                     l6135:
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;mcc_generated_files/mtouch/mtouch_slider.c: 585:     if ((slider->type == MTOUCH_TYPE_S
      +                          LIDER) && (0u != (slider->resolDeadband & (0x0Fu))))
  3770  0010E8  EE20 F001          	lfsr	2,1
  3771  0010EC  502A               	movf	calculate_raw_position@slider^0,w,c
  3772  0010EE  26D9               	addwf	fsr2l,f,c
  3773  0010F0  502B               	movf	(calculate_raw_position@slider+1)^0,w,c
  3774  0010F2  22DA               	addwfc	fsr2h,f,c
  3775  0010F4  50DF               	movf	indf2,w,c
  3776  0010F6  A4D8               	btfss	status,2,c
  3777  0010F8  EF80  F008         	goto	u5571
  3778  0010FC  EF82  F008         	goto	u5570
  3779  001100                     u5571:
  3780  001100  EFE8  F008         	goto	l6157
  3781  001104                     u5570:
  3782  001104                     
  3783                           ; BSR set to: 0
  3784  001104  EE20 F004          	lfsr	2,4
  3785  001108  502A               	movf	calculate_raw_position@slider^0,w,c
  3786  00110A  26D9               	addwf	fsr2l,f,c
  3787  00110C  502B               	movf	(calculate_raw_position@slider+1)^0,w,c
  3788  00110E  22DA               	addwfc	fsr2h,f,c
  3789  001110  50DF               	movf	indf2,w,c
  3790  001112  6E2C               	movwf	??_calculate_raw_position^0,c
  3791  001114  0E0F               	movlw	15
  3792  001116  162C               	andwf	??_calculate_raw_position^0,f,c
  3793  001118  B4D8               	btfsc	status,2,c
  3794  00111A  EF91  F008         	goto	u5581
  3795  00111E  EF93  F008         	goto	u5580
  3796  001122                     u5581:
  3797  001122  EFE8  F008         	goto	l6157
  3798  001126                     u5580:
  3799  001126                     
  3800                           ; BSR set to: 0
  3801                           ;mcc_generated_files/mtouch/mtouch_slider.c: 586:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 588:         deadband = 0u;
  3802  001126  0E00               	movlw	0
  3803  001128  6FF8               	movwf	(calculate_raw_position@deadband+1)& (0+255),b
  3804  00112A  0E00               	movlw	0
  3805  00112C  6FF7               	movwf	calculate_raw_position@deadband& (0+255),b
  3806  00112E                     
  3807                           ; BSR set to: 0
  3808                           ;mcc_generated_files/mtouch/mtouch_slider.c: 589:         deadband_set = (uint8_t) (slid
      +                          er->resolDeadband & (0x0Fu));
  3809  00112E  EE20 F004          	lfsr	2,4
  3810  001132  502A               	movf	calculate_raw_position@slider^0,w,c
  3811  001134  26D9               	addwf	fsr2l,f,c
  3812  001136  502B               	movf	(calculate_raw_position@slider+1)^0,w,c
  3813  001138  22DA               	addwfc	fsr2h,f,c
  3814  00113A  50DF               	movf	indf2,w,c
  3815  00113C  6E2C               	movwf	??_calculate_raw_position^0,c
  3816  00113E  0E0F               	movlw	15
  3817  001140  162C               	andwf	??_calculate_raw_position^0,f,c
  3818  001142  502C               	movf	??_calculate_raw_position^0,w,c
  3819  001144  6FF4               	movwf	calculate_raw_position@deadband_set& (0+255),b
  3820  001146  6BF5               	clrf	(calculate_raw_position@deadband_set+1)& (0+255),b
  3821                           
  3822                           ;mcc_generated_files/mtouch/mtouch_slider.c: 590:         while (deadband_set > 0u)
  3823  001148  EFAD  F008         	goto	l6147
  3824  00114C                     l6143:
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;mcc_generated_files/mtouch/mtouch_slider.c: 591:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 592:             deadband_set--;
  3828  00114C  07F4               	decf	calculate_raw_position@deadband_set& (0+255),f,b
  3829  00114E  A0D8               	btfss	status,0,c
  3830  001150  07F5               	decf	(calculate_raw_position@deadband_set+1)& (0+255),f,b
  3831  001152                     
  3832                           ; BSR set to: 0
  3833                           ;mcc_generated_files/mtouch/mtouch_slider.c: 593:             deadband += ((uint16_t)((u
      +                          int16_t)1u << 12u)/100u);
  3834  001152  0E28               	movlw	40
  3835  001154  27F7               	addwf	calculate_raw_position@deadband& (0+255),f,b
  3836  001156  0E00               	movlw	0
  3837  001158  23F8               	addwfc	(calculate_raw_position@deadband+1)& (0+255),f,b
  3838  00115A                     l6147:
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;mcc_generated_files/mtouch/mtouch_slider.c: 590:         while (deadband_set > 0u)
  3842  00115A  51F4               	movf	calculate_raw_position@deadband_set& (0+255),w,b
  3843  00115C  11F5               	iorwf	(calculate_raw_position@deadband_set+1)& (0+255),w,b
  3844  00115E  A4D8               	btfss	status,2,c
  3845  001160  EFB4  F008         	goto	u5591
  3846  001164  EFB6  F008         	goto	u5590
  3847  001168                     u5591:
  3848  001168  EFA6  F008         	goto	l6143
  3849  00116C                     u5590:
  3850  00116C                     
  3851                           ; BSR set to: 0
  3852                           ;mcc_generated_files/mtouch/mtouch_slider.c: 596:         if (position < deadband)
  3853  00116C  51F7               	movf	calculate_raw_position@deadband& (0+255),w,b
  3854  00116E  5DFB               	subwf	calculate_raw_position@position& (0+255),w,b
  3855  001170  51F8               	movf	(calculate_raw_position@deadband+1)& (0+255),w,b
  3856  001172  59FC               	subwfb	(calculate_raw_position@position+1)& (0+255),w,b
  3857  001174  B0D8               	btfsc	status,0,c
  3858  001176  EFBF  F008         	goto	u5601
  3859  00117A  EFC1  F008         	goto	u5600
  3860  00117E                     u5601:
  3861  00117E  EFC7  F008         	goto	l6153
  3862  001182                     u5600:
  3863  001182                     
  3864                           ; BSR set to: 0
  3865                           ;mcc_generated_files/mtouch/mtouch_slider.c: 597:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 598:             position = 0u;
  3866  001182  0E00               	movlw	0
  3867  001184  6FFC               	movwf	(calculate_raw_position@position+1)& (0+255),b
  3868  001186  0E00               	movlw	0
  3869  001188  6FFB               	movwf	calculate_raw_position@position& (0+255),b
  3870                           
  3871                           ;mcc_generated_files/mtouch/mtouch_slider.c: 599:         }
  3872  00118A  EFCD  F008         	goto	l6155
  3873  00118E                     l6153:
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;mcc_generated_files/mtouch/mtouch_slider.c: 601:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 602:             position = (uint16_t) (position - deadband);
  3877  00118E  51F7               	movf	calculate_raw_position@deadband& (0+255),w,b
  3878  001190  5DFB               	subwf	calculate_raw_position@position& (0+255),w,b
  3879  001192  6FFB               	movwf	calculate_raw_position@position& (0+255),b
  3880  001194  51F8               	movf	(calculate_raw_position@deadband+1)& (0+255),w,b
  3881  001196  59FC               	subwfb	(calculate_raw_position@position+1)& (0+255),w,b
  3882  001198  6FFC               	movwf	(calculate_raw_position@position+1)& (0+255),b
  3883  00119A                     l6155:
  3884                           
  3885                           ; BSR set to: 0
  3886                           ;mcc_generated_files/mtouch/mtouch_slider.c: 608:         position = divide(position, (u
      +                          int16_t) ((uint16_t)((uint16_t)1u << 12u) - (uint16_t) (deadband << 1u)), 12u);
  3887  00119A  C0FB  F016         	movff	calculate_raw_position@position,divide@numerator
  3888  00119E  C0FC  F017         	movff	calculate_raw_position@position+1,divide@numerator+1
  3889  0011A2  C0F7  F02C         	movff	calculate_raw_position@deadband,??_calculate_raw_position
  3890  0011A6  C0F8  F02D         	movff	calculate_raw_position@deadband+1,??_calculate_raw_position+1
  3891  0011AA  90D8               	bcf	status,0,c
  3892  0011AC  362C               	rlcf	??_calculate_raw_position^0,f,c
  3893  0011AE  362D               	rlcf	(??_calculate_raw_position+1)^0,f,c
  3894  0011B0  502C               	movf	??_calculate_raw_position^0,w,c
  3895  0011B2  0800               	sublw	0
  3896  0011B4  6E18               	movwf	divide@denominator^0,c
  3897  0011B6  502D               	movf	(??_calculate_raw_position+1)^0,w,c
  3898  0011B8  A0D8               	btfss	status,0,c
  3899  0011BA  2AE8               	incf	wreg,f,c
  3900  0011BC  0810               	sublw	16
  3901  0011BE  6E19               	movwf	(divide@denominator+1)^0,c
  3902  0011C0  0E0C               	movlw	12
  3903  0011C2  6E1A               	movwf	divide@exponent^0,c
  3904  0011C4  EC6D  F015         	call	_divide	;wreg free
  3905  0011C8  C016  F0FB         	movff	?_divide,calculate_raw_position@position
  3906  0011CC  C017  F0FC         	movff	?_divide+1,calculate_raw_position@position+1
  3907  0011D0                     l6157:
  3908                           
  3909                           ;mcc_generated_files/mtouch/mtouch_slider.c: 612:     position = position >> (12u - reso
      +                          l_bits);
  3910  0011D0  5049               	movf	_resol_bits^0,w,c
  3911  0011D2  080C               	sublw	12
  3912  0011D4  6E2C               	movwf	??_calculate_raw_position^0,c
  3913  0011D6  C0FB  F02D         	movff	calculate_raw_position@position,??_calculate_raw_position+1
  3914  0011DA  C0FC  F02E         	movff	calculate_raw_position@position+1,??_calculate_raw_position+2
  3915  0011DE  2A2C               	incf	??_calculate_raw_position^0,f,c
  3916  0011E0  EFF5  F008         	goto	u5614
  3917  0011E4                     u5615:
  3918  0011E4  90D8               	bcf	status,0,c
  3919  0011E6  322E               	rrcf	(??_calculate_raw_position+2)^0,f,c
  3920  0011E8  322D               	rrcf	(??_calculate_raw_position+1)^0,f,c
  3921  0011EA                     u5614:
  3922  0011EA  2E2C               	decfsz	??_calculate_raw_position^0,f,c
  3923  0011EC  EFF2  F008         	goto	u5615
  3924  0011F0  C02D  F0FB         	movff	??_calculate_raw_position+1,calculate_raw_position@position
  3925  0011F4  C02E  F0FC         	movff	??_calculate_raw_position+2,calculate_raw_position@position+1
  3926  0011F8                     
  3927                           ;mcc_generated_files/mtouch/mtouch_slider.c: 615:     if (position > (uint16_t) (((uint1
      +                          6_t) 1 << resol_bits)) - 1u)
  3928  0011F8  0EFF               	movlw	255
  3929  0011FA  6E2C               	movwf	??_calculate_raw_position^0,c
  3930  0011FC  0EFF               	movlw	255
  3931  0011FE  6E2D               	movwf	(??_calculate_raw_position+1)^0,c
  3932  001200  C049  F02E         	movff	_resol_bits,??_calculate_raw_position+2
  3933  001204  0E01               	movlw	1
  3934  001206  6E2F               	movwf	(??_calculate_raw_position+3)^0,c
  3935  001208  0E00               	movlw	0
  3936  00120A  6E30               	movwf	(??_calculate_raw_position+4)^0,c
  3937  00120C  2A2E               	incf	(??_calculate_raw_position+2)^0,f,c
  3938  00120E  EF0C  F009         	goto	u5624
  3939  001212                     u5625:
  3940  001212  90D8               	bcf	status,0,c
  3941  001214  362F               	rlcf	(??_calculate_raw_position+3)^0,f,c
  3942  001216  3630               	rlcf	(??_calculate_raw_position+4)^0,f,c
  3943  001218                     u5624:
  3944  001218  2E2E               	decfsz	(??_calculate_raw_position+2)^0,f,c
  3945  00121A  EF09  F009         	goto	u5625
  3946  00121E  502C               	movf	??_calculate_raw_position^0,w,c
  3947  001220  262F               	addwf	(??_calculate_raw_position+3)^0,f,c
  3948  001222  502D               	movf	(??_calculate_raw_position+1)^0,w,c
  3949  001224  2230               	addwfc	(??_calculate_raw_position+4)^0,f,c
  3950  001226  0100               	movlb	0	; () banked
  3951  001228  51FB               	movf	calculate_raw_position@position& (0+255),w,b
  3952  00122A  5C2F               	subwf	(??_calculate_raw_position+3)^0,w,c
  3953  00122C  51FC               	movf	(calculate_raw_position@position+1)& (0+255),w,b
  3954  00122E  5830               	subwfb	(??_calculate_raw_position+4)^0,w,c
  3955  001230  B0D8               	btfsc	status,0,c
  3956  001232  EF1D  F009         	goto	u5631
  3957  001236  EF1F  F009         	goto	u5630
  3958  00123A                     u5631:
  3959  00123A  EF35  F009         	goto	l6163
  3960  00123E                     u5630:
  3961  00123E                     
  3962                           ; BSR set to: 0
  3963                           ;mcc_generated_files/mtouch/mtouch_slider.c: 616:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 617:         position = (uint16_t) ((uint16_t) 1 << resol_bits) - 1u;
  3964  00123E  C049  F02C         	movff	_resol_bits,??_calculate_raw_position
  3965  001242  0E01               	movlw	1
  3966  001244  6E2D               	movwf	(??_calculate_raw_position+1)^0,c
  3967  001246  0E00               	movlw	0
  3968  001248  6E2E               	movwf	(??_calculate_raw_position+2)^0,c
  3969  00124A  2A2C               	incf	??_calculate_raw_position^0,f,c
  3970  00124C  EF2B  F009         	goto	u5644
  3971  001250                     u5645:
  3972  001250  90D8               	bcf	status,0,c
  3973  001252  362D               	rlcf	(??_calculate_raw_position+1)^0,f,c
  3974  001254  362E               	rlcf	(??_calculate_raw_position+2)^0,f,c
  3975  001256                     u5644:
  3976  001256  2E2C               	decfsz	??_calculate_raw_position^0,f,c
  3977  001258  EF28  F009         	goto	u5645
  3978  00125C  0EFF               	movlw	255
  3979  00125E  242D               	addwf	(??_calculate_raw_position+1)^0,w,c
  3980  001260  0100               	movlb	0	; () banked
  3981  001262  6FFB               	movwf	calculate_raw_position@position& (0+255),b
  3982  001264  0EFF               	movlw	255
  3983  001266  202E               	addwfc	(??_calculate_raw_position+2)^0,w,c
  3984  001268  6FFC               	movwf	(calculate_raw_position@position+1)& (0+255),b
  3985  00126A                     l6163:
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;mcc_generated_files/mtouch/mtouch_slider.c: 620:     return position;
  3989  00126A  C0FB  F02A         	movff	calculate_raw_position@position,?_calculate_raw_position
  3990  00126E  C0FC  F02B         	movff	calculate_raw_position@position+1,?_calculate_raw_position+1
  3991  001272                     
  3992                           ; BSR set to: 0
  3993  001272  0012               	return		;funcret
  3994  001274                     __end_of_calculate_raw_position:
  3995                           	callstack 0
  3996                           
  3997 ;; *************** function _interpolate *****************
  3998 ;; Defined at:
  3999 ;;		line 385 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  delta1          2   28[COMRAM] unsigned short 
  4002 ;;  delta2          2   30[COMRAM] unsigned short 
  4003 ;;  delta3          2   32[COMRAM] unsigned short 
  4004 ;;  num_bits        1   34[COMRAM] unsigned char 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  rtnval          2   39[COMRAM] unsigned short 
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  2   28[COMRAM] unsigned short 
  4009 ;; Registers used:
  4010 ;;		wreg, status,2, status,0, cstack
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4016 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4017 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4018 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4019 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4020 ;;Total ram usage:       13 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; Hardware stack levels required when called:    7
  4023 ;; This function calls:
  4024 ;;		_divide
  4025 ;; This function is called by:
  4026 ;;		_calculate_raw_position
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           	psect	text22
  4031  002BBE                     __ptext22:
  4032                           	callstack 0
  4033  002BBE                     _interpolate:
  4034                           	callstack 18
  4035  002BBE                     
  4036                           ;mcc_generated_files/mtouch/mtouch_slider.c: 385: static uint16_t interpolate(uint16_t d
      +                          elta1, uint16_t delta2, uint16_t delta3, uint8_t num_bits);mcc_generated_files/mtouch/mt
      +                          ouch_slider.c: 386: {;mcc_generated_files/mtouch/mtouch_slider.c: 387:     uint16_t rtnv
      +                          al;;mcc_generated_files/mtouch/mtouch_slider.c: 389:     if (delta1 >= delta3)
  4037  002BBE  5021               	movf	interpolate@delta3^0,w,c
  4038  002BC0  5C1D               	subwf	interpolate@delta1^0,w,c
  4039  002BC2  5022               	movf	(interpolate@delta3+1)^0,w,c
  4040  002BC4  581E               	subwfb	(interpolate@delta1+1)^0,w,c
  4041  002BC6  A0D8               	btfss	status,0,c
  4042  002BC8  EFE8  F015         	goto	u5161
  4043  002BCC  EFEA  F015         	goto	u5160
  4044  002BD0                     u5161:
  4045  002BD0  EF24  F016         	goto	l5883
  4046  002BD4                     u5160:
  4047  002BD4                     
  4048                           ;mcc_generated_files/mtouch/mtouch_slider.c: 390:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 391:         rtnval = (uint16_t) ((delta2 - delta3) + (delta1 - delta3));
  4049  002BD4  C021  F024         	movff	interpolate@delta3,??_interpolate
  4050  002BD8  C022  F025         	movff	interpolate@delta3+1,??_interpolate+1
  4051  002BDC  90D8               	bcf	status,0,c
  4052  002BDE  3624               	rlcf	??_interpolate^0,f,c
  4053  002BE0  3625               	rlcf	(??_interpolate+1)^0,f,c
  4054  002BE2  C01F  F026         	movff	interpolate@delta2,??_interpolate+2
  4055  002BE6  C020  F027         	movff	interpolate@delta2+1,??_interpolate+3
  4056  002BEA  5024               	movf	??_interpolate^0,w,c
  4057  002BEC  5E26               	subwf	(??_interpolate+2)^0,f,c
  4058  002BEE  5025               	movf	(??_interpolate+1)^0,w,c
  4059  002BF0  5A27               	subwfb	(??_interpolate+3)^0,f,c
  4060  002BF2  501D               	movf	interpolate@delta1^0,w,c
  4061  002BF4  2426               	addwf	(??_interpolate+2)^0,w,c
  4062  002BF6  6E28               	movwf	interpolate@rtnval^0,c
  4063  002BF8  501E               	movf	(interpolate@delta1+1)^0,w,c
  4064  002BFA  2027               	addwfc	(??_interpolate+3)^0,w,c
  4065  002BFC  6E29               	movwf	(interpolate@rtnval+1)^0,c
  4066  002BFE                     
  4067                           ;mcc_generated_files/mtouch/mtouch_slider.c: 392:         rtnval = (uint16_t) (divide((u
      +                          int16_t) (delta2 - delta3), rtnval, num_bits) - (uint16_t) ((uint16_t) 1u << (num_bits))
      +                          );
  4068  002BFE  C023  F024         	movff	interpolate@num_bits,??_interpolate
  4069  002C02  0E01               	movlw	1
  4070  002C04  6E25               	movwf	(??_interpolate+1)^0,c
  4071  002C06  0E00               	movlw	0
  4072  002C08  6E26               	movwf	(??_interpolate+2)^0,c
  4073  002C0A  2A24               	incf	??_interpolate^0,f,c
  4074  002C0C  EF0B  F016         	goto	u5174
  4075  002C10                     u5175:
  4076  002C10  90D8               	bcf	status,0,c
  4077  002C12  3625               	rlcf	(??_interpolate+1)^0,f,c
  4078  002C14  3626               	rlcf	(??_interpolate+2)^0,f,c
  4079  002C16                     u5174:
  4080  002C16  2E24               	decfsz	??_interpolate^0,f,c
  4081  002C18  EF08  F016         	goto	u5175
  4082  002C1C  5021               	movf	interpolate@delta3^0,w,c
  4083  002C1E  5C1F               	subwf	interpolate@delta2^0,w,c
  4084  002C20  6E16               	movwf	divide@numerator^0,c
  4085  002C22  5022               	movf	(interpolate@delta3+1)^0,w,c
  4086  002C24  5820               	subwfb	(interpolate@delta2+1)^0,w,c
  4087  002C26  6E17               	movwf	(divide@numerator+1)^0,c
  4088  002C28  C028  F018         	movff	interpolate@rtnval,divide@denominator
  4089  002C2C  C029  F019         	movff	interpolate@rtnval+1,divide@denominator+1
  4090  002C30  C023  F01A         	movff	interpolate@num_bits,divide@exponent
  4091  002C34  EC6D  F015         	call	_divide	;wreg free
  4092  002C38  5025               	movf	(??_interpolate+1)^0,w,c
  4093  002C3A  5C16               	subwf	?_divide^0,w,c
  4094  002C3C  6E28               	movwf	interpolate@rtnval^0,c
  4095  002C3E  5026               	movf	(??_interpolate+2)^0,w,c
  4096  002C40  5817               	subwfb	(?_divide+1)^0,w,c
  4097  002C42  6E29               	movwf	(interpolate@rtnval+1)^0,c
  4098                           
  4099                           ;mcc_generated_files/mtouch/mtouch_slider.c: 393:     }
  4100  002C44  EF4B  F016         	goto	l5887
  4101  002C48                     l5883:
  4102                           
  4103                           ;mcc_generated_files/mtouch/mtouch_slider.c: 395:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 396:         rtnval = (uint16_t) ((delta2 - delta1) + (delta3 - delta1));
  4104  002C48  C01D  F024         	movff	interpolate@delta1,??_interpolate
  4105  002C4C  C01E  F025         	movff	interpolate@delta1+1,??_interpolate+1
  4106  002C50  90D8               	bcf	status,0,c
  4107  002C52  3624               	rlcf	??_interpolate^0,f,c
  4108  002C54  3625               	rlcf	(??_interpolate+1)^0,f,c
  4109  002C56  C01F  F026         	movff	interpolate@delta2,??_interpolate+2
  4110  002C5A  C020  F027         	movff	interpolate@delta2+1,??_interpolate+3
  4111  002C5E  5024               	movf	??_interpolate^0,w,c
  4112  002C60  5E26               	subwf	(??_interpolate+2)^0,f,c
  4113  002C62  5025               	movf	(??_interpolate+1)^0,w,c
  4114  002C64  5A27               	subwfb	(??_interpolate+3)^0,f,c
  4115  002C66  5021               	movf	interpolate@delta3^0,w,c
  4116  002C68  2426               	addwf	(??_interpolate+2)^0,w,c
  4117  002C6A  6E28               	movwf	interpolate@rtnval^0,c
  4118  002C6C  5022               	movf	(interpolate@delta3+1)^0,w,c
  4119  002C6E  2027               	addwfc	(??_interpolate+3)^0,w,c
  4120  002C70  6E29               	movwf	(interpolate@rtnval+1)^0,c
  4121  002C72                     
  4122                           ;mcc_generated_files/mtouch/mtouch_slider.c: 397:         rtnval = divide((uint16_t) (de
      +                          lta3 - delta1), rtnval, num_bits);
  4123  002C72  501D               	movf	interpolate@delta1^0,w,c
  4124  002C74  5C21               	subwf	interpolate@delta3^0,w,c
  4125  002C76  6E16               	movwf	divide@numerator^0,c
  4126  002C78  501E               	movf	(interpolate@delta1+1)^0,w,c
  4127  002C7A  5822               	subwfb	(interpolate@delta3+1)^0,w,c
  4128  002C7C  6E17               	movwf	(divide@numerator+1)^0,c
  4129  002C7E  C028  F018         	movff	interpolate@rtnval,divide@denominator
  4130  002C82  C029  F019         	movff	interpolate@rtnval+1,divide@denominator+1
  4131  002C86  C023  F01A         	movff	interpolate@num_bits,divide@exponent
  4132  002C8A  EC6D  F015         	call	_divide	;wreg free
  4133  002C8E  C016  F028         	movff	?_divide,interpolate@rtnval
  4134  002C92  C017  F029         	movff	?_divide+1,interpolate@rtnval+1
  4135  002C96                     l5887:
  4136                           
  4137                           ;mcc_generated_files/mtouch/mtouch_slider.c: 400:     return rtnval;
  4138  002C96  C028  F01D         	movff	interpolate@rtnval,?_interpolate
  4139  002C9A  C029  F01E         	movff	interpolate@rtnval+1,?_interpolate+1
  4140  002C9E  0012               	return		;funcret
  4141  002CA0                     __end_of_interpolate:
  4142                           	callstack 0
  4143                           
  4144 ;; *************** function _divide *****************
  4145 ;; Defined at:
  4146 ;;		line 191 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  numerator       2   21[COMRAM] unsigned short 
  4149 ;;  denominator     2   23[COMRAM] unsigned short 
  4150 ;;  exponent        1   25[COMRAM] unsigned char 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  result          2   26[COMRAM] unsigned short 
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  2   21[COMRAM] unsigned short 
  4155 ;; Registers used:
  4156 ;;		wreg, status,2, status,0
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4162 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4163 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4165 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4166 ;;Total ram usage:        7 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; Hardware stack levels required when called:    6
  4169 ;; This function calls:
  4170 ;;		Nothing
  4171 ;; This function is called by:
  4172 ;;		_interpolate
  4173 ;;		_calculate_raw_position
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177                           	psect	text23
  4178  002ADA                     __ptext23:
  4179                           	callstack 0
  4180  002ADA                     _divide:
  4181                           	callstack 18
  4182  002ADA                     
  4183                           ;mcc_generated_files/mtouch/mtouch_slider.c: 191: static uint16_t divide(uint16_t numera
      +                          tor, uint16_t denominator, uint8_t exponent);mcc_generated_files/mtouch/mtouch_slider.c:
      +                           192: {;mcc_generated_files/mtouch/mtouch_slider.c: 193:     uint16_t result = 0u;
  4184  002ADA  0E00               	movlw	0
  4185  002ADC  6E1C               	movwf	(divide@result+1)^0,c
  4186  002ADE  0E00               	movlw	0
  4187  002AE0  6E1B               	movwf	divide@result^0,c
  4188  002AE2                     
  4189                           ;mcc_generated_files/mtouch/mtouch_slider.c: 196:     exponent++;
  4190  002AE2  2A1A               	incf	divide@exponent^0,f,c
  4191  002AE4                     
  4192                           ;mcc_generated_files/mtouch/mtouch_slider.c: 198:     if (denominator != 0u)
  4193  002AE4  5018               	movf	divide@denominator^0,w,c
  4194  002AE6  1019               	iorwf	(divide@denominator+1)^0,w,c
  4195  002AE8  B4D8               	btfsc	status,2,c
  4196  002AEA  EF79  F015         	goto	u5001
  4197  002AEE  EF7B  F015         	goto	u5000
  4198  002AF2                     u5001:
  4199  002AF2  EFCE  F015         	goto	l693
  4200  002AF6                     u5000:
  4201  002AF6  EF83  F015         	goto	l5797
  4202  002AFA                     l5793:
  4203                           
  4204                           ;mcc_generated_files/mtouch/mtouch_slider.c: 206:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 207:             exponent--;
  4205  002AFA  061A               	decf	divide@exponent^0,f,c
  4206  002AFC                     
  4207                           ;mcc_generated_files/mtouch/mtouch_slider.c: 208:             numerator = (uint16_t) (nu
      +                          merator << 1);
  4208  002AFC  90D8               	bcf	status,0,c
  4209  002AFE  3416               	rlcf	divide@numerator^0,w,c
  4210  002B00  6E16               	movwf	divide@numerator^0,c
  4211  002B02  3417               	rlcf	(divide@numerator+1)^0,w,c
  4212  002B04  6E17               	movwf	(divide@numerator+1)^0,c
  4213  002B06                     l5797:
  4214                           
  4215                           ;mcc_generated_files/mtouch/mtouch_slider.c: 205:         while (((numerator & 0x8000u) 
      +                          == 0u) && (exponent != 0u))
  4216  002B06  BE17               	btfsc	(divide@numerator+1)^0,7,c
  4217  002B08  EF88  F015         	goto	u5011
  4218  002B0C  EF8A  F015         	goto	u5010
  4219  002B10                     u5011:
  4220  002B10  EF9A  F015         	goto	l5805
  4221  002B14                     u5010:
  4222  002B14  501A               	movf	divide@exponent^0,w,c
  4223  002B16  A4D8               	btfss	status,2,c
  4224  002B18  EF90  F015         	goto	u5021
  4225  002B1C  EF92  F015         	goto	u5020
  4226  002B20                     u5021:
  4227  002B20  EF7D  F015         	goto	l5793
  4228  002B24                     u5020:
  4229  002B24  EF9A  F015         	goto	l5805
  4230  002B28                     l5801:
  4231                           
  4232                           ;mcc_generated_files/mtouch/mtouch_slider.c: 212:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 213:             exponent++;
  4233  002B28  2A1A               	incf	divide@exponent^0,f,c
  4234  002B2A                     
  4235                           ;mcc_generated_files/mtouch/mtouch_slider.c: 214:             denominator = (uint16_t) (
      +                          denominator << 1);
  4236  002B2A  90D8               	bcf	status,0,c
  4237  002B2C  3418               	rlcf	divide@denominator^0,w,c
  4238  002B2E  6E18               	movwf	divide@denominator^0,c
  4239  002B30  3419               	rlcf	(divide@denominator+1)^0,w,c
  4240  002B32  6E19               	movwf	(divide@denominator+1)^0,c
  4241  002B34                     l5805:
  4242                           
  4243                           ;mcc_generated_files/mtouch/mtouch_slider.c: 211:         while ((denominator & 0x8000u)
      +                           == 0u)
  4244  002B34  AE19               	btfss	(divide@denominator+1)^0,7,c
  4245  002B36  EF9F  F015         	goto	u5031
  4246  002B3A  EFA1  F015         	goto	u5030
  4247  002B3E                     u5031:
  4248  002B3E  EF94  F015         	goto	l5801
  4249  002B42                     u5030:
  4250  002B42  EFBD  F015         	goto	l5819
  4251  002B46                     l5807:
  4252                           
  4253                           ;mcc_generated_files/mtouch/mtouch_slider.c: 219:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 220:             result = (uint16_t) (result << 1);
  4254  002B46  90D8               	bcf	status,0,c
  4255  002B48  341B               	rlcf	divide@result^0,w,c
  4256  002B4A  6E1B               	movwf	divide@result^0,c
  4257  002B4C  341C               	rlcf	(divide@result+1)^0,w,c
  4258  002B4E  6E1C               	movwf	(divide@result+1)^0,c
  4259  002B50                     
  4260                           ;mcc_generated_files/mtouch/mtouch_slider.c: 221:             exponent--;
  4261  002B50  061A               	decf	divide@exponent^0,f,c
  4262  002B52                     
  4263                           ;mcc_generated_files/mtouch/mtouch_slider.c: 222:             if (numerator >= denominat
      +                          or)
  4264  002B52  5018               	movf	divide@denominator^0,w,c
  4265  002B54  5C16               	subwf	divide@numerator^0,w,c
  4266  002B56  5019               	movf	(divide@denominator+1)^0,w,c
  4267  002B58  5817               	subwfb	(divide@numerator+1)^0,w,c
  4268  002B5A  A0D8               	btfss	status,0,c
  4269  002B5C  EFB2  F015         	goto	u5041
  4270  002B60  EFB4  F015         	goto	u5040
  4271  002B64                     u5041:
  4272  002B64  EFBA  F015         	goto	l5817
  4273  002B68                     u5040:
  4274  002B68                     
  4275                           ;mcc_generated_files/mtouch/mtouch_slider.c: 223:             {;mcc_generated_files/mtou
      +                          ch/mtouch_slider.c: 224:                 numerator -= denominator;
  4276  002B68  5018               	movf	divide@denominator^0,w,c
  4277  002B6A  5E16               	subwf	divide@numerator^0,f,c
  4278  002B6C  5019               	movf	(divide@denominator+1)^0,w,c
  4279  002B6E  5A17               	subwfb	(divide@numerator+1)^0,f,c
  4280  002B70                     
  4281                           ;mcc_generated_files/mtouch/mtouch_slider.c: 225:                 result++;
  4282  002B70  4A1B               	infsnz	divide@result^0,f,c
  4283  002B72  2A1C               	incf	(divide@result+1)^0,f,c
  4284  002B74                     l5817:
  4285                           
  4286                           ;mcc_generated_files/mtouch/mtouch_slider.c: 227:             denominator >>= 1;
  4287  002B74  90D8               	bcf	status,0,c
  4288  002B76  3219               	rrcf	(divide@denominator+1)^0,f,c
  4289  002B78  3218               	rrcf	divide@denominator^0,f,c
  4290  002B7A                     l5819:
  4291                           
  4292                           ;mcc_generated_files/mtouch/mtouch_slider.c: 218:         while ((exponent != 0u) && ((r
      +                          esult & 0x8000u) == 0u))
  4293  002B7A  501A               	movf	divide@exponent^0,w,c
  4294  002B7C  B4D8               	btfsc	status,2,c
  4295  002B7E  EFC3  F015         	goto	u5051
  4296  002B82  EFC5  F015         	goto	u5050
  4297  002B86                     u5051:
  4298  002B86  EFD0  F015         	goto	l5823
  4299  002B8A                     u5050:
  4300  002B8A  AE1C               	btfss	(divide@result+1)^0,7,c
  4301  002B8C  EFCA  F015         	goto	u5061
  4302  002B90  EFCC  F015         	goto	u5060
  4303  002B94                     u5061:
  4304  002B94  EFA3  F015         	goto	l5807
  4305  002B98                     u5060:
  4306  002B98  EFD0  F015         	goto	l5823
  4307  002B9C                     l693:
  4308                           
  4309                           ;mcc_generated_files/mtouch/mtouch_slider.c: 231:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 232:         result = 0xffffu;
  4310  002B9C  681B               	setf	divide@result^0,c
  4311  002B9E  681C               	setf	(divide@result+1)^0,c
  4312  002BA0                     l5823:
  4313                           
  4314                           ;mcc_generated_files/mtouch/mtouch_slider.c: 236:     if (exponent)
  4315  002BA0  501A               	movf	divide@exponent^0,w,c
  4316  002BA2  B4D8               	btfsc	status,2,c
  4317  002BA4  EFD6  F015         	goto	u5071
  4318  002BA8  EFD8  F015         	goto	u5070
  4319  002BAC                     u5071:
  4320  002BAC  EFDA  F015         	goto	l709
  4321  002BB0                     u5070:
  4322  002BB0                     
  4323                           ;mcc_generated_files/mtouch/mtouch_slider.c: 237:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 238:         result = 0xffffu;
  4324  002BB0  681B               	setf	divide@result^0,c
  4325  002BB2  681C               	setf	(divide@result+1)^0,c
  4326  002BB4                     l709:
  4327                           
  4328                           ;mcc_generated_files/mtouch/mtouch_slider.c: 241:     return result;
  4329  002BB4  C01B  F016         	movff	divide@result,?_divide
  4330  002BB8  C01C  F017         	movff	divide@result+1,?_divide+1
  4331  002BBC  0012               	return		;funcret
  4332  002BBE                     __end_of_divide:
  4333                           	callstack 0
  4334                           
  4335 ;; *************** function _calculate_contact_size *****************
  4336 ;; Defined at:
  4337 ;;		line 628 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;  slider          2   34[COMRAM] PTR struct .
  4340 ;;		 -> mtouch_slider(17), 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;  contact_size    2   38[COMRAM] unsigned short 
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  2   34[COMRAM] unsigned short 
  4345 ;; Registers used:
  4346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4352 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4353 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4354 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4355 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4356 ;;Total ram usage:        6 bytes
  4357 ;; Hardware stack levels used:    1
  4358 ;; Hardware stack levels required when called:    8
  4359 ;; This function calls:
  4360 ;;		_Slider_FindLeft
  4361 ;;		_Slider_FindMiddle
  4362 ;;		_Slider_FindRight
  4363 ;; This function is called by:
  4364 ;;		_Slider_Service
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           	psect	text24
  4369  00320C                     __ptext24:
  4370                           	callstack 0
  4371  00320C                     _calculate_contact_size:
  4372                           	callstack 19
  4373  00320C                     
  4374                           ;mcc_generated_files/mtouch/mtouch_slider.c: 628: static uint16_t calculate_contact_size
      +                          (mtouch_slider_t* slider);mcc_generated_files/mtouch/mtouch_slider.c: 629: {;mcc_generat
      +                          ed_files/mtouch/mtouch_slider.c: 630:     uint16_t contact_size;;mcc_generated_files/mto
      +                          uch/mtouch_slider.c: 632:     middle_signal = Slider_FindMiddle(slider);
  4375  00320C  C023  F017         	movff	calculate_contact_size@slider,Slider_FindMiddle@slider
  4376  003210  C024  F018         	movff	calculate_contact_size@slider+1,Slider_FindMiddle@slider+1
  4377  003214  EC54  F018         	call	_Slider_FindMiddle	;wreg free
  4378  003218  C017  F036         	movff	?_Slider_FindMiddle,_middle_signal
  4379  00321C  C018  F037         	movff	?_Slider_FindMiddle+1,_middle_signal+1
  4380                           
  4381                           ;mcc_generated_files/mtouch/mtouch_slider.c: 633:     right_signal = Slider_FindRight(sl
      +                          ider);
  4382  003220  C023  F017         	movff	calculate_contact_size@slider,Slider_FindRight@slider
  4383  003224  C024  F018         	movff	calculate_contact_size@slider+1,Slider_FindRight@slider+1
  4384  003228  EC97  F017         	call	_Slider_FindRight	;wreg free
  4385  00322C  C017  F038         	movff	?_Slider_FindRight,_right_signal
  4386  003230  C018  F039         	movff	?_Slider_FindRight+1,_right_signal+1
  4387                           
  4388                           ;mcc_generated_files/mtouch/mtouch_slider.c: 634:     left_signal = Slider_FindLeft(slid
      +                          er);
  4389  003234  C023  F017         	movff	calculate_contact_size@slider,Slider_FindLeft@slider
  4390  003238  C024  F018         	movff	calculate_contact_size@slider+1,Slider_FindLeft@slider+1
  4391  00323C  EC2F  F017         	call	_Slider_FindLeft	;wreg free
  4392  003240  C017  F03A         	movff	?_Slider_FindLeft,_left_signal
  4393  003244  C018  F03B         	movff	?_Slider_FindLeft+1,_left_signal+1
  4394  003248                     
  4395                           ;mcc_generated_files/mtouch/mtouch_slider.c: 636:     if (right_signal > left_signal)
  4396  003248  5038               	movf	_right_signal^0,w,c
  4397  00324A  5C3A               	subwf	_left_signal^0,w,c
  4398  00324C  503B               	movf	(_left_signal+1)^0,w,c
  4399  00324E  0A80               	xorlw	128
  4400  003250  6E25               	movwf	??_calculate_contact_size^0,c
  4401  003252  5039               	movf	(_right_signal+1)^0,w,c
  4402  003254  0A80               	xorlw	128
  4403  003256  5825               	subwfb	??_calculate_contact_size^0,w,c
  4404  003258  B0D8               	btfsc	status,0,c
  4405  00325A  EF31  F019         	goto	u5981
  4406  00325E  EF33  F019         	goto	u5980
  4407  003262                     u5981:
  4408  003262  EF3B  F019         	goto	l6343
  4409  003266                     u5980:
  4410  003266                     
  4411                           ;mcc_generated_files/mtouch/mtouch_slider.c: 637:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 638:         contact_size = middle_signal + right_signal;
  4412  003266  5038               	movf	_right_signal^0,w,c
  4413  003268  2436               	addwf	_middle_signal^0,w,c
  4414  00326A  6E27               	movwf	calculate_contact_size@contact_size^0,c
  4415  00326C  5039               	movf	(_right_signal+1)^0,w,c
  4416  00326E  2037               	addwfc	(_middle_signal+1)^0,w,c
  4417  003270  6E28               	movwf	(calculate_contact_size@contact_size+1)^0,c
  4418                           
  4419                           ;mcc_generated_files/mtouch/mtouch_slider.c: 639:     }
  4420  003272  EF41  F019         	goto	l6345
  4421  003276                     l6343:
  4422                           
  4423                           ;mcc_generated_files/mtouch/mtouch_slider.c: 641:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 642:         contact_size = middle_signal + left_signal;
  4424  003276  503A               	movf	_left_signal^0,w,c
  4425  003278  2436               	addwf	_middle_signal^0,w,c
  4426  00327A  6E27               	movwf	calculate_contact_size@contact_size^0,c
  4427  00327C  503B               	movf	(_left_signal+1)^0,w,c
  4428  00327E  2037               	addwfc	(_middle_signal+1)^0,w,c
  4429  003280  6E28               	movwf	(calculate_contact_size@contact_size+1)^0,c
  4430  003282                     l6345:
  4431                           
  4432                           ;mcc_generated_files/mtouch/mtouch_slider.c: 645:     if (contact_size < slider->contact
      +                          Threshold)
  4433  003282  EE20 F006          	lfsr	2,6
  4434  003286  5023               	movf	calculate_contact_size@slider^0,w,c
  4435  003288  26D9               	addwf	fsr2l,f,c
  4436  00328A  5024               	movf	(calculate_contact_size@slider+1)^0,w,c
  4437  00328C  22DA               	addwfc	fsr2h,f,c
  4438  00328E  50DE               	movf	postinc2,w,c
  4439  003290  5C27               	subwf	calculate_contact_size@contact_size^0,w,c
  4440  003292  50DE               	movf	postinc2,w,c
  4441  003294  5828               	subwfb	(calculate_contact_size@contact_size+1)^0,w,c
  4442  003296  B0D8               	btfsc	status,0,c
  4443  003298  EF50  F019         	goto	u5991
  4444  00329C  EF52  F019         	goto	u5990
  4445  0032A0                     u5991:
  4446  0032A0  EF56  F019         	goto	l6349
  4447  0032A4                     u5990:
  4448  0032A4                     
  4449                           ;mcc_generated_files/mtouch/mtouch_slider.c: 646:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 647:         contact_size = 0u;
  4450  0032A4  0E00               	movlw	0
  4451  0032A6  6E28               	movwf	(calculate_contact_size@contact_size+1)^0,c
  4452  0032A8  0E00               	movlw	0
  4453  0032AA  6E27               	movwf	calculate_contact_size@contact_size^0,c
  4454  0032AC                     l6349:
  4455                           
  4456                           ;mcc_generated_files/mtouch/mtouch_slider.c: 650:     return contact_size;
  4457  0032AC  C027  F023         	movff	calculate_contact_size@contact_size,?_calculate_contact_size
  4458  0032B0  C028  F024         	movff	calculate_contact_size@contact_size+1,?_calculate_contact_size+1
  4459  0032B4  0012               	return		;funcret
  4460  0032B6                     __end_of_calculate_contact_size:
  4461                           	callstack 0
  4462                           
  4463 ;; *************** function _Slider_FindRight *****************
  4464 ;; Defined at:
  4465 ;;		line 484 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;  slider          2   22[COMRAM] PTR struct .
  4468 ;;		 -> mtouch_slider(17), 
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;  ref_node        1   31[COMRAM] unsigned char 
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  2   22[COMRAM] short 
  4473 ;; Registers used:
  4474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4481 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4482 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4483 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4484 ;;Total ram usage:       10 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; Hardware stack levels required when called:    7
  4487 ;; This function calls:
  4488 ;;		_MTOUCH_Button_Deviation_Get
  4489 ;; This function is called by:
  4490 ;;		_calculate_contact_size
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           	psect	text25
  4495  002F2E                     __ptext25:
  4496                           	callstack 0
  4497  002F2E                     _Slider_FindRight:
  4498                           	callstack 19
  4499  002F2E                     
  4500                           ;mcc_generated_files/mtouch/mtouch_slider.c: 484: static int16_t Slider_FindRight(mtouch
      +                          _slider_t* slider);mcc_generated_files/mtouch/mtouch_slider.c: 485: {;mcc_generated_file
      +                          s/mtouch/mtouch_slider.c: 486:     uint8_t ref_node = slider->startSegment;
  4501  002F2E  EE20 F002          	lfsr	2,2
  4502  002F32  5017               	movf	Slider_FindRight@slider^0,w,c
  4503  002F34  26D9               	addwf	fsr2l,f,c
  4504  002F36  5018               	movf	(Slider_FindRight@slider+1)^0,w,c
  4505  002F38  22DA               	addwfc	fsr2h,f,c
  4506  002F3A  50DF               	movf	indf2,w,c
  4507  002F3C  6E20               	movwf	Slider_FindRight@ref_node^0,c
  4508                           
  4509                           ;mcc_generated_files/mtouch/mtouch_slider.c: 489:     if (middle_node == (ref_node + sli
      +                          der->segmentCount - 1u))
  4510  002F3E  5040               	movf	_middle_node^0,w,c
  4511  002F40  6E19               	movwf	??_Slider_FindRight^0,c
  4512  002F42  6A1A               	clrf	(??_Slider_FindRight+1)^0,c
  4513  002F44  0EFF               	movlw	255
  4514  002F46  6E1B               	movwf	(??_Slider_FindRight+2)^0,c
  4515  002F48  0EFF               	movlw	255
  4516  002F4A  6E1C               	movwf	(??_Slider_FindRight+3)^0,c
  4517  002F4C  EE20 F003          	lfsr	2,3
  4518  002F50  5017               	movf	Slider_FindRight@slider^0,w,c
  4519  002F52  26D9               	addwf	fsr2l,f,c
  4520  002F54  5018               	movf	(Slider_FindRight@slider+1)^0,w,c
  4521  002F56  22DA               	addwfc	fsr2h,f,c
  4522  002F58  50DF               	movf	indf2,w,c
  4523  002F5A  6E1D               	movwf	(??_Slider_FindRight+4)^0,c
  4524  002F5C  501D               	movf	(??_Slider_FindRight+4)^0,w,c
  4525  002F5E  C020  F01E         	movff	Slider_FindRight@ref_node,??_Slider_FindRight+5
  4526  002F62  6A1F               	clrf	(??_Slider_FindRight+6)^0,c
  4527  002F64  261E               	addwf	(??_Slider_FindRight+5)^0,f,c
  4528  002F66  0E00               	movlw	0
  4529  002F68  221F               	addwfc	(??_Slider_FindRight+6)^0,f,c
  4530  002F6A  501B               	movf	(??_Slider_FindRight+2)^0,w,c
  4531  002F6C  261E               	addwf	(??_Slider_FindRight+5)^0,f,c
  4532  002F6E  501C               	movf	(??_Slider_FindRight+3)^0,w,c
  4533  002F70  221F               	addwfc	(??_Slider_FindRight+6)^0,f,c
  4534  002F72  5019               	movf	??_Slider_FindRight^0,w,c
  4535  002F74  181E               	xorwf	(??_Slider_FindRight+5)^0,w,c
  4536  002F76  E107               	bnz	u5471
  4537  002F78  501A               	movf	(??_Slider_FindRight+1)^0,w,c
  4538  002F7A  181F               	xorwf	(??_Slider_FindRight+6)^0,w,c
  4539  002F7C  A4D8               	btfss	status,2,c
  4540  002F7E  EFC3  F017         	goto	u5471
  4541  002F82  EFC5  F017         	goto	u5470
  4542  002F86                     u5471:
  4543  002F86  EFE2  F017         	goto	l6097
  4544  002F8A                     u5470:
  4545  002F8A                     
  4546                           ;mcc_generated_files/mtouch/mtouch_slider.c: 490:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 491:         if (slider->type == MTOUCH_TYPE_WHEEL)
  4547  002F8A  EE20 F001          	lfsr	2,1
  4548  002F8E  5017               	movf	Slider_FindRight@slider^0,w,c
  4549  002F90  26D9               	addwf	fsr2l,f,c
  4550  002F92  5018               	movf	(Slider_FindRight@slider+1)^0,w,c
  4551  002F94  22DA               	addwfc	fsr2h,f,c
  4552  002F96  04DE               	decf	postinc2,w,c
  4553  002F98  A4D8               	btfss	status,2,c
  4554  002F9A  EFD1  F017         	goto	u5481
  4555  002F9E  EFD3  F017         	goto	u5480
  4556  002FA2                     u5481:
  4557  002FA2  EFDC  F017         	goto	l6095
  4558  002FA6                     u5480:
  4559  002FA6                     
  4560                           ;mcc_generated_files/mtouch/mtouch_slider.c: 492:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 495:             right_signal = (int16_t) MTOUCH_Button_Deviation_Get(re
      +                          f_node);
  4561  002FA6  5020               	movf	Slider_FindRight@ref_node^0,w,c
  4562  002FA8  EC53  F01F         	call	_MTOUCH_Button_Deviation_Get
  4563  002FAC  6E38               	movwf	_right_signal^0,c
  4564  002FAE  6A39               	clrf	(_right_signal+1)^0,c
  4565  002FB0  BE38               	btfsc	_right_signal^0,7,c
  4566  002FB2  0639               	decf	(_right_signal+1)^0,f,c
  4567                           
  4568                           ;mcc_generated_files/mtouch/mtouch_slider.c: 496:         }
  4569  002FB4  EFE9  F017         	goto	l6099
  4570  002FB8                     l6095:
  4571                           
  4572                           ;mcc_generated_files/mtouch/mtouch_slider.c: 498:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 500:             right_signal = 0;
  4573  002FB8  0E00               	movlw	0
  4574  002FBA  6E39               	movwf	(_right_signal+1)^0,c
  4575  002FBC  0E00               	movlw	0
  4576  002FBE  6E38               	movwf	_right_signal^0,c
  4577  002FC0  EFE9  F017         	goto	l6099
  4578  002FC4                     l6097:
  4579                           
  4580                           ;mcc_generated_files/mtouch/mtouch_slider.c: 504:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 505:         right_signal = (int16_t) MTOUCH_Button_Deviation_Get(middle_nod
      +                          e + 1u);
  4581  002FC4  2840               	incf	_middle_node^0,w,c
  4582  002FC6  EC53  F01F         	call	_MTOUCH_Button_Deviation_Get
  4583  002FCA  6E38               	movwf	_right_signal^0,c
  4584  002FCC  6A39               	clrf	(_right_signal+1)^0,c
  4585  002FCE  BE38               	btfsc	_right_signal^0,7,c
  4586  002FD0  0639               	decf	(_right_signal+1)^0,f,c
  4587  002FD2                     l6099:
  4588                           
  4589                           ;mcc_generated_files/mtouch/mtouch_slider.c: 508:     if (right_signal < 0)
  4590  002FD2  BE39               	btfsc	(_right_signal+1)^0,7,c
  4591  002FD4  EFF0  F017         	goto	u5490
  4592  002FD8  EFEE  F017         	goto	u5491
  4593  002FDC                     u5491:
  4594  002FDC  EFF4  F017         	goto	l6103
  4595  002FE0                     u5490:
  4596  002FE0                     
  4597                           ;mcc_generated_files/mtouch/mtouch_slider.c: 509:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 510:         right_signal = 0;
  4598  002FE0  0E00               	movlw	0
  4599  002FE2  6E39               	movwf	(_right_signal+1)^0,c
  4600  002FE4  0E00               	movlw	0
  4601  002FE6  6E38               	movwf	_right_signal^0,c
  4602  002FE8                     l6103:
  4603                           
  4604                           ;mcc_generated_files/mtouch/mtouch_slider.c: 513:     return right_signal;
  4605  002FE8  C038  F017         	movff	_right_signal,?_Slider_FindRight
  4606  002FEC  C039  F018         	movff	_right_signal+1,?_Slider_FindRight+1
  4607  002FF0  0012               	return		;funcret
  4608  002FF2                     __end_of_Slider_FindRight:
  4609                           	callstack 0
  4610                           
  4611 ;; *************** function _Slider_FindMiddle *****************
  4612 ;; Defined at:
  4613 ;;		line 408 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;  slider          2   22[COMRAM] PTR struct .
  4616 ;;		 -> mtouch_slider(17), 
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;  maximumDelta    2   31[COMRAM] short 
  4619 ;;  channelDelta    2   29[COMRAM] short 
  4620 ;;  i               1   33[COMRAM] unsigned char 
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  2   22[COMRAM] short 
  4623 ;; Registers used:
  4624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4630 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4631 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4632 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4633 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4634 ;;Total ram usage:       12 bytes
  4635 ;; Hardware stack levels used:    1
  4636 ;; Hardware stack levels required when called:    7
  4637 ;; This function calls:
  4638 ;;		_MTOUCH_Button_Deviation_Get
  4639 ;; This function is called by:
  4640 ;;		_calculate_contact_size
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           	psect	text26
  4645  0030A8                     __ptext26:
  4646                           	callstack 0
  4647  0030A8                     _Slider_FindMiddle:
  4648                           	callstack 19
  4649  0030A8                     
  4650                           ;mcc_generated_files/mtouch/mtouch_slider.c: 408: static int16_t Slider_FindMiddle(mtouc
      +                          h_slider_t* slider);mcc_generated_files/mtouch/mtouch_slider.c: 409: {;mcc_generated_fil
      +                          es/mtouch/mtouch_slider.c: 410:     uint8_t i;;mcc_generated_files/mtouch/mtouch_slider.
      +                          c: 411:     int16_t channelDelta, maximumDelta;;mcc_generated_files/mtouch/mtouch_slider
      +                          .c: 413:     maximumDelta = 0;
  4651  0030A8  0E00               	movlw	0
  4652  0030AA  6E21               	movwf	(Slider_FindMiddle@maximumDelta+1)^0,c
  4653  0030AC  0E00               	movlw	0
  4654  0030AE  6E20               	movwf	Slider_FindMiddle@maximumDelta^0,c
  4655  0030B0                     
  4656                           ;mcc_generated_files/mtouch/mtouch_slider.c: 414:     middle_node = slider->startSegment
      +                          ;
  4657  0030B0  EE20 F002          	lfsr	2,2
  4658  0030B4  5017               	movf	Slider_FindMiddle@slider^0,w,c
  4659  0030B6  26D9               	addwf	fsr2l,f,c
  4660  0030B8  5018               	movf	(Slider_FindMiddle@slider+1)^0,w,c
  4661  0030BA  22DA               	addwfc	fsr2h,f,c
  4662  0030BC  50DF               	movf	indf2,w,c
  4663  0030BE  6E40               	movwf	_middle_node^0,c
  4664  0030C0                     
  4665                           ;mcc_generated_files/mtouch/mtouch_slider.c: 417:     for (i = slider->startSegment; i <
      +                           (slider->startSegment + slider->segmentCount); i++)
  4666  0030C0  EE20 F002          	lfsr	2,2
  4667  0030C4  5017               	movf	Slider_FindMiddle@slider^0,w,c
  4668  0030C6  26D9               	addwf	fsr2l,f,c
  4669  0030C8  5018               	movf	(Slider_FindMiddle@slider+1)^0,w,c
  4670  0030CA  22DA               	addwfc	fsr2h,f,c
  4671  0030CC  50DF               	movf	indf2,w,c
  4672  0030CE  6E22               	movwf	Slider_FindMiddle@i^0,c
  4673  0030D0  EF87  F018         	goto	l6061
  4674  0030D4                     l6053:
  4675                           
  4676                           ;mcc_generated_files/mtouch/mtouch_slider.c: 418:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 420:         channelDelta = (int16_t) MTOUCH_Button_Deviation_Get(i);
  4677  0030D4  5022               	movf	Slider_FindMiddle@i^0,w,c
  4678  0030D6  EC53  F01F         	call	_MTOUCH_Button_Deviation_Get
  4679  0030DA  6E1E               	movwf	Slider_FindMiddle@channelDelta^0,c
  4680  0030DC  6A1F               	clrf	(Slider_FindMiddle@channelDelta+1)^0,c
  4681  0030DE  BE1E               	btfsc	Slider_FindMiddle@channelDelta^0,7,c
  4682  0030E0  061F               	decf	(Slider_FindMiddle@channelDelta+1)^0,f,c
  4683  0030E2                     
  4684                           ;mcc_generated_files/mtouch/mtouch_slider.c: 423:         if (channelDelta > maximumDelt
      +                          a)
  4685  0030E2  501E               	movf	Slider_FindMiddle@channelDelta^0,w,c
  4686  0030E4  5C20               	subwf	Slider_FindMiddle@maximumDelta^0,w,c
  4687  0030E6  5021               	movf	(Slider_FindMiddle@maximumDelta+1)^0,w,c
  4688  0030E8  0A80               	xorlw	128
  4689  0030EA  6E19               	movwf	??_Slider_FindMiddle^0,c
  4690  0030EC  501F               	movf	(Slider_FindMiddle@channelDelta+1)^0,w,c
  4691  0030EE  0A80               	xorlw	128
  4692  0030F0  5819               	subwfb	??_Slider_FindMiddle^0,w,c
  4693  0030F2  B0D8               	btfsc	status,0,c
  4694  0030F4  EF7E  F018         	goto	u5411
  4695  0030F8  EF80  F018         	goto	u5410
  4696  0030FC                     u5411:
  4697  0030FC  EF86  F018         	goto	l6059
  4698  003100                     u5410:
  4699  003100                     
  4700                           ;mcc_generated_files/mtouch/mtouch_slider.c: 424:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 425:             middle_node = i;
  4701  003100  C022  F040         	movff	Slider_FindMiddle@i,_middle_node
  4702                           
  4703                           ;mcc_generated_files/mtouch/mtouch_slider.c: 426:             maximumDelta = channelDelt
      +                          a;
  4704  003104  C01E  F020         	movff	Slider_FindMiddle@channelDelta,Slider_FindMiddle@maximumDelta
  4705  003108  C01F  F021         	movff	Slider_FindMiddle@channelDelta+1,Slider_FindMiddle@maximumDelta+1
  4706  00310C                     l6059:
  4707                           
  4708                           ;mcc_generated_files/mtouch/mtouch_slider.c: 428:     }
  4709  00310C  2A22               	incf	Slider_FindMiddle@i^0,f,c
  4710  00310E                     l6061:
  4711  00310E  EE20 F002          	lfsr	2,2
  4712  003112  5017               	movf	Slider_FindMiddle@slider^0,w,c
  4713  003114  26D9               	addwf	fsr2l,f,c
  4714  003116  5018               	movf	(Slider_FindMiddle@slider+1)^0,w,c
  4715  003118  22DA               	addwfc	fsr2h,f,c
  4716  00311A  50DF               	movf	indf2,w,c
  4717  00311C  6E19               	movwf	??_Slider_FindMiddle^0,c
  4718  00311E  6A1A               	clrf	(??_Slider_FindMiddle+1)^0,c
  4719  003120  EE20 F003          	lfsr	2,3
  4720  003124  5017               	movf	Slider_FindMiddle@slider^0,w,c
  4721  003126  26D9               	addwf	fsr2l,f,c
  4722  003128  5018               	movf	(Slider_FindMiddle@slider+1)^0,w,c
  4723  00312A  22DA               	addwfc	fsr2h,f,c
  4724  00312C  50DF               	movf	indf2,w,c
  4725  00312E  6E1B               	movwf	(??_Slider_FindMiddle+2)^0,c
  4726  003130  501B               	movf	(??_Slider_FindMiddle+2)^0,w,c
  4727  003132  2619               	addwf	??_Slider_FindMiddle^0,f,c
  4728  003134  0E00               	movlw	0
  4729  003136  221A               	addwfc	(??_Slider_FindMiddle+1)^0,f,c
  4730  003138  5022               	movf	Slider_FindMiddle@i^0,w,c
  4731  00313A  6E1C               	movwf	(??_Slider_FindMiddle+3)^0,c
  4732  00313C  6A1D               	clrf	(??_Slider_FindMiddle+4)^0,c
  4733  00313E  5019               	movf	??_Slider_FindMiddle^0,w,c
  4734  003140  5C1C               	subwf	(??_Slider_FindMiddle+3)^0,w,c
  4735  003142  501A               	movf	(??_Slider_FindMiddle+1)^0,w,c
  4736  003144  581D               	subwfb	(??_Slider_FindMiddle+4)^0,w,c
  4737  003146  A0D8               	btfss	status,0,c
  4738  003148  EFA8  F018         	goto	u5421
  4739  00314C  EFAA  F018         	goto	u5420
  4740  003150                     u5421:
  4741  003150  EF6A  F018         	goto	l6053
  4742  003154                     u5420:
  4743  003154                     
  4744                           ;mcc_generated_files/mtouch/mtouch_slider.c: 430:     return maximumDelta;
  4745  003154  C020  F017         	movff	Slider_FindMiddle@maximumDelta,?_Slider_FindMiddle
  4746  003158  C021  F018         	movff	Slider_FindMiddle@maximumDelta+1,?_Slider_FindMiddle+1
  4747  00315C  0012               	return		;funcret
  4748  00315E                     __end_of_Slider_FindMiddle:
  4749                           	callstack 0
  4750                           
  4751 ;; *************** function _Slider_FindLeft *****************
  4752 ;; Defined at:
  4753 ;;		line 438 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;  slider          2   22[COMRAM] PTR struct .
  4756 ;;		 -> mtouch_slider(17), 
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;  ref_node        1   25[COMRAM] unsigned char 
  4759 ;; Return value:  Size  Location     Type
  4760 ;;                  2   22[COMRAM] short 
  4761 ;; Registers used:
  4762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4768 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4769 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4770 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4771 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4772 ;;Total ram usage:        4 bytes
  4773 ;; Hardware stack levels used:    1
  4774 ;; Hardware stack levels required when called:    7
  4775 ;; This function calls:
  4776 ;;		_MTOUCH_Button_Deviation_Get
  4777 ;; This function is called by:
  4778 ;;		_calculate_contact_size
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           	psect	text27
  4783  002E5E                     __ptext27:
  4784                           	callstack 0
  4785  002E5E                     _Slider_FindLeft:
  4786                           	callstack 19
  4787  002E5E                     
  4788                           ;mcc_generated_files/mtouch/mtouch_slider.c: 438: static int16_t Slider_FindLeft(mtouch_
      +                          slider_t* slider);mcc_generated_files/mtouch/mtouch_slider.c: 439: {;mcc_generated_files
      +                          /mtouch/mtouch_slider.c: 440:     uint8_t ref_node = slider->startSegment;
  4789  002E5E  EE20 F002          	lfsr	2,2
  4790  002E62  5017               	movf	Slider_FindLeft@slider^0,w,c
  4791  002E64  26D9               	addwf	fsr2l,f,c
  4792  002E66  5018               	movf	(Slider_FindLeft@slider+1)^0,w,c
  4793  002E68  22DA               	addwfc	fsr2h,f,c
  4794  002E6A  50DF               	movf	indf2,w,c
  4795  002E6C  6E1A               	movwf	Slider_FindLeft@ref_node^0,c
  4796  002E6E                     
  4797                           ;mcc_generated_files/mtouch/mtouch_slider.c: 442:     wheel_sensor_middle_channel_zero =
      +                           0;
  4798  002E6E  0E00               	movlw	0
  4799  002E70  6E3F               	movwf	_wheel_sensor_middle_channel_zero^0,c
  4800  002E72                     
  4801                           ;mcc_generated_files/mtouch/mtouch_slider.c: 445:     if (middle_node == ref_node)
  4802  002E72  501A               	movf	Slider_FindLeft@ref_node^0,w,c
  4803  002E74  1840               	xorwf	_middle_node^0,w,c
  4804  002E76  A4D8               	btfss	status,2,c
  4805  002E78  EF40  F017         	goto	u5431
  4806  002E7C  EF42  F017         	goto	u5430
  4807  002E80                     u5431:
  4808  002E80  EF80  F017         	goto	l6079
  4809  002E84                     u5430:
  4810  002E84                     
  4811                           ;mcc_generated_files/mtouch/mtouch_slider.c: 446:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 447:         if (slider->type == MTOUCH_TYPE_WHEEL)
  4812  002E84  EE20 F001          	lfsr	2,1
  4813  002E88  5017               	movf	Slider_FindLeft@slider^0,w,c
  4814  002E8A  26D9               	addwf	fsr2l,f,c
  4815  002E8C  5018               	movf	(Slider_FindLeft@slider+1)^0,w,c
  4816  002E8E  22DA               	addwfc	fsr2h,f,c
  4817  002E90  04DE               	decf	postinc2,w,c
  4818  002E92  A4D8               	btfss	status,2,c
  4819  002E94  EF4E  F017         	goto	u5441
  4820  002E98  EF50  F017         	goto	u5440
  4821  002E9C                     u5441:
  4822  002E9C  EF7A  F017         	goto	l6077
  4823  002EA0                     u5440:
  4824  002EA0                     
  4825                           ;mcc_generated_files/mtouch/mtouch_slider.c: 448:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 451:             left_signal = (int16_t) MTOUCH_Button_Deviation_Get(ref
      +                          _node + slider->segmentCount - 1u);
  4826  002EA0  EE20 F003          	lfsr	2,3
  4827  002EA4  5017               	movf	Slider_FindLeft@slider^0,w,c
  4828  002EA6  26D9               	addwf	fsr2l,f,c
  4829  002EA8  5018               	movf	(Slider_FindLeft@slider+1)^0,w,c
  4830  002EAA  22DA               	addwfc	fsr2h,f,c
  4831  002EAC  50DF               	movf	indf2,w,c
  4832  002EAE  241A               	addwf	Slider_FindLeft@ref_node^0,w,c
  4833  002EB0  6E19               	movwf	??_Slider_FindLeft^0,c
  4834  002EB2  0419               	decf	??_Slider_FindLeft^0,w,c
  4835  002EB4  EC53  F01F         	call	_MTOUCH_Button_Deviation_Get
  4836  002EB8  6E3A               	movwf	_left_signal^0,c
  4837  002EBA  6A3B               	clrf	(_left_signal+1)^0,c
  4838  002EBC  BE3A               	btfsc	_left_signal^0,7,c
  4839  002EBE  063B               	decf	(_left_signal+1)^0,f,c
  4840                           
  4841                           ;mcc_generated_files/mtouch/mtouch_slider.c: 454:             right_signal = (int16_t) M
      +                          TOUCH_Button_Deviation_Get(ref_node + 1u);
  4842  002EC0  281A               	incf	Slider_FindLeft@ref_node^0,w,c
  4843  002EC2  EC53  F01F         	call	_MTOUCH_Button_Deviation_Get
  4844  002EC6  6E38               	movwf	_right_signal^0,c
  4845  002EC8  6A39               	clrf	(_right_signal+1)^0,c
  4846  002ECA  BE38               	btfsc	_right_signal^0,7,c
  4847  002ECC  0639               	decf	(_right_signal+1)^0,f,c
  4848  002ECE                     
  4849                           ;mcc_generated_files/mtouch/mtouch_slider.c: 456:             if(left_signal > right_sig
      +                          nal)
  4850  002ECE  503A               	movf	_left_signal^0,w,c
  4851  002ED0  5C38               	subwf	_right_signal^0,w,c
  4852  002ED2  5039               	movf	(_right_signal+1)^0,w,c
  4853  002ED4  0A80               	xorlw	128
  4854  002ED6  6E19               	movwf	??_Slider_FindLeft^0,c
  4855  002ED8  503B               	movf	(_left_signal+1)^0,w,c
  4856  002EDA  0A80               	xorlw	128
  4857  002EDC  5819               	subwfb	??_Slider_FindLeft^0,w,c
  4858  002EDE  B0D8               	btfsc	status,0,c
  4859  002EE0  EF74  F017         	goto	u5451
  4860  002EE4  EF76  F017         	goto	u5450
  4861  002EE8                     u5451:
  4862  002EE8  EF87  F017         	goto	l6081
  4863  002EEC                     u5450:
  4864  002EEC                     
  4865                           ;mcc_generated_files/mtouch/mtouch_slider.c: 457:             {;mcc_generated_files/mtou
      +                          ch/mtouch_slider.c: 458:                 wheel_sensor_middle_channel_zero = 1;
  4866  002EEC  0E01               	movlw	1
  4867  002EEE  6E3F               	movwf	_wheel_sensor_middle_channel_zero^0,c
  4868  002EF0  EF87  F017         	goto	l6081
  4869  002EF4                     l6077:
  4870                           
  4871                           ;mcc_generated_files/mtouch/mtouch_slider.c: 462:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 464:             left_signal = 0;
  4872  002EF4  0E00               	movlw	0
  4873  002EF6  6E3B               	movwf	(_left_signal+1)^0,c
  4874  002EF8  0E00               	movlw	0
  4875  002EFA  6E3A               	movwf	_left_signal^0,c
  4876  002EFC  EF87  F017         	goto	l6081
  4877  002F00                     l6079:
  4878                           
  4879                           ;mcc_generated_files/mtouch/mtouch_slider.c: 468:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 469:         left_signal = (int16_t) MTOUCH_Button_Deviation_Get(middle_node
      +                           - 1u);
  4880  002F00  0440               	decf	_middle_node^0,w,c
  4881  002F02  EC53  F01F         	call	_MTOUCH_Button_Deviation_Get
  4882  002F06  6E3A               	movwf	_left_signal^0,c
  4883  002F08  6A3B               	clrf	(_left_signal+1)^0,c
  4884  002F0A  BE3A               	btfsc	_left_signal^0,7,c
  4885  002F0C  063B               	decf	(_left_signal+1)^0,f,c
  4886  002F0E                     l6081:
  4887                           
  4888                           ;mcc_generated_files/mtouch/mtouch_slider.c: 472:     if (left_signal < 0)
  4889  002F0E  BE3B               	btfsc	(_left_signal+1)^0,7,c
  4890  002F10  EF8E  F017         	goto	u5460
  4891  002F14  EF8C  F017         	goto	u5461
  4892  002F18                     u5461:
  4893  002F18  EF92  F017         	goto	l6085
  4894  002F1C                     u5460:
  4895  002F1C                     
  4896                           ;mcc_generated_files/mtouch/mtouch_slider.c: 473:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 474:         left_signal = 0;
  4897  002F1C  0E00               	movlw	0
  4898  002F1E  6E3B               	movwf	(_left_signal+1)^0,c
  4899  002F20  0E00               	movlw	0
  4900  002F22  6E3A               	movwf	_left_signal^0,c
  4901  002F24                     l6085:
  4902                           
  4903                           ;mcc_generated_files/mtouch/mtouch_slider.c: 476:     return left_signal;
  4904  002F24  C03A  F017         	movff	_left_signal,?_Slider_FindLeft
  4905  002F28  C03B  F018         	movff	_left_signal+1,?_Slider_FindLeft+1
  4906  002F2C  0012               	return		;funcret
  4907  002F2E                     __end_of_Slider_FindLeft:
  4908                           	callstack 0
  4909                           
  4910 ;; *************** function _MTOUCH_Button_Deviation_Get *****************
  4911 ;; Defined at:
  4912 ;;		line 441 in file "mcc_generated_files/mtouch/mtouch_button.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;  name            1    wreg     enum E12909
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;  name            1   21[COMRAM] enum E12909
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  1    wreg      char 
  4919 ;; Registers used:
  4920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4929 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4930 ;;Total ram usage:        1 bytes
  4931 ;; Hardware stack levels used:    1
  4932 ;; Hardware stack levels required when called:    6
  4933 ;; This function calls:
  4934 ;;		Nothing
  4935 ;; This function is called by:
  4936 ;;		_Slider_FindMiddle
  4937 ;;		_Slider_FindLeft
  4938 ;;		_Slider_FindRight
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           	psect	text28
  4943  003EA6                     __ptext28:
  4944                           	callstack 0
  4945  003EA6                     _MTOUCH_Button_Deviation_Get:
  4946                           	callstack 19
  4947                           
  4948                           ;incstack = 0
  4949                           ;MTOUCH_Button_Deviation_Get@name stored from wreg
  4950  003EA6  6E16               	movwf	MTOUCH_Button_Deviation_Get@name^0,c
  4951  003EA8                     
  4952                           ;mcc_generated_files/mtouch/mtouch_button.c: 441: mtouch_button_deviation_t MTOUCH_Butto
      +                          n_Deviation_Get(enum mtouch_button_names name);mcc_generated_files/mtouch/mtouch_button.
      +                          c: 442: {;mcc_generated_files/mtouch/mtouch_button.c: 443:     if(name < 5u)
  4953  003EA8  0E05               	movlw	5
  4954  003EAA  6016               	cpfslt	MTOUCH_Button_Deviation_Get@name^0,c
  4955  003EAC  EF5A  F01F         	goto	u5101
  4956  003EB0  EF5C  F01F         	goto	u5100
  4957  003EB4                     u5101:
  4958  003EB4  EF67  F01F         	goto	l5851
  4959  003EB8                     u5100:
  4960  003EB8                     
  4961                           ;mcc_generated_files/mtouch/mtouch_button.c: 444:         return mtouch_button[name].dev
      +                          iation;
  4962  003EB8  5016               	movf	MTOUCH_Button_Deviation_Get@name^0,w,c
  4963  003EBA  0D11               	mullw	17
  4964  003EBC  0E0A               	movlw	low (_mtouch_button+10)
  4965  003EBE  24F3               	addwf	243,w,c
  4966  003EC0  6ED9               	movwf	fsr2l,c
  4967  003EC2  0E01               	movlw	high (_mtouch_button+10)
  4968  003EC4  20F4               	addwfc	prodh,w,c
  4969  003EC6  6EDA               	movwf	fsr2h,c
  4970  003EC8  50DF               	movf	indf2,w,c
  4971  003ECA  EF68  F01F         	goto	l538
  4972  003ECE                     l5851:
  4973                           
  4974                           ;mcc_generated_files/mtouch/mtouch_button.c: 446:         return (mtouch_button_deviatio
      +                          n_t)0;
  4975  003ECE  0E00               	movlw	0
  4976  003ED0                     l538:
  4977  003ED0  0012               	return		;funcret
  4978  003ED2                     __end_of_MTOUCH_Button_Deviation_Get:
  4979                           	callstack 0
  4980                           
  4981 ;; *************** function _ProcessSliderChange *****************
  4982 ;; Defined at:
  4983 ;;		line 152 in file "application.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;  slider          1    wreg     enum E12935
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;  slider          1    0[COMRAM] enum E12935
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  1    wreg      void 
  4990 ;; Registers used:
  4991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5001 ;;Total ram usage:        0 bytes
  5002 ;; Hardware stack levels used:    1
  5003 ;; Hardware stack levels required when called:    7
  5004 ;; This function calls:
  5005 ;;		_MTOUCH_Slider_Position_Get
  5006 ;; This function is called by:
  5007 ;;		_main
  5008 ;;		_Slider_Service
  5009 ;; This function uses a non-reentrant model
  5010 ;;
  5011                           
  5012                           	psect	text29
  5013  0040F2                     __ptext29:
  5014                           	callstack 0
  5015  0040F2                     _ProcessSliderChange:
  5016                           	callstack 20
  5017  0040F2                     
  5018                           ;application.c: 152: void ProcessSliderChange(enum mtouch_slider_names slider);applicati
      +                          on.c: 153: {;application.c: 154:     BUTTON.key = SLIDER;
  5019  0040F2  0E03               	movlw	3
  5020  0040F4  0100               	movlb	0	; () banked
  5021  0040F6  6F8D               	movwf	_BUTTON& (0+255),b
  5022                           
  5023                           ;application.c: 155:     BUTTON.keyStatus = KEY_PRESSED;
  5024  0040F8  0E01               	movlw	1
  5025  0040FA  6F8E               	movwf	(_BUTTON+1)& (0+255),b
  5026  0040FC                     
  5027                           ; BSR set to: 0
  5028                           ;application.c: 156:     BUTTON.sliderADC_Val = MTOUCH_Slider_Position_Get(Slider1);
  5029  0040FC  0E00               	movlw	0
  5030  0040FE  EC88  F01E         	call	_MTOUCH_Slider_Position_Get
  5031  004102  C016  F08F         	movff	?_MTOUCH_Slider_Position_Get,_BUTTON+2
  5032  004106  C017  F090         	movff	?_MTOUCH_Slider_Position_Get+1,_BUTTON+3
  5033  00410A  0012               	return		;funcret
  5034  00410C                     __end_of_ProcessSliderChange:
  5035                           	callstack 0
  5036                           
  5037 ;; *************** function _Slider_DefaultCallback *****************
  5038 ;; Defined at:
  5039 ;;		line 999 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;  slider          1    wreg     enum E12944
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  slider          1    0[COMRAM] enum E12944
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  1    wreg      void 
  5046 ;; Registers used:
  5047 ;;		wreg
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5057 ;;Total ram usage:        0 bytes
  5058 ;; Hardware stack levels used:    1
  5059 ;; Hardware stack levels required when called:    6
  5060 ;; This function calls:
  5061 ;;		Nothing
  5062 ;; This function is called by:
  5063 ;;		_Slider_Service
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           	psect	text30
  5068  0041E2                     __ptext30:
  5069                           	callstack 0
  5070  0041E2                     _Slider_DefaultCallback:
  5071                           	callstack 21
  5072  0041E2  0012               	return		;funcret
  5073  0041E4                     __end_of_Slider_DefaultCallback:
  5074                           	callstack 0
  5075                           
  5076 ;; *************** function _MTOUCH_Slider_Position_Get *****************
  5077 ;; Defined at:
  5078 ;;		line 904 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;  sliderName      1    wreg     enum E12944
  5081 ;; Auto vars:     Size  Location     Type
  5082 ;;  sliderName      1   23[COMRAM] enum E12944
  5083 ;; Return value:  Size  Location     Type
  5084 ;;                  2   21[COMRAM] unsigned short 
  5085 ;; Registers used:
  5086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5087 ;; Tracked objects:
  5088 ;;		On entry : 0/0
  5089 ;;		On exit  : 0/0
  5090 ;;		Unchanged: 0/0
  5091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5093 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5095 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5096 ;;Total ram usage:        3 bytes
  5097 ;; Hardware stack levels used:    1
  5098 ;; Hardware stack levels required when called:    6
  5099 ;; This function calls:
  5100 ;;		Nothing
  5101 ;; This function is called by:
  5102 ;;		_ProcessSliderChange
  5103 ;;		_touch_example
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text31
  5108  003D10                     __ptext31:
  5109                           	callstack 0
  5110  003D10                     _MTOUCH_Slider_Position_Get:
  5111                           	callstack 20
  5112                           
  5113                           ;incstack = 0
  5114                           ;MTOUCH_Slider_Position_Get@sliderName stored from wreg
  5115  003D10  6E18               	movwf	MTOUCH_Slider_Position_Get@sliderName^0,c
  5116  003D12                     
  5117                           ;mcc_generated_files/mtouch/mtouch_slider.c: 904: uint16_t MTOUCH_Slider_Position_Get(en
      +                          um mtouch_slider_names sliderName);mcc_generated_files/mtouch/mtouch_slider.c: 905: {;mc
      +                          c_generated_files/mtouch/mtouch_slider.c: 906:     if (sliderName < 1u)
  5118  003D12  5018               	movf	MTOUCH_Slider_Position_Get@sliderName^0,w,c
  5119  003D14  A4D8               	btfss	status,2,c
  5120  003D16  EF8F  F01E         	goto	u5181
  5121  003D1A  EF91  F01E         	goto	u5180
  5122  003D1E                     u5181:
  5123  003D1E  EF9F  F01E         	goto	l5899
  5124  003D22                     u5180:
  5125  003D22                     
  5126                           ;mcc_generated_files/mtouch/mtouch_slider.c: 907:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 908:         return (mtouch_slider[sliderName].sliderPosition);
  5127  003D22  5018               	movf	MTOUCH_Slider_Position_Get@sliderName^0,w,c
  5128  003D24  0D11               	mullw	17
  5129  003D26  0EEE               	movlw	low (_mtouch_slider+12)
  5130  003D28  24F3               	addwf	243,w,c
  5131  003D2A  6ED9               	movwf	fsr2l,c
  5132  003D2C  0E00               	movlw	high (_mtouch_slider+12)
  5133  003D2E  20F4               	addwfc	prodh,w,c
  5134  003D30  6EDA               	movwf	fsr2h,c
  5135  003D32  CFDE F016          	movff	postinc2,?_MTOUCH_Slider_Position_Get
  5136  003D36  CFDD F017          	movff	postdec2,?_MTOUCH_Slider_Position_Get+1
  5137  003D3A  EFA3  F01E         	goto	l848
  5138  003D3E                     l5899:
  5139                           
  5140                           ;mcc_generated_files/mtouch/mtouch_slider.c: 911:         return 0u;
  5141  003D3E  0E00               	movlw	0
  5142  003D40  6E17               	movwf	(?_MTOUCH_Slider_Position_Get+1)^0,c
  5143  003D42  0E00               	movlw	0
  5144  003D44  6E16               	movwf	?_MTOUCH_Slider_Position_Get^0,c
  5145  003D46                     l848:
  5146  003D46  0012               	return		;funcret
  5147  003D48                     __end_of_MTOUCH_Slider_Position_Get:
  5148                           	callstack 0
  5149                           
  5150 ;; *************** function _MTOUCH_Button_isPressed *****************
  5151 ;; Defined at:
  5152 ;;		line 424 in file "mcc_generated_files/mtouch/mtouch_button.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;  name            1    wreg     enum E12909
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;  name            1   22[COMRAM] enum E12909
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  1    wreg      _Bool 
  5159 ;; Registers used:
  5160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5167 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5168 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5169 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5170 ;;Total ram usage:        2 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:    6
  5173 ;; This function calls:
  5174 ;;		Nothing
  5175 ;; This function is called by:
  5176 ;;		_Slider_Service
  5177 ;;		_touch_example
  5178 ;;		_MTOUCH_Button_Buttonmask_Get
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           	psect	text32
  5183  003A6E                     __ptext32:
  5184                           	callstack 0
  5185  003A6E                     _MTOUCH_Button_isPressed:
  5186                           	callstack 21
  5187                           
  5188                           ;incstack = 0
  5189                           ;MTOUCH_Button_isPressed@name stored from wreg
  5190  003A6E  6E17               	movwf	MTOUCH_Button_isPressed@name^0,c
  5191  003A70                     
  5192                           ;mcc_generated_files/mtouch/mtouch_button.c: 424: _Bool MTOUCH_Button_isPressed(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 425: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 426:     if(name < 5u)
  5193  003A70  0E05               	movlw	5
  5194  003A72  6017               	cpfslt	MTOUCH_Button_isPressed@name^0,c
  5195  003A74  EF3E  F01D         	goto	u5651
  5196  003A78  EF40  F01D         	goto	u5650
  5197  003A7C                     u5651:
  5198  003A7C  EF55  F01D         	goto	l6189
  5199  003A80                     u5650:
  5200  003A80                     
  5201                           ;mcc_generated_files/mtouch/mtouch_button.c: 427:         return (_Bool)((mtouch_button[
      +                          name].state == MTOUCH_BUTTON_STATE_pressed) ? 1 : 0);
  5202  003A80  5017               	movf	MTOUCH_Button_isPressed@name^0,w,c
  5203  003A82  0D11               	mullw	17
  5204  003A84  0E02               	movlw	low (_mtouch_button+2)
  5205  003A86  24F3               	addwf	243,w,c
  5206  003A88  6ED9               	movwf	fsr2l,c
  5207  003A8A  0E01               	movlw	high (_mtouch_button+2)
  5208  003A8C  20F4               	addwfc	prodh,w,c
  5209  003A8E  6EDA               	movwf	fsr2h,c
  5210  003A90  0E02               	movlw	2
  5211  003A92  18DE               	xorwf	postinc2,w,c
  5212  003A94  B4D8               	btfsc	status,2,c
  5213  003A96  EF4F  F01D         	goto	u5661
  5214  003A9A  EF52  F01D         	goto	u5660
  5215  003A9E                     u5661:
  5216  003A9E  0E01               	movlw	1
  5217  003AA0  EF53  F01D         	goto	u5670
  5218  003AA4                     u5660:
  5219  003AA4  0E00               	movlw	0
  5220  003AA6                     u5670:
  5221  003AA6  EF56  F01D         	goto	l528
  5222  003AAA                     l6189:
  5223                           
  5224                           ;mcc_generated_files/mtouch/mtouch_button.c: 429:         return 0;
  5225  003AAA  0E00               	movlw	0
  5226  003AAC                     l528:
  5227  003AAC  0012               	return		;funcret
  5228  003AAE                     __end_of_MTOUCH_Button_isPressed:
  5229                           	callstack 0
  5230                           
  5231 ;; *************** function _MTOUCH_Sensor_SampleAll *****************
  5232 ;; Defined at:
  5233 ;;		line 337 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;		None
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;		None
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  1    wreg      _Bool 
  5240 ;; Registers used:
  5241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5251 ;;Total ram usage:        0 bytes
  5252 ;; Hardware stack levels used:    1
  5253 ;; Hardware stack levels required when called:    9
  5254 ;; This function calls:
  5255 ;;		_MTOUCH_Sensor_isSamplingComplete
  5256 ;;		_MTOUCH_Sensor_postAcquisitionProcess
  5257 ;;		_Sensor_FrequencyHopping
  5258 ;; This function is called by:
  5259 ;;		_MTOUCH_Service_Mainloop
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262                           
  5263                           	psect	text33
  5264  003F4A                     __ptext33:
  5265                           	callstack 0
  5266  003F4A                     _MTOUCH_Sensor_SampleAll:
  5267                           	callstack 20
  5268  003F4A                     
  5269                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 339:     if(MTOUCH_Sensor_isSamplingComplet
      +                          e() == 0)
  5270  003F4A  EC67  F01B         	call	_MTOUCH_Sensor_isSamplingComplete	;wreg free
  5271  003F4E  0900               	iorlw	0
  5272  003F50  A4D8               	btfss	status,2,c
  5273  003F52  EFAD  F01F         	goto	u6231
  5274  003F56  EFAF  F01F         	goto	u6230
  5275  003F5A                     u6231:
  5276  003F5A  EFB2  F01F         	goto	l6513
  5277  003F5E                     u6230:
  5278  003F5E                     
  5279                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 340:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 341:         return 0;
  5280  003F5E  0E00               	movlw	0
  5281  003F60  EFB7  F01F         	goto	l170
  5282  003F64                     l6513:
  5283                           
  5284                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 344:     Sensor_FrequencyHopping();
  5285  003F64  ECCD  F020         	call	_Sensor_FrequencyHopping	;wreg free
  5286  003F68                     
  5287                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 345:     MTOUCH_Sensor_postAcquisitionProce
      +                          ss();
  5288  003F68  EC48  F01C         	call	_MTOUCH_Sensor_postAcquisitionProcess	;wreg free
  5289  003F6C                     
  5290                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 347:     return 1;
  5291  003F6C  0E01               	movlw	1
  5292  003F6E                     l170:
  5293  003F6E  0012               	return		;funcret
  5294  003F70                     __end_of_MTOUCH_Sensor_SampleAll:
  5295                           	callstack 0
  5296                           
  5297 ;; *************** function _Sensor_FrequencyHopping *****************
  5298 ;; Defined at:
  5299 ;;		line 667 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;		None
  5302 ;; Auto vars:     Size  Location     Type
  5303 ;;		None
  5304 ;; Return value:  Size  Location     Type
  5305 ;;                  1    wreg      void 
  5306 ;; Registers used:
  5307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5317 ;;Total ram usage:        0 bytes
  5318 ;; Hardware stack levels used:    1
  5319 ;; Hardware stack levels required when called:    8
  5320 ;; This function calls:
  5321 ;;		_Sensor_FrequencyHopping_Autotune_Process
  5322 ;;		_Sensor_setSamplePeriod
  5323 ;; This function is called by:
  5324 ;;		_MTOUCH_Sensor_SampleAll
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           	psect	text34
  5329  00419A                     __ptext34:
  5330                           	callstack 0
  5331  00419A                     _Sensor_FrequencyHopping:
  5332                           	callstack 20
  5333  00419A                     
  5334                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 670:     Sensor_FrequencyHopping_Autotune_P
      +                          rocess();
  5335  00419A  EC8A  F00C         	call	_Sensor_FrequencyHopping_Autotune_Process	;wreg free
  5336  00419E                     
  5337                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 672:     Sensor_setSamplePeriod();
  5338  00419E  EC69  F01F         	call	_Sensor_setSamplePeriod	;wreg free
  5339  0041A2  0012               	return		;funcret
  5340  0041A4                     __end_of_Sensor_FrequencyHopping:
  5341                           	callstack 0
  5342                           
  5343 ;; *************** function _Sensor_setSamplePeriod *****************
  5344 ;; Defined at:
  5345 ;;		line 587 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;		None
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;		None
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  1    wreg      void 
  5352 ;; Registers used:
  5353 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/0
  5356 ;;		On exit  : 0/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5363 ;;Total ram usage:        0 bytes
  5364 ;; Hardware stack levels used:    1
  5365 ;; Hardware stack levels required when called:    6
  5366 ;; This function calls:
  5367 ;;		Nothing
  5368 ;; This function is called by:
  5369 ;;		_Sensor_FrequencyHopping
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text35
  5374  003ED2                     __ptext35:
  5375                           	callstack 0
  5376  003ED2                     _Sensor_setSamplePeriod:
  5377                           	callstack 21
  5378  003ED2                     
  5379                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 589:     if(++freq_index >= sizeof(freq_hop
      +                          ) )
  5380  003ED2  2A44               	incf	_freq_index^0,f,c
  5381  003ED4  0E02               	movlw	2
  5382  003ED6  6444               	cpfsgt	_freq_index^0,c
  5383  003ED8  EF70  F01F         	goto	u3651
  5384  003EDC  EF72  F01F         	goto	u3650
  5385  003EE0                     u3651:
  5386  003EE0  EF74  F01F         	goto	l4795
  5387  003EE4                     u3650:
  5388  003EE4                     
  5389                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 590:         freq_index = 0;
  5390  003EE4  0E00               	movlw	0
  5391  003EE6  6E44               	movwf	_freq_index^0,c
  5392  003EE8                     l4795:
  5393                           
  5394                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 592:     sample_delay = freq_hop[freq_index
      +                          ];
  5395  003EE8  0EDC               	movlw	low _freq_hop
  5396  003EEA  2444               	addwf	_freq_index^0,w,c
  5397  003EEC  6ED9               	movwf	fsr2l,c
  5398  003EEE  6ADA               	clrf	fsr2h,c
  5399  003EF0  0E00               	movlw	high _freq_hop
  5400  003EF2  22DA               	addwfc	fsr2h,f,c
  5401  003EF4  50DF               	movf	indf2,w,c
  5402  003EF6  6E43               	movwf	_sample_delay^0,c
  5403  003EF8  0012               	return		;funcret
  5404  003EFA                     __end_of_Sensor_setSamplePeriod:
  5405                           	callstack 0
  5406                           
  5407 ;; *************** function _Sensor_FrequencyHopping_Autotune_Process *****************
  5408 ;; Defined at:
  5409 ;;		line 681 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5410 ;; Parameters:    Size  Location     Type
  5411 ;;		None
  5412 ;; Auto vars:     Size  Location     Type
  5413 ;;  maxVariance     2   36[COMRAM] unsigned short 
  5414 ;;  variance        2   34[COMRAM] unsigned short 
  5415 ;;  frequencyInd    1   40[COMRAM] unsigned char 
  5416 ;;  selectedFreq    1   39[COMRAM] unsigned char 
  5417 ;;  sensor          1   38[COMRAM] enum E12845
  5418 ;;  newfrequency    1   33[COMRAM] unsigned char 
  5419 ;; Return value:  Size  Location     Type
  5420 ;;                  1    wreg      void 
  5421 ;; Registers used:
  5422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5423 ;; Tracked objects:
  5424 ;;		On entry : 0/0
  5425 ;;		On exit  : 0/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5429 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5430 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5431 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5432 ;;Total ram usage:       16 bytes
  5433 ;; Hardware stack levels used:    1
  5434 ;; Hardware stack levels required when called:    7
  5435 ;; This function calls:
  5436 ;;		_abs
  5437 ;; This function is called by:
  5438 ;;		_Sensor_FrequencyHopping
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           	psect	text36
  5443  001914                     __ptext36:
  5444                           	callstack 0
  5445  001914                     _Sensor_FrequencyHopping_Autotune_Process:
  5446                           	callstack 20
  5447  001914                     
  5448                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 683:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 684:     uint8_t frequencyIndex;;mcc_generate
      +                          d_files/mtouch/mtouch_sensor.c: 685:     uint8_t newfrequencyFound,selectedFrequency;;mc
      +                          c_generated_files/mtouch/mtouch_sensor.c: 686:     uint16_t variance,maxVariance;;mcc_ge
      +                          nerated_files/mtouch/mtouch_sensor.c: 689:     static uint8_t varianceOverLimitCounter[3
      +                          ] = {0,0,0};;mcc_generated_files/mtouch/mtouch_sensor.c: 691:     maxVariance = 0;
  5449  001914  0E00               	movlw	0
  5450  001916  6E26               	movwf	(Sensor_FrequencyHopping_Autotune_Process@maxVariance+1)^0,c
  5451  001918  0E00               	movlw	0
  5452  00191A  6E25               	movwf	Sensor_FrequencyHopping_Autotune_Process@maxVariance^0,c
  5453                           
  5454                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 693:     for(sensor = 0; sensor < 5u; senso
      +                          r++)
  5455  00191C  0E00               	movlw	0
  5456  00191E  6E27               	movwf	Sensor_FrequencyHopping_Autotune_Process@sensor^0,c
  5457  001920                     l4803:
  5458                           
  5459                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 694:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 695:         variance = (mtouch_sensor_packetsample_t)abs(packet_sample[sens
      +                          or] - sensor_medianBuffer[sensor][freq_index]);
  5460  001920  5044               	movf	_freq_index^0,w,c
  5461  001922  0D02               	mullw	2
  5462  001924  CFF3 F01A          	movff	prodl,??_Sensor_FrequencyHopping_Autotune_Process
  5463  001928  CFF4 F01B          	movff	prodh,??_Sensor_FrequencyHopping_Autotune_Process+1
  5464  00192C  5027               	movf	Sensor_FrequencyHopping_Autotune_Process@sensor^0,w,c
  5465  00192E  0D06               	mullw	6
  5466  001930  0E60               	movlw	low _sensor_medianBuffer
  5467  001932  6E1C               	movwf	(??_Sensor_FrequencyHopping_Autotune_Process+2)^0,c
  5468  001934  0E00               	movlw	high _sensor_medianBuffer
  5469  001936  6E1D               	movwf	(??_Sensor_FrequencyHopping_Autotune_Process+3)^0,c
  5470  001938  50F3               	movf	243,w,c
  5471  00193A  261C               	addwf	(??_Sensor_FrequencyHopping_Autotune_Process+2)^0,f,c
  5472  00193C  50F4               	movf	244,w,c
  5473  00193E  221D               	addwfc	(??_Sensor_FrequencyHopping_Autotune_Process+3)^0,f,c
  5474  001940  501A               	movf	??_Sensor_FrequencyHopping_Autotune_Process^0,w,c
  5475  001942  241C               	addwf	(??_Sensor_FrequencyHopping_Autotune_Process+2)^0,w,c
  5476  001944  6ED9               	movwf	fsr2l,c
  5477  001946  501B               	movf	(??_Sensor_FrequencyHopping_Autotune_Process+1)^0,w,c
  5478  001948  201D               	addwfc	(??_Sensor_FrequencyHopping_Autotune_Process+3)^0,w,c
  5479  00194A  6EDA               	movwf	fsr2h,c
  5480  00194C  CFDE F01E          	movff	postinc2,??_Sensor_FrequencyHopping_Autotune_Process+4
  5481  001950  CFDD F01F          	movff	postdec2,??_Sensor_FrequencyHopping_Autotune_Process+5
  5482  001954  5027               	movf	Sensor_FrequencyHopping_Autotune_Process@sensor^0,w,c
  5483  001956  0D02               	mullw	2
  5484  001958  0E7E               	movlw	low _packet_sample
  5485  00195A  24F3               	addwf	243,w,c
  5486  00195C  6ED9               	movwf	fsr2l,c
  5487  00195E  0E00               	movlw	high _packet_sample
  5488  001960  20F4               	addwfc	prodh,w,c
  5489  001962  6EDA               	movwf	fsr2h,c
  5490  001964  CFDE F020          	movff	postinc2,??_Sensor_FrequencyHopping_Autotune_Process+6
  5491  001968  CFDD F021          	movff	postdec2,??_Sensor_FrequencyHopping_Autotune_Process+7
  5492  00196C  501E               	movf	(??_Sensor_FrequencyHopping_Autotune_Process+4)^0,w,c
  5493  00196E  5C20               	subwf	(??_Sensor_FrequencyHopping_Autotune_Process+6)^0,w,c
  5494  001970  6E16               	movwf	abs@a^0,c
  5495  001972  501F               	movf	(??_Sensor_FrequencyHopping_Autotune_Process+5)^0,w,c
  5496  001974  5821               	subwfb	(??_Sensor_FrequencyHopping_Autotune_Process+7)^0,w,c
  5497  001976  6E17               	movwf	(abs@a+1)^0,c
  5498  001978  EC57  F01D         	call	_abs	;wreg free
  5499  00197C  C016  F023         	movff	?_abs,Sensor_FrequencyHopping_Autotune_Process@variance
  5500  001980  C017  F024         	movff	?_abs+1,Sensor_FrequencyHopping_Autotune_Process@variance+1
  5501  001984                     
  5502                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 696:         if(variance > maxVariance)
  5503  001984  5023               	movf	Sensor_FrequencyHopping_Autotune_Process@variance^0,w,c
  5504  001986  5C25               	subwf	Sensor_FrequencyHopping_Autotune_Process@maxVariance^0,w,c
  5505  001988  5024               	movf	(Sensor_FrequencyHopping_Autotune_Process@variance+1)^0,w,c
  5506  00198A  5826               	subwfb	(Sensor_FrequencyHopping_Autotune_Process@maxVariance+1)^0,w,c
  5507  00198C  B0D8               	btfsc	status,0,c
  5508  00198E  EFCB  F00C         	goto	u3661
  5509  001992  EFCD  F00C         	goto	u3660
  5510  001996                     u3661:
  5511  001996  EFD1  F00C         	goto	l4809
  5512  00199A                     u3660:
  5513  00199A                     
  5514                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 697:             maxVariance = variance;
  5515  00199A  C023  F025         	movff	Sensor_FrequencyHopping_Autotune_Process@variance,Sensor_FrequencyHopping_Autotun
      +                          e_Process@maxVariance
  5516  00199E  C024  F026         	movff	Sensor_FrequencyHopping_Autotune_Process@variance+1,Sensor_FrequencyHopping_Autot
      +                          une_Process@maxVariance+1
  5517  0019A2                     l4809:
  5518                           
  5519                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 698:     }
  5520  0019A2  2A27               	incf	Sensor_FrequencyHopping_Autotune_Process@sensor^0,f,c
  5521  0019A4  0E04               	movlw	4
  5522  0019A6  6427               	cpfsgt	Sensor_FrequencyHopping_Autotune_Process@sensor^0,c
  5523  0019A8  EFD8  F00C         	goto	u3671
  5524  0019AC  EFDA  F00C         	goto	u3670
  5525  0019B0                     u3671:
  5526  0019B0  EF90  F00C         	goto	l4803
  5527  0019B4                     u3670:
  5528  0019B4                     
  5529                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 700:     if(maxVariance > (mtouch_sensor_pa
      +                          cketsample_t)100)
  5530  0019B4  5026               	movf	(Sensor_FrequencyHopping_Autotune_Process@maxVariance+1)^0,w,c
  5531  0019B6  E109               	bnz	u3680
  5532  0019B8  0E65               	movlw	101
  5533  0019BA  5C25               	subwf	Sensor_FrequencyHopping_Autotune_Process@maxVariance^0,w,c
  5534  0019BC  A0D8               	btfss	status,0,c
  5535  0019BE  EFE3  F00C         	goto	u3681
  5536  0019C2  EFE5  F00C         	goto	u3680
  5537  0019C6                     u3681:
  5538  0019C6  EF59  F00D         	goto	l4859
  5539  0019CA                     u3680:
  5540  0019CA                     
  5541                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 701:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 702:         if(++varianceOverLimitCounter[freq_index] >= (uint8_t)6)
  5542  0019CA  0E91               	movlw	low Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter
  5543  0019CC  2444               	addwf	_freq_index^0,w,c
  5544  0019CE  6ED9               	movwf	fsr2l,c
  5545  0019D0  6ADA               	clrf	fsr2h,c
  5546  0019D2  0E00               	movlw	high Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter
  5547  0019D4  22DA               	addwfc	fsr2h,f,c
  5548  0019D6  2ADF               	incf	indf2,f,c
  5549  0019D8  0E05               	movlw	5
  5550  0019DA  64DF               	cpfsgt	indf2,c
  5551  0019DC  EFF2  F00C         	goto	u3691
  5552  0019E0  EFF4  F00C         	goto	u3690
  5553  0019E4                     u3691:
  5554  0019E4  EF79  F00D         	goto	l290
  5555  0019E8                     u3690:
  5556  0019E8                     
  5557                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 705:             selectedFrequency = freq_h
      +                          op[freq_index];
  5558  0019E8  0EDC               	movlw	low _freq_hop
  5559  0019EA  2444               	addwf	_freq_index^0,w,c
  5560  0019EC  6ED9               	movwf	fsr2l,c
  5561  0019EE  6ADA               	clrf	fsr2h,c
  5562  0019F0  0E00               	movlw	high _freq_hop
  5563  0019F2  22DA               	addwfc	fsr2h,f,c
  5564  0019F4  50DF               	movf	indf2,w,c
  5565  0019F6  6E28               	movwf	Sensor_FrequencyHopping_Autotune_Process@selectedFrequency^0,c
  5566  0019F8                     l4821:
  5567                           
  5568                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 707:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 708:                 if(selectedFrequency > ((uint8_t)((mtouch_senso
      +                          r_time_t)0 << (uint8_t)2) + ((mtouch_sensor_time_t)1 << (uint8_t)2)))
  5569  0019F8  0E04               	movlw	4
  5570  0019FA  6428               	cpfsgt	Sensor_FrequencyHopping_Autotune_Process@selectedFrequency^0,c
  5571  0019FC  EF02  F00D         	goto	u3701
  5572  001A00  EF04  F00D         	goto	u3700
  5573  001A04                     u3701:
  5574  001A04  EF09  F00D         	goto	l4825
  5575  001A08                     u3700:
  5576  001A08                     
  5577                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 709:                     selectedFrequency 
      +                          = selectedFrequency - ((mtouch_sensor_time_t)1 << (uint8_t)2);
  5578  001A08  5028               	movf	Sensor_FrequencyHopping_Autotune_Process@selectedFrequency^0,w,c
  5579  001A0A  0FFC               	addlw	252
  5580  001A0C  6E28               	movwf	Sensor_FrequencyHopping_Autotune_Process@selectedFrequency^0,c
  5581  001A0E  EF0B  F00D         	goto	l276
  5582  001A12                     l4825:
  5583                           
  5584                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 711:                     selectedFrequency 
      +                          = (uint8_t)((mtouch_sensor_time_t)15 << (uint8_t)2);
  5585  001A12  0E3C               	movlw	60
  5586  001A14  6E28               	movwf	Sensor_FrequencyHopping_Autotune_Process@selectedFrequency^0,c
  5587  001A16                     l276:
  5588                           
  5589                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 713:                 newfrequencyFound = 1;
  5590  001A16  0E01               	movlw	1
  5591  001A18  6E22               	movwf	Sensor_FrequencyHopping_Autotune_Process@newfrequencyFound^0,c
  5592                           
  5593                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 715:                 for(frequencyIndex = 0
      +                          ;frequencyIndex < sizeof(freq_hop);frequencyIndex++)
  5594  001A1A  0E00               	movlw	0
  5595  001A1C  6E29               	movwf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex^0,c
  5596  001A1E                     l4831:
  5597                           
  5598                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 716:                 {;mcc_generated_files/
      +                          mtouch/mtouch_sensor.c: 717:                     if(frequencyIndex == freq_index)
  5599  001A1E  5044               	movf	_freq_index^0,w,c
  5600  001A20  1829               	xorwf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex^0,w,c
  5601  001A22  A4D8               	btfss	status,2,c
  5602  001A24  EF16  F00D         	goto	u3711
  5603  001A28  EF18  F00D         	goto	u3710
  5604  001A2C                     u3711:
  5605  001A2C  EF1A  F00D         	goto	l4835
  5606  001A30                     u3710:
  5607  001A30  EF2B  F00D         	goto	l4839
  5608  001A34                     l4835:
  5609  001A34  0EDC               	movlw	low _freq_hop
  5610  001A36  2429               	addwf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex^0,w,c
  5611  001A38  6ED9               	movwf	fsr2l,c
  5612  001A3A  6ADA               	clrf	fsr2h,c
  5613  001A3C  0E00               	movlw	high _freq_hop
  5614  001A3E  22DA               	addwfc	fsr2h,f,c
  5615  001A40  5028               	movf	Sensor_FrequencyHopping_Autotune_Process@selectedFrequency^0,w,c
  5616  001A42  18DE               	xorwf	postinc2,w,c
  5617  001A44  A4D8               	btfss	status,2,c
  5618  001A46  EF27  F00D         	goto	u3721
  5619  001A4A  EF29  F00D         	goto	u3720
  5620  001A4E                     u3721:
  5621  001A4E  EF2B  F00D         	goto	l4839
  5622  001A52                     u3720:
  5623  001A52                     
  5624                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 722:                     {;mcc_generated_fi
      +                          les/mtouch/mtouch_sensor.c: 723:                         newfrequencyFound = 0;
  5625  001A52  0E00               	movlw	0
  5626  001A54  6E22               	movwf	Sensor_FrequencyHopping_Autotune_Process@newfrequencyFound^0,c
  5627  001A56                     l4839:
  5628                           
  5629                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 729:                 }
  5630  001A56  2A29               	incf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex^0,f,c
  5631  001A58  0E02               	movlw	2
  5632  001A5A  6429               	cpfsgt	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex^0,c
  5633  001A5C  EF32  F00D         	goto	u3731
  5634  001A60  EF34  F00D         	goto	u3730
  5635  001A64                     u3731:
  5636  001A64  EF0F  F00D         	goto	l4831
  5637  001A68                     u3730:
  5638  001A68                     
  5639                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 731:             }while(!newfrequencyFound)
      +                          ;
  5640  001A68  5022               	movf	Sensor_FrequencyHopping_Autotune_Process@newfrequencyFound^0,w,c
  5641  001A6A  B4D8               	btfsc	status,2,c
  5642  001A6C  EF3A  F00D         	goto	u3741
  5643  001A70  EF3C  F00D         	goto	u3740
  5644  001A74                     u3741:
  5645  001A74  EFFC  F00C         	goto	l4821
  5646  001A78                     u3740:
  5647  001A78                     
  5648                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 733:             freq_hop[freq_index] = sel
      +                          ectedFrequency;
  5649  001A78  0EDC               	movlw	low _freq_hop
  5650  001A7A  2444               	addwf	_freq_index^0,w,c
  5651  001A7C  6ED9               	movwf	fsr2l,c
  5652  001A7E  6ADA               	clrf	fsr2h,c
  5653  001A80  0E00               	movlw	high _freq_hop
  5654  001A82  22DA               	addwfc	fsr2h,f,c
  5655  001A84  C028  FFDF         	movff	Sensor_FrequencyHopping_Autotune_Process@selectedFrequency,indf2
  5656  001A88                     
  5657                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 735:             for(frequencyIndex = 0;fre
      +                          quencyIndex < sizeof(freq_hop);frequencyIndex++)
  5658  001A88  0E00               	movlw	0
  5659  001A8A  6E29               	movwf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex^0,c
  5660  001A8C                     l4853:
  5661                           
  5662                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 736:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 737:                 varianceOverLimitCounter[frequencyIndex] = 0;
  5663  001A8C  0E91               	movlw	low Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter
  5664  001A8E  2429               	addwf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex^0,w,c
  5665  001A90  6ED9               	movwf	fsr2l,c
  5666  001A92  6ADA               	clrf	fsr2h,c
  5667  001A94  0E00               	movlw	high Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter
  5668  001A96  22DA               	addwfc	fsr2h,f,c
  5669  001A98  0E00               	movlw	0
  5670  001A9A  6EDF               	movwf	indf2,c
  5671  001A9C                     
  5672                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 738:             }
  5673  001A9C  2A29               	incf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex^0,f,c
  5674  001A9E  0E02               	movlw	2
  5675  001AA0  6429               	cpfsgt	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex^0,c
  5676  001AA2  EF55  F00D         	goto	u3751
  5677  001AA6  EF57  F00D         	goto	u3750
  5678  001AAA                     u3751:
  5679  001AAA  EF46  F00D         	goto	l4853
  5680  001AAE                     u3750:
  5681  001AAE  EF79  F00D         	goto	l290
  5682  001AB2                     l4859:
  5683  001AB2  5026               	movf	(Sensor_FrequencyHopping_Autotune_Process@maxVariance+1)^0,w,c
  5684  001AB4  E107               	bnz	u3761
  5685  001AB6  0E32               	movlw	50
  5686  001AB8  5C25               	subwf	Sensor_FrequencyHopping_Autotune_Process@maxVariance^0,w,c
  5687  001ABA  B0D8               	btfsc	status,0,c
  5688  001ABC  EF62  F00D         	goto	u3761
  5689  001AC0  EF64  F00D         	goto	u3760
  5690  001AC4                     u3761:
  5691  001AC4  EF79  F00D         	goto	l290
  5692  001AC8                     u3760:
  5693  001AC8                     
  5694                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 742:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 744:         if(varianceOverLimitCounter[freq_index] > 0)
  5695  001AC8  0E91               	movlw	low Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter
  5696  001ACA  2444               	addwf	_freq_index^0,w,c
  5697  001ACC  6ED9               	movwf	fsr2l,c
  5698  001ACE  6ADA               	clrf	fsr2h,c
  5699  001AD0  0E00               	movlw	high Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter
  5700  001AD2  22DA               	addwfc	fsr2h,f,c
  5701  001AD4  50DF               	movf	indf2,w,c
  5702  001AD6  B4D8               	btfsc	status,2,c
  5703  001AD8  EF70  F00D         	goto	u3771
  5704  001ADC  EF72  F00D         	goto	u3770
  5705  001AE0                     u3771:
  5706  001AE0  EF79  F00D         	goto	l290
  5707  001AE4                     u3770:
  5708  001AE4                     
  5709                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 745:             varianceOverLimitCounter[f
      +                          req_index]--;
  5710  001AE4  0E91               	movlw	low Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter
  5711  001AE6  2444               	addwf	_freq_index^0,w,c
  5712  001AE8  6ED9               	movwf	fsr2l,c
  5713  001AEA  6ADA               	clrf	fsr2h,c
  5714  001AEC  0E00               	movlw	high Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter
  5715  001AEE  22DA               	addwfc	fsr2h,f,c
  5716  001AF0  06DF               	decf	indf2,f,c
  5717  001AF2                     l290:
  5718  001AF2  0012               	return		;funcret
  5719  001AF4                     __end_of_Sensor_FrequencyHopping_Autotune_Process:
  5720                           	callstack 0
  5721                           
  5722 ;; *************** function _abs *****************
  5723 ;; Defined at:
  5724 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;  a               2   21[COMRAM] int 
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;		None
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  2   21[COMRAM] int 
  5731 ;; Registers used:
  5732 ;;		wreg, status,2, status,0
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5740 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5741 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5742 ;;Total ram usage:        4 bytes
  5743 ;; Hardware stack levels used:    1
  5744 ;; Hardware stack levels required when called:    6
  5745 ;; This function calls:
  5746 ;;		Nothing
  5747 ;; This function is called by:
  5748 ;;		_Sensor_FrequencyHopping_Autotune_Process
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752                           	psect	text37
  5753  003AAE                     __ptext37:
  5754                           	callstack 0
  5755  003AAE                     _abs:
  5756                           	callstack 20
  5757  003AAE  BE17               	btfsc	(abs@a+1)^0,7,c
  5758  003AB0  EF64  F01D         	goto	u2830
  5759  003AB4  5017               	movf	(abs@a+1)^0,w,c
  5760  003AB6  E106               	bnz	u2831
  5761  003AB8  0416               	decf	abs@a^0,w,c
  5762  003ABA  B0D8               	btfsc	status,0,c
  5763  003ABC  EF62  F01D         	goto	u2831
  5764  003AC0  EF64  F01D         	goto	u2830
  5765  003AC4                     u2831:
  5766  003AC4  EF72  F01D         	goto	l2192
  5767  003AC8                     u2830:
  5768  003AC8  C016  F018         	movff	abs@a,??_abs
  5769  003ACC  C017  F019         	movff	abs@a+1,??_abs+1
  5770  003AD0  1E18               	comf	??_abs^0,f,c
  5771  003AD2  1E19               	comf	(??_abs+1)^0,f,c
  5772  003AD4  4A18               	infsnz	??_abs^0,f,c
  5773  003AD6  2A19               	incf	(??_abs+1)^0,f,c
  5774  003AD8  C018  F016         	movff	??_abs,?_abs
  5775  003ADC  C019  F017         	movff	??_abs+1,?_abs+1
  5776  003AE0  EF76  F01D         	goto	l2195
  5777  003AE4                     l2192:
  5778  003AE4  C016  F016         	movff	abs@a,?_abs
  5779  003AE8  C017  F017         	movff	abs@a+1,?_abs+1
  5780  003AEC                     l2195:
  5781  003AEC  0012               	return		;funcret
  5782  003AEE                     __end_of_abs:
  5783                           	callstack 0
  5784                           
  5785 ;; *************** function _MTOUCH_Sensor_postAcquisitionProcess *****************
  5786 ;; Defined at:
  5787 ;;		line 504 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;		None
  5790 ;; Auto vars:     Size  Location     Type
  5791 ;;  name            1   33[COMRAM] enum E12845
  5792 ;; Return value:  Size  Location     Type
  5793 ;;                  1    wreg      void 
  5794 ;; Registers used:
  5795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 0/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5802 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5804 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5805 ;;Total ram usage:        1 bytes
  5806 ;; Hardware stack levels used:    1
  5807 ;; Hardware stack levels required when called:    8
  5808 ;; This function calls:
  5809 ;;		_Sensor_DefaultCallback
  5810 ;;		_Sensor_RawSample_Update
  5811 ;; This function is called by:
  5812 ;;		_MTOUCH_Sensor_SampleAll
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           	psect	text38
  5817  003890                     __ptext38:
  5818                           	callstack 0
  5819  003890                     _MTOUCH_Sensor_postAcquisitionProcess:
  5820                           	callstack 20
  5821  003890                     
  5822                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 506:     enum mtouch_sensor_names name;;mcc
      +                          _generated_files/mtouch/mtouch_sensor.c: 508:     for (name = 0; name < 5u; name++)
  5823  003890  0E00               	movlw	0
  5824  003892  6E22               	movwf	MTOUCH_Sensor_postAcquisitionProcess@name^0,c
  5825  003894                     l5113:
  5826                           
  5827                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 509:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 510:         if(mtouch_sensor[name].sampled)
  5828  003894  5022               	movf	MTOUCH_Sensor_postAcquisitionProcess@name^0,w,c
  5829  003896  0D09               	mullw	9
  5830  003898  0E9F               	movlw	low (_mtouch_sensor+8)
  5831  00389A  24F3               	addwf	243,w,c
  5832  00389C  6ED9               	movwf	fsr2l,c
  5833  00389E  0E00               	movlw	high (_mtouch_sensor+8)
  5834  0038A0  20F4               	addwfc	prodh,w,c
  5835  0038A2  6EDA               	movwf	fsr2h,c
  5836  0038A4  0100               	movlb	0	; () banked
  5837  0038A6  A2DF               	btfss	indf2,1,c
  5838  0038A8  EF58  F01C         	goto	u4191
  5839  0038AC  EF5A  F01C         	goto	u4190
  5840  0038B0                     u4191:
  5841  0038B0  EF67  F01C         	goto	l5119
  5842  0038B4                     u4190:
  5843  0038B4                     
  5844                           ; BSR set to: 0
  5845                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 511:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 512:             Sensor_RawSample_Update(&mtouch_sensor[name]);
  5846  0038B4  5022               	movf	MTOUCH_Sensor_postAcquisitionProcess@name^0,w,c
  5847  0038B6  0D09               	mullw	9
  5848  0038B8  0E97               	movlw	low _mtouch_sensor
  5849  0038BA  24F3               	addwf	243,w,c
  5850  0038BC  6E1E               	movwf	Sensor_RawSample_Update@sensor^0,c
  5851  0038BE  0E00               	movlw	high _mtouch_sensor
  5852  0038C0  20F4               	addwfc	prodh,w,c
  5853  0038C2  6E1F               	movwf	(Sensor_RawSample_Update@sensor+1)^0,c
  5854  0038C4  ECC8  F01B         	call	_Sensor_RawSample_Update	;wreg free
  5855  0038C8                     
  5856                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 513:             callback_sampled(name);
  5857  0038C8  5022               	movf	MTOUCH_Sensor_postAcquisitionProcess@name^0,w,c
  5858  0038CA  ECF2  F020         	call	_Sensor_DefaultCallback
  5859  0038CE                     l5119:
  5860                           
  5861                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 515:     }
  5862  0038CE  2A22               	incf	MTOUCH_Sensor_postAcquisitionProcess@name^0,f,c
  5863  0038D0  0E04               	movlw	4
  5864  0038D2  6422               	cpfsgt	MTOUCH_Sensor_postAcquisitionProcess@name^0,c
  5865  0038D4  EF6E  F01C         	goto	u4201
  5866  0038D8  EF70  F01C         	goto	u4200
  5867  0038DC                     u4201:
  5868  0038DC  EF4A  F01C         	goto	l5113
  5869  0038E0                     u4200:
  5870  0038E0  0012               	return		;funcret
  5871  0038E2                     __end_of_MTOUCH_Sensor_postAcquisitionProcess:
  5872                           	callstack 0
  5873                           
  5874 ;; *************** function _Sensor_RawSample_Update *****************
  5875 ;; Defined at:
  5876 ;;		line 609 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  sensor          2   29[COMRAM] PTR struct .
  5879 ;;		 -> mtouch_sensor(45), 
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;  result          2   31[COMRAM] unsigned short 
  5882 ;; Return value:  Size  Location     Type
  5883 ;;                  1    wreg      void 
  5884 ;; Registers used:
  5885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5886 ;; Tracked objects:
  5887 ;;		On entry : 0/0
  5888 ;;		On exit  : 0/0
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5891 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5892 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5894 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5895 ;;Total ram usage:        4 bytes
  5896 ;; Hardware stack levels used:    1
  5897 ;; Hardware stack levels required when called:    7
  5898 ;; This function calls:
  5899 ;;		_medianFilter
  5900 ;; This function is called by:
  5901 ;;		_MTOUCH_Sensor_postAcquisitionProcess
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           	psect	text39
  5906  003790                     __ptext39:
  5907                           	callstack 0
  5908  003790                     _Sensor_RawSample_Update:
  5909                           	callstack 20
  5910  003790                     
  5911                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 609: static void Sensor_RawSample_Update(mt
      +                          ouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 610: {;mcc_generated_
      +                          files/mtouch/mtouch_sensor.c: 611:     mtouch_sensor_sample_t result = medianFilter(sens
      +                          or->sensor_name);
  5912  003790  C01E  FFD9         	movff	Sensor_RawSample_Update@sensor,fsr2l
  5913  003794  C01F  FFDA         	movff	Sensor_RawSample_Update@sensor+1,fsr2h
  5914  003798  50DF               	movf	indf2,w,c
  5915  00379A  EC91  F00B         	call	_medianFilter
  5916  00379E  C016  F020         	movff	?_medianFilter,Sensor_RawSample_Update@result
  5917  0037A2  C017  F021         	movff	?_medianFilter+1,Sensor_RawSample_Update@result+1
  5918  0037A6                     
  5919                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 613:     if (GIE == (uint8_t)1)
  5920  0037A6  AEF2               	btfss	4082,7,c	;volatile
  5921  0037A8  EFD8  F01B         	goto	u3641
  5922  0037AC  EFDA  F01B         	goto	u3640
  5923  0037B0                     u3641:
  5924  0037B0  EFE8  F01B         	goto	l4787
  5925  0037B4                     u3640:
  5926  0037B4                     
  5927                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 614:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 615:         GIE = (uint8_t)0;
  5928  0037B4  9EF2               	bcf	4082,7,c	;volatile
  5929  0037B6                     
  5930                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 616:         sensor->rawSample = result;
  5931  0037B6  EE20 F006          	lfsr	2,6
  5932  0037BA  501E               	movf	Sensor_RawSample_Update@sensor^0,w,c
  5933  0037BC  26D9               	addwf	fsr2l,f,c
  5934  0037BE  501F               	movf	(Sensor_RawSample_Update@sensor+1)^0,w,c
  5935  0037C0  22DA               	addwfc	fsr2h,f,c
  5936  0037C2  C020  FFDE         	movff	Sensor_RawSample_Update@result,postinc2
  5937  0037C6  C021  FFDD         	movff	Sensor_RawSample_Update@result+1,postdec2
  5938  0037CA                     
  5939                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 617:         GIE = (uint8_t)1;
  5940  0037CA  8EF2               	bsf	4082,7,c	;volatile
  5941                           
  5942                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 618:     }
  5943  0037CC  EFF2  F01B         	goto	l245
  5944  0037D0                     l4787:
  5945                           
  5946                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 620:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 621:         sensor->rawSample = result;
  5947  0037D0  EE20 F006          	lfsr	2,6
  5948  0037D4  501E               	movf	Sensor_RawSample_Update@sensor^0,w,c
  5949  0037D6  26D9               	addwf	fsr2l,f,c
  5950  0037D8  501F               	movf	(Sensor_RawSample_Update@sensor+1)^0,w,c
  5951  0037DA  22DA               	addwfc	fsr2h,f,c
  5952  0037DC  C020  FFDE         	movff	Sensor_RawSample_Update@result,postinc2
  5953  0037E0  C021  FFDD         	movff	Sensor_RawSample_Update@result+1,postdec2
  5954  0037E4                     l245:
  5955  0037E4  0012               	return		;funcret
  5956  0037E6                     __end_of_Sensor_RawSample_Update:
  5957                           	callstack 0
  5958                           
  5959 ;; *************** function _medianFilter *****************
  5960 ;; Defined at:
  5961 ;;		line 626 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;  sensor          1    wreg     enum E12845
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;  sensor          1   28[COMRAM] enum E12845
  5966 ;; Return value:  Size  Location     Type
  5967 ;;                  2   21[COMRAM] unsigned short 
  5968 ;; Registers used:
  5969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5970 ;; Tracked objects:
  5971 ;;		On entry : 0/0
  5972 ;;		On exit  : 0/0
  5973 ;;		Unchanged: 0/0
  5974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5976 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5977 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5978 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5979 ;;Total ram usage:        8 bytes
  5980 ;; Hardware stack levels used:    1
  5981 ;; Hardware stack levels required when called:    6
  5982 ;; This function calls:
  5983 ;;		Nothing
  5984 ;; This function is called by:
  5985 ;;		_Sensor_RawSample_Update
  5986 ;; This function uses a non-reentrant model
  5987 ;;
  5988                           
  5989                           	psect	text40
  5990  001722                     __ptext40:
  5991                           	callstack 0
  5992  001722                     _medianFilter:
  5993                           	callstack 20
  5994                           
  5995                           ;incstack = 0
  5996                           ;medianFilter@sensor stored from wreg
  5997  001722  6E1D               	movwf	medianFilter@sensor^0,c
  5998  001724                     
  5999                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 626: static mtouch_sensor_packetsample_t me
      +                          dianFilter(enum mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          627: {;mcc_generated_files/mtouch/mtouch_sensor.c: 628:     static uint8_t bufferIndex[5
      +                          u];;mcc_generated_files/mtouch/mtouch_sensor.c: 630:     sensor_medianBuffer[sensor][buf
      +                          ferIndex[sensor]++] = packet_sample[sensor];
  6000  001724  501D               	movf	medianFilter@sensor^0,w,c
  6001  001726  0D02               	mullw	2
  6002  001728  0E7E               	movlw	low _packet_sample
  6003  00172A  24F3               	addwf	243,w,c
  6004  00172C  6ED9               	movwf	fsr2l,c
  6005  00172E  0E00               	movlw	high _packet_sample
  6006  001730  20F4               	addwfc	prodh,w,c
  6007  001732  6EDA               	movwf	fsr2h,c
  6008  001734  0E88               	movlw	low medianFilter@bufferIndex
  6009  001736  241D               	addwf	medianFilter@sensor^0,w,c
  6010  001738  6EE1               	movwf	fsr1l,c
  6011  00173A  6AE2               	clrf	fsr1h,c
  6012  00173C  0E00               	movlw	high medianFilter@bufferIndex
  6013  00173E  22E2               	addwfc	fsr1h,f,c
  6014  001740  CFE7 F018          	movff	indf1,??_medianFilter
  6015  001744  0E01               	movlw	1
  6016  001746  26E7               	addwf	indf1,f,c
  6017  001748  5018               	movf	??_medianFilter^0,w,c
  6018  00174A  0D02               	mullw	2
  6019  00174C  CFF3 F019          	movff	prodl,??_medianFilter+1
  6020  001750  CFF4 F01A          	movff	prodh,??_medianFilter+2
  6021  001754  501D               	movf	medianFilter@sensor^0,w,c
  6022  001756  0D06               	mullw	6
  6023  001758  0E60               	movlw	low _sensor_medianBuffer
  6024  00175A  6E1B               	movwf	(??_medianFilter+3)^0,c
  6025  00175C  0E00               	movlw	high _sensor_medianBuffer
  6026  00175E  6E1C               	movwf	(??_medianFilter+4)^0,c
  6027  001760  50F3               	movf	243,w,c
  6028  001762  261B               	addwf	(??_medianFilter+3)^0,f,c
  6029  001764  50F4               	movf	244,w,c
  6030  001766  221C               	addwfc	(??_medianFilter+4)^0,f,c
  6031  001768  5019               	movf	(??_medianFilter+1)^0,w,c
  6032  00176A  241B               	addwf	(??_medianFilter+3)^0,w,c
  6033  00176C  6EE1               	movwf	fsr1l,c
  6034  00176E  501A               	movf	(??_medianFilter+2)^0,w,c
  6035  001770  201C               	addwfc	(??_medianFilter+4)^0,w,c
  6036  001772  6EE2               	movwf	fsr1h,c
  6037  001774  CFDE FFE6          	movff	postinc2,postinc1
  6038  001778  CFDD FFE5          	movff	postdec2,postdec1
  6039  00177C                     
  6040                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 632:     if(bufferIndex[sensor]>=3)
  6041  00177C  0E88               	movlw	low medianFilter@bufferIndex
  6042  00177E  241D               	addwf	medianFilter@sensor^0,w,c
  6043  001780  6ED9               	movwf	fsr2l,c
  6044  001782  6ADA               	clrf	fsr2h,c
  6045  001784  0E00               	movlw	high medianFilter@bufferIndex
  6046  001786  22DA               	addwfc	fsr2h,f,c
  6047  001788  0E02               	movlw	2
  6048  00178A  64DF               	cpfsgt	indf2,c
  6049  00178C  EFCA  F00B         	goto	u2841
  6050  001790  EFCC  F00B         	goto	u2840
  6051  001794                     u2841:
  6052  001794  EFD4  F00B         	goto	l4311
  6053  001798                     u2840:
  6054  001798                     
  6055                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 633:         bufferIndex[sensor] = 0;
  6056  001798  0E88               	movlw	low medianFilter@bufferIndex
  6057  00179A  241D               	addwf	medianFilter@sensor^0,w,c
  6058  00179C  6ED9               	movwf	fsr2l,c
  6059  00179E  6ADA               	clrf	fsr2h,c
  6060  0017A0  0E00               	movlw	high medianFilter@bufferIndex
  6061  0017A2  22DA               	addwfc	fsr2h,f,c
  6062  0017A4  0E00               	movlw	0
  6063  0017A6  6EDF               	movwf	indf2,c
  6064  0017A8                     l4311:
  6065                           
  6066                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 635:     if(sensor_medianBuffer[sensor][0]>
      +                          =sensor_medianBuffer[sensor][1])
  6067  0017A8  501D               	movf	medianFilter@sensor^0,w,c
  6068  0017AA  0D06               	mullw	6
  6069  0017AC  0E62               	movlw	low (_sensor_medianBuffer+2)
  6070  0017AE  24F3               	addwf	243,w,c
  6071  0017B0  6ED9               	movwf	fsr2l,c
  6072  0017B2  0E00               	movlw	high (_sensor_medianBuffer+2)
  6073  0017B4  20F4               	addwfc	prodh,w,c
  6074  0017B6  6EDA               	movwf	fsr2h,c
  6075  0017B8  501D               	movf	medianFilter@sensor^0,w,c
  6076  0017BA  0D06               	mullw	6
  6077  0017BC  0E60               	movlw	low _sensor_medianBuffer
  6078  0017BE  24F3               	addwf	243,w,c
  6079  0017C0  6EE1               	movwf	fsr1l,c
  6080  0017C2  0E00               	movlw	high _sensor_medianBuffer
  6081  0017C4  20F4               	addwfc	prodh,w,c
  6082  0017C6  6EE2               	movwf	fsr1h,c
  6083  0017C8  50DE               	movf	postinc2,w,c
  6084  0017CA  5CE6               	subwf	postinc1,w,c
  6085  0017CC  50DE               	movf	postinc2,w,c
  6086  0017CE  58E6               	subwfb	postinc1,w,c
  6087  0017D0  A0D8               	btfss	status,0,c
  6088  0017D2  EFED  F00B         	goto	u2851
  6089  0017D6  EFEF  F00B         	goto	u2850
  6090  0017DA                     u2851:
  6091  0017DA  EF4F  F00C         	goto	l4333
  6092  0017DE                     u2850:
  6093  0017DE                     
  6094                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 636:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 637:         if(sensor_medianBuffer[sensor][1]>=sensor_medianBuffer[sensor][
      +                          2])
  6095  0017DE  501D               	movf	medianFilter@sensor^0,w,c
  6096  0017E0  0D06               	mullw	6
  6097  0017E2  0E64               	movlw	low (_sensor_medianBuffer+4)
  6098  0017E4  24F3               	addwf	243,w,c
  6099  0017E6  6ED9               	movwf	fsr2l,c
  6100  0017E8  0E00               	movlw	high (_sensor_medianBuffer+4)
  6101  0017EA  20F4               	addwfc	prodh,w,c
  6102  0017EC  6EDA               	movwf	fsr2h,c
  6103  0017EE  501D               	movf	medianFilter@sensor^0,w,c
  6104  0017F0  0D06               	mullw	6
  6105  0017F2  0E62               	movlw	low (_sensor_medianBuffer+2)
  6106  0017F4  24F3               	addwf	243,w,c
  6107  0017F6  6EE1               	movwf	fsr1l,c
  6108  0017F8  0E00               	movlw	high (_sensor_medianBuffer+2)
  6109  0017FA  20F4               	addwfc	prodh,w,c
  6110  0017FC  6EE2               	movwf	fsr1h,c
  6111  0017FE  50DE               	movf	postinc2,w,c
  6112  001800  5CE6               	subwf	postinc1,w,c
  6113  001802  50DE               	movf	postinc2,w,c
  6114  001804  58E6               	subwfb	postinc1,w,c
  6115  001806  A0D8               	btfss	status,0,c
  6116  001808  EF08  F00C         	goto	u2861
  6117  00180C  EF0A  F00C         	goto	u2860
  6118  001810                     u2861:
  6119  001810  EF18  F00C         	goto	l4321
  6120  001814                     u2860:
  6121  001814                     l4315:
  6122                           
  6123                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 638:             return sensor_medianBuffer
      +                          [sensor][1];
  6124  001814  501D               	movf	medianFilter@sensor^0,w,c
  6125  001816  0D06               	mullw	6
  6126  001818  0E62               	movlw	low (_sensor_medianBuffer+2)
  6127  00181A  24F3               	addwf	243,w,c
  6128  00181C  6ED9               	movwf	fsr2l,c
  6129  00181E  0E00               	movlw	high (_sensor_medianBuffer+2)
  6130  001820  20F4               	addwfc	prodh,w,c
  6131  001822  6EDA               	movwf	fsr2h,c
  6132  001824  CFDE F016          	movff	postinc2,?_medianFilter
  6133  001828  CFDD F017          	movff	postdec2,?_medianFilter+1
  6134  00182C  EF89  F00C         	goto	l253
  6135  001830                     l4321:
  6136                           
  6137                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 640:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 641:             if(sensor_medianBuffer[sensor][0]>=sensor_medianBuffer[
      +                          sensor][2])
  6138  001830  501D               	movf	medianFilter@sensor^0,w,c
  6139  001832  0D06               	mullw	6
  6140  001834  0E64               	movlw	low (_sensor_medianBuffer+4)
  6141  001836  24F3               	addwf	243,w,c
  6142  001838  6ED9               	movwf	fsr2l,c
  6143  00183A  0E00               	movlw	high (_sensor_medianBuffer+4)
  6144  00183C  20F4               	addwfc	prodh,w,c
  6145  00183E  6EDA               	movwf	fsr2h,c
  6146  001840  501D               	movf	medianFilter@sensor^0,w,c
  6147  001842  0D06               	mullw	6
  6148  001844  0E60               	movlw	low _sensor_medianBuffer
  6149  001846  24F3               	addwf	243,w,c
  6150  001848  6EE1               	movwf	fsr1l,c
  6151  00184A  0E00               	movlw	high _sensor_medianBuffer
  6152  00184C  20F4               	addwfc	prodh,w,c
  6153  00184E  6EE2               	movwf	fsr1h,c
  6154  001850  50DE               	movf	postinc2,w,c
  6155  001852  5CE6               	subwf	postinc1,w,c
  6156  001854  50DE               	movf	postinc2,w,c
  6157  001856  58E6               	subwfb	postinc1,w,c
  6158  001858  A0D8               	btfss	status,0,c
  6159  00185A  EF31  F00C         	goto	u2871
  6160  00185E  EF33  F00C         	goto	u2870
  6161  001862                     u2871:
  6162  001862  EF41  F00C         	goto	l4329
  6163  001866                     u2870:
  6164  001866                     l4323:
  6165                           
  6166                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 642:                 return sensor_medianBu
      +                          ffer[sensor][2];
  6167  001866  501D               	movf	medianFilter@sensor^0,w,c
  6168  001868  0D06               	mullw	6
  6169  00186A  0E64               	movlw	low (_sensor_medianBuffer+4)
  6170  00186C  24F3               	addwf	243,w,c
  6171  00186E  6ED9               	movwf	fsr2l,c
  6172  001870  0E00               	movlw	high (_sensor_medianBuffer+4)
  6173  001872  20F4               	addwfc	prodh,w,c
  6174  001874  6EDA               	movwf	fsr2h,c
  6175  001876  CFDE F016          	movff	postinc2,?_medianFilter
  6176  00187A  CFDD F017          	movff	postdec2,?_medianFilter+1
  6177  00187E  EF89  F00C         	goto	l253
  6178  001882                     l4329:
  6179                           
  6180                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 644:                 return sensor_medianBu
      +                          ffer[sensor][0];
  6181  001882  501D               	movf	medianFilter@sensor^0,w,c
  6182  001884  0D06               	mullw	6
  6183  001886  0E60               	movlw	low _sensor_medianBuffer
  6184  001888  24F3               	addwf	243,w,c
  6185  00188A  6ED9               	movwf	fsr2l,c
  6186  00188C  0E00               	movlw	high _sensor_medianBuffer
  6187  00188E  20F4               	addwfc	prodh,w,c
  6188  001890  6EDA               	movwf	fsr2h,c
  6189  001892  CFDE F016          	movff	postinc2,?_medianFilter
  6190  001896  CFDD F017          	movff	postdec2,?_medianFilter+1
  6191  00189A  EF89  F00C         	goto	l253
  6192  00189E                     l4333:
  6193                           
  6194                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 649:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 650:         if(sensor_medianBuffer[sensor][0]>=sensor_medianBuffer[sensor][
      +                          2])
  6195  00189E  501D               	movf	medianFilter@sensor^0,w,c
  6196  0018A0  0D06               	mullw	6
  6197  0018A2  0E64               	movlw	low (_sensor_medianBuffer+4)
  6198  0018A4  24F3               	addwf	243,w,c
  6199  0018A6  6ED9               	movwf	fsr2l,c
  6200  0018A8  0E00               	movlw	high (_sensor_medianBuffer+4)
  6201  0018AA  20F4               	addwfc	prodh,w,c
  6202  0018AC  6EDA               	movwf	fsr2h,c
  6203  0018AE  501D               	movf	medianFilter@sensor^0,w,c
  6204  0018B0  0D06               	mullw	6
  6205  0018B2  0E60               	movlw	low _sensor_medianBuffer
  6206  0018B4  24F3               	addwf	243,w,c
  6207  0018B6  6EE1               	movwf	fsr1l,c
  6208  0018B8  0E00               	movlw	high _sensor_medianBuffer
  6209  0018BA  20F4               	addwfc	prodh,w,c
  6210  0018BC  6EE2               	movwf	fsr1h,c
  6211  0018BE  50DE               	movf	postinc2,w,c
  6212  0018C0  5CE6               	subwf	postinc1,w,c
  6213  0018C2  50DE               	movf	postinc2,w,c
  6214  0018C4  58E6               	subwfb	postinc1,w,c
  6215  0018C6  A0D8               	btfss	status,0,c
  6216  0018C8  EF68  F00C         	goto	u2881
  6217  0018CC  EF6A  F00C         	goto	u2880
  6218  0018D0                     u2881:
  6219  0018D0  EF6C  F00C         	goto	l4341
  6220  0018D4                     u2880:
  6221  0018D4  EF41  F00C         	goto	l4329
  6222  0018D8                     l4341:
  6223                           
  6224                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 653:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 654:             if(sensor_medianBuffer[sensor][1]>=sensor_medianBuffer[
      +                          sensor][2])
  6225  0018D8  501D               	movf	medianFilter@sensor^0,w,c
  6226  0018DA  0D06               	mullw	6
  6227  0018DC  0E64               	movlw	low (_sensor_medianBuffer+4)
  6228  0018DE  24F3               	addwf	243,w,c
  6229  0018E0  6ED9               	movwf	fsr2l,c
  6230  0018E2  0E00               	movlw	high (_sensor_medianBuffer+4)
  6231  0018E4  20F4               	addwfc	prodh,w,c
  6232  0018E6  6EDA               	movwf	fsr2h,c
  6233  0018E8  501D               	movf	medianFilter@sensor^0,w,c
  6234  0018EA  0D06               	mullw	6
  6235  0018EC  0E62               	movlw	low (_sensor_medianBuffer+2)
  6236  0018EE  24F3               	addwf	243,w,c
  6237  0018F0  6EE1               	movwf	fsr1l,c
  6238  0018F2  0E00               	movlw	high (_sensor_medianBuffer+2)
  6239  0018F4  20F4               	addwfc	prodh,w,c
  6240  0018F6  6EE2               	movwf	fsr1h,c
  6241  0018F8  50DE               	movf	postinc2,w,c
  6242  0018FA  5CE6               	subwf	postinc1,w,c
  6243  0018FC  50DE               	movf	postinc2,w,c
  6244  0018FE  58E6               	subwfb	postinc1,w,c
  6245  001900  A0D8               	btfss	status,0,c
  6246  001902  EF85  F00C         	goto	u2891
  6247  001906  EF87  F00C         	goto	u2890
  6248  00190A                     u2891:
  6249  00190A  EF0A  F00C         	goto	l4315
  6250  00190E                     u2890:
  6251  00190E  EF33  F00C         	goto	l4323
  6252  001912                     l253:
  6253  001912  0012               	return		;funcret
  6254  001914                     __end_of_medianFilter:
  6255                           	callstack 0
  6256                           
  6257 ;; *************** function _Sensor_DefaultCallback *****************
  6258 ;; Defined at:
  6259 ;;		line 758 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;  sensor          1    wreg     enum E12845
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;  sensor          1    0[COMRAM] enum E12845
  6264 ;; Return value:  Size  Location     Type
  6265 ;;                  1    wreg      void 
  6266 ;; Registers used:
  6267 ;;		wreg
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6277 ;;Total ram usage:        0 bytes
  6278 ;; Hardware stack levels used:    1
  6279 ;; Hardware stack levels required when called:    6
  6280 ;; This function calls:
  6281 ;;		Nothing
  6282 ;; This function is called by:
  6283 ;;		_MTOUCH_Sensor_postAcquisitionProcess
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287                           	psect	text41
  6288  0041E4                     __ptext41:
  6289                           	callstack 0
  6290  0041E4                     _Sensor_DefaultCallback:
  6291                           	callstack 21
  6292  0041E4  0012               	return		;funcret
  6293  0041E6                     __end_of_Sensor_DefaultCallback:
  6294                           	callstack 0
  6295                           
  6296 ;; *************** function _MTOUCH_Sensor_isSamplingComplete *****************
  6297 ;; Defined at:
  6298 ;;		line 318 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;		None
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;  sensor          1   31[COMRAM] enum E12845
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  1    wreg      _Bool 
  6305 ;; Registers used:
  6306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6313 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6315 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6316 ;;Total ram usage:        1 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; Hardware stack levels required when called:    8
  6319 ;; This function calls:
  6320 ;;		_MTOUCH_Sensor_isEnabled
  6321 ;;		_MTOUCH_Sensor_isSampling
  6322 ;;		_MTOUCH_Sensor_wasSampled
  6323 ;;		_Sensor_scheduleNextScan
  6324 ;; This function is called by:
  6325 ;;		_MTOUCH_Sensor_SampleAll
  6326 ;; This function uses a non-reentrant model
  6327 ;;
  6328                           
  6329                           	psect	text42
  6330  0036CE                     __ptext42:
  6331                           	callstack 0
  6332  0036CE                     _MTOUCH_Sensor_isSamplingComplete:
  6333                           	callstack 20
  6334  0036CE                     
  6335                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 320:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 322:     for (sensor = 0; sensor < 5u; sensor
      +                          ++)
  6336  0036CE  0E00               	movlw	0
  6337  0036D0  6E20               	movwf	MTOUCH_Sensor_isSamplingComplete@sensor^0,c
  6338  0036D2                     l6393:
  6339                           
  6340                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 323:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 324:         if(MTOUCH_Sensor_wasSampled(sensor)==0 && MTOUCH_Sensor_isEnabl
      +                          ed(sensor))
  6341  0036D2  5020               	movf	MTOUCH_Sensor_isSamplingComplete@sensor^0,w,c
  6342  0036D4  ECB6  F01D         	call	_MTOUCH_Sensor_wasSampled
  6343  0036D8  0900               	iorlw	0
  6344  0036DA  A4D8               	btfss	status,2,c
  6345  0036DC  EF72  F01B         	goto	u6021
  6346  0036E0  EF74  F01B         	goto	u6020
  6347  0036E4                     u6021:
  6348  0036E4  EF8E  F01B         	goto	l6405
  6349  0036E8                     u6020:
  6350  0036E8  5020               	movf	MTOUCH_Sensor_isSamplingComplete@sensor^0,w,c
  6351  0036EA  EC97  F01D         	call	_MTOUCH_Sensor_isEnabled
  6352  0036EE  0900               	iorlw	0
  6353  0036F0  B4D8               	btfsc	status,2,c
  6354  0036F2  EF7D  F01B         	goto	u6031
  6355  0036F6  EF7F  F01B         	goto	u6030
  6356  0036FA                     u6031:
  6357  0036FA  EF8E  F01B         	goto	l6405
  6358  0036FE                     u6030:
  6359  0036FE                     
  6360                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 325:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 326:             if(MTOUCH_Sensor_isSampling() == 0)
  6361  0036FE  ECEF  F020         	call	_MTOUCH_Sensor_isSampling	;wreg free
  6362  003702  0900               	iorlw	0
  6363  003704  A4D8               	btfss	status,2,c
  6364  003706  EF87  F01B         	goto	u6041
  6365  00370A  EF89  F01B         	goto	u6040
  6366  00370E                     u6041:
  6367  00370E  EF8B  F01B         	goto	l6401
  6368  003712                     u6040:
  6369  003712                     
  6370                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 327:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 328:                 Sensor_scheduleNextScan();
  6371  003712  EC35  F00F         	call	_Sensor_scheduleNextScan	;wreg free
  6372  003716                     l6401:
  6373                           
  6374                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 330:             return 0;
  6375  003716  0E00               	movlw	0
  6376  003718  EF98  F01B         	goto	l166
  6377  00371C                     l6405:
  6378                           
  6379                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 332:     }
  6380  00371C  2A20               	incf	MTOUCH_Sensor_isSamplingComplete@sensor^0,f,c
  6381  00371E  0E04               	movlw	4
  6382  003720  6420               	cpfsgt	MTOUCH_Sensor_isSamplingComplete@sensor^0,c
  6383  003722  EF95  F01B         	goto	u6051
  6384  003726  EF97  F01B         	goto	u6050
  6385  00372A                     u6051:
  6386  00372A  EF69  F01B         	goto	l6393
  6387  00372E                     u6050:
  6388  00372E                     
  6389                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 334:     return 1;
  6390  00372E  0E01               	movlw	1
  6391  003730                     l166:
  6392  003730  0012               	return		;funcret
  6393  003732                     __end_of_MTOUCH_Sensor_isSamplingComplete:
  6394                           	callstack 0
  6395                           
  6396 ;; *************** function _Sensor_scheduleNextScan *****************
  6397 ;; Defined at:
  6398 ;;		line 391 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;		None
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;  sensor          2   29[COMRAM] PTR struct .
  6403 ;;		 -> mtouch_sensor(45), 
  6404 ;;  skipScan        1   28[COMRAM] _Bool 
  6405 ;;  state           1   27[COMRAM] _Bool 
  6406 ;; Return value:  Size  Location     Type
  6407 ;;                  1    wreg      void 
  6408 ;; Registers used:
  6409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6410 ;; Tracked objects:
  6411 ;;		On entry : 0/0
  6412 ;;		On exit  : 0/0
  6413 ;;		Unchanged: 0/0
  6414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6416 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6417 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6418 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6419 ;;Total ram usage:        6 bytes
  6420 ;; Hardware stack levels used:    1
  6421 ;; Hardware stack levels required when called:    7
  6422 ;; This function calls:
  6423 ;;		_MTOUCH_Sensor_isEnabled
  6424 ;;		_MTOUCH_Sensor_wasSampled
  6425 ;;		_Sensor_SetTrisBit
  6426 ;;		_Sensor_isCalibrated
  6427 ;;		_Sensor_isCalibratingAcqTime
  6428 ;; This function is called by:
  6429 ;;		_MTOUCH_Sensor_isSamplingComplete
  6430 ;; This function uses a non-reentrant model
  6431 ;;
  6432                           
  6433                           	psect	text43
  6434  001E6A                     __ptext43:
  6435                           	callstack 0
  6436  001E6A                     _Sensor_scheduleNextScan:
  6437                           	callstack 20
  6438  001E6A                     
  6439                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 393:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 394:     _Bool skipScan = (_Bool)0;
  6440  001E6A  0E00               	movlw	0
  6441  001E6C  6E1D               	movwf	Sensor_scheduleNextScan@skipScan^0,c
  6442                           
  6443                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 395:     _Bool state = (_Bool)GIE;
  6444  001E6E  0E00               	movlw	0
  6445  001E70  BEF2               	btfsc	4082,7,c	;volatile
  6446  001E72  0E01               	movlw	1
  6447  001E74  6E1C               	movwf	Sensor_scheduleNextScan@state^0,c
  6448                           
  6449                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 398:     while(MTOUCH_Sensor_wasSampled(cur
      +                          rentScanSensor) || !MTOUCH_Sensor_isEnabled(currentScanSensor))
  6450  001E76  EF4F  F00F         	goto	l6203
  6451  001E7A                     l6199:
  6452                           
  6453                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 399:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 400:         if(++currentScanSensor == 5u)
  6454  001E7A  2A48               	incf	_currentScanSensor^0,f,c
  6455  001E7C  0E05               	movlw	5
  6456  001E7E  1848               	xorwf	_currentScanSensor^0,w,c
  6457  001E80  A4D8               	btfss	status,2,c
  6458  001E82  EF45  F00F         	goto	u5681
  6459  001E86  EF47  F00F         	goto	u5680
  6460  001E8A                     u5681:
  6461  001E8A  EF4F  F00F         	goto	l6203
  6462  001E8E                     u5680:
  6463  001E8E                     
  6464                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 401:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 402:             currentScanSensor = 0;
  6465  001E8E  0E00               	movlw	0
  6466  001E90  6E48               	movwf	_currentScanSensor^0,c
  6467                           
  6468                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 403:             sampling_flag = 0;
  6469  001E92  0E00               	movlw	0
  6470  001E94  6E47               	movwf	_sampling_flag^0,c
  6471                           
  6472                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 404:             skipScan = 1;
  6473  001E96  0E01               	movlw	1
  6474  001E98  6E1D               	movwf	Sensor_scheduleNextScan@skipScan^0,c
  6475                           
  6476                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 405:             break;
  6477  001E9A  EF65  F00F         	goto	l6207
  6478  001E9E                     l6203:
  6479                           
  6480                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 398:     while(MTOUCH_Sensor_wasSampled(cur
      +                          rentScanSensor) || !MTOUCH_Sensor_isEnabled(currentScanSensor))
  6481  001E9E  5048               	movf	_currentScanSensor^0,w,c
  6482  001EA0  ECB6  F01D         	call	_MTOUCH_Sensor_wasSampled
  6483  001EA4  0900               	iorlw	0
  6484  001EA6  A4D8               	btfss	status,2,c
  6485  001EA8  EF58  F00F         	goto	u5691
  6486  001EAC  EF5A  F00F         	goto	u5690
  6487  001EB0                     u5691:
  6488  001EB0  EF3D  F00F         	goto	l6199
  6489  001EB4                     u5690:
  6490  001EB4  5048               	movf	_currentScanSensor^0,w,c
  6491  001EB6  EC97  F01D         	call	_MTOUCH_Sensor_isEnabled
  6492  001EBA  0900               	iorlw	0
  6493  001EBC  B4D8               	btfsc	status,2,c
  6494  001EBE  EF63  F00F         	goto	u5701
  6495  001EC2  EF65  F00F         	goto	u5700
  6496  001EC6                     u5701:
  6497  001EC6  EF3D  F00F         	goto	l6199
  6498  001ECA                     u5700:
  6499  001ECA                     l6207:
  6500                           
  6501                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 410:     if(skipScan==0)
  6502  001ECA  501D               	movf	Sensor_scheduleNextScan@skipScan^0,w,c
  6503  001ECC  A4D8               	btfss	status,2,c
  6504  001ECE  EF6B  F00F         	goto	u5711
  6505  001ED2  EF6D  F00F         	goto	u5710
  6506  001ED6                     u5711:
  6507  001ED6  EFFF  F00F         	goto	l197
  6508  001EDA                     u5710:
  6509  001EDA                     
  6510                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 411:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 412:         sensor = &mtouch_sensor[currentScanSensor];
  6511  001EDA  5048               	movf	_currentScanSensor^0,w,c
  6512  001EDC  0D09               	mullw	9
  6513  001EDE  0E97               	movlw	low _mtouch_sensor
  6514  001EE0  24F3               	addwf	243,w,c
  6515  001EE2  6E1E               	movwf	Sensor_scheduleNextScan@sensor^0,c
  6516  001EE4  0E00               	movlw	high _mtouch_sensor
  6517  001EE6  20F4               	addwfc	prodh,w,c
  6518  001EE8  6E1F               	movwf	(Sensor_scheduleNextScan@sensor+1)^0,c
  6519  001EEA                     
  6520                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 413:         if(Sensor_isCalibrated(sensor)
      +                          )
  6521  001EEA  C01E  F016         	movff	Sensor_scheduleNextScan@sensor,Sensor_isCalibrated@sensor
  6522  001EEE  C01F  F017         	movff	Sensor_scheduleNextScan@sensor+1,Sensor_isCalibrated@sensor+1
  6523  001EF2  EC0E  F020         	call	_Sensor_isCalibrated	;wreg free
  6524  001EF6  0900               	iorlw	0
  6525  001EF8  B4D8               	btfsc	status,2,c
  6526  001EFA  EF81  F00F         	goto	u5721
  6527  001EFE  EF83  F00F         	goto	u5720
  6528  001F02                     u5721:
  6529  001F02  EF96  F00F         	goto	l6215
  6530  001F06                     u5720:
  6531  001F06                     
  6532                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 414:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 415:             ADACQ = (mtouch_sensor_time_t)sensor->acquisition_time;
  6533  001F06  EE20 F003          	lfsr	2,3
  6534  001F0A  501E               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  6535  001F0C  26D9               	addwf	fsr2l,f,c
  6536  001F0E  501F               	movf	(Sensor_scheduleNextScan@sensor+1)^0,w,c
  6537  001F10  22DA               	addwfc	fsr2h,f,c
  6538  001F12  50DF               	movf	indf2,w,c
  6539  001F14  010F               	movlb	15	; () banked
  6540  001F16  6F57               	movwf	87,b	;volatile
  6541                           
  6542                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 416:             ADPRE = (mtouch_sensor_tim
      +                          e_t)sensor->precharge_time;
  6543  001F18  EE20 F002          	lfsr	2,2
  6544  001F1C  501E               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  6545  001F1E  26D9               	addwf	fsr2l,f,c
  6546  001F20  501F               	movf	(Sensor_scheduleNextScan@sensor+1)^0,w,c
  6547  001F22  22DA               	addwfc	fsr2h,f,c
  6548  001F24  50DF               	movf	indf2,w,c
  6549  001F26  6F59               	movwf	89,b	;volatile
  6550                           
  6551                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 417:         }
  6552  001F28  EFBC  F00F         	goto	l6221
  6553  001F2C                     l6215:
  6554                           
  6555                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 419:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 420:             if(Sensor_isCalibratingAcqTime(sensor))
  6556  001F2C  C01E  F016         	movff	Sensor_scheduleNextScan@sensor,Sensor_isCalibratingAcqTime@sensor
  6557  001F30  C01F  F017         	movff	Sensor_scheduleNextScan@sensor+1,Sensor_isCalibratingAcqTime@sensor+1
  6558  001F34  ECFE  F01F         	call	_Sensor_isCalibratingAcqTime	;wreg free
  6559  001F38  0900               	iorlw	0
  6560  001F3A  B4D8               	btfsc	status,2,c
  6561  001F3C  EFA2  F00F         	goto	u5731
  6562  001F40  EFA4  F00F         	goto	u5730
  6563  001F44                     u5731:
  6564  001F44  EFB7  F00F         	goto	l6219
  6565  001F48                     u5730:
  6566  001F48                     
  6567                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 421:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 422:                 ADPRE = (mtouch_sensor_time_t)sensor->precharge
      +                          _time;
  6568  001F48  EE20 F002          	lfsr	2,2
  6569  001F4C  501E               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  6570  001F4E  26D9               	addwf	fsr2l,f,c
  6571  001F50  501F               	movf	(Sensor_scheduleNextScan@sensor+1)^0,w,c
  6572  001F52  22DA               	addwfc	fsr2h,f,c
  6573  001F54  50DF               	movf	indf2,w,c
  6574  001F56  010F               	movlb	15	; () banked
  6575  001F58  6F59               	movwf	89,b	;volatile
  6576                           
  6577                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 423:                 ADACQ = (mtouch_sensor
      +                          _time_t)sensor->acquisition_time;
  6578  001F5A  EE20 F003          	lfsr	2,3
  6579  001F5E  501E               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  6580  001F60  26D9               	addwf	fsr2l,f,c
  6581  001F62  501F               	movf	(Sensor_scheduleNextScan@sensor+1)^0,w,c
  6582  001F64  22DA               	addwfc	fsr2h,f,c
  6583  001F66  50DF               	movf	indf2,w,c
  6584  001F68  6F57               	movwf	87,b	;volatile
  6585                           
  6586                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 424:             }
  6587  001F6A  EFBC  F00F         	goto	l6221
  6588  001F6E                     l6219:
  6589                           
  6590                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 426:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 427:                 ADPRE = ((mtouch_sensor_time_t)((mtouch_sensor_
      +                          time_t)48 << (uint8_t)2));
  6591  001F6E  0EC0               	movlw	192
  6592  001F70  010F               	movlb	15	; () banked
  6593  001F72  6F59               	movwf	89,b	;volatile
  6594                           
  6595                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 428:                 ADACQ = ((mtouch_senso
      +                          r_time_t)((mtouch_sensor_time_t)48 << (uint8_t)2));
  6596  001F74  0EC0               	movlw	192
  6597  001F76  6F57               	movwf	87,b	;volatile
  6598  001F78                     l6221:
  6599                           
  6600                           ; BSR set to: 15
  6601                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 432:         ADPRE +=(uint8_t)sample_delay;
  6602  001F78  5043               	movf	_sample_delay^0,w,c	;volatile
  6603  001F7A  2759               	addwf	89,f,b	;volatile
  6604  001F7C                     
  6605                           ; BSR set to: 15
  6606                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 433:         ADPCH = (uint8_t)sensor->adpch
      +                          ;
  6607  001F7C  EE20 F001          	lfsr	2,1
  6608  001F80  501E               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  6609  001F82  26D9               	addwf	fsr2l,f,c
  6610  001F84  501F               	movf	(Sensor_scheduleNextScan@sensor+1)^0,w,c
  6611  001F86  22DA               	addwfc	fsr2h,f,c
  6612  001F88  50DF               	movf	indf2,w,c
  6613  001F8A  6F5A               	movwf	90,b	;volatile
  6614  001F8C                     
  6615                           ; BSR set to: 15
  6616                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 434:         ADRPT = (uint8_t)(sensor->over
      +                          sampling>>1);
  6617  001F8C  EE20 F004          	lfsr	2,4
  6618  001F90  501E               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  6619  001F92  26D9               	addwf	fsr2l,f,c
  6620  001F94  501F               	movf	(Sensor_scheduleNextScan@sensor+1)^0,w,c
  6621  001F96  22DA               	addwfc	fsr2h,f,c
  6622  001F98  50DF               	movf	indf2,w,c
  6623  001F9A  6E1A               	movwf	??_Sensor_scheduleNextScan^0,c
  6624  001F9C  90D8               	bcf	status,0,c
  6625  001F9E  301A               	rrcf	??_Sensor_scheduleNextScan^0,w,c
  6626  001FA0  6E61               	movwf	97,c	;volatile
  6627  001FA2                     
  6628                           ; BSR set to: 15
  6629                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 435:         ADCAP = (uint8_t)sensor->addca
      +                          p;
  6630  001FA2  EE20 F005          	lfsr	2,5
  6631  001FA6  501E               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  6632  001FA8  26D9               	addwf	fsr2l,f,c
  6633  001FAA  501F               	movf	(Sensor_scheduleNextScan@sensor+1)^0,w,c
  6634  001FAC  22DA               	addwfc	fsr2h,f,c
  6635  001FAE  50DF               	movf	indf2,w,c
  6636  001FB0  6F58               	movwf	88,b	;volatile
  6637  001FB2                     
  6638                           ; BSR set to: 15
  6639                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 436:         ADCON0bits.ADON = 1;
  6640  001FB2  8F5B               	bsf	91,7,b	;volatile
  6641  001FB4                     
  6642                           ; BSR set to: 15
  6643                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 437:         sampling_flag= 1;
  6644  001FB4  0E01               	movlw	1
  6645  001FB6  6E47               	movwf	_sampling_flag^0,c
  6646  001FB8                     
  6647                           ; BSR set to: 15
  6648                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 438:         Sensor_SetTrisBit(currentScanS
      +                          ensor,1);
  6649  001FB8  0E01               	movlw	1
  6650  001FBA  6E16               	movwf	Sensor_SetTrisBit@TrisBit^0,c
  6651  001FBC  5048               	movf	_currentScanSensor^0,w,c
  6652  001FBE  ECF6  F019         	call	_Sensor_SetTrisBit
  6653  001FC2                     
  6654                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 439:         GIE = 0;
  6655  001FC2  9EF2               	bcf	4082,7,c	;volatile
  6656  001FC4                     
  6657                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 440:         ADCON0bits.GO = 1;
  6658  001FC4  010F               	movlb	15	; () banked
  6659  001FC6  815B               	bsf	91,0,b	;volatile
  6660  001FC8                     
  6661                           ; BSR set to: 15
  6662                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 441:         ADACC = ((mtouch_sensor_packet
      +                          sample_t)(sensor->oversampling)<<9);
  6663  001FC8  EE20 F004          	lfsr	2,4
  6664  001FCC  501E               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  6665  001FCE  26D9               	addwf	fsr2l,f,c
  6666  001FD0  501F               	movf	(Sensor_scheduleNextScan@sensor+1)^0,w,c
  6667  001FD2  22DA               	addwfc	fsr2h,f,c
  6668  001FD4  50DF               	movf	indf2,w,c
  6669  001FD6  6E1A               	movwf	??_Sensor_scheduleNextScan^0,c
  6670  001FD8  6A1B               	clrf	(??_Sensor_scheduleNextScan+1)^0,c
  6671  001FDA  0E09               	movlw	9
  6672  001FDC                     u5745:
  6673  001FDC  90D8               	bcf	status,0,c
  6674  001FDE  361A               	rlcf	??_Sensor_scheduleNextScan^0,f,c
  6675  001FE0  361B               	rlcf	(??_Sensor_scheduleNextScan+1)^0,f,c
  6676  001FE2  2EE8               	decfsz	wreg,f,c
  6677  001FE4  EFEE  F00F         	goto	u5745
  6678  001FE8  C01A  FF6B         	movff	??_Sensor_scheduleNextScan,3947	;volatile
  6679  001FEC  C01B  FF6C         	movff	??_Sensor_scheduleNextScan+1,3948	;volatile
  6680  001FF0                     
  6681                           ; BSR set to: 15
  6682                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 442:         GIE = state;
  6683  001FF0  B01C               	btfsc	Sensor_scheduleNextScan@state^0,0,c
  6684  001FF2  D002               	bra	u5755
  6685  001FF4  9EF2               	bcf	4082,7,c	;volatile
  6686  001FF6  D001               	bra	u5756
  6687  001FF8                     u5755:
  6688  001FF8  8EF2               	bsf	4082,7,c	;volatile
  6689  001FFA                     u5756:
  6690  001FFA                     
  6691                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 443:         scanInterrupted = 0;
  6692  001FFA  0E00               	movlw	0
  6693  001FFC  6E46               	movwf	_scanInterrupted^0,c	;volatile
  6694  001FFE                     l197:
  6695  001FFE  0012               	return		;funcret
  6696  002000                     __end_of_Sensor_scheduleNextScan:
  6697                           	callstack 0
  6698                           
  6699 ;; *************** function _Sensor_isCalibratingAcqTime *****************
  6700 ;; Defined at:
  6701 ;;		line 875 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6702 ;; Parameters:    Size  Location     Type
  6703 ;;  sensor          2   21[COMRAM] PTR struct .
  6704 ;;		 -> mtouch_sensor(45), 
  6705 ;; Auto vars:     Size  Location     Type
  6706 ;;		None
  6707 ;; Return value:  Size  Location     Type
  6708 ;;                  1    wreg      _Bool 
  6709 ;; Registers used:
  6710 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6711 ;; Tracked objects:
  6712 ;;		On entry : 0/0
  6713 ;;		On exit  : 0/0
  6714 ;;		Unchanged: 0/0
  6715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6716 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6719 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6720 ;;Total ram usage:        2 bytes
  6721 ;; Hardware stack levels used:    1
  6722 ;; Hardware stack levels required when called:    6
  6723 ;; This function calls:
  6724 ;;		Nothing
  6725 ;; This function is called by:
  6726 ;;		_Sensor_scheduleNextScan
  6727 ;; This function uses a non-reentrant model
  6728 ;;
  6729                           
  6730                           	psect	text44
  6731  003FFC                     __ptext44:
  6732                           	callstack 0
  6733  003FFC                     _Sensor_isCalibratingAcqTime:
  6734                           	callstack 20
  6735  003FFC                     
  6736                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 875: static __attribute__((inline)) _Bool S
      +                          ensor_isCalibratingAcqTime(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_se
      +                          nsor.c: 876: {;mcc_generated_files/mtouch/mtouch_sensor.c: 877:     return (_Bool)sensor
      +                          ->acqTime_cal;
  6737  003FFC  EE20 F008          	lfsr	2,8
  6738  004000  5016               	movf	Sensor_isCalibratingAcqTime@sensor^0,w,c
  6739  004002  26D9               	addwf	fsr2l,f,c
  6740  004004  5017               	movf	(Sensor_isCalibratingAcqTime@sensor+1)^0,w,c
  6741  004006  22DA               	addwfc	fsr2h,f,c
  6742  004008  B8DF               	btfsc	indf2,4,c
  6743  00400A  EF09  F020         	goto	u2821
  6744  00400E  EF0C  F020         	goto	u2820
  6745  004012                     u2821:
  6746  004012  0E01               	movlw	1
  6747  004014  EF0D  F020         	goto	u2826
  6748  004018                     u2820:
  6749  004018  0E00               	movlw	0
  6750  00401A                     u2826:
  6751  00401A  0012               	return		;funcret
  6752  00401C                     __end_of_Sensor_isCalibratingAcqTime:
  6753                           	callstack 0
  6754                           
  6755 ;; *************** function _Sensor_isCalibrated *****************
  6756 ;; Defined at:
  6757 ;;		line 857 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6758 ;; Parameters:    Size  Location     Type
  6759 ;;  sensor          2   21[COMRAM] PTR struct .
  6760 ;;		 -> mtouch_sensor(45), 
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;		None
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  1    wreg      _Bool 
  6765 ;; Registers used:
  6766 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6767 ;; Tracked objects:
  6768 ;;		On entry : 0/0
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6775 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6776 ;;Total ram usage:        2 bytes
  6777 ;; Hardware stack levels used:    1
  6778 ;; Hardware stack levels required when called:    6
  6779 ;; This function calls:
  6780 ;;		Nothing
  6781 ;; This function is called by:
  6782 ;;		_Sensor_scheduleNextScan
  6783 ;; This function uses a non-reentrant model
  6784 ;;
  6785                           
  6786                           	psect	text45
  6787  00401C                     __ptext45:
  6788                           	callstack 0
  6789  00401C                     _Sensor_isCalibrated:
  6790                           	callstack 20
  6791  00401C                     
  6792                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 857: static __attribute__((inline)) _Bool S
      +                          ensor_isCalibrated(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          858: {;mcc_generated_files/mtouch/mtouch_sensor.c: 859:     return (_Bool)sensor->calibr
      +                          ated;
  6793  00401C  EE20 F008          	lfsr	2,8
  6794  004020  5016               	movf	Sensor_isCalibrated@sensor^0,w,c
  6795  004022  26D9               	addwf	fsr2l,f,c
  6796  004024  5017               	movf	(Sensor_isCalibrated@sensor+1)^0,w,c
  6797  004026  22DA               	addwfc	fsr2h,f,c
  6798  004028  B6DF               	btfsc	indf2,3,c
  6799  00402A  EF19  F020         	goto	u2811
  6800  00402E  EF1C  F020         	goto	u2810
  6801  004032                     u2811:
  6802  004032  0E01               	movlw	1
  6803  004034  EF1D  F020         	goto	u2816
  6804  004038                     u2810:
  6805  004038  0E00               	movlw	0
  6806  00403A                     u2816:
  6807  00403A  0012               	return		;funcret
  6808  00403C                     __end_of_Sensor_isCalibrated:
  6809                           	callstack 0
  6810                           
  6811 ;; *************** function _Sensor_SetTrisBit *****************
  6812 ;; Defined at:
  6813 ;;		line 236 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;  sensor          1    wreg     enum E12845
  6816 ;;  TrisBit         1   21[COMRAM] unsigned char 
  6817 ;; Auto vars:     Size  Location     Type
  6818 ;;  sensor          1   24[COMRAM] enum E12845
  6819 ;; Return value:  Size  Location     Type
  6820 ;;                  1    wreg      void 
  6821 ;; Registers used:
  6822 ;;		wreg, status,2, status,0
  6823 ;; Tracked objects:
  6824 ;;		On entry : 0/0
  6825 ;;		On exit  : 0/0
  6826 ;;		Unchanged: 0/0
  6827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6828 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6829 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6830 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6831 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6832 ;;Total ram usage:        4 bytes
  6833 ;; Hardware stack levels used:    1
  6834 ;; Hardware stack levels required when called:    6
  6835 ;; This function calls:
  6836 ;;		Nothing
  6837 ;; This function is called by:
  6838 ;;		_Sensor_scheduleNextScan
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           	psect	text46
  6843  0033EC                     __ptext46:
  6844                           	callstack 0
  6845  0033EC                     _Sensor_SetTrisBit:
  6846                           	callstack 20
  6847                           
  6848                           ;incstack = 0
  6849                           ;Sensor_SetTrisBit@sensor stored from wreg
  6850  0033EC  6E19               	movwf	Sensor_SetTrisBit@sensor^0,c
  6851  0033EE                     
  6852                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 236: static void Sensor_SetTrisBit(enum mto
      +                          uch_sensor_names sensor,uint8_t TrisBit);mcc_generated_files/mtouch/mtouch_sensor.c: 237
      +                          : {;mcc_generated_files/mtouch/mtouch_sensor.c: 238:     switch(sensor)
  6853  0033EE  EF1C  F01A         	goto	l4257
  6854  0033F2                     l144:
  6855                           
  6856                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 241:             TRISAbits.TRISA2 = TrisBit
      +                          ;
  6857  0033F2  B016               	btfsc	Sensor_SetTrisBit@TrisBit^0,0,c
  6858  0033F4  D002               	bra	u2725
  6859  0033F6  9487               	bcf	135,2,c	;volatile
  6860  0033F8  D001               	bra	u2726
  6861  0033FA                     u2725:
  6862  0033FA  8487               	bsf	135,2,c	;volatile
  6863  0033FC                     u2726:
  6864                           
  6865                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 242:             break;
  6866  0033FC  EF3D  F01A         	goto	l151
  6867  003400                     l146:
  6868                           
  6869                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 244:             TRISDbits.TRISD7 = TrisBit
      +                          ;
  6870  003400  B016               	btfsc	Sensor_SetTrisBit@TrisBit^0,0,c
  6871  003402  D002               	bra	u2735
  6872  003404  9E8A               	bcf	138,7,c	;volatile
  6873  003406  D001               	bra	u2736
  6874  003408                     u2735:
  6875  003408  8E8A               	bsf	138,7,c	;volatile
  6876  00340A                     u2736:
  6877                           
  6878                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 245:             break;
  6879  00340A  EF3D  F01A         	goto	l151
  6880  00340E                     l147:
  6881                           
  6882                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 247:             TRISAbits.TRISA4 = TrisBit
      +                          ;
  6883  00340E  B016               	btfsc	Sensor_SetTrisBit@TrisBit^0,0,c
  6884  003410  D002               	bra	u2745
  6885  003412  9887               	bcf	135,4,c	;volatile
  6886  003414  D001               	bra	u2746
  6887  003416                     u2745:
  6888  003416  8887               	bsf	135,4,c	;volatile
  6889  003418                     u2746:
  6890                           
  6891                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 248:             break;
  6892  003418  EF3D  F01A         	goto	l151
  6893  00341C                     l148:
  6894                           
  6895                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 250:             TRISAbits.TRISA5 = TrisBit
      +                          ;
  6896  00341C  B016               	btfsc	Sensor_SetTrisBit@TrisBit^0,0,c
  6897  00341E  D002               	bra	u2755
  6898  003420  9A87               	bcf	135,5,c	;volatile
  6899  003422  D001               	bra	u2756
  6900  003424                     u2755:
  6901  003424  8A87               	bsf	135,5,c	;volatile
  6902  003426                     u2756:
  6903                           
  6904                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 251:             break;
  6905  003426  EF3D  F01A         	goto	l151
  6906  00342A                     l149:
  6907                           
  6908                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 253:             TRISBbits.TRISB4 = TrisBit
      +                          ;
  6909  00342A  B016               	btfsc	Sensor_SetTrisBit@TrisBit^0,0,c
  6910  00342C  D002               	bra	u2765
  6911  00342E  9888               	bcf	136,4,c	;volatile
  6912  003430  D001               	bra	u2766
  6913  003432                     u2765:
  6914  003432  8888               	bsf	136,4,c	;volatile
  6915  003434                     u2766:
  6916                           
  6917                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 254:             break;
  6918  003434  EF3D  F01A         	goto	l151
  6919  003438                     l4257:
  6920  003438  5019               	movf	Sensor_SetTrisBit@sensor^0,w,c
  6921  00343A  6E17               	movwf	??_Sensor_SetTrisBit^0,c
  6922  00343C  6A18               	clrf	(??_Sensor_SetTrisBit+1)^0,c
  6923                           
  6924                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6925                           ; Switch size 1, requested type "simple"
  6926                           ; Number of cases is 1, Range of values is 0 to 0
  6927                           ; switch strategies available:
  6928                           ; Name         Instructions Cycles
  6929                           ; simple_byte            4     3 (average)
  6930                           ;	Chosen strategy is simple_byte
  6931  00343E  5018               	movf	(??_Sensor_SetTrisBit+1)^0,w,c
  6932  003440  0A00               	xorlw	0	; case 0
  6933  003442  B4D8               	btfsc	status,2,c
  6934  003444  EF26  F01A         	goto	l6719
  6935  003448  EF3D  F01A         	goto	l151
  6936  00344C                     l6719:
  6937                           
  6938                           ; Switch size 1, requested type "simple"
  6939                           ; Number of cases is 5, Range of values is 0 to 4
  6940                           ; switch strategies available:
  6941                           ; Name         Instructions Cycles
  6942                           ; simple_byte           16     9 (average)
  6943                           ;	Chosen strategy is simple_byte
  6944  00344C  5017               	movf	??_Sensor_SetTrisBit^0,w,c
  6945  00344E  0A00               	xorlw	0	; case 0
  6946  003450  B4D8               	btfsc	status,2,c
  6947  003452  EFF9  F019         	goto	l144
  6948  003456  0A01               	xorlw	1	; case 1
  6949  003458  B4D8               	btfsc	status,2,c
  6950  00345A  EF00  F01A         	goto	l146
  6951  00345E  0A03               	xorlw	3	; case 2
  6952  003460  B4D8               	btfsc	status,2,c
  6953  003462  EF07  F01A         	goto	l147
  6954  003466  0A01               	xorlw	1	; case 3
  6955  003468  B4D8               	btfsc	status,2,c
  6956  00346A  EF0E  F01A         	goto	l148
  6957  00346E  0A07               	xorlw	7	; case 4
  6958  003470  B4D8               	btfsc	status,2,c
  6959  003472  EF15  F01A         	goto	l149
  6960  003476  EF3D  F01A         	goto	l151
  6961  00347A                     l151:
  6962  00347A  0012               	return		;funcret
  6963  00347C                     __end_of_Sensor_SetTrisBit:
  6964                           	callstack 0
  6965                           
  6966 ;; *************** function _MTOUCH_Sensor_isEnabled *****************
  6967 ;; Defined at:
  6968 ;;		line 785 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;  sensor          1    wreg     enum E12845
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;  sensor          1   21[COMRAM] enum E12845
  6973 ;; Return value:  Size  Location     Type
  6974 ;;                  1    wreg      _Bool 
  6975 ;; Registers used:
  6976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6985 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6986 ;;Total ram usage:        1 bytes
  6987 ;; Hardware stack levels used:    1
  6988 ;; Hardware stack levels required when called:    6
  6989 ;; This function calls:
  6990 ;;		Nothing
  6991 ;; This function is called by:
  6992 ;;		_MTOUCH_Sensor_isSamplingComplete
  6993 ;;		_Sensor_scheduleNextScan
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           	psect	text47
  6998  003B2E                     __ptext47:
  6999                           	callstack 0
  7000  003B2E                     _MTOUCH_Sensor_isEnabled:
  7001                           	callstack 20
  7002                           
  7003                           ;incstack = 0
  7004                           ;MTOUCH_Sensor_isEnabled@sensor stored from wreg
  7005  003B2E  6E16               	movwf	MTOUCH_Sensor_isEnabled@sensor^0,c
  7006  003B30                     
  7007                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 785: _Bool MTOUCH_Sensor_isEnabled(enum mto
      +                          uch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 786: {;mcc_generate
      +                          d_files/mtouch/mtouch_sensor.c: 787:     if(sensor < 5u)
  7008  003B30  0E05               	movlw	5
  7009  003B32  6016               	cpfslt	MTOUCH_Sensor_isEnabled@sensor^0,c
  7010  003B34  EF9E  F01D         	goto	u2791
  7011  003B38  EFA0  F01D         	goto	u2790
  7012  003B3C                     u2791:
  7013  003B3C  EFB4  F01D         	goto	l4285
  7014  003B40                     u2790:
  7015  003B40                     
  7016                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 788:         return (_Bool)mtouch_sensor[se
      +                          nsor].enabled;
  7017  003B40  5016               	movf	MTOUCH_Sensor_isEnabled@sensor^0,w,c
  7018  003B42  0D09               	mullw	9
  7019  003B44  0E9F               	movlw	low (_mtouch_sensor+8)
  7020  003B46  24F3               	addwf	243,w,c
  7021  003B48  6ED9               	movwf	fsr2l,c
  7022  003B4A  0E00               	movlw	high (_mtouch_sensor+8)
  7023  003B4C  20F4               	addwfc	prodh,w,c
  7024  003B4E  6EDA               	movwf	fsr2h,c
  7025  003B50  0100               	movlb	0	; () banked
  7026  003B52  B0DF               	btfsc	indf2,0,c
  7027  003B54  EFAE  F01D         	goto	u2801
  7028  003B58  EFB1  F01D         	goto	u2800
  7029  003B5C                     u2801:
  7030  003B5C  0E01               	movlw	1
  7031  003B5E  EFB2  F01D         	goto	u2806
  7032  003B62                     u2800:
  7033  003B62  0E00               	movlw	0
  7034  003B64                     u2806:
  7035  003B64  EFB5  F01D         	goto	l308
  7036  003B68                     l4285:
  7037                           
  7038                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 790:         return 0;
  7039  003B68  0E00               	movlw	0
  7040  003B6A                     l308:
  7041  003B6A  0012               	return		;funcret
  7042  003B6C                     __end_of_MTOUCH_Sensor_isEnabled:
  7043                           	callstack 0
  7044                           
  7045 ;; *************** function _MTOUCH_Sensor_isSampling *****************
  7046 ;; Defined at:
  7047 ;;		line 915 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;		None
  7050 ;; Auto vars:     Size  Location     Type
  7051 ;;		None
  7052 ;; Return value:  Size  Location     Type
  7053 ;;                  1    wreg      _Bool 
  7054 ;; Registers used:
  7055 ;;		wreg, status,2
  7056 ;; Tracked objects:
  7057 ;;		On entry : 0/0
  7058 ;;		On exit  : 0/0
  7059 ;;		Unchanged: 0/0
  7060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7065 ;;Total ram usage:        0 bytes
  7066 ;; Hardware stack levels used:    1
  7067 ;; Hardware stack levels required when called:    6
  7068 ;; This function calls:
  7069 ;;		Nothing
  7070 ;; This function is called by:
  7071 ;;		_MTOUCH_Sensor_isSamplingComplete
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           	psect	text48
  7076  0041DE                     __ptext48:
  7077                           	callstack 0
  7078  0041DE                     _MTOUCH_Sensor_isSampling:
  7079                           	callstack 21
  7080  0041DE                     
  7081                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 917:     return sampling_flag;
  7082  0041DE  5047               	movf	_sampling_flag^0,w,c
  7083  0041E0  0012               	return		;funcret
  7084  0041E2                     __end_of_MTOUCH_Sensor_isSampling:
  7085                           	callstack 0
  7086                           
  7087 ;; *************** function _MTOUCH_Initialize *****************
  7088 ;; Defined at:
  7089 ;;		line 82 in file "mcc_generated_files/mtouch/mtouch.c"
  7090 ;; Parameters:    Size  Location     Type
  7091 ;;		None
  7092 ;; Auto vars:     Size  Location     Type
  7093 ;;		None
  7094 ;; Return value:  Size  Location     Type
  7095 ;;                  1    wreg      void 
  7096 ;; Registers used:
  7097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7098 ;; Tracked objects:
  7099 ;;		On entry : 0/0
  7100 ;;		On exit  : 0/0
  7101 ;;		Unchanged: 0/0
  7102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7107 ;;Total ram usage:        0 bytes
  7108 ;; Hardware stack levels used:    1
  7109 ;; Hardware stack levels required when called:    9
  7110 ;; This function calls:
  7111 ;;		_MTOUCH_Button_InitializeAll
  7112 ;;		_MTOUCH_Sensor_InitializeAll
  7113 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  7114 ;;		_MTOUCH_Sensor_Scan_Initialize
  7115 ;;		_MTOUCH_Slider_InitializeAll
  7116 ;; This function is called by:
  7117 ;;		_MTOUCH_Service_Mainloop
  7118 ;;		_SYSTEM_Initialize
  7119 ;; This function uses a non-reentrant model
  7120 ;;
  7121                           
  7122                           	psect	text49
  7123  00413A                     __ptext49:
  7124                           	callstack 0
  7125  00413A                     _MTOUCH_Initialize:
  7126                           	callstack 20
  7127  00413A                     
  7128                           ;mcc_generated_files/mtouch/mtouch.c: 84:     MTOUCH_Sensor_InitializeAll();
  7129  00413A  EC32  F01E         	call	_MTOUCH_Sensor_InitializeAll	;wreg free
  7130                           
  7131                           ;mcc_generated_files/mtouch/mtouch.c: 85:     MTOUCH_Button_InitializeAll();
  7132  00413E  EC4F  F01E         	call	_MTOUCH_Button_InitializeAll	;wreg free
  7133  004142                     
  7134                           ;mcc_generated_files/mtouch/mtouch.c: 86:     MTOUCH_Slider_InitializeAll();
  7135  004142  EC4D  F020         	call	_MTOUCH_Slider_InitializeAll	;wreg free
  7136  004146                     
  7137                           ;mcc_generated_files/mtouch/mtouch.c: 87:     MTOUCH_Sensor_Sampled_ResetAll();
  7138  004146  EC71  F01C         	call	_MTOUCH_Sensor_Sampled_ResetAll	;wreg free
  7139  00414A                     
  7140                           ;mcc_generated_files/mtouch/mtouch.c: 88:     MTOUCH_Sensor_Scan_Initialize();
  7141  00414A  ECE2  F020         	call	_MTOUCH_Sensor_Scan_Initialize	;wreg free
  7142  00414E  0012               	return		;funcret
  7143  004150                     __end_of_MTOUCH_Initialize:
  7144                           	callstack 0
  7145                           
  7146 ;; *************** function _MTOUCH_Slider_InitializeAll *****************
  7147 ;; Defined at:
  7148 ;;		line 965 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;		None
  7151 ;; Auto vars:     Size  Location     Type
  7152 ;;  slider          1   24[COMRAM] enum E12944
  7153 ;; Return value:  Size  Location     Type
  7154 ;;                  1    wreg      void 
  7155 ;; Registers used:
  7156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7157 ;; Tracked objects:
  7158 ;;		On entry : 0/0
  7159 ;;		On exit  : 0/0
  7160 ;;		Unchanged: 0/0
  7161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7163 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7165 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7166 ;;Total ram usage:        1 bytes
  7167 ;; Hardware stack levels used:    1
  7168 ;; Hardware stack levels required when called:    7
  7169 ;; This function calls:
  7170 ;;		_Slider_Initialize
  7171 ;; This function is called by:
  7172 ;;		_MTOUCH_Initialize
  7173 ;; This function uses a non-reentrant model
  7174 ;;
  7175                           
  7176                           	psect	text50
  7177  00409A                     __ptext50:
  7178                           	callstack 0
  7179  00409A                     _MTOUCH_Slider_InitializeAll:
  7180                           	callstack 21
  7181  00409A                     
  7182                           ;mcc_generated_files/mtouch/mtouch_slider.c: 967:     enum mtouch_slider_names slider;;m
      +                          cc_generated_files/mtouch/mtouch_slider.c: 969:     for (slider = 0u; slider < 1u; slide
      +                          r++)
  7183  00409A  0E00               	movlw	0
  7184  00409C  6E19               	movwf	MTOUCH_Slider_InitializeAll@slider^0,c
  7185  00409E                     l5207:
  7186                           
  7187                           ;mcc_generated_files/mtouch/mtouch_slider.c: 970:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 971:         Slider_Initialize(slider);
  7188  00409E  5019               	movf	MTOUCH_Slider_InitializeAll@slider^0,w,c
  7189  0040A0  EC5B  F019         	call	_Slider_Initialize
  7190  0040A4                     
  7191                           ;mcc_generated_files/mtouch/mtouch_slider.c: 972:     }
  7192  0040A4  2A19               	incf	MTOUCH_Slider_InitializeAll@slider^0,f,c
  7193  0040A6  5019               	movf	MTOUCH_Slider_InitializeAll@slider^0,w,c
  7194  0040A8  B4D8               	btfsc	status,2,c
  7195  0040AA  EF59  F020         	goto	u4331
  7196  0040AE  EF5B  F020         	goto	u4330
  7197  0040B2                     u4331:
  7198  0040B2  EF4F  F020         	goto	l5207
  7199  0040B6                     u4330:
  7200  0040B6  0012               	return		;funcret
  7201  0040B8                     __end_of_MTOUCH_Slider_InitializeAll:
  7202                           	callstack 0
  7203                           
  7204 ;; *************** function _Slider_Initialize *****************
  7205 ;; Defined at:
  7206 ;;		line 795 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  7207 ;; Parameters:    Size  Location     Type
  7208 ;;  sliderName      1    wreg     enum E12944
  7209 ;; Auto vars:     Size  Location     Type
  7210 ;;  sliderName      1   21[COMRAM] enum E12944
  7211 ;;  slider          2   22[COMRAM] PTR struct .
  7212 ;;		 -> mtouch_slider(17), 
  7213 ;; Return value:  Size  Location     Type
  7214 ;;                  1    wreg      void 
  7215 ;; Registers used:
  7216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7217 ;; Tracked objects:
  7218 ;;		On entry : 0/0
  7219 ;;		On exit  : 0/0
  7220 ;;		Unchanged: 0/0
  7221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7223 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7225 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7226 ;;Total ram usage:        3 bytes
  7227 ;; Hardware stack levels used:    1
  7228 ;; Hardware stack levels required when called:    6
  7229 ;; This function calls:
  7230 ;;		Nothing
  7231 ;; This function is called by:
  7232 ;;		_MTOUCH_Slider_InitializeAll
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           	psect	text51
  7237  0032B6                     __ptext51:
  7238                           	callstack 0
  7239  0032B6                     _Slider_Initialize:
  7240                           	callstack 21
  7241                           
  7242                           ;incstack = 0
  7243                           ;Slider_Initialize@sliderName stored from wreg
  7244  0032B6  6E16               	movwf	Slider_Initialize@sliderName^0,c
  7245  0032B8                     
  7246                           ;mcc_generated_files/mtouch/mtouch_slider.c: 795: static void Slider_Initialize(enum mto
      +                          uch_slider_names sliderName);mcc_generated_files/mtouch/mtouch_slider.c: 796: {;mcc_gene
      +                          rated_files/mtouch/mtouch_slider.c: 797:     if (sliderName < 1u)
  7247  0032B8  5016               	movf	Slider_Initialize@sliderName^0,w,c
  7248  0032BA  A4D8               	btfss	status,2,c
  7249  0032BC  EF62  F019         	goto	u4051
  7250  0032C0  EF64  F019         	goto	u4050
  7251  0032C4                     u4051:
  7252  0032C4  EFA8  F019         	goto	l816
  7253  0032C8                     u4050:
  7254  0032C8                     
  7255                           ;mcc_generated_files/mtouch/mtouch_slider.c: 798:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 799:         mtouch_slider_t* slider = &mtouch_slider[sliderName];
  7256  0032C8  5016               	movf	Slider_Initialize@sliderName^0,w,c
  7257  0032CA  0D11               	mullw	17
  7258  0032CC  0EE2               	movlw	low _mtouch_slider
  7259  0032CE  24F3               	addwf	243,w,c
  7260  0032D0  6E17               	movwf	Slider_Initialize@slider^0,c
  7261  0032D2  0E00               	movlw	high _mtouch_slider
  7262  0032D4  20F4               	addwfc	prodh,w,c
  7263  0032D6  6E18               	movwf	(Slider_Initialize@slider+1)^0,c
  7264  0032D8                     
  7265                           ;mcc_generated_files/mtouch/mtouch_slider.c: 802:         slider->sliderStatus = MTOUCH_
      +                          SLIDER_STATE_initializing;
  7266  0032D8  EE20 F010          	lfsr	2,16
  7267  0032DC  5017               	movf	Slider_Initialize@slider^0,w,c
  7268  0032DE  26D9               	addwf	fsr2l,f,c
  7269  0032E0  5018               	movf	(Slider_Initialize@slider+1)^0,w,c
  7270  0032E2  22DA               	addwfc	fsr2h,f,c
  7271  0032E4  0E00               	movlw	0
  7272  0032E6  6EDF               	movwf	indf2,c
  7273  0032E8                     
  7274                           ;mcc_generated_files/mtouch/mtouch_slider.c: 804:         slider->rightHysteresis = 0u;
  7275  0032E8  EE20 F008          	lfsr	2,8
  7276  0032EC  5017               	movf	Slider_Initialize@slider^0,w,c
  7277  0032EE  26D9               	addwf	fsr2l,f,c
  7278  0032F0  5018               	movf	(Slider_Initialize@slider+1)^0,w,c
  7279  0032F2  22DA               	addwfc	fsr2h,f,c
  7280  0032F4  0E00               	movlw	0
  7281  0032F6  6EDF               	movwf	indf2,c
  7282  0032F8                     
  7283                           ;mcc_generated_files/mtouch/mtouch_slider.c: 805:         slider->leftHysteresis = slide
      +                          r->positionHysteresis;
  7284  0032F8  EE20 F005          	lfsr	2,5
  7285  0032FC  5017               	movf	Slider_Initialize@slider^0,w,c
  7286  0032FE  26D9               	addwf	fsr2l,f,c
  7287  003300  5018               	movf	(Slider_Initialize@slider+1)^0,w,c
  7288  003302  22DA               	addwfc	fsr2h,f,c
  7289  003304  EE10 F009          	lfsr	1,9
  7290  003308  5017               	movf	Slider_Initialize@slider^0,w,c
  7291  00330A  26E1               	addwf	fsr1l,f,c
  7292  00330C  5018               	movf	(Slider_Initialize@slider+1)^0,w,c
  7293  00330E  22E2               	addwfc	fsr1h,f,c
  7294  003310  CFDF FFE7          	movff	indf2,indf1
  7295  003314                     
  7296                           ;mcc_generated_files/mtouch/mtouch_slider.c: 807:         slider->rawPosition = 0u;
  7297  003314  EE20 F00A          	lfsr	2,10
  7298  003318  5017               	movf	Slider_Initialize@slider^0,w,c
  7299  00331A  26D9               	addwf	fsr2l,f,c
  7300  00331C  5018               	movf	(Slider_Initialize@slider+1)^0,w,c
  7301  00331E  22DA               	addwfc	fsr2h,f,c
  7302  003320  0E00               	movlw	0
  7303  003322  6EDE               	movwf	postinc2,c
  7304  003324  0E00               	movlw	0
  7305  003326  6EDD               	movwf	postdec2,c
  7306  003328                     
  7307                           ;mcc_generated_files/mtouch/mtouch_slider.c: 808:         slider->sliderPosition = 0u;
  7308  003328  EE20 F00C          	lfsr	2,12
  7309  00332C  5017               	movf	Slider_Initialize@slider^0,w,c
  7310  00332E  26D9               	addwf	fsr2l,f,c
  7311  003330  5018               	movf	(Slider_Initialize@slider+1)^0,w,c
  7312  003332  22DA               	addwfc	fsr2h,f,c
  7313  003334  0E00               	movlw	0
  7314  003336  6EDE               	movwf	postinc2,c
  7315  003338  0E00               	movlw	0
  7316  00333A  6EDD               	movwf	postdec2,c
  7317  00333C                     
  7318                           ;mcc_generated_files/mtouch/mtouch_slider.c: 809:         slider->contactSize = 0u;
  7319  00333C  EE20 F00E          	lfsr	2,14
  7320  003340  5017               	movf	Slider_Initialize@slider^0,w,c
  7321  003342  26D9               	addwf	fsr2l,f,c
  7322  003344  5018               	movf	(Slider_Initialize@slider+1)^0,w,c
  7323  003346  22DA               	addwfc	fsr2h,f,c
  7324  003348  0E00               	movlw	0
  7325  00334A  6EDE               	movwf	postinc2,c
  7326  00334C  0E00               	movlw	0
  7327  00334E  6EDD               	movwf	postdec2,c
  7328  003350                     l816:
  7329  003350  0012               	return		;funcret
  7330  003352                     __end_of_Slider_Initialize:
  7331                           	callstack 0
  7332                           
  7333 ;; *************** function _MTOUCH_Sensor_Scan_Initialize *****************
  7334 ;; Defined at:
  7335 ;;		line 379 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7336 ;; Parameters:    Size  Location     Type
  7337 ;;		None
  7338 ;; Auto vars:     Size  Location     Type
  7339 ;;		None
  7340 ;; Return value:  Size  Location     Type
  7341 ;;                  1    wreg      void 
  7342 ;; Registers used:
  7343 ;;		wreg, status,2, status,0, cstack
  7344 ;; Tracked objects:
  7345 ;;		On entry : 0/0
  7346 ;;		On exit  : 0/0
  7347 ;;		Unchanged: 0/0
  7348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7353 ;;Total ram usage:        0 bytes
  7354 ;; Hardware stack levels used:    1
  7355 ;; Hardware stack levels required when called:    8
  7356 ;; This function calls:
  7357 ;;		_MTOUCH_Sensor_ADCC_Initialize
  7358 ;; This function is called by:
  7359 ;;		_MTOUCH_Initialize
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           	psect	text52
  7364  0041C4                     __ptext52:
  7365                           	callstack 0
  7366  0041C4                     _MTOUCH_Sensor_Scan_Initialize:
  7367                           	callstack 20
  7368  0041C4                     
  7369                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 381:     MTOUCH_Sensor_ADCC_Initialize();
  7370  0041C4  ECE9  F01C         	call	_MTOUCH_Sensor_ADCC_Initialize	;wreg free
  7371  0041C8  0012               	return		;funcret
  7372  0041CA                     __end_of_MTOUCH_Sensor_Scan_Initialize:
  7373                           	callstack 0
  7374                           
  7375 ;; *************** function _MTOUCH_Sensor_ADCC_Initialize *****************
  7376 ;; Defined at:
  7377 ;;		line 265 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;		None
  7380 ;; Auto vars:     Size  Location     Type
  7381 ;;		None
  7382 ;; Return value:  Size  Location     Type
  7383 ;;                  1    wreg      void 
  7384 ;; Registers used:
  7385 ;;		wreg, status,2, status,0, cstack
  7386 ;; Tracked objects:
  7387 ;;		On entry : 0/0
  7388 ;;		On exit  : 0/0
  7389 ;;		Unchanged: 0/0
  7390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7395 ;;Total ram usage:        0 bytes
  7396 ;; Hardware stack levels used:    1
  7397 ;; Hardware stack levels required when called:    7
  7398 ;; This function calls:
  7399 ;;		_ADCC_SetADTIInterruptHandler
  7400 ;; This function is called by:
  7401 ;;		_MTOUCH_Sensor_Scan_Initialize
  7402 ;; This function uses a non-reentrant model
  7403 ;;
  7404                           
  7405                           	psect	text53
  7406  0039D2                     __ptext53:
  7407                           	callstack 0
  7408  0039D2                     _MTOUCH_Sensor_ADCC_Initialize:
  7409                           	callstack 20
  7410  0039D2                     
  7411                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 268:     ADCLK = 0x0f;
  7412  0039D2  0E0F               	movlw	15
  7413  0039D4  010F               	movlb	15	; () banked
  7414  0039D6  6F52               	movwf	82,b	;volatile
  7415                           
  7416                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 270:     ADREF = 0x00;
  7417  0039D8  0E00               	movlw	0
  7418  0039DA  6F53               	movwf	83,b	;volatile
  7419                           
  7420                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 272:     ADCAP = 0x00;
  7421  0039DC  0E00               	movlw	0
  7422  0039DE  6F58               	movwf	88,b	;volatile
  7423                           
  7424                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 274:     ADLTHL = 0x00;
  7425  0039E0  0E00               	movlw	0
  7426  0039E2  6E65               	movwf	101,c	;volatile
  7427                           
  7428                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 276:     ADLTHH = 0x00;
  7429  0039E4  0E00               	movlw	0
  7430  0039E6  6E66               	movwf	102,c	;volatile
  7431                           
  7432                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 278:     ADUTHL = 0x00;
  7433  0039E8  0E00               	movlw	0
  7434  0039EA  6E67               	movwf	103,c	;volatile
  7435                           
  7436                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 280:     ADUTHH = 0x00;
  7437  0039EC  0E00               	movlw	0
  7438  0039EE  6E68               	movwf	104,c	;volatile
  7439                           
  7440                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 282:     ADSTPTL = 0x00;
  7441  0039F0  0E00               	movlw	0
  7442  0039F2  6E63               	movwf	99,c	;volatile
  7443                           
  7444                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 284:     ADSTPTH = 0x00;
  7445  0039F4  0E00               	movlw	0
  7446  0039F6  6E64               	movwf	100,c	;volatile
  7447                           
  7448                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 287:     ADCON1 = 0x41;
  7449  0039F8  0E41               	movlw	65
  7450  0039FA  6F54               	movwf	84,b	;volatile
  7451                           
  7452                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 289:     ADCON2 = 0x8B;
  7453  0039FC  0E8B               	movlw	139
  7454  0039FE  6F55               	movwf	85,b	;volatile
  7455                           
  7456                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 292:     ADCON3 = 0x0F;
  7457  003A00  0E0F               	movlw	15
  7458  003A02  6F56               	movwf	86,b	;volatile
  7459                           
  7460                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 295:     ADCON0 = 0xC4;
  7461  003A04  0EC4               	movlw	196
  7462  003A06  6F5B               	movwf	91,b	;volatile
  7463  003A08                     
  7464                           ; BSR set to: 15
  7465                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 298:     PIR1bits.ADTIF = 0;
  7466  003A08  010E               	movlb	14	; () banked
  7467  003A0A  93C6               	bcf	198,1,b	;volatile
  7468  003A0C                     
  7469                           ; BSR set to: 14
  7470                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 300:     PIE1bits.ADTIE = 1;
  7471  003A0C  83BE               	bsf	190,1,b	;volatile
  7472  003A0E                     
  7473                           ; BSR set to: 14
  7474                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 302:     ADCC_SetADTIInterruptHandler(ADCC_
      +                          ThresholdISR_mTouch);
  7475  003A0E  0EA4               	movlw	low _ADCC_ThresholdISR_mTouch
  7476  003A10  6E16               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler^0,c
  7477  003A12  0E41               	movlw	high _ADCC_ThresholdISR_mTouch
  7478  003A14  6E17               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)^0,c
  7479  003A16  0E00               	movlw	low (_ADCC_ThresholdISR_mTouch shr (0+16))
  7480  003A18  6E18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)^0,c
  7481  003A1A  ECBF  F020         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  7482  003A1E  0012               	return		;funcret
  7483  003A20                     __end_of_MTOUCH_Sensor_ADCC_Initialize:
  7484                           	callstack 0
  7485                           
  7486 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
  7487 ;; Defined at:
  7488 ;;		line 308 in file "mcc_generated_files/adcc.c"
  7489 ;; Parameters:    Size  Location     Type
  7490 ;;  InterruptHan    3   21[COMRAM] PTR FTN()void 
  7491 ;;		 -> ADCC_DefaultInterruptHandler(1), ADCC_ThresholdISR_mTouch(1), 
  7492 ;; Auto vars:     Size  Location     Type
  7493 ;;		None
  7494 ;; Return value:  Size  Location     Type
  7495 ;;                  1    wreg      void 
  7496 ;; Registers used:
  7497 ;;		wreg, status,2, status,0
  7498 ;; Tracked objects:
  7499 ;;		On entry : 0/0
  7500 ;;		On exit  : 0/0
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7503 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7506 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7507 ;;Total ram usage:        3 bytes
  7508 ;; Hardware stack levels used:    1
  7509 ;; Hardware stack levels required when called:    6
  7510 ;; This function calls:
  7511 ;;		Nothing
  7512 ;; This function is called by:
  7513 ;;		_MTOUCH_Sensor_ADCC_Initialize
  7514 ;;		_ADCC_Initialize
  7515 ;; This function uses a non-reentrant model
  7516 ;;
  7517                           
  7518                           	psect	text54
  7519  00417E                     __ptext54:
  7520                           	callstack 0
  7521  00417E                     _ADCC_SetADTIInterruptHandler:
  7522                           	callstack 20
  7523  00417E                     
  7524                           ;mcc_generated_files/adcc.c: 309:     ADCC_ADTI_InterruptHandler = InterruptHandler;
  7525  00417E  C016  F0FD         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
  7526  004182  C017  F0FE         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
  7527  004186  C018  F0FF         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
  7528  00418A  0012               	return		;funcret
  7529  00418C                     __end_of_ADCC_SetADTIInterruptHandler:
  7530                           	callstack 0
  7531                           
  7532 ;; *************** function _MTOUCH_Sensor_Sampled_ResetAll *****************
  7533 ;; Defined at:
  7534 ;;		line 888 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7535 ;; Parameters:    Size  Location     Type
  7536 ;;		None
  7537 ;; Auto vars:     Size  Location     Type
  7538 ;;  sensor          2   23[COMRAM] PTR struct .
  7539 ;;		 -> mtouch_sensor(45), 
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  1    wreg      void 
  7542 ;; Registers used:
  7543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7550 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7552 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7553 ;;Total ram usage:        2 bytes
  7554 ;; Hardware stack levels used:    1
  7555 ;; Hardware stack levels required when called:    7
  7556 ;; This function calls:
  7557 ;;		_Sensor_Sampled_Reset
  7558 ;; This function is called by:
  7559 ;;		_MTOUCH_Initialize
  7560 ;;		_MTOUCH_Service_Mainloop
  7561 ;; This function uses a non-reentrant model
  7562 ;;
  7563                           
  7564                           	psect	text55
  7565  0038E2                     __ptext55:
  7566                           	callstack 0
  7567  0038E2                     _MTOUCH_Sensor_Sampled_ResetAll:
  7568                           	callstack 21
  7569  0038E2                     
  7570                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 890:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 891:     for(sensor = &mtouch_sensor[0];sensor<= &mto
      +                          uch_sensor[5u -1];sensor++)
  7571  0038E2  0E97               	movlw	low _mtouch_sensor
  7572  0038E4  6E18               	movwf	MTOUCH_Sensor_Sampled_ResetAll@sensor^0,c
  7573  0038E6  0E00               	movlw	high _mtouch_sensor
  7574  0038E8  6E19               	movwf	(MTOUCH_Sensor_Sampled_ResetAll@sensor+1)^0,c
  7575  0038EA  5019               	movf	(MTOUCH_Sensor_Sampled_ResetAll@sensor+1)^0,w,c
  7576  0038EC  0800               	sublw	high (_mtouch_sensor+36)
  7577  0038EE  E102               	bnz	u4255
  7578  0038F0  5018               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor^0,w,c
  7579  0038F2  08BB               	sublw	low (_mtouch_sensor+36)
  7580  0038F4                     u4255:
  7581  0038F4  B0D8               	btfsc	status,0,c
  7582  0038F6  EF7F  F01C         	goto	u4251
  7583  0038FA  EF81  F01C         	goto	u4250
  7584  0038FE                     u4251:
  7585  0038FE  EF83  F01C         	goto	l5155
  7586  003902                     u4250:
  7587  003902  EF99  F01C         	goto	l352
  7588  003906                     l5155:
  7589                           
  7590                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 892:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 893:         Sensor_Sampled_Reset(sensor);
  7591  003906  C018  F016         	movff	MTOUCH_Sensor_Sampled_ResetAll@sensor,Sensor_Sampled_Reset@sensor
  7592  00390A  C019  F017         	movff	MTOUCH_Sensor_Sampled_ResetAll@sensor+1,Sensor_Sampled_Reset@sensor+1
  7593  00390E  ECA8  F020         	call	_Sensor_Sampled_Reset	;wreg free
  7594  003912                     
  7595                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 894:     }
  7596  003912  0E09               	movlw	9
  7597  003914  2618               	addwf	MTOUCH_Sensor_Sampled_ResetAll@sensor^0,f,c
  7598  003916  0E00               	movlw	0
  7599  003918  2219               	addwfc	(MTOUCH_Sensor_Sampled_ResetAll@sensor+1)^0,f,c
  7600  00391A  5019               	movf	(MTOUCH_Sensor_Sampled_ResetAll@sensor+1)^0,w,c
  7601  00391C  0800               	sublw	high (_mtouch_sensor+36)
  7602  00391E  E102               	bnz	u4265
  7603  003920  5018               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor^0,w,c
  7604  003922  08BB               	sublw	low (_mtouch_sensor+36)
  7605  003924                     u4265:
  7606  003924  B0D8               	btfsc	status,0,c
  7607  003926  EF97  F01C         	goto	u4261
  7608  00392A  EF99  F01C         	goto	u4260
  7609  00392E                     u4261:
  7610  00392E  EF83  F01C         	goto	l5155
  7611  003932                     u4260:
  7612  003932                     l352:
  7613  003932  0012               	return		;funcret
  7614  003934                     __end_of_MTOUCH_Sensor_Sampled_ResetAll:
  7615                           	callstack 0
  7616                           
  7617 ;; *************** function _MTOUCH_Sensor_InitializeAll *****************
  7618 ;; Defined at:
  7619 ;;		line 306 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7620 ;; Parameters:    Size  Location     Type
  7621 ;;		None
  7622 ;; Auto vars:     Size  Location     Type
  7623 ;;  sensor          1   32[COMRAM] enum E12845
  7624 ;; Return value:  Size  Location     Type
  7625 ;;                  1    wreg      void 
  7626 ;; Registers used:
  7627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7628 ;; Tracked objects:
  7629 ;;		On entry : 0/0
  7630 ;;		On exit  : 0/0
  7631 ;;		Unchanged: 0/0
  7632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7636 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7637 ;;Total ram usage:        1 bytes
  7638 ;; Hardware stack levels used:    1
  7639 ;; Hardware stack levels required when called:    8
  7640 ;; This function calls:
  7641 ;;		_MTOUCH_Sensor_Initialize
  7642 ;;		_memcpy
  7643 ;; This function is called by:
  7644 ;;		_MTOUCH_Initialize
  7645 ;; This function uses a non-reentrant model
  7646 ;;
  7647                           
  7648                           	psect	text56
  7649  003C64                     __ptext56:
  7650                           	callstack 0
  7651  003C64                     _MTOUCH_Sensor_InitializeAll:
  7652                           	callstack 20
  7653  003C64                     
  7654                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 308:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 310:     memcpy(mtouch_sensor,mtouch_sensor_i
      +                          nit,sizeof(mtouch_sensor_init));
  7655  003C64  0E97               	movlw	low _mtouch_sensor
  7656  003C66  6E16               	movwf	memcpy@d1^0,c
  7657  003C68  0E00               	movlw	high _mtouch_sensor
  7658  003C6A  6E17               	movwf	(memcpy@d1+1)^0,c
  7659  003C6C  0E56               	movlw	low _mtouch_sensor_init
  7660  003C6E  6E18               	movwf	memcpy@s1^0,c
  7661  003C70  0E0F               	movlw	high _mtouch_sensor_init
  7662  003C72  6E19               	movwf	(memcpy@s1+1)^0,c
  7663  003C74  0E00               	movlw	0
  7664  003C76  6E1B               	movwf	(memcpy@n+1)^0,c
  7665  003C78  0E2D               	movlw	45
  7666  003C7A  6E1A               	movwf	memcpy@n^0,c
  7667  003C7C  ECF3  F01B         	call	_memcpy	;wreg free
  7668  003C80                     
  7669                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 312:     for (sensor = 0; sensor < 5u; sens
      +                          or++)
  7670  003C80  0E00               	movlw	0
  7671  003C82  6E21               	movwf	MTOUCH_Sensor_InitializeAll@sensor^0,c
  7672  003C84                     l6381:
  7673                           
  7674                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 313:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 314:         MTOUCH_Sensor_Initialize(sensor);
  7675  003C84  5021               	movf	MTOUCH_Sensor_InitializeAll@sensor^0,w,c
  7676  003C86  ECCA  F01F         	call	_MTOUCH_Sensor_Initialize
  7677  003C8A                     
  7678                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 315:     }
  7679  003C8A  2A21               	incf	MTOUCH_Sensor_InitializeAll@sensor^0,f,c
  7680  003C8C  0E04               	movlw	4
  7681  003C8E  6421               	cpfsgt	MTOUCH_Sensor_InitializeAll@sensor^0,c
  7682  003C90  EF4C  F01E         	goto	u6011
  7683  003C94  EF4E  F01E         	goto	u6010
  7684  003C98                     u6011:
  7685  003C98  EF42  F01E         	goto	l6381
  7686  003C9C                     u6010:
  7687  003C9C  0012               	return		;funcret
  7688  003C9E                     __end_of_MTOUCH_Sensor_InitializeAll:
  7689                           	callstack 0
  7690                           
  7691 ;; *************** function _MTOUCH_Sensor_Initialize *****************
  7692 ;; Defined at:
  7693 ;;		line 227 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7694 ;; Parameters:    Size  Location     Type
  7695 ;;  sensor          1    wreg     enum E12845
  7696 ;; Auto vars:     Size  Location     Type
  7697 ;;  sensor          1   23[COMRAM] enum E12845
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  1    wreg      enum E12851
  7700 ;; Registers used:
  7701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 0/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7708 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7710 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7711 ;;Total ram usage:        1 bytes
  7712 ;; Hardware stack levels used:    1
  7713 ;; Hardware stack levels required when called:    7
  7714 ;; This function calls:
  7715 ;;		_MTOUCH_Sensor_Calibrate
  7716 ;;		_MTOUCH_Sensor_Enable
  7717 ;;		_Sensor_Sampled_Reset
  7718 ;; This function is called by:
  7719 ;;		_MTOUCH_Sensor_InitializeAll
  7720 ;; This function uses a non-reentrant model
  7721 ;;
  7722                           
  7723                           	psect	text57
  7724  003F94                     __ptext57:
  7725                           	callstack 0
  7726  003F94                     _MTOUCH_Sensor_Initialize:
  7727                           	callstack 20
  7728                           
  7729                           ;incstack = 0
  7730                           ;MTOUCH_Sensor_Initialize@sensor stored from wreg
  7731  003F94  6E18               	movwf	MTOUCH_Sensor_Initialize@sensor^0,c
  7732  003F96                     
  7733                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 227: enum mtouch_sensor_error MTOUCH_Sensor
      +                          _Initialize(enum mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           228: {;mcc_generated_files/mtouch/mtouch_sensor.c: 229:     MTOUCH_Sensor_Enable(sensor
      +                          );
  7734  003F96  5018               	movf	MTOUCH_Sensor_Initialize@sensor^0,w,c
  7735  003F98  EC7D  F01F         	call	_MTOUCH_Sensor_Enable
  7736                           
  7737                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 230:     MTOUCH_Sensor_Calibrate(sensor);
  7738  003F9C  5018               	movf	MTOUCH_Sensor_Initialize@sensor^0,w,c
  7739  003F9E  EC91  F01F         	call	_MTOUCH_Sensor_Calibrate
  7740                           
  7741                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 231:     Sensor_Sampled_Reset(&mtouch_senso
      +                          r[sensor]);
  7742  003FA2  5018               	movf	MTOUCH_Sensor_Initialize@sensor^0,w,c
  7743  003FA4  0D09               	mullw	9
  7744  003FA6  0E97               	movlw	low _mtouch_sensor
  7745  003FA8  24F3               	addwf	243,w,c
  7746  003FAA  6E16               	movwf	Sensor_Sampled_Reset@sensor^0,c
  7747  003FAC  0E00               	movlw	high _mtouch_sensor
  7748  003FAE  20F4               	addwfc	prodh,w,c
  7749  003FB0  6E17               	movwf	(Sensor_Sampled_Reset@sensor+1)^0,c
  7750  003FB2  ECA8  F020         	call	_Sensor_Sampled_Reset	;wreg free
  7751  003FB6  0012               	return		;funcret
  7752  003FB8                     __end_of_MTOUCH_Sensor_Initialize:
  7753                           	callstack 0
  7754                           
  7755 ;; *************** function _Sensor_Sampled_Reset *****************
  7756 ;; Defined at:
  7757 ;;		line 905 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7758 ;; Parameters:    Size  Location     Type
  7759 ;;  sensor          2   21[COMRAM] PTR struct .
  7760 ;;		 -> mtouch_sensor(45), 
  7761 ;; Auto vars:     Size  Location     Type
  7762 ;;		None
  7763 ;; Return value:  Size  Location     Type
  7764 ;;                  1    wreg      void 
  7765 ;; Registers used:
  7766 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7767 ;; Tracked objects:
  7768 ;;		On entry : 0/0
  7769 ;;		On exit  : 0/0
  7770 ;;		Unchanged: 0/0
  7771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7775 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7776 ;;Total ram usage:        2 bytes
  7777 ;; Hardware stack levels used:    1
  7778 ;; Hardware stack levels required when called:    6
  7779 ;; This function calls:
  7780 ;;		Nothing
  7781 ;; This function is called by:
  7782 ;;		_MTOUCH_Sensor_Initialize
  7783 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787                           	psect	text58
  7788  004150                     __ptext58:
  7789                           	callstack 0
  7790  004150                     _Sensor_Sampled_Reset:
  7791                           	callstack 21
  7792  004150                     
  7793                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 905: static __attribute__((inline)) void Se
      +                          nsor_Sampled_Reset(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          906: {;mcc_generated_files/mtouch/mtouch_sensor.c: 907:     sensor->sampled = 0;
  7794  004150  EE20 F008          	lfsr	2,8
  7795  004154  5016               	movf	Sensor_Sampled_Reset@sensor^0,w,c
  7796  004156  26D9               	addwf	fsr2l,f,c
  7797  004158  5017               	movf	(Sensor_Sampled_Reset@sensor+1)^0,w,c
  7798  00415A  22DA               	addwfc	fsr2h,f,c
  7799  00415C  92DF               	bcf	indf2,1,c
  7800  00415E  0012               	return		;funcret
  7801  004160                     __end_of_Sensor_Sampled_Reset:
  7802                           	callstack 0
  7803                           
  7804 ;; *************** function _MTOUCH_Sensor_Enable *****************
  7805 ;; Defined at:
  7806 ;;		line 779 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7807 ;; Parameters:    Size  Location     Type
  7808 ;;  sensor          1    wreg     enum E12845
  7809 ;; Auto vars:     Size  Location     Type
  7810 ;;  sensor          1   21[COMRAM] enum E12845
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  1    wreg      void 
  7813 ;; Registers used:
  7814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7821 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7823 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7824 ;;Total ram usage:        1 bytes
  7825 ;; Hardware stack levels used:    1
  7826 ;; Hardware stack levels required when called:    6
  7827 ;; This function calls:
  7828 ;;		Nothing
  7829 ;; This function is called by:
  7830 ;;		_MTOUCH_Sensor_Initialize
  7831 ;; This function uses a non-reentrant model
  7832 ;;
  7833                           
  7834                           	psect	text59
  7835  003EFA                     __ptext59:
  7836                           	callstack 0
  7837  003EFA                     _MTOUCH_Sensor_Enable:
  7838                           	callstack 20
  7839                           
  7840                           ;incstack = 0
  7841                           ;MTOUCH_Sensor_Enable@sensor stored from wreg
  7842  003EFA  6E16               	movwf	MTOUCH_Sensor_Enable@sensor^0,c
  7843  003EFC                     
  7844                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 779: void MTOUCH_Sensor_Enable(enum mtouch_
      +                          sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 780: {;mcc_generated_fi
      +                          les/mtouch/mtouch_sensor.c: 781:     if(sensor < 5u)
  7845  003EFC  0E05               	movlw	5
  7846  003EFE  6016               	cpfslt	MTOUCH_Sensor_Enable@sensor^0,c
  7847  003F00  EF84  F01F         	goto	u2711
  7848  003F04  EF86  F01F         	goto	u2710
  7849  003F08                     u2711:
  7850  003F08  EF90  F01F         	goto	l304
  7851  003F0C                     u2710:
  7852  003F0C                     
  7853                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 782:         mtouch_sensor[sensor].enabled 
      +                          = 1;
  7854  003F0C  5016               	movf	MTOUCH_Sensor_Enable@sensor^0,w,c
  7855  003F0E  0D09               	mullw	9
  7856  003F10  0E9F               	movlw	low (_mtouch_sensor+8)
  7857  003F12  24F3               	addwf	243,w,c
  7858  003F14  6ED9               	movwf	fsr2l,c
  7859  003F16  0E00               	movlw	high (_mtouch_sensor+8)
  7860  003F18  20F4               	addwfc	prodh,w,c
  7861  003F1A  6EDA               	movwf	fsr2h,c
  7862  003F1C  0100               	movlb	0	; () banked
  7863  003F1E  80DF               	bsf	indf2,0,c
  7864  003F20                     l304:
  7865  003F20  0012               	return		;funcret
  7866  003F22                     __end_of_MTOUCH_Sensor_Enable:
  7867                           	callstack 0
  7868                           
  7869 ;; *************** function _MTOUCH_Button_InitializeAll *****************
  7870 ;; Defined at:
  7871 ;;		line 206 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7872 ;; Parameters:    Size  Location     Type
  7873 ;;		None
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;  button          1   32[COMRAM] enum E12909
  7876 ;; Return value:  Size  Location     Type
  7877 ;;                  1    wreg      void 
  7878 ;; Registers used:
  7879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7880 ;; Tracked objects:
  7881 ;;		On entry : 0/0
  7882 ;;		On exit  : 0/0
  7883 ;;		Unchanged: 0/0
  7884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7888 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7889 ;;Total ram usage:        1 bytes
  7890 ;; Hardware stack levels used:    1
  7891 ;; Hardware stack levels required when called:    8
  7892 ;; This function calls:
  7893 ;;		_MTOUCH_Button_Initialize
  7894 ;;		_memcpy
  7895 ;; This function is called by:
  7896 ;;		_MTOUCH_Initialize
  7897 ;; This function uses a non-reentrant model
  7898 ;;
  7899                           
  7900                           	psect	text60
  7901  003C9E                     __ptext60:
  7902                           	callstack 0
  7903  003C9E                     _MTOUCH_Button_InitializeAll:
  7904                           	callstack 20
  7905  003C9E                     
  7906                           ;mcc_generated_files/mtouch/mtouch_button.c: 208:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 210:     memcpy(mtouch_button,mtouch_button_i
      +                          nit,sizeof(mtouch_button_init));
  7907  003C9E  0E00               	movlw	low _mtouch_button
  7908  003CA0  6E16               	movwf	memcpy@d1^0,c
  7909  003CA2  0E01               	movlw	high _mtouch_button
  7910  003CA4  6E17               	movwf	(memcpy@d1+1)^0,c
  7911  003CA6  0E01               	movlw	low _mtouch_button_init
  7912  003CA8  6E18               	movwf	memcpy@s1^0,c
  7913  003CAA  0E0F               	movlw	high _mtouch_button_init
  7914  003CAC  6E19               	movwf	(memcpy@s1+1)^0,c
  7915  003CAE  0E00               	movlw	0
  7916  003CB0  6E1B               	movwf	(memcpy@n+1)^0,c
  7917  003CB2  0E55               	movlw	85
  7918  003CB4  6E1A               	movwf	memcpy@n^0,c
  7919  003CB6  ECF3  F01B         	call	_memcpy	;wreg free
  7920  003CBA                     
  7921                           ;mcc_generated_files/mtouch/mtouch_button.c: 212:     for (button = 0; button < 5u; butt
      +                          on++)
  7922  003CBA  0E00               	movlw	0
  7923  003CBC  6E21               	movwf	MTOUCH_Button_InitializeAll@button^0,c
  7924  003CBE                     l6421:
  7925                           
  7926                           ;mcc_generated_files/mtouch/mtouch_button.c: 213:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 214:         MTOUCH_Button_Initialize(button);
  7927  003CBE  5021               	movf	MTOUCH_Button_InitializeAll@button^0,w,c
  7928  003CC0  ECC9  F01A         	call	_MTOUCH_Button_Initialize
  7929  003CC4                     
  7930                           ;mcc_generated_files/mtouch/mtouch_button.c: 215:     }
  7931  003CC4  2A21               	incf	MTOUCH_Button_InitializeAll@button^0,f,c
  7932  003CC6  0E04               	movlw	4
  7933  003CC8  6421               	cpfsgt	MTOUCH_Button_InitializeAll@button^0,c
  7934  003CCA  EF69  F01E         	goto	u6061
  7935  003CCE  EF6B  F01E         	goto	u6060
  7936  003CD2                     u6061:
  7937  003CD2  EF5F  F01E         	goto	l6421
  7938  003CD6                     u6060:
  7939  003CD6  0012               	return		;funcret
  7940  003CD8                     __end_of_MTOUCH_Button_InitializeAll:
  7941                           	callstack 0
  7942                           
  7943 ;; *************** function _memcpy *****************
  7944 ;; Defined at:
  7945 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\memcpy.c"
  7946 ;; Parameters:    Size  Location     Type
  7947 ;;  d1              2   21[COMRAM] PTR void 
  7948 ;;		 -> mtouch_button(85), mtouch_sensor(45), 
  7949 ;;  s1              2   23[COMRAM] PTR const void 
  7950 ;;		 -> mtouch_button_init(85), mtouch_sensor_init(45), 
  7951 ;;  n               2   25[COMRAM] unsigned int 
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;  s               2   29[COMRAM] PTR const unsigned char 
  7954 ;;		 -> mtouch_button_init(85), mtouch_sensor_init(45), 
  7955 ;;  d               2   27[COMRAM] PTR unsigned char 
  7956 ;;		 -> mtouch_button(85), mtouch_sensor(45), 
  7957 ;;  tmp             1   31[COMRAM] unsigned char 
  7958 ;; Return value:  Size  Location     Type
  7959 ;;                  2   21[COMRAM] PTR void 
  7960 ;; Registers used:
  7961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7962 ;; Tracked objects:
  7963 ;;		On entry : 0/0
  7964 ;;		On exit  : 0/0
  7965 ;;		Unchanged: 0/0
  7966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7967 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7968 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7970 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7971 ;;Total ram usage:       11 bytes
  7972 ;; Hardware stack levels used:    1
  7973 ;; Hardware stack levels required when called:    6
  7974 ;; This function calls:
  7975 ;;		Nothing
  7976 ;; This function is called by:
  7977 ;;		_MTOUCH_Sensor_InitializeAll
  7978 ;;		_MTOUCH_Button_InitializeAll
  7979 ;; This function uses a non-reentrant model
  7980 ;;
  7981                           
  7982                           	psect	text61
  7983  0037E6                     __ptext61:
  7984                           	callstack 0
  7985  0037E6                     _memcpy:
  7986                           	callstack 21
  7987  0037E6  C018  F01E         	movff	memcpy@s1,memcpy@s
  7988  0037EA  C019  F01F         	movff	memcpy@s1+1,memcpy@s+1
  7989  0037EE  C016  F01C         	movff	memcpy@d1,memcpy@d
  7990  0037F2  C017  F01D         	movff	memcpy@d1+1,memcpy@d+1
  7991  0037F6  EF10  F01C         	goto	l4699
  7992  0037FA                     l4691:
  7993  0037FA  C01E  FFF6         	movff	memcpy@s,tblptrl
  7994  0037FE  C01F  FFF7         	movff	memcpy@s+1,tblptrh
  7995  003802                     	if	0	;tblptru may be non-zero
  7996  003802                     	endif
  7997  003802                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7998  003802  0E00               	movlw	low (__mediumconst shr (0+16))
  7999  003804  6EF8               	movwf	tblptru,c
  8000  003806                     	endif
  8001  003806  0008               	tblrd		*
  8002  003808  CFF5 F020          	movff	tablat,memcpy@tmp
  8003  00380C  4A1E               	infsnz	memcpy@s^0,f,c
  8004  00380E  2A1F               	incf	(memcpy@s+1)^0,f,c
  8005  003810  C01C  FFD9         	movff	memcpy@d,fsr2l
  8006  003814  C01D  FFDA         	movff	memcpy@d+1,fsr2h
  8007  003818  C020  FFDF         	movff	memcpy@tmp,indf2
  8008  00381C  4A1C               	infsnz	memcpy@d^0,f,c
  8009  00381E  2A1D               	incf	(memcpy@d+1)^0,f,c
  8010  003820                     l4699:
  8011  003820  061A               	decf	memcpy@n^0,f,c
  8012  003822  A0D8               	btfss	status,0,c
  8013  003824  061B               	decf	(memcpy@n+1)^0,f,c
  8014  003826  281A               	incf	memcpy@n^0,w,c
  8015  003828  E106               	bnz	u3491
  8016  00382A  281B               	incf	(memcpy@n+1)^0,w,c
  8017  00382C  A4D8               	btfss	status,2,c
  8018  00382E  EF1B  F01C         	goto	u3491
  8019  003832  EF1D  F01C         	goto	u3490
  8020  003836                     u3491:
  8021  003836  EFFD  F01B         	goto	l4691
  8022  00383A                     u3490:
  8023  00383A  0012               	return		;funcret
  8024  00383C                     __end_of_memcpy:
  8025                           	callstack 0
  8026                           
  8027 ;; *************** function _MTOUCH_Button_ServiceAll *****************
  8028 ;; Defined at:
  8029 ;;		line 224 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8030 ;; Parameters:    Size  Location     Type
  8031 ;;		None
  8032 ;; Auto vars:     Size  Location     Type
  8033 ;;  button          1    0[BANK0 ] enum E12909
  8034 ;; Return value:  Size  Location     Type
  8035 ;;                  1    wreg      void 
  8036 ;; Registers used:
  8037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8038 ;; Tracked objects:
  8039 ;;		On entry : 0/0
  8040 ;;		On exit  : 0/0
  8041 ;;		Unchanged: 0/0
  8042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8044 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8046 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8047 ;;Total ram usage:        1 bytes
  8048 ;; Hardware stack levels used:    1
  8049 ;; Hardware stack levels required when called:   10
  8050 ;; This function calls:
  8051 ;;		_Button_Service
  8052 ;; This function is called by:
  8053 ;;		_MTOUCH_Service_Mainloop
  8054 ;; This function uses a non-reentrant model
  8055 ;;
  8056                           
  8057                           	psect	text62
  8058  003FDA                     __ptext62:
  8059                           	callstack 0
  8060  003FDA                     _MTOUCH_Button_ServiceAll:
  8061                           	callstack 19
  8062  003FDA                     
  8063                           ;mcc_generated_files/mtouch/mtouch_button.c: 226:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 229:     for (button = 0; button < 5u; button
      +                          ++)
  8064  003FDA  0E00               	movlw	0
  8065  003FDC  0100               	movlb	0	; () banked
  8066  003FDE  6FF3               	movwf	MTOUCH_Button_ServiceAll@button& (0+255),b
  8067  003FE0                     l6527:
  8068                           
  8069                           ; BSR set to: 0
  8070                           ;mcc_generated_files/mtouch/mtouch_button.c: 230:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 231:         Button_Service(button);
  8071  003FE0  51F3               	movf	MTOUCH_Button_ServiceAll@button& (0+255),w,b
  8072  003FE2  ECC1  F016         	call	_Button_Service
  8073  003FE6                     
  8074                           ;mcc_generated_files/mtouch/mtouch_button.c: 232:     }
  8075  003FE6  0100               	movlb	0	; () banked
  8076  003FE8  2BF3               	incf	MTOUCH_Button_ServiceAll@button& (0+255),f,b
  8077  003FEA                     
  8078                           ; BSR set to: 0
  8079  003FEA  0E04               	movlw	4
  8080  003FEC  65F3               	cpfsgt	MTOUCH_Button_ServiceAll@button& (0+255),b
  8081  003FEE  EFFB  F01F         	goto	u6241
  8082  003FF2  EFFD  F01F         	goto	u6240
  8083  003FF6                     u6241:
  8084  003FF6  EFF0  F01F         	goto	l6527
  8085  003FFA                     u6240:
  8086  003FFA                     
  8087                           ; BSR set to: 0
  8088  003FFA  0012               	return		;funcret
  8089  003FFC                     __end_of_MTOUCH_Button_ServiceAll:
  8090                           	callstack 0
  8091                           
  8092 ;; *************** function _Button_Service *****************
  8093 ;; Defined at:
  8094 ;;		line 235 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8095 ;; Parameters:    Size  Location     Type
  8096 ;;  name            1    wreg     enum E12909
  8097 ;; Auto vars:     Size  Location     Type
  8098 ;;  name            1   48[COMRAM] enum E12909
  8099 ;;  button          2   49[COMRAM] PTR struct .
  8100 ;;		 -> mtouch_button(85), 
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  1    wreg      void 
  8103 ;; Registers used:
  8104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8105 ;; Tracked objects:
  8106 ;;		On entry : 0/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8111 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8112 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8113 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8114 ;;Total ram usage:        4 bytes
  8115 ;; Hardware stack levels used:    1
  8116 ;; Hardware stack levels required when called:    9
  8117 ;; This function calls:
  8118 ;;		_Button_Deviation_Update
  8119 ;;		_Button_Reading_Update
  8120 ;;		_Button_State_Initializing
  8121 ;;		_Button_State_NotPressed
  8122 ;;		_Button_State_Pressed
  8123 ;;		_MTOUCH_Button_Initialize
  8124 ;;		_MTOUCH_Sensor_isCalibrated
  8125 ;;		_MTOUCH_Sensor_wasSampled
  8126 ;; This function is called by:
  8127 ;;		_MTOUCH_Button_ServiceAll
  8128 ;; This function uses a non-reentrant model
  8129 ;;
  8130                           
  8131                           	psect	text63
  8132  002D82                     __ptext63:
  8133                           	callstack 0
  8134  002D82                     _Button_Service:
  8135                           	callstack 19
  8136                           
  8137                           ; BSR set to: 0
  8138                           ;incstack = 0
  8139                           ;Button_Service@name stored from wreg
  8140  002D82  6E31               	movwf	Button_Service@name^0,c
  8141  002D84                     
  8142                           ;mcc_generated_files/mtouch/mtouch_button.c: 235: static void Button_Service(enum mtouch
      +                          _button_names name);mcc_generated_files/mtouch/mtouch_button.c: 236: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 237:     mtouch_button_t* button = &mtouch_button[name];
  8143  002D84  5031               	movf	Button_Service@name^0,w,c
  8144  002D86  0D11               	mullw	17
  8145  002D88  0E00               	movlw	low _mtouch_button
  8146  002D8A  24F3               	addwf	243,w,c
  8147  002D8C  6E32               	movwf	Button_Service@button^0,c
  8148  002D8E  0E01               	movlw	high _mtouch_button
  8149  002D90  20F4               	addwfc	prodh,w,c
  8150  002D92  6E33               	movwf	(Button_Service@button+1)^0,c
  8151  002D94                     
  8152                           ;mcc_generated_files/mtouch/mtouch_button.c: 239:     if (MTOUCH_Sensor_wasSampled(butto
      +                          n->sensor) && MTOUCH_Sensor_isCalibrated(button->sensor))
  8153  002D94  EE20 F001          	lfsr	2,1
  8154  002D98  5032               	movf	Button_Service@button^0,w,c
  8155  002D9A  26D9               	addwf	fsr2l,f,c
  8156  002D9C  5033               	movf	(Button_Service@button+1)^0,w,c
  8157  002D9E  22DA               	addwfc	fsr2h,f,c
  8158  002DA0  50DF               	movf	indf2,w,c
  8159  002DA2  ECB6  F01D         	call	_MTOUCH_Sensor_wasSampled
  8160  002DA6  0900               	iorlw	0
  8161  002DA8  B4D8               	btfsc	status,2,c
  8162  002DAA  EFD9  F016         	goto	u6071
  8163  002DAE  EFDB  F016         	goto	u6070
  8164  002DB2                     u6071:
  8165  002DB2  EF2E  F017         	goto	l460
  8166  002DB6                     u6070:
  8167  002DB6  EE20 F001          	lfsr	2,1
  8168  002DBA  5032               	movf	Button_Service@button^0,w,c
  8169  002DBC  26D9               	addwf	fsr2l,f,c
  8170  002DBE  5033               	movf	(Button_Service@button+1)^0,w,c
  8171  002DC0  22DA               	addwfc	fsr2h,f,c
  8172  002DC2  50DF               	movf	indf2,w,c
  8173  002DC4  ECD5  F01D         	call	_MTOUCH_Sensor_isCalibrated
  8174  002DC8  0900               	iorlw	0
  8175  002DCA  B4D8               	btfsc	status,2,c
  8176  002DCC  EFEA  F016         	goto	u6081
  8177  002DD0  EFEC  F016         	goto	u6080
  8178  002DD4                     u6081:
  8179  002DD4  EF2E  F017         	goto	l460
  8180  002DD8                     u6080:
  8181  002DD8                     
  8182                           ;mcc_generated_files/mtouch/mtouch_button.c: 240:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 241:         Button_Reading_Update(button);
  8183  002DD8  C032  F01D         	movff	Button_Service@button,Button_Reading_Update@button
  8184  002DDC  C033  F01E         	movff	Button_Service@button+1,Button_Reading_Update@button+1
  8185  002DE0  ECF5  F01E         	call	_Button_Reading_Update	;wreg free
  8186  002DE4                     
  8187                           ;mcc_generated_files/mtouch/mtouch_button.c: 242:         Button_Deviation_Update(button
      +                          );
  8188  002DE4  C032  F016         	movff	Button_Service@button,Button_Deviation_Update@button
  8189  002DE8  C033  F017         	movff	Button_Service@button+1,Button_Deviation_Update@button+1
  8190  002DEC  ECC5  F012         	call	_Button_Deviation_Update	;wreg free
  8191  002DF0                     
  8192                           ;mcc_generated_files/mtouch/mtouch_button.c: 244:         if (button->state >= (uint8_t)
      +                          (sizeof(Button_StateMachine)/sizeof(button_statemachine_state_t)))
  8193  002DF0  EE20 F002          	lfsr	2,2
  8194  002DF4  5032               	movf	Button_Service@button^0,w,c
  8195  002DF6  26D9               	addwf	fsr2l,f,c
  8196  002DF8  5033               	movf	(Button_Service@button+1)^0,w,c
  8197  002DFA  22DA               	addwfc	fsr2h,f,c
  8198  002DFC  0E02               	movlw	2
  8199  002DFE  64DF               	cpfsgt	indf2,c
  8200  002E00  EF04  F017         	goto	u6091
  8201  002E04  EF06  F017         	goto	u6090
  8202  002E08                     u6091:
  8203  002E08  EF0D  F017         	goto	l6441
  8204  002E0C                     u6090:
  8205  002E0C                     
  8206                           ;mcc_generated_files/mtouch/mtouch_button.c: 245:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 246:             MTOUCH_Button_Initialize(button->name);
  8207  002E0C  C032  FFD9         	movff	Button_Service@button,fsr2l
  8208  002E10  C033  FFDA         	movff	Button_Service@button+1,fsr2h
  8209  002E14  50DF               	movf	indf2,w,c
  8210  002E16  ECC9  F01A         	call	_MTOUCH_Button_Initialize
  8211  002E1A                     l6441:
  8212                           
  8213                           ;mcc_generated_files/mtouch/mtouch_button.c: 248:         Button_StateMachine[(uint8_t)b
      +                          utton->state](button);
  8214  002E1A  C032  F029         	movff	Button_Service@button,Button_State_Pressed@button
  8215  002E1E  C033  F02A         	movff	Button_Service@button+1,Button_State_Pressed@button+1
  8216  002E22  EE20 F002          	lfsr	2,2
  8217  002E26  5032               	movf	Button_Service@button^0,w,c
  8218  002E28  26D9               	addwf	fsr2l,f,c
  8219  002E2A  5033               	movf	(Button_Service@button+1)^0,w,c
  8220  002E2C  22DA               	addwfc	fsr2h,f,c
  8221  002E2E  50DF               	movf	indf2,w,c
  8222  002E30  6E30               	movwf	??_Button_Service^0,c
  8223  002E32  5030               	movf	??_Button_Service^0,w,c
  8224  002E34  0D03               	mullw	3
  8225  002E36  0EC4               	movlw	low _Button_StateMachine
  8226  002E38  24F3               	addwf	243,w,c
  8227  002E3A  6ED9               	movwf	fsr2l,c
  8228  002E3C  0E00               	movlw	high _Button_StateMachine
  8229  002E3E  20F4               	addwfc	prodh,w,c
  8230  002E40  6EDA               	movwf	fsr2h,c
  8231  002E42  D802               	call	u6108
  8232  002E44  EF2E  F017         	goto	u6109
  8233  002E48                     u6108:
  8234  002E48  0005               	push	
  8235  002E4A  6EFA               	movwf	pclath,c
  8236  002E4C  50DE               	movf	postinc2,w,c
  8237  002E4E  6EFD               	movwf	tosl,c
  8238  002E50  50DE               	movf	postinc2,w,c
  8239  002E52  6EFE               	movwf	tosh,c
  8240  002E54  50DE               	movf	postinc2,w,c
  8241  002E56  6EFF               	movwf	tosu,c
  8242  002E58  50FA               	movf	pclath,w,c
  8243  002E5A  0012               	return		;indir
  8244  002E5C                     u6109:
  8245  002E5C                     l460:
  8246  002E5C  0012               	return		;funcret
  8247  002E5E                     __end_of_Button_Service:
  8248                           	callstack 0
  8249                           
  8250 ;; *************** function _MTOUCH_Sensor_wasSampled *****************
  8251 ;; Defined at:
  8252 ;;		line 897 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;  sensor          1    wreg     enum E12845
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;  sensor          1   21[COMRAM] enum E12845
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  1    wreg      _Bool 
  8259 ;; Registers used:
  8260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8267 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8269 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8270 ;;Total ram usage:        1 bytes
  8271 ;; Hardware stack levels used:    1
  8272 ;; Hardware stack levels required when called:    6
  8273 ;; This function calls:
  8274 ;;		Nothing
  8275 ;; This function is called by:
  8276 ;;		_MTOUCH_Sensor_isSamplingComplete
  8277 ;;		_Sensor_scheduleNextScan
  8278 ;;		_Button_Service
  8279 ;; This function uses a non-reentrant model
  8280 ;;
  8281                           
  8282                           	psect	text64
  8283  003B6C                     __ptext64:
  8284                           	callstack 0
  8285  003B6C                     _MTOUCH_Sensor_wasSampled:
  8286                           	callstack 20
  8287                           
  8288                           ;incstack = 0
  8289                           ;MTOUCH_Sensor_wasSampled@sensor stored from wreg
  8290  003B6C  6E16               	movwf	MTOUCH_Sensor_wasSampled@sensor^0,c
  8291  003B6E                     
  8292                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 897: _Bool MTOUCH_Sensor_wasSampled(enum mt
      +                          ouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 898: {;mcc_generat
      +                          ed_files/mtouch/mtouch_sensor.c: 899:     if(sensor < 5u)
  8293  003B6E  0E05               	movlw	5
  8294  003B70  6016               	cpfslt	MTOUCH_Sensor_wasSampled@sensor^0,c
  8295  003B72  EFBD  F01D         	goto	u5191
  8296  003B76  EFBF  F01D         	goto	u5190
  8297  003B7A                     u5191:
  8298  003B7A  EFD3  F01D         	goto	l5911
  8299  003B7E                     u5190:
  8300  003B7E                     
  8301                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 900:         return (_Bool)mtouch_sensor[se
      +                          nsor].sampled;
  8302  003B7E  5016               	movf	MTOUCH_Sensor_wasSampled@sensor^0,w,c
  8303  003B80  0D09               	mullw	9
  8304  003B82  0E9F               	movlw	low (_mtouch_sensor+8)
  8305  003B84  24F3               	addwf	243,w,c
  8306  003B86  6ED9               	movwf	fsr2l,c
  8307  003B88  0E00               	movlw	high (_mtouch_sensor+8)
  8308  003B8A  20F4               	addwfc	prodh,w,c
  8309  003B8C  6EDA               	movwf	fsr2h,c
  8310  003B8E  0100               	movlb	0	; () banked
  8311  003B90  B2DF               	btfsc	indf2,1,c
  8312  003B92  EFCD  F01D         	goto	u5201
  8313  003B96  EFD0  F01D         	goto	u5200
  8314  003B9A                     u5201:
  8315  003B9A  0E01               	movlw	1
  8316  003B9C  EFD1  F01D         	goto	u5206
  8317  003BA0                     u5200:
  8318  003BA0  0E00               	movlw	0
  8319  003BA2                     u5206:
  8320  003BA2  EFD4  F01D         	goto	l356
  8321  003BA6                     l5911:
  8322                           
  8323                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 902:         return 0;
  8324  003BA6  0E00               	movlw	0
  8325  003BA8                     l356:
  8326  003BA8  0012               	return		;funcret
  8327  003BAA                     __end_of_MTOUCH_Sensor_wasSampled:
  8328                           	callstack 0
  8329                           
  8330 ;; *************** function _MTOUCH_Sensor_isCalibrated *****************
  8331 ;; Defined at:
  8332 ;;		line 849 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;  sensor          1    wreg     enum E12845
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;  sensor          1   21[COMRAM] enum E12845
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  1    wreg      _Bool 
  8339 ;; Registers used:
  8340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8349 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8350 ;;Total ram usage:        1 bytes
  8351 ;; Hardware stack levels used:    1
  8352 ;; Hardware stack levels required when called:    6
  8353 ;; This function calls:
  8354 ;;		Nothing
  8355 ;; This function is called by:
  8356 ;;		_Button_Service
  8357 ;; This function uses a non-reentrant model
  8358 ;;
  8359                           
  8360                           	psect	text65
  8361  003BAA                     __ptext65:
  8362                           	callstack 0
  8363  003BAA                     _MTOUCH_Sensor_isCalibrated:
  8364                           	callstack 21
  8365                           
  8366                           ;incstack = 0
  8367                           ;MTOUCH_Sensor_isCalibrated@sensor stored from wreg
  8368  003BAA  6E16               	movwf	MTOUCH_Sensor_isCalibrated@sensor^0,c
  8369  003BAC                     
  8370                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 849: _Bool MTOUCH_Sensor_isCalibrated(enum 
      +                          mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 850: {;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 851:     if(sensor < 5u)
  8371  003BAC  0E05               	movlw	5
  8372  003BAE  6016               	cpfslt	MTOUCH_Sensor_isCalibrated@sensor^0,c
  8373  003BB0  EFDC  F01D         	goto	u5761
  8374  003BB4  EFDE  F01D         	goto	u5760
  8375  003BB8                     u5761:
  8376  003BB8  EFF2  F01D         	goto	l6253
  8377  003BBC                     u5760:
  8378  003BBC                     
  8379                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 852:         return (_Bool)mtouch_sensor[se
      +                          nsor].calibrated;
  8380  003BBC  5016               	movf	MTOUCH_Sensor_isCalibrated@sensor^0,w,c
  8381  003BBE  0D09               	mullw	9
  8382  003BC0  0E9F               	movlw	low (_mtouch_sensor+8)
  8383  003BC2  24F3               	addwf	243,w,c
  8384  003BC4  6ED9               	movwf	fsr2l,c
  8385  003BC6  0E00               	movlw	high (_mtouch_sensor+8)
  8386  003BC8  20F4               	addwfc	prodh,w,c
  8387  003BCA  6EDA               	movwf	fsr2h,c
  8388  003BCC  0100               	movlb	0	; () banked
  8389  003BCE  B6DF               	btfsc	indf2,3,c
  8390  003BD0  EFEC  F01D         	goto	u5771
  8391  003BD4  EFEF  F01D         	goto	u5770
  8392  003BD8                     u5771:
  8393  003BD8  0E01               	movlw	1
  8394  003BDA  EFF0  F01D         	goto	u5776
  8395  003BDE                     u5770:
  8396  003BDE  0E00               	movlw	0
  8397  003BE0                     u5776:
  8398  003BE0  EFF3  F01D         	goto	l334
  8399  003BE4                     l6253:
  8400                           
  8401                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 854:         return 0;
  8402  003BE4  0E00               	movlw	0
  8403  003BE6                     l334:
  8404  003BE6  0012               	return		;funcret
  8405  003BE8                     __end_of_MTOUCH_Sensor_isCalibrated:
  8406                           	callstack 0
  8407                           
  8408 ;; *************** function _Button_State_NotPressed *****************
  8409 ;; Defined at:
  8410 ;;		line 272 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;  button          2   40[COMRAM] PTR struct .
  8413 ;;		 -> mtouch_button(85), 
  8414 ;; Auto vars:     Size  Location     Type
  8415 ;;		None
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  1    wreg      void 
  8418 ;; Registers used:
  8419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/0
  8422 ;;		On exit  : 0/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8425 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8427 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8428 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8429 ;;Total ram usage:        5 bytes
  8430 ;; Hardware stack levels used:    1
  8431 ;; Hardware stack levels required when called:    8
  8432 ;; This function calls:
  8433 ;;		_Button_Baseline_Update
  8434 ;;		_Button_Check_AKS_Block
  8435 ;;		_Button_DefaultCallback
  8436 ;;		_MTOUCH_Button_Initialize
  8437 ;; This function is called by:
  8438 ;;		_Button_Service
  8439 ;; This function uses a non-reentrant model
  8440 ;;
  8441                           
  8442                           	psect	text66
  8443  001528                     __ptext66:
  8444                           	callstack 0
  8445  001528                     _Button_State_NotPressed:
  8446                           	callstack 19
  8447  001528                     
  8448                           ;mcc_generated_files/mtouch/mtouch_button.c: 272: static void Button_State_NotPressed(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 273: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 275:     if ((button->deviation) < (mtouch_button_deviatio
      +                          n_t)(-button->threshold))
  8449  001528  EE20 F00F          	lfsr	2,15
  8450  00152C  5029               	movf	Button_State_NotPressed@button^0,w,c
  8451  00152E  26D9               	addwf	fsr2l,f,c
  8452  001530  502A               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8453  001532  22DA               	addwfc	fsr2h,f,c
  8454  001534  50DF               	movf	indf2,w,c
  8455  001536  0800               	sublw	0
  8456  001538  6E2B               	movwf	??_Button_State_NotPressed^0,c
  8457  00153A  EE20 F00A          	lfsr	2,10
  8458  00153E  5029               	movf	Button_State_NotPressed@button^0,w,c
  8459  001540  26D9               	addwf	fsr2l,f,c
  8460  001542  502A               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8461  001544  22DA               	addwfc	fsr2h,f,c
  8462  001546  50DE               	movf	postinc2,w,c
  8463  001548  0A80               	xorlw	128
  8464  00154A  6E2D               	movwf	(??_Button_State_NotPressed+2)^0,c
  8465  00154C  502B               	movf	??_Button_State_NotPressed^0,w,c
  8466  00154E  0A80               	xorlw	128
  8467  001550  5C2D               	subwf	(??_Button_State_NotPressed+2)^0,w,c
  8468  001552  B0D8               	btfsc	status,0,c
  8469  001554  EFAE  F00A         	goto	u5861
  8470  001558  EFB0  F00A         	goto	u5860
  8471  00155C                     u5861:
  8472  00155C  EFDE  F00A         	goto	l6299
  8473  001560                     u5860:
  8474  001560                     
  8475                           ;mcc_generated_files/mtouch/mtouch_button.c: 276:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 277:         (button->counter)++;
  8476  001560  EE20 F00B          	lfsr	2,11
  8477  001564  5029               	movf	Button_State_NotPressed@button^0,w,c
  8478  001566  26D9               	addwf	fsr2l,f,c
  8479  001568  502A               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8480  00156A  22DA               	addwfc	fsr2h,f,c
  8481  00156C  2ADE               	incf	postinc2,f,c
  8482  00156E  0E00               	movlw	0
  8483  001570  22DD               	addwfc	postdec2,f,c
  8484                           
  8485                           ;mcc_generated_files/mtouch/mtouch_button.c: 278:         if ((button->counter) > (mtouc
      +                          h_button_statecounter_t)((mtouch_button_statecounter_t)64u))
  8486  001572  EE20 F00B          	lfsr	2,11
  8487  001576  5029               	movf	Button_State_NotPressed@button^0,w,c
  8488  001578  26D9               	addwf	fsr2l,f,c
  8489  00157A  502A               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8490  00157C  22DA               	addwfc	fsr2h,f,c
  8491  00157E  0E01               	movlw	1
  8492  001580  50DB               	movf	plusw2,w,c
  8493  001582  E109               	bnz	u5870
  8494  001584  0E41               	movlw	65
  8495  001586  5CDE               	subwf	postinc2,w,c
  8496  001588  A0D8               	btfss	status,0,c
  8497  00158A  EFC9  F00A         	goto	u5871
  8498  00158E  EFCB  F00A         	goto	u5870
  8499  001592                     u5871:
  8500  001592  EF3F  F00B         	goto	l471
  8501  001596                     u5870:
  8502  001596                     
  8503                           ;mcc_generated_files/mtouch/mtouch_button.c: 279:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 280:             button->counter = (mtouch_button_statecounter_t)0;
  8504  001596  EE20 F00B          	lfsr	2,11
  8505  00159A  5029               	movf	Button_State_NotPressed@button^0,w,c
  8506  00159C  26D9               	addwf	fsr2l,f,c
  8507  00159E  502A               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8508  0015A0  22DA               	addwfc	fsr2h,f,c
  8509  0015A2  0E00               	movlw	0
  8510  0015A4  6EDE               	movwf	postinc2,c
  8511  0015A6  0E00               	movlw	0
  8512  0015A8  6EDD               	movwf	postdec2,c
  8513  0015AA                     
  8514                           ;mcc_generated_files/mtouch/mtouch_button.c: 281:             MTOUCH_Button_Initialize(b
      +                          utton->name);
  8515  0015AA  C029  FFD9         	movff	Button_State_NotPressed@button,fsr2l
  8516  0015AE  C02A  FFDA         	movff	Button_State_NotPressed@button+1,fsr2h
  8517  0015B2  50DF               	movf	indf2,w,c
  8518  0015B4  ECC9  F01A         	call	_MTOUCH_Button_Initialize
  8519  0015B8  EF3F  F00B         	goto	l471
  8520  0015BC                     l6299:
  8521  0015BC  EE20 F00A          	lfsr	2,10
  8522  0015C0  5029               	movf	Button_State_NotPressed@button^0,w,c
  8523  0015C2  26D9               	addwf	fsr2l,f,c
  8524  0015C4  502A               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8525  0015C6  22DA               	addwfc	fsr2h,f,c
  8526  0015C8  50DF               	movf	indf2,w,c
  8527  0015CA  6E2B               	movwf	??_Button_State_NotPressed^0,c
  8528  0015CC  EE20 F00F          	lfsr	2,15
  8529  0015D0  5029               	movf	Button_State_NotPressed@button^0,w,c
  8530  0015D2  26D9               	addwf	fsr2l,f,c
  8531  0015D4  502A               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8532  0015D6  22DA               	addwfc	fsr2h,f,c
  8533  0015D8  50DF               	movf	indf2,w,c
  8534  0015DA  6E2C               	movwf	(??_Button_State_NotPressed+1)^0,c
  8535  0015DC  502C               	movf	(??_Button_State_NotPressed+1)^0,w,c
  8536  0015DE  80D8               	bsf	status,0,c
  8537  0015E0  84D8               	bsf	status,2,c
  8538  0015E2  AE2B               	btfss	??_Button_State_NotPressed^0,7,c
  8539  0015E4  5C2B               	subwf	??_Button_State_NotPressed^0,w,c
  8540  0015E6  A0D8               	btfss	status,0,c
  8541  0015E8  84D8               	bsf	status,2,c
  8542  0015EA  B4D8               	btfsc	status,2,c
  8543  0015EC  EFFA  F00A         	goto	u5881
  8544  0015F0  EFFC  F00A         	goto	u5880
  8545  0015F4                     u5881:
  8546  0015F4  EF35  F00B         	goto	l6311
  8547  0015F8                     u5880:
  8548  0015F8                     
  8549                           ;mcc_generated_files/mtouch/mtouch_button.c: 286:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 287:         if(button->aks_group != No_AKS_Group)
  8550  0015F8  EE20 F003          	lfsr	2,3
  8551  0015FC  5029               	movf	Button_State_NotPressed@button^0,w,c
  8552  0015FE  26D9               	addwf	fsr2l,f,c
  8553  001600  502A               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8554  001602  22DA               	addwfc	fsr2h,f,c
  8555  001604  50DF               	movf	indf2,w,c
  8556  001606  B4D8               	btfsc	status,2,c
  8557  001608  EF08  F00B         	goto	u5891
  8558  00160C  EF0A  F00B         	goto	u5890
  8559  001610                     u5891:
  8560  001610  EF1A  F00B         	goto	l6307
  8561  001614                     u5890:
  8562  001614                     
  8563                           ;mcc_generated_files/mtouch/mtouch_button.c: 288:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 289:             if(Button_Check_AKS_Block(button))
  8564  001614  C029  F01E         	movff	Button_State_NotPressed@button,Button_Check_AKS_Block@button
  8565  001618  C02A  F01F         	movff	Button_State_NotPressed@button+1,Button_Check_AKS_Block@button+1
  8566  00161C  EC79  F011         	call	_Button_Check_AKS_Block	;wreg free
  8567  001620  0900               	iorlw	0
  8568  001622  B4D8               	btfsc	status,2,c
  8569  001624  EF16  F00B         	goto	u5901
  8570  001628  EF18  F00B         	goto	u5900
  8571  00162C                     u5901:
  8572  00162C  EF1A  F00B         	goto	l6307
  8573  001630                     u5900:
  8574  001630  EF90  F00B         	goto	l475
  8575  001634                     l6307:
  8576                           
  8577                           ;mcc_generated_files/mtouch/mtouch_button.c: 293:         button->state = MTOUCH_BUTTON_
      +                          STATE_pressed;
  8578  001634  EE20 F002          	lfsr	2,2
  8579  001638  5029               	movf	Button_State_NotPressed@button^0,w,c
  8580  00163A  26D9               	addwf	fsr2l,f,c
  8581  00163C  502A               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8582  00163E  22DA               	addwfc	fsr2h,f,c
  8583  001640  0E02               	movlw	2
  8584  001642  6EDF               	movwf	indf2,c
  8585                           
  8586                           ;mcc_generated_files/mtouch/mtouch_button.c: 294:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  8587  001644  EE20 F00B          	lfsr	2,11
  8588  001648  5029               	movf	Button_State_NotPressed@button^0,w,c
  8589  00164A  26D9               	addwf	fsr2l,f,c
  8590  00164C  502A               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8591  00164E  22DA               	addwfc	fsr2h,f,c
  8592  001650  0E00               	movlw	0
  8593  001652  6EDE               	movwf	postinc2,c
  8594  001654  0E00               	movlw	0
  8595  001656  6EDD               	movwf	postdec2,c
  8596  001658                     
  8597                           ;mcc_generated_files/mtouch/mtouch_button.c: 295:         callback_pressed(button->name)
      +                          ;
  8598  001658  C029  FFD9         	movff	Button_State_NotPressed@button,fsr2l
  8599  00165C  C02A  FFDA         	movff	Button_State_NotPressed@button+1,fsr2h
  8600  001660  50DF               	movf	indf2,w,c
  8601  001662  ECF3  F020         	call	_Button_DefaultCallback
  8602                           
  8603                           ;mcc_generated_files/mtouch/mtouch_button.c: 296:     }
  8604  001666  EF3F  F00B         	goto	l471
  8605  00166A                     l6311:
  8606                           
  8607                           ;mcc_generated_files/mtouch/mtouch_button.c: 298:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 300:         button->counter = (mtouch_button_statecounter_t)0;
  8608  00166A  EE20 F00B          	lfsr	2,11
  8609  00166E  5029               	movf	Button_State_NotPressed@button^0,w,c
  8610  001670  26D9               	addwf	fsr2l,f,c
  8611  001672  502A               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8612  001674  22DA               	addwfc	fsr2h,f,c
  8613  001676  0E00               	movlw	0
  8614  001678  6EDE               	movwf	postinc2,c
  8615  00167A  0E00               	movlw	0
  8616  00167C  6EDD               	movwf	postdec2,c
  8617  00167E                     l471:
  8618                           
  8619                           ;mcc_generated_files/mtouch/mtouch_button.c: 305:     if(button->aks_group != No_AKS_Gro
      +                          up)
  8620  00167E  EE20 F003          	lfsr	2,3
  8621  001682  5029               	movf	Button_State_NotPressed@button^0,w,c
  8622  001684  26D9               	addwf	fsr2l,f,c
  8623  001686  502A               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8624  001688  22DA               	addwfc	fsr2h,f,c
  8625  00168A  50DF               	movf	indf2,w,c
  8626  00168C  B4D8               	btfsc	status,2,c
  8627  00168E  EF4B  F00B         	goto	u5911
  8628  001692  EF4D  F00B         	goto	u5910
  8629  001696                     u5911:
  8630  001696  EF67  F00B         	goto	l6319
  8631  00169A                     u5910:
  8632  00169A                     
  8633                           ;mcc_generated_files/mtouch/mtouch_button.c: 306:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 307:         if(Button_Check_AKS_Block(button))
  8634  00169A  C029  F01E         	movff	Button_State_NotPressed@button,Button_Check_AKS_Block@button
  8635  00169E  C02A  F01F         	movff	Button_State_NotPressed@button+1,Button_Check_AKS_Block@button+1
  8636  0016A2  EC79  F011         	call	_Button_Check_AKS_Block	;wreg free
  8637  0016A6  0900               	iorlw	0
  8638  0016A8  B4D8               	btfsc	status,2,c
  8639  0016AA  EF59  F00B         	goto	u5921
  8640  0016AE  EF5B  F00B         	goto	u5920
  8641  0016B2                     u5921:
  8642  0016B2  EF67  F00B         	goto	l6319
  8643  0016B6                     u5920:
  8644  0016B6                     
  8645                           ;mcc_generated_files/mtouch/mtouch_button.c: 308:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 309:             button->baseline_count = (mtouch_button_baselinecounter
      +                          _t)
  8646  0016B6  EE20 F00D          	lfsr	2,13
  8647  0016BA  5029               	movf	Button_State_NotPressed@button^0,w,c
  8648  0016BC  26D9               	addwf	fsr2l,f,c
  8649  0016BE  502A               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8650  0016C0  22DA               	addwfc	fsr2h,f,c
  8651  0016C2  0EFF               	movlw	255
  8652  0016C4  6EDE               	movwf	postinc2,c
  8653  0016C6  0EFB               	movlw	251
  8654  0016C8  6EDD               	movwf	postdec2,c
  8655  0016CA  EF90  F00B         	goto	l475
  8656  0016CE                     l6319:
  8657                           
  8658                           ;mcc_generated_files/mtouch/mtouch_button.c: 315:     (button->baseline_count)++;
  8659  0016CE  EE20 F00D          	lfsr	2,13
  8660  0016D2  5029               	movf	Button_State_NotPressed@button^0,w,c
  8661  0016D4  26D9               	addwf	fsr2l,f,c
  8662  0016D6  502A               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8663  0016D8  22DA               	addwfc	fsr2h,f,c
  8664  0016DA  2ADE               	incf	postinc2,f,c
  8665  0016DC  0E00               	movlw	0
  8666  0016DE  22DD               	addwfc	postdec2,f,c
  8667                           
  8668                           ;mcc_generated_files/mtouch/mtouch_button.c: 316:     if ((button->baseline_count) == ((
      +                          mtouch_button_baselinecounter_t)64u))
  8669  0016E0  EE20 F00D          	lfsr	2,13
  8670  0016E4  5029               	movf	Button_State_NotPressed@button^0,w,c
  8671  0016E6  26D9               	addwf	fsr2l,f,c
  8672  0016E8  502A               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8673  0016EA  22DA               	addwfc	fsr2h,f,c
  8674  0016EC  0E40               	movlw	64
  8675  0016EE  18DE               	xorwf	postinc2,w,c
  8676  0016F0  10DE               	iorwf	postinc2,w,c
  8677  0016F2  A4D8               	btfss	status,2,c
  8678  0016F4  EF7E  F00B         	goto	u5931
  8679  0016F8  EF80  F00B         	goto	u5930
  8680  0016FC                     u5931:
  8681  0016FC  EF90  F00B         	goto	l475
  8682  001700                     u5930:
  8683  001700                     
  8684                           ;mcc_generated_files/mtouch/mtouch_button.c: 317:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 318:         button->baseline_count = (mtouch_button_baselinecounter_t)0;
  8685  001700  EE20 F00D          	lfsr	2,13
  8686  001704  5029               	movf	Button_State_NotPressed@button^0,w,c
  8687  001706  26D9               	addwf	fsr2l,f,c
  8688  001708  502A               	movf	(Button_State_NotPressed@button+1)^0,w,c
  8689  00170A  22DA               	addwfc	fsr2h,f,c
  8690  00170C  0E00               	movlw	0
  8691  00170E  6EDE               	movwf	postinc2,c
  8692  001710  0E00               	movlw	0
  8693  001712  6EDD               	movwf	postdec2,c
  8694  001714                     
  8695                           ;mcc_generated_files/mtouch/mtouch_button.c: 319:         Button_Baseline_Update(button)
      +                          ;
  8696  001714  C029  F016         	movff	Button_State_NotPressed@button,Button_Baseline_Update@button
  8697  001718  C02A  F017         	movff	Button_State_NotPressed@button+1,Button_Baseline_Update@button+1
  8698  00171C  EC5A  F013         	call	_Button_Baseline_Update	;wreg free
  8699  001720                     l475:
  8700  001720  0012               	return		;funcret
  8701  001722                     __end_of_Button_State_NotPressed:
  8702                           	callstack 0
  8703                           
  8704 ;; *************** function _Button_State_Initializing *****************
  8705 ;; Defined at:
  8706 ;;		line 252 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8707 ;; Parameters:    Size  Location     Type
  8708 ;;  button          2   40[COMRAM] PTR struct .
  8709 ;;		 -> mtouch_button(85), 
  8710 ;; Auto vars:     Size  Location     Type
  8711 ;;		None
  8712 ;; Return value:  Size  Location     Type
  8713 ;;                  1    wreg      void 
  8714 ;; Registers used:
  8715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8716 ;; Tracked objects:
  8717 ;;		On entry : 0/0
  8718 ;;		On exit  : 0/0
  8719 ;;		Unchanged: 0/0
  8720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8721 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8723 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8724 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8725 ;;Total ram usage:        6 bytes
  8726 ;; Hardware stack levels used:    1
  8727 ;; Hardware stack levels required when called:    8
  8728 ;; This function calls:
  8729 ;;		_Button_Baseline_Initialize
  8730 ;;		_Button_Baseline_Update
  8731 ;; This function is called by:
  8732 ;;		_Button_Service
  8733 ;; This function uses a non-reentrant model
  8734 ;;
  8735                           
  8736                           	psect	text67
  8737  002CA0                     __ptext67:
  8738                           	callstack 0
  8739  002CA0                     _Button_State_Initializing:
  8740                           	callstack 19
  8741  002CA0                     
  8742                           ;mcc_generated_files/mtouch/mtouch_button.c: 252: static void Button_State_Initializing(
      +                          mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 253: {;mcc_generate
      +                          d_files/mtouch/mtouch_button.c: 255:     if ((button->counter) <= (mtouch_button_stateco
      +                          unter_t)((mtouch_button_baselinecounter_t)16u)/2)
  8743  002CA0  EE20 F00B          	lfsr	2,11
  8744  002CA4  5029               	movf	Button_State_Initializing@button^0,w,c
  8745  002CA6  26D9               	addwf	fsr2l,f,c
  8746  002CA8  502A               	movf	(Button_State_Initializing@button+1)^0,w,c
  8747  002CAA  22DA               	addwfc	fsr2h,f,c
  8748  002CAC  0E01               	movlw	1
  8749  002CAE  50DB               	movf	plusw2,w,c
  8750  002CB0  E107               	bnz	u5831
  8751  002CB2  0E09               	movlw	9
  8752  002CB4  5CDE               	subwf	postinc2,w,c
  8753  002CB6  B0D8               	btfsc	status,0,c
  8754  002CB8  EF60  F016         	goto	u5831
  8755  002CBC  EF62  F016         	goto	u5830
  8756  002CC0                     u5831:
  8757  002CC0  EF6A  F016         	goto	l6283
  8758  002CC4                     u5830:
  8759  002CC4                     
  8760                           ;mcc_generated_files/mtouch/mtouch_button.c: 256:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 257:         Button_Baseline_Initialize(button);
  8761  002CC4  C029  F019         	movff	Button_State_Initializing@button,Button_Baseline_Initialize@button
  8762  002CC8  C02A  F01A         	movff	Button_State_Initializing@button+1,Button_Baseline_Initialize@button+1
  8763  002CCC  EC99  F01B         	call	_Button_Baseline_Initialize	;wreg free
  8764                           
  8765                           ;mcc_generated_files/mtouch/mtouch_button.c: 258:     } else {
  8766  002CD0  EF70  F016         	goto	l6285
  8767  002CD4                     l6283:
  8768                           
  8769                           ;mcc_generated_files/mtouch/mtouch_button.c: 259:         Button_Baseline_Update(button)
      +                          ;
  8770  002CD4  C029  F016         	movff	Button_State_Initializing@button,Button_Baseline_Update@button
  8771  002CD8  C02A  F017         	movff	Button_State_Initializing@button+1,Button_Baseline_Update@button+1
  8772  002CDC  EC5A  F013         	call	_Button_Baseline_Update	;wreg free
  8773  002CE0                     l6285:
  8774                           
  8775                           ;mcc_generated_files/mtouch/mtouch_button.c: 263:     (button->counter)++;
  8776  002CE0  EE20 F00B          	lfsr	2,11
  8777  002CE4  5029               	movf	Button_State_Initializing@button^0,w,c
  8778  002CE6  26D9               	addwf	fsr2l,f,c
  8779  002CE8  502A               	movf	(Button_State_Initializing@button+1)^0,w,c
  8780  002CEA  22DA               	addwfc	fsr2h,f,c
  8781  002CEC  2ADE               	incf	postinc2,f,c
  8782  002CEE  0E00               	movlw	0
  8783  002CF0  22DD               	addwfc	postdec2,f,c
  8784  002CF2                     
  8785                           ;mcc_generated_files/mtouch/mtouch_button.c: 264:     if ((button->counter) >= (mtouch_b
      +                          utton_statecounter_t)((mtouch_button_baselinecounter_t)16u))
  8786  002CF2  EE20 F00B          	lfsr	2,11
  8787  002CF6  5029               	movf	Button_State_Initializing@button^0,w,c
  8788  002CF8  26D9               	addwf	fsr2l,f,c
  8789  002CFA  502A               	movf	(Button_State_Initializing@button+1)^0,w,c
  8790  002CFC  22DA               	addwfc	fsr2h,f,c
  8791  002CFE  0E01               	movlw	1
  8792  002D00  50DB               	movf	plusw2,w,c
  8793  002D02  E109               	bnz	u5840
  8794  002D04  0E10               	movlw	16
  8795  002D06  5CDE               	subwf	postinc2,w,c
  8796  002D08  A0D8               	btfss	status,0,c
  8797  002D0A  EF89  F016         	goto	u5841
  8798  002D0E  EF8B  F016         	goto	u5840
  8799  002D12                     u5841:
  8800  002D12  EFC0  F016         	goto	l466
  8801  002D16                     u5840:
  8802  002D16                     
  8803                           ;mcc_generated_files/mtouch/mtouch_button.c: 265:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 266:         button->reading = (mtouch_button_reading_t)((button->baseline)>
      +                          >((uint8_t)4u));
  8804  002D16  EE20 F006          	lfsr	2,6
  8805  002D1A  5029               	movf	Button_State_Initializing@button^0,w,c
  8806  002D1C  26D9               	addwf	fsr2l,f,c
  8807  002D1E  502A               	movf	(Button_State_Initializing@button+1)^0,w,c
  8808  002D20  22DA               	addwfc	fsr2h,f,c
  8809  002D22  CFDE F02B          	movff	postinc2,??_Button_State_Initializing
  8810  002D26  CFDE F02C          	movff	postinc2,??_Button_State_Initializing+1
  8811  002D2A  CFDE F02D          	movff	postinc2,??_Button_State_Initializing+2
  8812  002D2E  CFDE F02E          	movff	postinc2,??_Button_State_Initializing+3
  8813  002D32  0E05               	movlw	5
  8814  002D34  EFA1  F016         	goto	u5850
  8815  002D38                     u5855:
  8816  002D38  90D8               	bcf	status,0,c
  8817  002D3A  322E               	rrcf	(??_Button_State_Initializing+3)^0,f,c
  8818  002D3C  322D               	rrcf	(??_Button_State_Initializing+2)^0,f,c
  8819  002D3E  322C               	rrcf	(??_Button_State_Initializing+1)^0,f,c
  8820  002D40  322B               	rrcf	??_Button_State_Initializing^0,f,c
  8821  002D42                     u5850:
  8822  002D42  2EE8               	decfsz	wreg,f,c
  8823  002D44  EF9C  F016         	goto	u5855
  8824  002D48  EE20 F004          	lfsr	2,4
  8825  002D4C  5029               	movf	Button_State_Initializing@button^0,w,c
  8826  002D4E  26D9               	addwf	fsr2l,f,c
  8827  002D50  502A               	movf	(Button_State_Initializing@button+1)^0,w,c
  8828  002D52  22DA               	addwfc	fsr2h,f,c
  8829  002D54  C02B  FFDE         	movff	??_Button_State_Initializing,postinc2
  8830  002D58  C02C  FFDD         	movff	??_Button_State_Initializing+1,postdec2
  8831                           
  8832                           ;mcc_generated_files/mtouch/mtouch_button.c: 267:         button->state = MTOUCH_BUTTON_
      +                          STATE_notPressed;
  8833  002D5C  EE20 F002          	lfsr	2,2
  8834  002D60  5029               	movf	Button_State_Initializing@button^0,w,c
  8835  002D62  26D9               	addwf	fsr2l,f,c
  8836  002D64  502A               	movf	(Button_State_Initializing@button+1)^0,w,c
  8837  002D66  22DA               	addwfc	fsr2h,f,c
  8838  002D68  0E01               	movlw	1
  8839  002D6A  6EDF               	movwf	indf2,c
  8840                           
  8841                           ;mcc_generated_files/mtouch/mtouch_button.c: 268:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  8842  002D6C  EE20 F00B          	lfsr	2,11
  8843  002D70  5029               	movf	Button_State_Initializing@button^0,w,c
  8844  002D72  26D9               	addwf	fsr2l,f,c
  8845  002D74  502A               	movf	(Button_State_Initializing@button+1)^0,w,c
  8846  002D76  22DA               	addwfc	fsr2h,f,c
  8847  002D78  0E00               	movlw	0
  8848  002D7A  6EDE               	movwf	postinc2,c
  8849  002D7C  0E00               	movlw	0
  8850  002D7E  6EDD               	movwf	postdec2,c
  8851  002D80                     l466:
  8852  002D80  0012               	return		;funcret
  8853  002D82                     __end_of_Button_State_Initializing:
  8854                           	callstack 0
  8855                           
  8856 ;; *************** function _Button_State_Pressed *****************
  8857 ;; Defined at:
  8858 ;;		line 323 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8859 ;; Parameters:    Size  Location     Type
  8860 ;;  button          2   40[COMRAM] PTR struct .
  8861 ;;		 -> mtouch_button(85), 
  8862 ;; Auto vars:     Size  Location     Type
  8863 ;;		None
  8864 ;; Return value:  Size  Location     Type
  8865 ;;                  1    wreg      void 
  8866 ;; Registers used:
  8867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8868 ;; Tracked objects:
  8869 ;;		On entry : 0/0
  8870 ;;		On exit  : 0/0
  8871 ;;		Unchanged: 0/0
  8872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8875 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8876 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8877 ;;Total ram usage:        7 bytes
  8878 ;; Hardware stack levels used:    1
  8879 ;; Hardware stack levels required when called:    8
  8880 ;; This function calls:
  8881 ;;		_Button_DefaultCallback
  8882 ;;		_MTOUCH_Button_Initialize
  8883 ;;		_ProcessButtonRelease
  8884 ;; This function is called by:
  8885 ;;		_Button_Service
  8886 ;; This function uses a non-reentrant model
  8887 ;;
  8888                           
  8889                           	psect	text68
  8890  0027C4                     __ptext68:
  8891                           	callstack 0
  8892  0027C4                     _Button_State_Pressed:
  8893                           	callstack 19
  8894  0027C4                     
  8895                           ;mcc_generated_files/mtouch/mtouch_button.c: 323: static void Button_State_Pressed(mtouc
      +                          h_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 324: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 326:     if ((button->counter) >= ((mtouch_button_statecounte
      +                          r_t)1000u))
  8896  0027C4  EE20 F00B          	lfsr	2,11
  8897  0027C8  5029               	movf	Button_State_Pressed@button^0,w,c
  8898  0027CA  26D9               	addwf	fsr2l,f,c
  8899  0027CC  502A               	movf	(Button_State_Pressed@button+1)^0,w,c
  8900  0027CE  22DA               	addwfc	fsr2h,f,c
  8901  0027D0  0EE8               	movlw	232
  8902  0027D2  5CDE               	subwf	postinc2,w,c
  8903  0027D4  0E03               	movlw	3
  8904  0027D6  58DE               	subwfb	postinc2,w,c
  8905  0027D8  A0D8               	btfss	status,0,c
  8906  0027DA  EFF1  F013         	goto	u5941
  8907  0027DE  EFF3  F013         	goto	u5940
  8908  0027E2                     u5941:
  8909  0027E2  EF0F  F014         	goto	l6331
  8910  0027E6                     u5940:
  8911  0027E6                     
  8912                           ;mcc_generated_files/mtouch/mtouch_button.c: 327:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 328:         MTOUCH_Button_Initialize(button->name);
  8913  0027E6  C029  FFD9         	movff	Button_State_Pressed@button,fsr2l
  8914  0027EA  C02A  FFDA         	movff	Button_State_Pressed@button+1,fsr2h
  8915  0027EE  50DF               	movf	indf2,w,c
  8916  0027F0  ECC9  F01A         	call	_MTOUCH_Button_Initialize
  8917  0027F4                     
  8918                           ;mcc_generated_files/mtouch/mtouch_button.c: 329:         callback_notPressed(button->na
      +                          me);
  8919  0027F4  D802               	call	u5958
  8920  0027F6  EF0D  F014         	goto	u5959
  8921  0027FA                     u5958:
  8922  0027FA  0005               	push	
  8923  0027FC  6EFA               	movwf	pclath,c
  8924  0027FE  0100               	movlb	0	; () banked
  8925  002800  51D6               	movf	_callback_notPressed& (0+255),w,b
  8926  002802  6EFD               	movwf	tosl,c
  8927  002804  51D7               	movf	(_callback_notPressed+1)& (0+255),w,b
  8928  002806  6EFE               	movwf	tosh,c
  8929  002808  51D8               	movf	(_callback_notPressed+2)& (0+255),w,b
  8930  00280A  6EFF               	movwf	tosu,c
  8931  00280C  50FA               	movf	pclath,w,c
  8932  00280E  C029  FFD9         	movff	Button_State_Pressed@button,fsr2l
  8933  002812  C02A  FFDA         	movff	Button_State_Pressed@button+1,fsr2h
  8934  002816  50DF               	movf	indf2,w,c
  8935  002818  0012               	return		;indir
  8936  00281A                     u5959:
  8937                           
  8938                           ;mcc_generated_files/mtouch/mtouch_button.c: 330:     }
  8939  00281A  EF66  F014         	goto	l485
  8940  00281E                     l6331:
  8941  00281E  EE20 F00F          	lfsr	2,15
  8942  002822  5029               	movf	Button_State_Pressed@button^0,w,c
  8943  002824  26D9               	addwf	fsr2l,f,c
  8944  002826  502A               	movf	(Button_State_Pressed@button+1)^0,w,c
  8945  002828  22DA               	addwfc	fsr2h,f,c
  8946  00282A  50DF               	movf	indf2,w,c
  8947  00282C  6E2B               	movwf	??_Button_State_Pressed^0,c
  8948  00282E  90D8               	bcf	status,0,c
  8949  002830  322B               	rrcf	??_Button_State_Pressed^0,f,c
  8950  002832  EE20 F00F          	lfsr	2,15
  8951  002836  5029               	movf	Button_State_Pressed@button^0,w,c
  8952  002838  26D9               	addwf	fsr2l,f,c
  8953  00283A  502A               	movf	(Button_State_Pressed@button+1)^0,w,c
  8954  00283C  22DA               	addwfc	fsr2h,f,c
  8955  00283E  50DF               	movf	indf2,w,c
  8956  002840  6E2C               	movwf	(??_Button_State_Pressed+1)^0,c
  8957  002842  502B               	movf	??_Button_State_Pressed^0,w,c
  8958  002844  5C2C               	subwf	(??_Button_State_Pressed+1)^0,w,c
  8959  002846  6E2D               	movwf	(??_Button_State_Pressed+2)^0,c
  8960  002848  EE20 F00A          	lfsr	2,10
  8961  00284C  5029               	movf	Button_State_Pressed@button^0,w,c
  8962  00284E  26D9               	addwf	fsr2l,f,c
  8963  002850  502A               	movf	(Button_State_Pressed@button+1)^0,w,c
  8964  002852  22DA               	addwfc	fsr2h,f,c
  8965  002854  50DE               	movf	postinc2,w,c
  8966  002856  0A80               	xorlw	128
  8967  002858  6E2F               	movwf	(??_Button_State_Pressed+4)^0,c
  8968  00285A  502D               	movf	(??_Button_State_Pressed+2)^0,w,c
  8969  00285C  0A80               	xorlw	128
  8970  00285E  5C2F               	subwf	(??_Button_State_Pressed+4)^0,w,c
  8971  002860  B0D8               	btfsc	status,0,c
  8972  002862  EF35  F014         	goto	u5961
  8973  002866  EF37  F014         	goto	u5960
  8974  00286A                     u5961:
  8975  00286A  EF66  F014         	goto	l485
  8976  00286E                     u5960:
  8977  00286E                     
  8978                           ;mcc_generated_files/mtouch/mtouch_button.c: 334:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 335:         button->state = MTOUCH_BUTTON_STATE_notPressed;
  8979  00286E  EE20 F002          	lfsr	2,2
  8980  002872  5029               	movf	Button_State_Pressed@button^0,w,c
  8981  002874  26D9               	addwf	fsr2l,f,c
  8982  002876  502A               	movf	(Button_State_Pressed@button+1)^0,w,c
  8983  002878  22DA               	addwfc	fsr2h,f,c
  8984  00287A  0E01               	movlw	1
  8985  00287C  6EDF               	movwf	indf2,c
  8986                           
  8987                           ;mcc_generated_files/mtouch/mtouch_button.c: 336:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  8988  00287E  EE20 F00B          	lfsr	2,11
  8989  002882  5029               	movf	Button_State_Pressed@button^0,w,c
  8990  002884  26D9               	addwf	fsr2l,f,c
  8991  002886  502A               	movf	(Button_State_Pressed@button+1)^0,w,c
  8992  002888  22DA               	addwfc	fsr2h,f,c
  8993  00288A  0E00               	movlw	0
  8994  00288C  6EDE               	movwf	postinc2,c
  8995  00288E  0E00               	movlw	0
  8996  002890  6EDD               	movwf	postdec2,c
  8997                           
  8998                           ;mcc_generated_files/mtouch/mtouch_button.c: 337:         button->baseline_count = (mtou
      +                          ch_button_baselinecounter_t)((0xffff))-((mtouch_button_baselinecounter_t)1024u);
  8999  002892  EE20 F00D          	lfsr	2,13
  9000  002896  5029               	movf	Button_State_Pressed@button^0,w,c
  9001  002898  26D9               	addwf	fsr2l,f,c
  9002  00289A  502A               	movf	(Button_State_Pressed@button+1)^0,w,c
  9003  00289C  22DA               	addwfc	fsr2h,f,c
  9004  00289E  0EFF               	movlw	255
  9005  0028A0  6EDE               	movwf	postinc2,c
  9006  0028A2  0EFB               	movlw	251
  9007  0028A4  6EDD               	movwf	postdec2,c
  9008  0028A6                     
  9009                           ;mcc_generated_files/mtouch/mtouch_button.c: 338:         callback_notPressed(button->na
      +                          me);
  9010  0028A6  D802               	call	u5978
  9011  0028A8  EF66  F014         	goto	u5979
  9012  0028AC                     u5978:
  9013  0028AC  0005               	push	
  9014  0028AE  6EFA               	movwf	pclath,c
  9015  0028B0  0100               	movlb	0	; () banked
  9016  0028B2  51D6               	movf	_callback_notPressed& (0+255),w,b
  9017  0028B4  6EFD               	movwf	tosl,c
  9018  0028B6  51D7               	movf	(_callback_notPressed+1)& (0+255),w,b
  9019  0028B8  6EFE               	movwf	tosh,c
  9020  0028BA  51D8               	movf	(_callback_notPressed+2)& (0+255),w,b
  9021  0028BC  6EFF               	movwf	tosu,c
  9022  0028BE  50FA               	movf	pclath,w,c
  9023  0028C0  C029  FFD9         	movff	Button_State_Pressed@button,fsr2l
  9024  0028C4  C02A  FFDA         	movff	Button_State_Pressed@button+1,fsr2h
  9025  0028C8  50DF               	movf	indf2,w,c
  9026  0028CA  0012               	return		;indir
  9027  0028CC                     u5979:
  9028  0028CC                     l485:
  9029  0028CC  0012               	return		;funcret
  9030  0028CE                     __end_of_Button_State_Pressed:
  9031                           	callstack 0
  9032                           
  9033 ;; *************** function _Button_DefaultCallback *****************
  9034 ;; Defined at:
  9035 ;;		line 618 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9036 ;; Parameters:    Size  Location     Type
  9037 ;;  button          1    wreg     enum E12909
  9038 ;; Auto vars:     Size  Location     Type
  9039 ;;  button          1    0[COMRAM] enum E12909
  9040 ;; Return value:  Size  Location     Type
  9041 ;;                  1    wreg      void 
  9042 ;; Registers used:
  9043 ;;		wreg
  9044 ;; Tracked objects:
  9045 ;;		On entry : 0/0
  9046 ;;		On exit  : 0/0
  9047 ;;		Unchanged: 0/0
  9048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9053 ;;Total ram usage:        0 bytes
  9054 ;; Hardware stack levels used:    1
  9055 ;; Hardware stack levels required when called:    6
  9056 ;; This function calls:
  9057 ;;		Nothing
  9058 ;; This function is called by:
  9059 ;;		_Button_State_NotPressed
  9060 ;;		_Button_State_Pressed
  9061 ;; This function uses a non-reentrant model
  9062 ;;
  9063                           
  9064                           	psect	text69
  9065  0041E6                     __ptext69:
  9066                           	callstack 0
  9067  0041E6                     _Button_DefaultCallback:
  9068                           	callstack 20
  9069  0041E6  0012               	return		;funcret
  9070  0041E8                     __end_of_Button_DefaultCallback:
  9071                           	callstack 0
  9072                           
  9073 ;; *************** function _ProcessButtonRelease *****************
  9074 ;; Defined at:
  9075 ;;		line 122 in file "application.c"
  9076 ;; Parameters:    Size  Location     Type
  9077 ;;  button          1    wreg     enum E12873
  9078 ;; Auto vars:     Size  Location     Type
  9079 ;;  button          1   23[COMRAM] enum E12873
  9080 ;; Return value:  Size  Location     Type
  9081 ;;                  1    wreg      void 
  9082 ;; Registers used:
  9083 ;;		wreg, status,2, status,0
  9084 ;; Tracked objects:
  9085 ;;		On entry : 0/0
  9086 ;;		On exit  : 0/0
  9087 ;;		Unchanged: 0/0
  9088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9090 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9091 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9092 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9093 ;;Total ram usage:        3 bytes
  9094 ;; Hardware stack levels used:    1
  9095 ;; Hardware stack levels required when called:    6
  9096 ;; This function calls:
  9097 ;;		Nothing
  9098 ;; This function is called by:
  9099 ;;		_main
  9100 ;;		_Button_State_Pressed
  9101 ;; This function uses a non-reentrant model
  9102 ;;
  9103                           
  9104                           	psect	text70
  9105  003A20                     __ptext70:
  9106                           	callstack 0
  9107  003A20                     _ProcessButtonRelease:
  9108                           	callstack 20
  9109                           
  9110                           ;incstack = 0
  9111                           ;ProcessButtonRelease@button stored from wreg
  9112  003A20  6E18               	movwf	ProcessButtonRelease@button^0,c
  9113  003A22                     
  9114                           ;application.c: 122: void ProcessButtonRelease(enum mtouch_button_names button);applicat
      +                          ion.c: 123: {;application.c: 124:     switch (button)
  9115  003A22  EF21  F01D         	goto	l6175
  9116  003A26                     l6169:
  9117                           
  9118                           ;application.c: 127:         BUTTON.key = BUTTON1;
  9119  003A26  0E01               	movlw	1
  9120  003A28  0100               	movlb	0	; () banked
  9121  003A2A  6F8D               	movwf	_BUTTON& (0+255),b
  9122                           
  9123                           ;application.c: 128:         BUTTON.keyStatus = KEY_RELEASED;
  9124  003A2C  0E02               	movlw	2
  9125  003A2E  6F8E               	movwf	(_BUTTON+1)& (0+255),b
  9126                           
  9127                           ;application.c: 129:         break;
  9128  003A30  EF36  F01D         	goto	l1336
  9129  003A34                     l6171:
  9130                           
  9131                           ;application.c: 132:         BUTTON.key = BUTTON2;
  9132  003A34  0E02               	movlw	2
  9133  003A36  0100               	movlb	0	; () banked
  9134  003A38  6F8D               	movwf	_BUTTON& (0+255),b
  9135                           
  9136                           ;application.c: 133:         BUTTON.keyStatus = KEY_RELEASED;
  9137  003A3A  0E02               	movlw	2
  9138  003A3C  6F8E               	movwf	(_BUTTON+1)& (0+255),b
  9139                           
  9140                           ;application.c: 134:         break;
  9141  003A3E  EF36  F01D         	goto	l1336
  9142  003A42                     l6175:
  9143  003A42  5018               	movf	ProcessButtonRelease@button^0,w,c
  9144  003A44  6E16               	movwf	??_ProcessButtonRelease^0,c
  9145  003A46  6A17               	clrf	(??_ProcessButtonRelease+1)^0,c
  9146                           
  9147                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9148                           ; Switch size 1, requested type "simple"
  9149                           ; Number of cases is 1, Range of values is 0 to 0
  9150                           ; switch strategies available:
  9151                           ; Name         Instructions Cycles
  9152                           ; simple_byte            4     3 (average)
  9153                           ;	Chosen strategy is simple_byte
  9154  003A48  5017               	movf	(??_ProcessButtonRelease+1)^0,w,c
  9155  003A4A  0A00               	xorlw	0	; case 0
  9156  003A4C  B4D8               	btfsc	status,2,c
  9157  003A4E  EF2B  F01D         	goto	l6721
  9158  003A52  EF36  F01D         	goto	l1336
  9159  003A56                     l6721:
  9160                           
  9161                           ; Switch size 1, requested type "simple"
  9162                           ; Number of cases is 2, Range of values is 0 to 1
  9163                           ; switch strategies available:
  9164                           ; Name         Instructions Cycles
  9165                           ; simple_byte            7     4 (average)
  9166                           ;	Chosen strategy is simple_byte
  9167  003A56  5016               	movf	??_ProcessButtonRelease^0,w,c
  9168  003A58  0A00               	xorlw	0	; case 0
  9169  003A5A  B4D8               	btfsc	status,2,c
  9170  003A5C  EF13  F01D         	goto	l6169
  9171  003A60  0A01               	xorlw	1	; case 1
  9172  003A62  B4D8               	btfsc	status,2,c
  9173  003A64  EF1A  F01D         	goto	l6171
  9174  003A68  EF36  F01D         	goto	l1336
  9175  003A6C                     l1336:
  9176  003A6C  0012               	return		;funcret
  9177  003A6E                     __end_of_ProcessButtonRelease:
  9178                           	callstack 0
  9179                           
  9180 ;; *************** function _MTOUCH_Button_Initialize *****************
  9181 ;; Defined at:
  9182 ;;		line 194 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9183 ;; Parameters:    Size  Location     Type
  9184 ;;  name            1    wreg     enum E12909
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;  name            1   22[COMRAM] enum E12909
  9187 ;;  button          2   23[COMRAM] PTR struct .
  9188 ;;		 -> mtouch_button(85), 
  9189 ;; Return value:  Size  Location     Type
  9190 ;;                  1    wreg      void 
  9191 ;; Registers used:
  9192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9193 ;; Tracked objects:
  9194 ;;		On entry : 0/0
  9195 ;;		On exit  : 0/0
  9196 ;;		Unchanged: 0/0
  9197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9199 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9201 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9202 ;;Total ram usage:        3 bytes
  9203 ;; Hardware stack levels used:    1
  9204 ;; Hardware stack levels required when called:    7
  9205 ;; This function calls:
  9206 ;;		_MTOUCH_Sensor_Calibrate
  9207 ;; This function is called by:
  9208 ;;		_MTOUCH_Button_InitializeAll
  9209 ;;		_Button_Service
  9210 ;;		_Button_State_NotPressed
  9211 ;;		_Button_State_Pressed
  9212 ;; This function uses a non-reentrant model
  9213 ;;
  9214                           
  9215                           	psect	text71
  9216  003592                     __ptext71:
  9217                           	callstack 0
  9218  003592                     _MTOUCH_Button_Initialize:
  9219                           	callstack 20
  9220                           
  9221                           ;incstack = 0
  9222                           ;MTOUCH_Button_Initialize@name stored from wreg
  9223  003592  6E17               	movwf	MTOUCH_Button_Initialize@name^0,c
  9224  003594                     
  9225                           ;mcc_generated_files/mtouch/mtouch_button.c: 194: void MTOUCH_Button_Initialize(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 195: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 196:     mtouch_button_t* button = &mtouch_button[name];
  9226  003594  5017               	movf	MTOUCH_Button_Initialize@name^0,w,c
  9227  003596  0D11               	mullw	17
  9228  003598  0E00               	movlw	low _mtouch_button
  9229  00359A  24F3               	addwf	243,w,c
  9230  00359C  6E18               	movwf	MTOUCH_Button_Initialize@button^0,c
  9231  00359E  0E01               	movlw	high _mtouch_button
  9232  0035A0  20F4               	addwfc	prodh,w,c
  9233  0035A2  6E19               	movwf	(MTOUCH_Button_Initialize@button+1)^0,c
  9234  0035A4                     
  9235                           ;mcc_generated_files/mtouch/mtouch_button.c: 198:     button->state = MTOUCH_BUTTON_STAT
      +                          E_initializing;
  9236  0035A4  EE20 F002          	lfsr	2,2
  9237  0035A8  5018               	movf	MTOUCH_Button_Initialize@button^0,w,c
  9238  0035AA  26D9               	addwf	fsr2l,f,c
  9239  0035AC  5019               	movf	(MTOUCH_Button_Initialize@button+1)^0,w,c
  9240  0035AE  22DA               	addwfc	fsr2h,f,c
  9241  0035B0  0E00               	movlw	0
  9242  0035B2  6EDF               	movwf	indf2,c
  9243  0035B4                     
  9244                           ;mcc_generated_files/mtouch/mtouch_button.c: 199:     button->baseline = (mtouch_button_
      +                          baseline_t)0;
  9245  0035B4  EE20 F006          	lfsr	2,6
  9246  0035B8  5018               	movf	MTOUCH_Button_Initialize@button^0,w,c
  9247  0035BA  26D9               	addwf	fsr2l,f,c
  9248  0035BC  5019               	movf	(MTOUCH_Button_Initialize@button+1)^0,w,c
  9249  0035BE  22DA               	addwfc	fsr2h,f,c
  9250  0035C0  6ADE               	clrf	postinc2,c
  9251  0035C2  6ADE               	clrf	postinc2,c
  9252  0035C4  6ADE               	clrf	postinc2,c
  9253  0035C6  6ADD               	clrf	postdec2,c
  9254  0035C8                     
  9255                           ;mcc_generated_files/mtouch/mtouch_button.c: 200:     button->counter = (mtouch_button_s
      +                          tatecounter_t)0;
  9256  0035C8  EE20 F00B          	lfsr	2,11
  9257  0035CC  5018               	movf	MTOUCH_Button_Initialize@button^0,w,c
  9258  0035CE  26D9               	addwf	fsr2l,f,c
  9259  0035D0  5019               	movf	(MTOUCH_Button_Initialize@button+1)^0,w,c
  9260  0035D2  22DA               	addwfc	fsr2h,f,c
  9261  0035D4  0E00               	movlw	0
  9262  0035D6  6EDE               	movwf	postinc2,c
  9263  0035D8  0E00               	movlw	0
  9264  0035DA  6EDD               	movwf	postdec2,c
  9265  0035DC                     
  9266                           ;mcc_generated_files/mtouch/mtouch_button.c: 201:     button->baseline_count = (mtouch_b
      +                          utton_baselinecounter_t)0;
  9267  0035DC  EE20 F00D          	lfsr	2,13
  9268  0035E0  5018               	movf	MTOUCH_Button_Initialize@button^0,w,c
  9269  0035E2  26D9               	addwf	fsr2l,f,c
  9270  0035E4  5019               	movf	(MTOUCH_Button_Initialize@button+1)^0,w,c
  9271  0035E6  22DA               	addwfc	fsr2h,f,c
  9272  0035E8  0E00               	movlw	0
  9273  0035EA  6EDE               	movwf	postinc2,c
  9274  0035EC  0E00               	movlw	0
  9275  0035EE  6EDD               	movwf	postdec2,c
  9276  0035F0                     
  9277                           ;mcc_generated_files/mtouch/mtouch_button.c: 203:     MTOUCH_Sensor_Calibrate(button->se
      +                          nsor);
  9278  0035F0  EE20 F001          	lfsr	2,1
  9279  0035F4  5018               	movf	MTOUCH_Button_Initialize@button^0,w,c
  9280  0035F6  26D9               	addwf	fsr2l,f,c
  9281  0035F8  5019               	movf	(MTOUCH_Button_Initialize@button+1)^0,w,c
  9282  0035FA  22DA               	addwfc	fsr2h,f,c
  9283  0035FC  50DF               	movf	indf2,w,c
  9284  0035FE  EC91  F01F         	call	_MTOUCH_Sensor_Calibrate
  9285  003602  0012               	return		;funcret
  9286  003604                     __end_of_MTOUCH_Button_Initialize:
  9287                           	callstack 0
  9288                           
  9289 ;; *************** function _MTOUCH_Sensor_Calibrate *****************
  9290 ;; Defined at:
  9291 ;;		line 841 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9292 ;; Parameters:    Size  Location     Type
  9293 ;;  sensor          1    wreg     enum E12845
  9294 ;; Auto vars:     Size  Location     Type
  9295 ;;  sensor          1   21[COMRAM] enum E12845
  9296 ;; Return value:  Size  Location     Type
  9297 ;;                  1    wreg      void 
  9298 ;; Registers used:
  9299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9300 ;; Tracked objects:
  9301 ;;		On entry : 0/0
  9302 ;;		On exit  : 0/0
  9303 ;;		Unchanged: 0/0
  9304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9306 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9308 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9309 ;;Total ram usage:        1 bytes
  9310 ;; Hardware stack levels used:    1
  9311 ;; Hardware stack levels required when called:    6
  9312 ;; This function calls:
  9313 ;;		Nothing
  9314 ;; This function is called by:
  9315 ;;		_MTOUCH_Sensor_Initialize
  9316 ;;		_MTOUCH_Button_Initialize
  9317 ;; This function uses a non-reentrant model
  9318 ;;
  9319                           
  9320                           	psect	text72
  9321  003F22                     __ptext72:
  9322                           	callstack 0
  9323  003F22                     _MTOUCH_Sensor_Calibrate:
  9324                           	callstack 20
  9325                           
  9326                           ;incstack = 0
  9327                           ;MTOUCH_Sensor_Calibrate@sensor stored from wreg
  9328  003F22  6E16               	movwf	MTOUCH_Sensor_Calibrate@sensor^0,c
  9329  003F24                     
  9330                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 841: void MTOUCH_Sensor_Calibrate(enum mtou
      +                          ch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 842: {;mcc_generated
      +                          _files/mtouch/mtouch_sensor.c: 843:     if(sensor < 5u)
  9331  003F24  0E05               	movlw	5
  9332  003F26  6016               	cpfslt	MTOUCH_Sensor_Calibrate@sensor^0,c
  9333  003F28  EF98  F01F         	goto	u5081
  9334  003F2C  EF9A  F01F         	goto	u5080
  9335  003F30                     u5081:
  9336  003F30  EFA4  F01F         	goto	l330
  9337  003F34                     u5080:
  9338  003F34                     
  9339                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 844:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 845:         mtouch_sensor[sensor].calibrated = 0;
  9340  003F34  5016               	movf	MTOUCH_Sensor_Calibrate@sensor^0,w,c
  9341  003F36  0D09               	mullw	9
  9342  003F38  0E9F               	movlw	low (_mtouch_sensor+8)
  9343  003F3A  24F3               	addwf	243,w,c
  9344  003F3C  6ED9               	movwf	fsr2l,c
  9345  003F3E  0E00               	movlw	high (_mtouch_sensor+8)
  9346  003F40  20F4               	addwfc	prodh,w,c
  9347  003F42  6EDA               	movwf	fsr2h,c
  9348  003F44  0100               	movlb	0	; () banked
  9349  003F46  96DF               	bcf	indf2,3,c
  9350  003F48                     l330:
  9351  003F48  0012               	return		;funcret
  9352  003F4A                     __end_of_MTOUCH_Sensor_Calibrate:
  9353                           	callstack 0
  9354                           
  9355 ;; *************** function _Button_Check_AKS_Block *****************
  9356 ;; Defined at:
  9357 ;;		line 578 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;  button          2   29[COMRAM] PTR struct .
  9360 ;;		 -> mtouch_button(85), 
  9361 ;; Auto vars:     Size  Location     Type
  9362 ;;  check_button    2   38[COMRAM] PTR struct .
  9363 ;;		 -> mtouch_button(85), 
  9364 ;;  surplus_devi    2   36[COMRAM] short 
  9365 ;;  surplus_devi    2   33[COMRAM] short 
  9366 ;;  currentAKSGr    1   35[COMRAM] enum E13191
  9367 ;; Return value:  Size  Location     Type
  9368 ;;                  1    wreg      _Bool 
  9369 ;; Registers used:
  9370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9371 ;; Tracked objects:
  9372 ;;		On entry : 0/0
  9373 ;;		On exit  : 0/0
  9374 ;;		Unchanged: 0/0
  9375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9376 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9377 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9378 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9379 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9380 ;;Total ram usage:       11 bytes
  9381 ;; Hardware stack levels used:    1
  9382 ;; Hardware stack levels required when called:    7
  9383 ;; This function calls:
  9384 ;;		_Button_Unscaled_Deviation_Get
  9385 ;; This function is called by:
  9386 ;;		_Button_State_NotPressed
  9387 ;; This function uses a non-reentrant model
  9388 ;;
  9389                           
  9390                           	psect	text73
  9391  0022F2                     __ptext73:
  9392                           	callstack 0
  9393  0022F2                     _Button_Check_AKS_Block:
  9394                           	callstack 19
  9395  0022F2                     
  9396                           ;mcc_generated_files/mtouch/mtouch_button.c: 578: static _Bool Button_Check_AKS_Block(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 579: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 580:     enum mtouch_button_aks_group currentAKSGroup = bu
      +                          tton->aks_group;
  9397  0022F2  EE20 F003          	lfsr	2,3
  9398  0022F6  501E               	movf	Button_Check_AKS_Block@button^0,w,c
  9399  0022F8  26D9               	addwf	fsr2l,f,c
  9400  0022FA  501F               	movf	(Button_Check_AKS_Block@button+1)^0,w,c
  9401  0022FC  22DA               	addwfc	fsr2h,f,c
  9402  0022FE  50DF               	movf	indf2,w,c
  9403  002300  6E24               	movwf	Button_Check_AKS_Block@currentAKSGroup^0,c
  9404  002302                     
  9405                           ;mcc_generated_files/mtouch/mtouch_button.c: 581:     int16_t surplus_deviation_this_but
      +                          ton,surplus_deviation_check_button;;mcc_generated_files/mtouch/mtouch_button.c: 582:    
      +                           mtouch_button_t* check_button;;mcc_generated_files/mtouch/mtouch_button.c: 584:     sur
      +                          plus_deviation_this_button = (int16_t)(Button_Unscaled_Deviation_Get(button) - (mtouch_b
      +                          utton_reading_t)button->threshold);
  9406  002302  C01E  F016         	movff	Button_Check_AKS_Block@button,Button_Unscaled_Deviation_Get@button
  9407  002306  C01F  F017         	movff	Button_Check_AKS_Block@button+1,Button_Unscaled_Deviation_Get@button+1
  9408  00230A  EC1E  F01C         	call	_Button_Unscaled_Deviation_Get	;wreg free
  9409  00230E  EE20 F00F          	lfsr	2,15
  9410  002312  501E               	movf	Button_Check_AKS_Block@button^0,w,c
  9411  002314  26D9               	addwf	fsr2l,f,c
  9412  002316  501F               	movf	(Button_Check_AKS_Block@button+1)^0,w,c
  9413  002318  22DA               	addwfc	fsr2h,f,c
  9414  00231A  50DF               	movf	indf2,w,c
  9415  00231C  6E20               	movwf	??_Button_Check_AKS_Block^0,c
  9416  00231E  5020               	movf	??_Button_Check_AKS_Block^0,w,c
  9417  002320  5C16               	subwf	?_Button_Unscaled_Deviation_Get^0,w,c
  9418  002322  6E22               	movwf	Button_Check_AKS_Block@surplus_deviation_this_button^0,c
  9419  002324  5017               	movf	(?_Button_Unscaled_Deviation_Get+1)^0,w,c
  9420  002326  A0D8               	btfss	status,0,c
  9421  002328  0417               	decf	(?_Button_Unscaled_Deviation_Get+1)^0,w,c
  9422  00232A  6E23               	movwf	(Button_Check_AKS_Block@surplus_deviation_this_button+1)^0,c
  9423  00232C                     
  9424                           ;mcc_generated_files/mtouch/mtouch_button.c: 586:     for(check_button = &mtouch_button[
      +                          0];check_button <= &mtouch_button[5u -1];check_button++)
  9425  00232C  0E00               	movlw	low _mtouch_button
  9426  00232E  6E27               	movwf	Button_Check_AKS_Block@check_button^0,c
  9427  002330  0E01               	movlw	high _mtouch_button
  9428  002332  6E28               	movwf	(Button_Check_AKS_Block@check_button+1)^0,c
  9429  002334  5028               	movf	(Button_Check_AKS_Block@check_button+1)^0,w,c
  9430  002336  0801               	sublw	high (_mtouch_button+68)
  9431  002338  E102               	bnz	u5255
  9432  00233A  5027               	movf	Button_Check_AKS_Block@check_button^0,w,c
  9433  00233C  0844               	sublw	low (_mtouch_button+68)
  9434  00233E                     u5255:
  9435  00233E  B0D8               	btfsc	status,0,c
  9436  002340  EFA4  F011         	goto	u5251
  9437  002344  EFA6  F011         	goto	u5250
  9438  002348                     u5251:
  9439  002348  EFA8  F011         	goto	l5951
  9440  00234C                     u5250:
  9441  00234C  EF1F  F012         	goto	l5977
  9442  002350                     l5951:
  9443                           
  9444                           ;mcc_generated_files/mtouch/mtouch_button.c: 587:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 588:         if(check_button->name == button->name)
  9445  002350  C01E  FFD9         	movff	Button_Check_AKS_Block@button,fsr2l
  9446  002354  C01F  FFDA         	movff	Button_Check_AKS_Block@button+1,fsr2h
  9447  002358  C027  FFE1         	movff	Button_Check_AKS_Block@check_button,fsr1l
  9448  00235C  C028  FFE2         	movff	Button_Check_AKS_Block@check_button+1,fsr1h
  9449  002360  50DE               	movf	postinc2,w,c
  9450  002362  18E6               	xorwf	postinc1,w,c
  9451  002364  A4D8               	btfss	status,2,c
  9452  002366  EFB7  F011         	goto	u5261
  9453  00236A  EFB9  F011         	goto	u5260
  9454  00236E                     u5261:
  9455  00236E  EFBB  F011         	goto	l5955
  9456  002372                     u5260:
  9457  002372  EF0F  F012         	goto	l5975
  9458  002376                     l5955:
  9459                           
  9460                           ;mcc_generated_files/mtouch/mtouch_button.c: 593:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 594:             if(check_button->aks_group == currentAKSGroup)
  9461  002376  EE20 F003          	lfsr	2,3
  9462  00237A  5027               	movf	Button_Check_AKS_Block@check_button^0,w,c
  9463  00237C  26D9               	addwf	fsr2l,f,c
  9464  00237E  5028               	movf	(Button_Check_AKS_Block@check_button+1)^0,w,c
  9465  002380  22DA               	addwfc	fsr2h,f,c
  9466  002382  5024               	movf	Button_Check_AKS_Block@currentAKSGroup^0,w,c
  9467  002384  18DE               	xorwf	postinc2,w,c
  9468  002386  A4D8               	btfss	status,2,c
  9469  002388  EFC8  F011         	goto	u5271
  9470  00238C  EFCA  F011         	goto	u5270
  9471  002390                     u5271:
  9472  002390  EF0F  F012         	goto	l5975
  9473  002394                     u5270:
  9474  002394                     
  9475                           ;mcc_generated_files/mtouch/mtouch_button.c: 595:             {;mcc_generated_files/mtou
      +                          ch/mtouch_button.c: 596:                 if(check_button->state == MTOUCH_BUTTON_STATE_p
      +                          ressed)
  9476  002394  EE20 F002          	lfsr	2,2
  9477  002398  5027               	movf	Button_Check_AKS_Block@check_button^0,w,c
  9478  00239A  26D9               	addwf	fsr2l,f,c
  9479  00239C  5028               	movf	(Button_Check_AKS_Block@check_button+1)^0,w,c
  9480  00239E  22DA               	addwfc	fsr2h,f,c
  9481  0023A0  0E02               	movlw	2
  9482  0023A2  18DE               	xorwf	postinc2,w,c
  9483  0023A4  A4D8               	btfss	status,2,c
  9484  0023A6  EFD7  F011         	goto	u5281
  9485  0023AA  EFD9  F011         	goto	u5280
  9486  0023AE                     u5281:
  9487  0023AE  EFDC  F011         	goto	l5965
  9488  0023B2                     u5280:
  9489  0023B2                     l5959:
  9490                           
  9491                           ;mcc_generated_files/mtouch/mtouch_button.c: 597:                     return 1;
  9492  0023B2  0E01               	movlw	1
  9493  0023B4  EF20  F012         	goto	l598
  9494  0023B8                     l5965:
  9495                           
  9496                           ;mcc_generated_files/mtouch/mtouch_button.c: 599:                 {;mcc_generated_files/
      +                          mtouch/mtouch_button.c: 600:                     surplus_deviation_check_button = (int16
      +                          _t)(Button_Unscaled_Deviation_Get(check_button) - (mtouch_button_reading_t)check_button-
      +                          >threshold);
  9497  0023B8  C027  F016         	movff	Button_Check_AKS_Block@check_button,Button_Unscaled_Deviation_Get@button
  9498  0023BC  C028  F017         	movff	Button_Check_AKS_Block@check_button+1,Button_Unscaled_Deviation_Get@button+1
  9499  0023C0  EC1E  F01C         	call	_Button_Unscaled_Deviation_Get	;wreg free
  9500  0023C4  EE20 F00F          	lfsr	2,15
  9501  0023C8  5027               	movf	Button_Check_AKS_Block@check_button^0,w,c
  9502  0023CA  26D9               	addwf	fsr2l,f,c
  9503  0023CC  5028               	movf	(Button_Check_AKS_Block@check_button+1)^0,w,c
  9504  0023CE  22DA               	addwfc	fsr2h,f,c
  9505  0023D0  50DF               	movf	indf2,w,c
  9506  0023D2  6E20               	movwf	??_Button_Check_AKS_Block^0,c
  9507  0023D4  5020               	movf	??_Button_Check_AKS_Block^0,w,c
  9508  0023D6  5C16               	subwf	?_Button_Unscaled_Deviation_Get^0,w,c
  9509  0023D8  6E25               	movwf	Button_Check_AKS_Block@surplus_deviation_check_button^0,c
  9510  0023DA  5017               	movf	(?_Button_Unscaled_Deviation_Get+1)^0,w,c
  9511  0023DC  A0D8               	btfss	status,0,c
  9512  0023DE  0417               	decf	(?_Button_Unscaled_Deviation_Get+1)^0,w,c
  9513  0023E0  6E26               	movwf	(Button_Check_AKS_Block@surplus_deviation_check_button+1)^0,c
  9514  0023E2                     
  9515                           ;mcc_generated_files/mtouch/mtouch_button.c: 601:                     if(surplus_deviati
      +                          on_check_button > 0 && surplus_deviation_check_button > surplus_deviation_this_button)
  9516  0023E2  BE26               	btfsc	(Button_Check_AKS_Block@surplus_deviation_check_button+1)^0,7,c
  9517  0023E4  EFFC  F011         	goto	u5291
  9518  0023E8  5026               	movf	(Button_Check_AKS_Block@surplus_deviation_check_button+1)^0,w,c
  9519  0023EA  E108               	bnz	u5290
  9520  0023EC  0425               	decf	Button_Check_AKS_Block@surplus_deviation_check_button^0,w,c
  9521  0023EE  A0D8               	btfss	status,0,c
  9522  0023F0  EFFC  F011         	goto	u5291
  9523  0023F4  EFFE  F011         	goto	u5290
  9524  0023F8                     u5291:
  9525  0023F8  EF0F  F012         	goto	l5975
  9526  0023FC                     u5290:
  9527  0023FC  5025               	movf	Button_Check_AKS_Block@surplus_deviation_check_button^0,w,c
  9528  0023FE  5C22               	subwf	Button_Check_AKS_Block@surplus_deviation_this_button^0,w,c
  9529  002400  5023               	movf	(Button_Check_AKS_Block@surplus_deviation_this_button+1)^0,w,c
  9530  002402  0A80               	xorlw	128
  9531  002404  6E20               	movwf	??_Button_Check_AKS_Block^0,c
  9532  002406  5026               	movf	(Button_Check_AKS_Block@surplus_deviation_check_button+1)^0,w,c
  9533  002408  0A80               	xorlw	128
  9534  00240A  5820               	subwfb	??_Button_Check_AKS_Block^0,w,c
  9535  00240C  B0D8               	btfsc	status,0,c
  9536  00240E  EF0B  F012         	goto	u5301
  9537  002412  EF0D  F012         	goto	u5300
  9538  002416                     u5301:
  9539  002416  EF0F  F012         	goto	l5975
  9540  00241A                     u5300:
  9541  00241A  EFD9  F011         	goto	l5959
  9542  00241E                     l5975:
  9543                           
  9544                           ;mcc_generated_files/mtouch/mtouch_button.c: 607:     }
  9545  00241E  0E11               	movlw	17
  9546  002420  2627               	addwf	Button_Check_AKS_Block@check_button^0,f,c
  9547  002422  0E00               	movlw	0
  9548  002424  2228               	addwfc	(Button_Check_AKS_Block@check_button+1)^0,f,c
  9549  002426  5028               	movf	(Button_Check_AKS_Block@check_button+1)^0,w,c
  9550  002428  0801               	sublw	high (_mtouch_button+68)
  9551  00242A  E102               	bnz	u5315
  9552  00242C  5027               	movf	Button_Check_AKS_Block@check_button^0,w,c
  9553  00242E  0844               	sublw	low (_mtouch_button+68)
  9554  002430                     u5315:
  9555  002430  B0D8               	btfsc	status,0,c
  9556  002432  EF1D  F012         	goto	u5311
  9557  002436  EF1F  F012         	goto	u5310
  9558  00243A                     u5311:
  9559  00243A  EFA8  F011         	goto	l5951
  9560  00243E                     u5310:
  9561  00243E                     l5977:
  9562                           
  9563                           ;mcc_generated_files/mtouch/mtouch_button.c: 608:     return 0;
  9564  00243E  0E00               	movlw	0
  9565  002440                     l598:
  9566  002440  0012               	return		;funcret
  9567  002442                     __end_of_Button_Check_AKS_Block:
  9568                           	callstack 0
  9569                           
  9570 ;; *************** function _Button_Unscaled_Deviation_Get *****************
  9571 ;; Defined at:
  9572 ;;		line 471 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9573 ;; Parameters:    Size  Location     Type
  9574 ;;  button          2   21[COMRAM] PTR struct .
  9575 ;;		 -> mtouch_button(85), 
  9576 ;; Auto vars:     Size  Location     Type
  9577 ;;		None
  9578 ;; Return value:  Size  Location     Type
  9579 ;;                  2   21[COMRAM] unsigned short 
  9580 ;; Registers used:
  9581 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9582 ;; Tracked objects:
  9583 ;;		On entry : 0/0
  9584 ;;		On exit  : 0/0
  9585 ;;		Unchanged: 0/0
  9586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9589 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9590 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9591 ;;Total ram usage:        8 bytes
  9592 ;; Hardware stack levels used:    1
  9593 ;; Hardware stack levels required when called:    6
  9594 ;; This function calls:
  9595 ;;		Nothing
  9596 ;; This function is called by:
  9597 ;;		_Button_Check_AKS_Block
  9598 ;; This function uses a non-reentrant model
  9599 ;;
  9600                           
  9601                           	psect	text74
  9602  00383C                     __ptext74:
  9603                           	callstack 0
  9604  00383C                     _Button_Unscaled_Deviation_Get:
  9605                           	callstack 19
  9606  00383C                     
  9607                           ;mcc_generated_files/mtouch/mtouch_button.c: 471: static mtouch_button_reading_t Button_
      +                          Unscaled_Deviation_Get(mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button
      +                          .c: 472: {;mcc_generated_files/mtouch/mtouch_button.c: 473:     return (mtouch_button_re
      +                          ading_t)(button->reading - (mtouch_button_reading_t)((button->baseline)>>((uint8_t)4u)))
      +                          ;
  9608  00383C  EE20 F006          	lfsr	2,6
  9609  003840  5016               	movf	Button_Unscaled_Deviation_Get@button^0,w,c
  9610  003842  26D9               	addwf	fsr2l,f,c
  9611  003844  5017               	movf	(Button_Unscaled_Deviation_Get@button+1)^0,w,c
  9612  003846  22DA               	addwfc	fsr2h,f,c
  9613  003848  CFDE F018          	movff	postinc2,??_Button_Unscaled_Deviation_Get
  9614  00384C  CFDE F019          	movff	postinc2,??_Button_Unscaled_Deviation_Get+1
  9615  003850  CFDE F01A          	movff	postinc2,??_Button_Unscaled_Deviation_Get+2
  9616  003854  CFDE F01B          	movff	postinc2,??_Button_Unscaled_Deviation_Get+3
  9617  003858  0E05               	movlw	5
  9618  00385A  EF34  F01C         	goto	u5110
  9619  00385E                     u5115:
  9620  00385E  90D8               	bcf	status,0,c
  9621  003860  321B               	rrcf	(??_Button_Unscaled_Deviation_Get+3)^0,f,c
  9622  003862  321A               	rrcf	(??_Button_Unscaled_Deviation_Get+2)^0,f,c
  9623  003864  3219               	rrcf	(??_Button_Unscaled_Deviation_Get+1)^0,f,c
  9624  003866  3218               	rrcf	??_Button_Unscaled_Deviation_Get^0,f,c
  9625  003868                     u5110:
  9626  003868  2EE8               	decfsz	wreg,f,c
  9627  00386A  EF2F  F01C         	goto	u5115
  9628  00386E  EE20 F004          	lfsr	2,4
  9629  003872  5016               	movf	Button_Unscaled_Deviation_Get@button^0,w,c
  9630  003874  26D9               	addwf	fsr2l,f,c
  9631  003876  5017               	movf	(Button_Unscaled_Deviation_Get@button+1)^0,w,c
  9632  003878  22DA               	addwfc	fsr2h,f,c
  9633  00387A  CFDE F01C          	movff	postinc2,??_Button_Unscaled_Deviation_Get+4
  9634  00387E  CFDD F01D          	movff	postdec2,??_Button_Unscaled_Deviation_Get+5
  9635  003882  5018               	movf	??_Button_Unscaled_Deviation_Get^0,w,c
  9636  003884  5C1C               	subwf	(??_Button_Unscaled_Deviation_Get+4)^0,w,c
  9637  003886  6E16               	movwf	?_Button_Unscaled_Deviation_Get^0,c
  9638  003888  5019               	movf	(??_Button_Unscaled_Deviation_Get+1)^0,w,c
  9639  00388A  581D               	subwfb	(??_Button_Unscaled_Deviation_Get+5)^0,w,c
  9640  00388C  6E17               	movwf	(?_Button_Unscaled_Deviation_Get+1)^0,c
  9641  00388E  0012               	return		;funcret
  9642  003890                     __end_of_Button_Unscaled_Deviation_Get:
  9643                           	callstack 0
  9644                           
  9645 ;; *************** function _Button_Baseline_Update *****************
  9646 ;; Defined at:
  9647 ;;		line 535 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9648 ;; Parameters:    Size  Location     Type
  9649 ;;  button          2   21[COMRAM] PTR struct .
  9650 ;;		 -> mtouch_button(85), 
  9651 ;; Auto vars:     Size  Location     Type
  9652 ;;		None
  9653 ;; Return value:  Size  Location     Type
  9654 ;;                  1    wreg      void 
  9655 ;; Registers used:
  9656 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9657 ;; Tracked objects:
  9658 ;;		On entry : 0/0
  9659 ;;		On exit  : 0/0
  9660 ;;		Unchanged: 0/0
  9661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9662 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9664 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9665 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9666 ;;Total ram usage:        6 bytes
  9667 ;; Hardware stack levels used:    1
  9668 ;; Hardware stack levels required when called:    6
  9669 ;; This function calls:
  9670 ;;		Nothing
  9671 ;; This function is called by:
  9672 ;;		_Button_State_Initializing
  9673 ;;		_Button_State_NotPressed
  9674 ;; This function uses a non-reentrant model
  9675 ;;
  9676                           
  9677                           	psect	text75
  9678  0026B4                     __ptext75:
  9679                           	callstack 0
  9680  0026B4                     _Button_Baseline_Update:
  9681                           	callstack 20
  9682  0026B4                     
  9683                           ;mcc_generated_files/mtouch/mtouch_button.c: 535: static void Button_Baseline_Update(mto
      +                          uch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 536: {;mcc_generated_f
      +                          iles/mtouch/mtouch_button.c: 537:     if (GIE == (uint8_t)1)
  9684  0026B4  AEF2               	btfss	4082,7,c	;volatile
  9685  0026B6  EF5F  F013         	goto	u5221
  9686  0026BA  EF61  F013         	goto	u5220
  9687  0026BE                     u5221:
  9688  0026BE  EFA3  F013         	goto	l5939
  9689  0026C2                     u5220:
  9690  0026C2                     
  9691                           ;mcc_generated_files/mtouch/mtouch_button.c: 538:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 539:         GIE = (uint8_t)0;
  9692  0026C2  9EF2               	bcf	4082,7,c	;volatile
  9693  0026C4                     
  9694                           ;mcc_generated_files/mtouch/mtouch_button.c: 540:         button->baseline -= (button->b
      +                          aseline) >> ((uint8_t)4u);
  9695  0026C4  EE20 F006          	lfsr	2,6
  9696  0026C8  5016               	movf	Button_Baseline_Update@button^0,w,c
  9697  0026CA  26D9               	addwf	fsr2l,f,c
  9698  0026CC  5017               	movf	(Button_Baseline_Update@button+1)^0,w,c
  9699  0026CE  22DA               	addwfc	fsr2h,f,c
  9700  0026D0  CFDE F018          	movff	postinc2,??_Button_Baseline_Update
  9701  0026D4  CFDE F019          	movff	postinc2,??_Button_Baseline_Update+1
  9702  0026D8  CFDE F01A          	movff	postinc2,??_Button_Baseline_Update+2
  9703  0026DC  CFDE F01B          	movff	postinc2,??_Button_Baseline_Update+3
  9704  0026E0  0E05               	movlw	5
  9705  0026E2  EF78  F013         	goto	u5230
  9706  0026E6                     u5235:
  9707  0026E6  90D8               	bcf	status,0,c
  9708  0026E8  321B               	rrcf	(??_Button_Baseline_Update+3)^0,f,c
  9709  0026EA  321A               	rrcf	(??_Button_Baseline_Update+2)^0,f,c
  9710  0026EC  3219               	rrcf	(??_Button_Baseline_Update+1)^0,f,c
  9711  0026EE  3218               	rrcf	??_Button_Baseline_Update^0,f,c
  9712  0026F0                     u5230:
  9713  0026F0  2EE8               	decfsz	wreg,f,c
  9714  0026F2  EF73  F013         	goto	u5235
  9715  0026F6  EE20 F006          	lfsr	2,6
  9716  0026FA  5016               	movf	Button_Baseline_Update@button^0,w,c
  9717  0026FC  26D9               	addwf	fsr2l,f,c
  9718  0026FE  5017               	movf	(Button_Baseline_Update@button+1)^0,w,c
  9719  002700  22DA               	addwfc	fsr2h,f,c
  9720  002702  5018               	movf	??_Button_Baseline_Update^0,w,c
  9721  002704  5EDE               	subwf	postinc2,f,c
  9722  002706  5019               	movf	(??_Button_Baseline_Update+1)^0,w,c
  9723  002708  5ADE               	subwfb	postinc2,f,c
  9724  00270A  501A               	movf	(??_Button_Baseline_Update+2)^0,w,c
  9725  00270C  5ADE               	subwfb	postinc2,f,c
  9726  00270E  501B               	movf	(??_Button_Baseline_Update+3)^0,w,c
  9727  002710  5ADE               	subwfb	postinc2,f,c
  9728                           
  9729                           ;mcc_generated_files/mtouch/mtouch_button.c: 541:         button->baseline += button->re
      +                          ading;
  9730  002712  EE20 F004          	lfsr	2,4
  9731  002716  5016               	movf	Button_Baseline_Update@button^0,w,c
  9732  002718  26D9               	addwf	fsr2l,f,c
  9733  00271A  5017               	movf	(Button_Baseline_Update@button+1)^0,w,c
  9734  00271C  22DA               	addwfc	fsr2h,f,c
  9735  00271E  CFDE F018          	movff	postinc2,??_Button_Baseline_Update
  9736  002722  CFDD F019          	movff	postdec2,??_Button_Baseline_Update+1
  9737  002726  EE20 F006          	lfsr	2,6
  9738  00272A  5016               	movf	Button_Baseline_Update@button^0,w,c
  9739  00272C  26D9               	addwf	fsr2l,f,c
  9740  00272E  5017               	movf	(Button_Baseline_Update@button+1)^0,w,c
  9741  002730  22DA               	addwfc	fsr2h,f,c
  9742  002732  5018               	movf	??_Button_Baseline_Update^0,w,c
  9743  002734  26DE               	addwf	postinc2,f,c
  9744  002736  5019               	movf	(??_Button_Baseline_Update+1)^0,w,c
  9745  002738  22DE               	addwfc	postinc2,f,c
  9746  00273A  0E00               	movlw	0
  9747  00273C  22DE               	addwfc	postinc2,f,c
  9748  00273E  22DE               	addwfc	postinc2,f,c
  9749  002740                     
  9750                           ;mcc_generated_files/mtouch/mtouch_button.c: 542:         GIE = (uint8_t)1;
  9751  002740  8EF2               	bsf	4082,7,c	;volatile
  9752                           
  9753                           ;mcc_generated_files/mtouch/mtouch_button.c: 543:     }
  9754  002742  EFE1  F013         	goto	l576
  9755  002746                     l5939:
  9756                           
  9757                           ;mcc_generated_files/mtouch/mtouch_button.c: 545:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 546:         button->baseline -= (button->baseline) >> ((uint8_t)4u);
  9758  002746  EE20 F006          	lfsr	2,6
  9759  00274A  5016               	movf	Button_Baseline_Update@button^0,w,c
  9760  00274C  26D9               	addwf	fsr2l,f,c
  9761  00274E  5017               	movf	(Button_Baseline_Update@button+1)^0,w,c
  9762  002750  22DA               	addwfc	fsr2h,f,c
  9763  002752  CFDE F018          	movff	postinc2,??_Button_Baseline_Update
  9764  002756  CFDE F019          	movff	postinc2,??_Button_Baseline_Update+1
  9765  00275A  CFDE F01A          	movff	postinc2,??_Button_Baseline_Update+2
  9766  00275E  CFDE F01B          	movff	postinc2,??_Button_Baseline_Update+3
  9767  002762  0E05               	movlw	5
  9768  002764  EFB9  F013         	goto	u5240
  9769  002768                     u5245:
  9770  002768  90D8               	bcf	status,0,c
  9771  00276A  321B               	rrcf	(??_Button_Baseline_Update+3)^0,f,c
  9772  00276C  321A               	rrcf	(??_Button_Baseline_Update+2)^0,f,c
  9773  00276E  3219               	rrcf	(??_Button_Baseline_Update+1)^0,f,c
  9774  002770  3218               	rrcf	??_Button_Baseline_Update^0,f,c
  9775  002772                     u5240:
  9776  002772  2EE8               	decfsz	wreg,f,c
  9777  002774  EFB4  F013         	goto	u5245
  9778  002778  EE20 F006          	lfsr	2,6
  9779  00277C  5016               	movf	Button_Baseline_Update@button^0,w,c
  9780  00277E  26D9               	addwf	fsr2l,f,c
  9781  002780  5017               	movf	(Button_Baseline_Update@button+1)^0,w,c
  9782  002782  22DA               	addwfc	fsr2h,f,c
  9783  002784  5018               	movf	??_Button_Baseline_Update^0,w,c
  9784  002786  5EDE               	subwf	postinc2,f,c
  9785  002788  5019               	movf	(??_Button_Baseline_Update+1)^0,w,c
  9786  00278A  5ADE               	subwfb	postinc2,f,c
  9787  00278C  501A               	movf	(??_Button_Baseline_Update+2)^0,w,c
  9788  00278E  5ADE               	subwfb	postinc2,f,c
  9789  002790  501B               	movf	(??_Button_Baseline_Update+3)^0,w,c
  9790  002792  5ADE               	subwfb	postinc2,f,c
  9791                           
  9792                           ;mcc_generated_files/mtouch/mtouch_button.c: 547:         button->baseline += button->re
      +                          ading;
  9793  002794  EE20 F004          	lfsr	2,4
  9794  002798  5016               	movf	Button_Baseline_Update@button^0,w,c
  9795  00279A  26D9               	addwf	fsr2l,f,c
  9796  00279C  5017               	movf	(Button_Baseline_Update@button+1)^0,w,c
  9797  00279E  22DA               	addwfc	fsr2h,f,c
  9798  0027A0  CFDE F018          	movff	postinc2,??_Button_Baseline_Update
  9799  0027A4  CFDD F019          	movff	postdec2,??_Button_Baseline_Update+1
  9800  0027A8  EE20 F006          	lfsr	2,6
  9801  0027AC  5016               	movf	Button_Baseline_Update@button^0,w,c
  9802  0027AE  26D9               	addwf	fsr2l,f,c
  9803  0027B0  5017               	movf	(Button_Baseline_Update@button+1)^0,w,c
  9804  0027B2  22DA               	addwfc	fsr2h,f,c
  9805  0027B4  5018               	movf	??_Button_Baseline_Update^0,w,c
  9806  0027B6  26DE               	addwf	postinc2,f,c
  9807  0027B8  5019               	movf	(??_Button_Baseline_Update+1)^0,w,c
  9808  0027BA  22DE               	addwfc	postinc2,f,c
  9809  0027BC  0E00               	movlw	0
  9810  0027BE  22DE               	addwfc	postinc2,f,c
  9811  0027C0  22DE               	addwfc	postinc2,f,c
  9812  0027C2                     l576:
  9813  0027C2  0012               	return		;funcret
  9814  0027C4                     __end_of_Button_Baseline_Update:
  9815                           	callstack 0
  9816                           
  9817 ;; *************** function _Button_Baseline_Initialize *****************
  9818 ;; Defined at:
  9819 ;;		line 529 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9820 ;; Parameters:    Size  Location     Type
  9821 ;;  button          2   24[COMRAM] PTR struct .
  9822 ;;		 -> mtouch_button(85), 
  9823 ;; Auto vars:     Size  Location     Type
  9824 ;;		None
  9825 ;; Return value:  Size  Location     Type
  9826 ;;                  1    wreg      void 
  9827 ;; Registers used:
  9828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9829 ;; Tracked objects:
  9830 ;;		On entry : 0/0
  9831 ;;		On exit  : 0/0
  9832 ;;		Unchanged: 0/0
  9833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9834 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9836 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9837 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9838 ;;Total ram usage:        6 bytes
  9839 ;; Hardware stack levels used:    1
  9840 ;; Hardware stack levels required when called:    7
  9841 ;; This function calls:
  9842 ;;		_MTOUCH_Sensor_RawSample_Get
  9843 ;; This function is called by:
  9844 ;;		_Button_State_Initializing
  9845 ;; This function uses a non-reentrant model
  9846 ;;
  9847                           
  9848                           	psect	text76
  9849  003732                     __ptext76:
  9850                           	callstack 0
  9851  003732                     _Button_Baseline_Initialize:
  9852                           	callstack 19
  9853  003732                     
  9854                           ;mcc_generated_files/mtouch/mtouch_button.c: 529: static void Button_Baseline_Initialize
      +                          (mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 530: {;mcc_generat
      +                          ed_files/mtouch/mtouch_button.c: 531:     button->baseline = MTOUCH_Sensor_RawSample_Get
      +                          (button->sensor);
  9855  003732  EE20 F001          	lfsr	2,1
  9856  003736  5019               	movf	Button_Baseline_Initialize@button^0,w,c
  9857  003738  26D9               	addwf	fsr2l,f,c
  9858  00373A  501A               	movf	(Button_Baseline_Initialize@button+1)^0,w,c
  9859  00373C  22DA               	addwfc	fsr2h,f,c
  9860  00373E  50DF               	movf	indf2,w,c
  9861  003740  ECA4  F01E         	call	_MTOUCH_Sensor_RawSample_Get
  9862  003744  5016               	movf	?_MTOUCH_Sensor_RawSample_Get^0,w,c
  9863  003746  6E1B               	movwf	??_Button_Baseline_Initialize^0,c
  9864  003748  5017               	movf	(?_MTOUCH_Sensor_RawSample_Get+1)^0,w,c
  9865  00374A  6E1C               	movwf	(??_Button_Baseline_Initialize+1)^0,c
  9866  00374C  6A1D               	clrf	(??_Button_Baseline_Initialize+2)^0,c
  9867  00374E  6A1E               	clrf	(??_Button_Baseline_Initialize+3)^0,c
  9868  003750  EE20 F006          	lfsr	2,6
  9869  003754  5019               	movf	Button_Baseline_Initialize@button^0,w,c
  9870  003756  26D9               	addwf	fsr2l,f,c
  9871  003758  501A               	movf	(Button_Baseline_Initialize@button+1)^0,w,c
  9872  00375A  22DA               	addwfc	fsr2h,f,c
  9873  00375C  C01B  FFDE         	movff	??_Button_Baseline_Initialize,postinc2
  9874  003760  C01C  FFDE         	movff	??_Button_Baseline_Initialize+1,postinc2
  9875  003764  C01D  FFDE         	movff	??_Button_Baseline_Initialize+2,postinc2
  9876  003768  C01E  FFDE         	movff	??_Button_Baseline_Initialize+3,postinc2
  9877  00376C                     
  9878                           ;mcc_generated_files/mtouch/mtouch_button.c: 532:     button->baseline <<= ((uint8_t)4u)
      +                          ;
  9879  00376C  EE20 F006          	lfsr	2,6
  9880  003770  5019               	movf	Button_Baseline_Initialize@button^0,w,c
  9881  003772  26D9               	addwf	fsr2l,f,c
  9882  003774  501A               	movf	(Button_Baseline_Initialize@button+1)^0,w,c
  9883  003776  22DA               	addwfc	fsr2h,f,c
  9884  003778  0E04               	movlw	4
  9885  00377A                     u5215:
  9886  00377A  90D8               	bcf	status,0,c
  9887  00377C  36DE               	rlcf	postinc2,f,c
  9888  00377E  36DE               	rlcf	postinc2,f,c
  9889  003780  36DE               	rlcf	postinc2,f,c
  9890  003782  36DD               	rlcf	postdec2,f,c
  9891  003784  52DD               	movf	postdec2,f,c
  9892  003786  52DD               	movf	postdec2,f,c
  9893  003788  2EE8               	decfsz	wreg,f,c
  9894  00378A  EFBD  F01B         	goto	u5215
  9895  00378E  0012               	return		;funcret
  9896  003790                     __end_of_Button_Baseline_Initialize:
  9897                           	callstack 0
  9898                           
  9899 ;; *************** function _Button_Reading_Update *****************
  9900 ;; Defined at:
  9901 ;;		line 502 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9902 ;; Parameters:    Size  Location     Type
  9903 ;;  button          2   28[COMRAM] PTR struct .
  9904 ;;		 -> mtouch_button(85), 
  9905 ;; Auto vars:     Size  Location     Type
  9906 ;;		None
  9907 ;; Return value:  Size  Location     Type
  9908 ;;                  1    wreg      void 
  9909 ;; Registers used:
  9910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9911 ;; Tracked objects:
  9912 ;;		On entry : 0/0
  9913 ;;		On exit  : 0/0
  9914 ;;		Unchanged: 0/0
  9915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9916 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9919 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9920 ;;Total ram usage:        2 bytes
  9921 ;; Hardware stack levels used:    1
  9922 ;; Hardware stack levels required when called:    8
  9923 ;; This function calls:
  9924 ;;		_Button_Reading_Update_Helper
  9925 ;; This function is called by:
  9926 ;;		_Button_Service
  9927 ;; This function uses a non-reentrant model
  9928 ;;
  9929                           
  9930                           	psect	text77
  9931  003DEA                     __ptext77:
  9932                           	callstack 0
  9933  003DEA                     _Button_Reading_Update:
  9934                           	callstack 19
  9935  003DEA                     
  9936                           ;mcc_generated_files/mtouch/mtouch_button.c: 502: static void Button_Reading_Update(mtou
      +                          ch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 503: {;mcc_generated_fi
      +                          les/mtouch/mtouch_button.c: 504:     if (GIE == (uint8_t) 1)
  9937  003DEA  AEF2               	btfss	4082,7,c	;volatile
  9938  003DEC  EFFA  F01E         	goto	u5781
  9939  003DF0  EFFC  F01E         	goto	u5780
  9940  003DF4                     u5781:
  9941  003DF4  EF06  F01F         	goto	l6265
  9942  003DF8                     u5780:
  9943  003DF8                     
  9944                           ;mcc_generated_files/mtouch/mtouch_button.c: 505:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 506:         GIE = (uint8_t) 0;
  9945  003DF8  9EF2               	bcf	4082,7,c	;volatile
  9946  003DFA                     
  9947                           ;mcc_generated_files/mtouch/mtouch_button.c: 507:         Button_Reading_Update_Helper(b
      +                          utton);
  9948  003DFA  C01D  F019         	movff	Button_Reading_Update@button,Button_Reading_Update_Helper@button
  9949  003DFE  C01E  F01A         	movff	Button_Reading_Update@button+1,Button_Reading_Update_Helper@button+1
  9950  003E02  ECAF  F018         	call	_Button_Reading_Update_Helper	;wreg free
  9951  003E06                     
  9952                           ;mcc_generated_files/mtouch/mtouch_button.c: 508:         GIE = (uint8_t) 1;
  9953  003E06  8EF2               	bsf	4082,7,c	;volatile
  9954                           
  9955                           ;mcc_generated_files/mtouch/mtouch_button.c: 509:     }
  9956  003E08  EF0C  F01F         	goto	l563
  9957  003E0C                     l6265:
  9958                           
  9959                           ;mcc_generated_files/mtouch/mtouch_button.c: 511:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 512:         Button_Reading_Update_Helper(button);
  9960  003E0C  C01D  F019         	movff	Button_Reading_Update@button,Button_Reading_Update_Helper@button
  9961  003E10  C01E  F01A         	movff	Button_Reading_Update@button+1,Button_Reading_Update_Helper@button+1
  9962  003E14  ECAF  F018         	call	_Button_Reading_Update_Helper	;wreg free
  9963  003E18                     l563:
  9964  003E18  0012               	return		;funcret
  9965  003E1A                     __end_of_Button_Reading_Update:
  9966                           	callstack 0
  9967                           
  9968 ;; *************** function _Button_Reading_Update_Helper *****************
  9969 ;; Defined at:
  9970 ;;		line 516 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9971 ;; Parameters:    Size  Location     Type
  9972 ;;  button          2   24[COMRAM] PTR struct .
  9973 ;;		 -> mtouch_button(85), 
  9974 ;; Auto vars:     Size  Location     Type
  9975 ;;		None
  9976 ;; Return value:  Size  Location     Type
  9977 ;;                  1    wreg      void 
  9978 ;; Registers used:
  9979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9980 ;; Tracked objects:
  9981 ;;		On entry : 0/0
  9982 ;;		On exit  : 0/0
  9983 ;;		Unchanged: 0/0
  9984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9985 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9987 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9988 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9989 ;;Total ram usage:        4 bytes
  9990 ;; Hardware stack levels used:    1
  9991 ;; Hardware stack levels required when called:    7
  9992 ;; This function calls:
  9993 ;;		_MTOUCH_Sensor_RawSample_Get
  9994 ;; This function is called by:
  9995 ;;		_Button_Reading_Update
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999                           	psect	text78
 10000  00315E                     __ptext78:
 10001                           	callstack 0
 10002  00315E                     _Button_Reading_Update_Helper:
 10003                           	callstack 19
 10004  00315E                     
 10005                           ;mcc_generated_files/mtouch/mtouch_button.c: 516: static void Button_Reading_Update_Help
      +                          er(mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 517: {;mcc_gener
      +                          ated_files/mtouch/mtouch_button.c: 518:     if (button->state != MTOUCH_BUTTON_STATE_ini
      +                          tializing)
 10006  00315E  EE20 F002          	lfsr	2,2
 10007  003162  5019               	movf	Button_Reading_Update_Helper@button^0,w,c
 10008  003164  26D9               	addwf	fsr2l,f,c
 10009  003166  501A               	movf	(Button_Reading_Update_Helper@button+1)^0,w,c
 10010  003168  22DA               	addwfc	fsr2h,f,c
 10011  00316A  50DF               	movf	indf2,w,c
 10012  00316C  B4D8               	btfsc	status,2,c
 10013  00316E  EFBB  F018         	goto	u5321
 10014  003172  EFBD  F018         	goto	u5320
 10015  003176                     u5321:
 10016  003176  EFF2  F018         	goto	l5987
 10017  00317A                     u5320:
 10018  00317A                     
 10019                           ;mcc_generated_files/mtouch/mtouch_button.c: 519:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 520:         button->reading -= button->reading>>((uint8_t)2u);
 10020  00317A  EE20 F004          	lfsr	2,4
 10021  00317E  5019               	movf	Button_Reading_Update_Helper@button^0,w,c
 10022  003180  26D9               	addwf	fsr2l,f,c
 10023  003182  501A               	movf	(Button_Reading_Update_Helper@button+1)^0,w,c
 10024  003184  22DA               	addwfc	fsr2h,f,c
 10025  003186  CFDE F01B          	movff	postinc2,??_Button_Reading_Update_Helper
 10026  00318A  CFDD F01C          	movff	postdec2,??_Button_Reading_Update_Helper+1
 10027  00318E  90D8               	bcf	status,0,c
 10028  003190  321C               	rrcf	(??_Button_Reading_Update_Helper+1)^0,f,c
 10029  003192  321B               	rrcf	??_Button_Reading_Update_Helper^0,f,c
 10030  003194  90D8               	bcf	status,0,c
 10031  003196  321C               	rrcf	(??_Button_Reading_Update_Helper+1)^0,f,c
 10032  003198  321B               	rrcf	??_Button_Reading_Update_Helper^0,f,c
 10033  00319A  EE20 F004          	lfsr	2,4
 10034  00319E  5019               	movf	Button_Reading_Update_Helper@button^0,w,c
 10035  0031A0  26D9               	addwf	fsr2l,f,c
 10036  0031A2  501A               	movf	(Button_Reading_Update_Helper@button+1)^0,w,c
 10037  0031A4  22DA               	addwfc	fsr2h,f,c
 10038  0031A6  501B               	movf	??_Button_Reading_Update_Helper^0,w,c
 10039  0031A8  5EDE               	subwf	postinc2,f,c
 10040  0031AA  501C               	movf	(??_Button_Reading_Update_Helper+1)^0,w,c
 10041  0031AC  5ADD               	subwfb	postdec2,f,c
 10042  0031AE                     
 10043                           ;mcc_generated_files/mtouch/mtouch_button.c: 521:         button->reading += MTOUCH_Sens
      +                          or_RawSample_Get(button->sensor) >> ((uint8_t)2u);
 10044  0031AE  EE20 F001          	lfsr	2,1
 10045  0031B2  5019               	movf	Button_Reading_Update_Helper@button^0,w,c
 10046  0031B4  26D9               	addwf	fsr2l,f,c
 10047  0031B6  501A               	movf	(Button_Reading_Update_Helper@button+1)^0,w,c
 10048  0031B8  22DA               	addwfc	fsr2h,f,c
 10049  0031BA  50DF               	movf	indf2,w,c
 10050  0031BC  ECA4  F01E         	call	_MTOUCH_Sensor_RawSample_Get
 10051  0031C0  90D8               	bcf	status,0,c
 10052  0031C2  3217               	rrcf	(?_MTOUCH_Sensor_RawSample_Get+1)^0,f,c
 10053  0031C4  3216               	rrcf	?_MTOUCH_Sensor_RawSample_Get^0,f,c
 10054  0031C6  90D8               	bcf	status,0,c
 10055  0031C8  3217               	rrcf	(?_MTOUCH_Sensor_RawSample_Get+1)^0,f,c
 10056  0031CA  3216               	rrcf	?_MTOUCH_Sensor_RawSample_Get^0,f,c
 10057  0031CC  EE20 F004          	lfsr	2,4
 10058  0031D0  5019               	movf	Button_Reading_Update_Helper@button^0,w,c
 10059  0031D2  26D9               	addwf	fsr2l,f,c
 10060  0031D4  501A               	movf	(Button_Reading_Update_Helper@button+1)^0,w,c
 10061  0031D6  22DA               	addwfc	fsr2h,f,c
 10062  0031D8  5016               	movf	?_MTOUCH_Sensor_RawSample_Get^0,w,c
 10063  0031DA  26DE               	addwf	postinc2,f,c
 10064  0031DC  5017               	movf	(?_MTOUCH_Sensor_RawSample_Get+1)^0,w,c
 10065  0031DE  22DD               	addwfc	postdec2,f,c
 10066                           
 10067                           ;mcc_generated_files/mtouch/mtouch_button.c: 522:     }
 10068  0031E0  EF05  F019         	goto	l568
 10069  0031E4                     l5987:
 10070                           
 10071                           ;mcc_generated_files/mtouch/mtouch_button.c: 524:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 525:         button->reading = MTOUCH_Sensor_RawSample_Get(button->sensor);
 10072  0031E4  EE20 F001          	lfsr	2,1
 10073  0031E8  5019               	movf	Button_Reading_Update_Helper@button^0,w,c
 10074  0031EA  26D9               	addwf	fsr2l,f,c
 10075  0031EC  501A               	movf	(Button_Reading_Update_Helper@button+1)^0,w,c
 10076  0031EE  22DA               	addwfc	fsr2h,f,c
 10077  0031F0  50DF               	movf	indf2,w,c
 10078  0031F2  ECA4  F01E         	call	_MTOUCH_Sensor_RawSample_Get
 10079  0031F6  EE20 F004          	lfsr	2,4
 10080  0031FA  5019               	movf	Button_Reading_Update_Helper@button^0,w,c
 10081  0031FC  26D9               	addwf	fsr2l,f,c
 10082  0031FE  501A               	movf	(Button_Reading_Update_Helper@button+1)^0,w,c
 10083  003200  22DA               	addwfc	fsr2h,f,c
 10084  003202  C016  FFDE         	movff	?_MTOUCH_Sensor_RawSample_Get,postinc2
 10085  003206  C017  FFDD         	movff	?_MTOUCH_Sensor_RawSample_Get+1,postdec2
 10086  00320A                     l568:
 10087  00320A  0012               	return		;funcret
 10088  00320C                     __end_of_Button_Reading_Update_Helper:
 10089                           	callstack 0
 10090                           
 10091 ;; *************** function _MTOUCH_Sensor_RawSample_Get *****************
 10092 ;; Defined at:
 10093 ;;		line 599 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10094 ;; Parameters:    Size  Location     Type
 10095 ;;  name            1    wreg     enum E12845
 10096 ;; Auto vars:     Size  Location     Type
 10097 ;;  name            1   23[COMRAM] enum E12845
 10098 ;; Return value:  Size  Location     Type
 10099 ;;                  2   21[COMRAM] unsigned short 
 10100 ;; Registers used:
 10101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10102 ;; Tracked objects:
 10103 ;;		On entry : 0/0
 10104 ;;		On exit  : 0/0
 10105 ;;		Unchanged: 0/0
 10106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10107 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10108 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10110 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10111 ;;Total ram usage:        3 bytes
 10112 ;; Hardware stack levels used:    1
 10113 ;; Hardware stack levels required when called:    6
 10114 ;; This function calls:
 10115 ;;		Nothing
 10116 ;; This function is called by:
 10117 ;;		_Button_Reading_Update_Helper
 10118 ;;		_Button_Baseline_Initialize
 10119 ;; This function uses a non-reentrant model
 10120 ;;
 10121                           
 10122                           	psect	text79
 10123  003D48                     __ptext79:
 10124                           	callstack 0
 10125  003D48                     _MTOUCH_Sensor_RawSample_Get:
 10126                           	callstack 19
 10127                           
 10128                           ;incstack = 0
 10129                           ;MTOUCH_Sensor_RawSample_Get@name stored from wreg
 10130  003D48  6E18               	movwf	MTOUCH_Sensor_RawSample_Get@name^0,c
 10131  003D4A                     
 10132                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 599: mtouch_sensor_sample_t MTOUCH_Sensor_R
      +                          awSample_Get(enum mtouch_sensor_names name);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          600: {;mcc_generated_files/mtouch/mtouch_sensor.c: 601:     if (name < 5u)
 10133  003D4A  0E05               	movlw	5
 10134  003D4C  6018               	cpfslt	MTOUCH_Sensor_RawSample_Get@name^0,c
 10135  003D4E  EFAB  F01E         	goto	u5091
 10136  003D52  EFAD  F01E         	goto	u5090
 10137  003D56                     u5091:
 10138  003D56  EFBB  F01E         	goto	l5839
 10139  003D5A                     u5090:
 10140  003D5A                     
 10141                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 602:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 603:         return mtouch_sensor[name].rawSample;
 10142  003D5A  5018               	movf	MTOUCH_Sensor_RawSample_Get@name^0,w,c
 10143  003D5C  0D09               	mullw	9
 10144  003D5E  0E9D               	movlw	low (_mtouch_sensor+6)
 10145  003D60  24F3               	addwf	243,w,c
 10146  003D62  6ED9               	movwf	fsr2l,c
 10147  003D64  0E00               	movlw	high (_mtouch_sensor+6)
 10148  003D66  20F4               	addwfc	prodh,w,c
 10149  003D68  6EDA               	movwf	fsr2h,c
 10150  003D6A  CFDE F016          	movff	postinc2,?_MTOUCH_Sensor_RawSample_Get
 10151  003D6E  CFDD F017          	movff	postdec2,?_MTOUCH_Sensor_RawSample_Get+1
 10152  003D72  EFBF  F01E         	goto	l239
 10153  003D76                     l5839:
 10154                           
 10155                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 606:         return (mtouch_sensor_sample_t
      +                          )0;
 10156  003D76  0E00               	movlw	0
 10157  003D78  6E17               	movwf	(?_MTOUCH_Sensor_RawSample_Get+1)^0,c
 10158  003D7A  0E00               	movlw	0
 10159  003D7C  6E16               	movwf	?_MTOUCH_Sensor_RawSample_Get^0,c
 10160  003D7E                     l239:
 10161  003D7E  0012               	return		;funcret
 10162  003D80                     __end_of_MTOUCH_Sensor_RawSample_Get:
 10163                           	callstack 0
 10164                           
 10165 ;; *************** function _Button_Deviation_Update *****************
 10166 ;; Defined at:
 10167 ;;		line 449 in file "mcc_generated_files/mtouch/mtouch_button.c"
 10168 ;; Parameters:    Size  Location     Type
 10169 ;;  button          2   21[COMRAM] PTR struct .
 10170 ;;		 -> mtouch_button(85), 
 10171 ;; Auto vars:     Size  Location     Type
 10172 ;;  deviation       4   33[COMRAM] long 
 10173 ;; Return value:  Size  Location     Type
 10174 ;;                  1    wreg      void 
 10175 ;; Registers used:
 10176 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10177 ;; Tracked objects:
 10178 ;;		On entry : 0/0
 10179 ;;		On exit  : 0/0
 10180 ;;		Unchanged: 0/0
 10181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10182 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10183 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10184 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10185 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10186 ;;Total ram usage:       16 bytes
 10187 ;; Hardware stack levels used:    1
 10188 ;; Hardware stack levels required when called:    6
 10189 ;; This function calls:
 10190 ;;		Nothing
 10191 ;; This function is called by:
 10192 ;;		_Button_Service
 10193 ;; This function uses a non-reentrant model
 10194 ;;
 10195                           
 10196                           	psect	text80
 10197  00258A                     __ptext80:
 10198                           	callstack 0
 10199  00258A                     _Button_Deviation_Update:
 10200                           	callstack 21
 10201  00258A                     
 10202                           ;mcc_generated_files/mtouch/mtouch_button.c: 449: static void Button_Deviation_Update(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 450: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 451:     int32_t deviation;;mcc_generated_files/mtouch/mto
      +                          uch_button.c: 453:     deviation = (int32_t)((int32_t)(button->reading) - (int32_t)((but
      +                          ton->baseline)>>((uint8_t)4u)));
 10203  00258A  EE20 F006          	lfsr	2,6
 10204  00258E  5016               	movf	Button_Deviation_Update@button^0,w,c
 10205  002590  26D9               	addwf	fsr2l,f,c
 10206  002592  5017               	movf	(Button_Deviation_Update@button+1)^0,w,c
 10207  002594  22DA               	addwfc	fsr2h,f,c
 10208  002596  CFDE F018          	movff	postinc2,??_Button_Deviation_Update
 10209  00259A  CFDE F019          	movff	postinc2,??_Button_Deviation_Update+1
 10210  00259E  CFDE F01A          	movff	postinc2,??_Button_Deviation_Update+2
 10211  0025A2  CFDE F01B          	movff	postinc2,??_Button_Deviation_Update+3
 10212  0025A6  0E05               	movlw	5
 10213  0025A8  EFDB  F012         	goto	u5790
 10214  0025AC                     u5795:
 10215  0025AC  90D8               	bcf	status,0,c
 10216  0025AE  321B               	rrcf	(??_Button_Deviation_Update+3)^0,f,c
 10217  0025B0  321A               	rrcf	(??_Button_Deviation_Update+2)^0,f,c
 10218  0025B2  3219               	rrcf	(??_Button_Deviation_Update+1)^0,f,c
 10219  0025B4  3218               	rrcf	??_Button_Deviation_Update^0,f,c
 10220  0025B6                     u5790:
 10221  0025B6  2EE8               	decfsz	wreg,f,c
 10222  0025B8  EFD6  F012         	goto	u5795
 10223  0025BC  EE20 F004          	lfsr	2,4
 10224  0025C0  5016               	movf	Button_Deviation_Update@button^0,w,c
 10225  0025C2  26D9               	addwf	fsr2l,f,c
 10226  0025C4  5017               	movf	(Button_Deviation_Update@button+1)^0,w,c
 10227  0025C6  22DA               	addwfc	fsr2h,f,c
 10228  0025C8  CFDE F01C          	movff	postinc2,??_Button_Deviation_Update+4
 10229  0025CC  CFDD F01D          	movff	postdec2,??_Button_Deviation_Update+5
 10230  0025D0  501C               	movf	(??_Button_Deviation_Update+4)^0,w,c
 10231  0025D2  6E1E               	movwf	(??_Button_Deviation_Update+6)^0,c
 10232  0025D4  501D               	movf	(??_Button_Deviation_Update+5)^0,w,c
 10233  0025D6  6E1F               	movwf	(??_Button_Deviation_Update+7)^0,c
 10234  0025D8  6A20               	clrf	(??_Button_Deviation_Update+8)^0,c
 10235  0025DA  6A21               	clrf	(??_Button_Deviation_Update+9)^0,c
 10236  0025DC  5018               	movf	??_Button_Deviation_Update^0,w,c
 10237  0025DE  5C1E               	subwf	(??_Button_Deviation_Update+6)^0,w,c
 10238  0025E0  6E22               	movwf	Button_Deviation_Update@deviation^0,c
 10239  0025E2  5019               	movf	(??_Button_Deviation_Update+1)^0,w,c
 10240  0025E4  581F               	subwfb	(??_Button_Deviation_Update+7)^0,w,c
 10241  0025E6  6E23               	movwf	(Button_Deviation_Update@deviation+1)^0,c
 10242  0025E8  501A               	movf	(??_Button_Deviation_Update+2)^0,w,c
 10243  0025EA  5820               	subwfb	(??_Button_Deviation_Update+8)^0,w,c
 10244  0025EC  6E24               	movwf	(Button_Deviation_Update@deviation+2)^0,c
 10245  0025EE  501B               	movf	(??_Button_Deviation_Update+3)^0,w,c
 10246  0025F0  5821               	subwfb	(??_Button_Deviation_Update+9)^0,w,c
 10247  0025F2  6E25               	movwf	(Button_Deviation_Update@deviation+3)^0,c
 10248                           
 10249                           ;mcc_generated_files/mtouch/mtouch_button.c: 456:     deviation = deviation >> (button->
      +                          scaling);
 10250  0025F4  EE20 F010          	lfsr	2,16
 10251  0025F8  5016               	movf	Button_Deviation_Update@button^0,w,c
 10252  0025FA  26D9               	addwf	fsr2l,f,c
 10253  0025FC  5017               	movf	(Button_Deviation_Update@button+1)^0,w,c
 10254  0025FE  22DA               	addwfc	fsr2h,f,c
 10255  002600  50DF               	movf	indf2,w,c
 10256  002602  6E18               	movwf	??_Button_Deviation_Update^0,c
 10257  002604  C022  F019         	movff	Button_Deviation_Update@deviation,??_Button_Deviation_Update+1
 10258  002608  C023  F01A         	movff	Button_Deviation_Update@deviation+1,??_Button_Deviation_Update+2
 10259  00260C  C024  F01B         	movff	Button_Deviation_Update@deviation+2,??_Button_Deviation_Update+3
 10260  002610  C025  F01C         	movff	Button_Deviation_Update@deviation+3,??_Button_Deviation_Update+4
 10261  002614                     u5805:
 10262  002614  6618               	tstfsz	??_Button_Deviation_Update^0,c
 10263  002616  EF0F  F013         	goto	u5806
 10264  00261A  EF17  F013         	goto	u5807
 10265  00261E                     u5806:
 10266  00261E  341C               	rlcf	(??_Button_Deviation_Update+4)^0,w,c
 10267  002620  321C               	rrcf	(??_Button_Deviation_Update+4)^0,f,c
 10268  002622  321B               	rrcf	(??_Button_Deviation_Update+3)^0,f,c
 10269  002624  321A               	rrcf	(??_Button_Deviation_Update+2)^0,f,c
 10270  002626  3219               	rrcf	(??_Button_Deviation_Update+1)^0,f,c
 10271  002628  2E18               	decfsz	??_Button_Deviation_Update^0,f,c
 10272  00262A  EF0A  F013         	goto	u5805
 10273  00262E                     u5807:
 10274  00262E  C019  F022         	movff	??_Button_Deviation_Update+1,Button_Deviation_Update@deviation
 10275  002632  C01A  F023         	movff	??_Button_Deviation_Update+2,Button_Deviation_Update@deviation+1
 10276  002636  C01B  F024         	movff	??_Button_Deviation_Update+3,Button_Deviation_Update@deviation+2
 10277  00263A  C01C  F025         	movff	??_Button_Deviation_Update+4,Button_Deviation_Update@deviation+3
 10278  00263E                     
 10279                           ;mcc_generated_files/mtouch/mtouch_button.c: 459:     if (deviation > ((0x7f)))
 10280  00263E  BE25               	btfsc	(Button_Deviation_Update@deviation+3)^0,7,c
 10281  002640  EF2D  F013         	goto	u5811
 10282  002644  5025               	movf	(Button_Deviation_Update@deviation+3)^0,w,c
 10283  002646  1024               	iorwf	(Button_Deviation_Update@deviation+2)^0,w,c
 10284  002648  1023               	iorwf	(Button_Deviation_Update@deviation+1)^0,w,c
 10285  00264A  E109               	bnz	u5810
 10286  00264C  0E80               	movlw	128
 10287  00264E  5C22               	subwf	Button_Deviation_Update@deviation^0,w,c
 10288  002650  A0D8               	btfss	status,0,c
 10289  002652  EF2D  F013         	goto	u5811
 10290  002656  EF2F  F013         	goto	u5810
 10291  00265A                     u5811:
 10292  00265A  EF37  F013         	goto	l6273
 10293  00265E                     u5810:
 10294  00265E                     
 10295                           ;mcc_generated_files/mtouch/mtouch_button.c: 460:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 461:         deviation = ((0x7f));
 10296  00265E  0E7F               	movlw	127
 10297  002660  6E22               	movwf	Button_Deviation_Update@deviation^0,c
 10298  002662  0E00               	movlw	0
 10299  002664  6E23               	movwf	(Button_Deviation_Update@deviation+1)^0,c
 10300  002666  0E00               	movlw	0
 10301  002668  6E24               	movwf	(Button_Deviation_Update@deviation+2)^0,c
 10302  00266A  0E00               	movlw	0
 10303  00266C  6E25               	movwf	(Button_Deviation_Update@deviation+3)^0,c
 10304  00266E                     l6273:
 10305                           
 10306                           ;mcc_generated_files/mtouch/mtouch_button.c: 463:     if (deviation < ((-1-0x7f)))
 10307  00266E  AE25               	btfss	(Button_Deviation_Update@deviation+3)^0,7,c
 10308  002670  EF47  F013         	goto	u5821
 10309  002674  0E80               	movlw	128
 10310  002676  5C22               	subwf	Button_Deviation_Update@deviation^0,w,c
 10311  002678  0EFF               	movlw	255
 10312  00267A  5823               	subwfb	(Button_Deviation_Update@deviation+1)^0,w,c
 10313  00267C  0EFF               	movlw	255
 10314  00267E  5824               	subwfb	(Button_Deviation_Update@deviation+2)^0,w,c
 10315  002680  0EFF               	movlw	255
 10316  002682  5825               	subwfb	(Button_Deviation_Update@deviation+3)^0,w,c
 10317  002684  B0D8               	btfsc	status,0,c
 10318  002686  EF47  F013         	goto	u5821
 10319  00268A  EF49  F013         	goto	u5820
 10320  00268E                     u5821:
 10321  00268E  EF51  F013         	goto	l6277
 10322  002692                     u5820:
 10323  002692                     
 10324                           ;mcc_generated_files/mtouch/mtouch_button.c: 464:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 465:         deviation = ((-1-0x7f));
 10325  002692  0E80               	movlw	128
 10326  002694  6E22               	movwf	Button_Deviation_Update@deviation^0,c
 10327  002696  0EFF               	movlw	255
 10328  002698  6E23               	movwf	(Button_Deviation_Update@deviation+1)^0,c
 10329  00269A  0EFF               	movlw	255
 10330  00269C  6E24               	movwf	(Button_Deviation_Update@deviation+2)^0,c
 10331  00269E  0EFF               	movlw	255
 10332  0026A0  6E25               	movwf	(Button_Deviation_Update@deviation+3)^0,c
 10333  0026A2                     l6277:
 10334                           
 10335                           ;mcc_generated_files/mtouch/mtouch_button.c: 468:     button->deviation = (mtouch_button
      +                          _deviation_t)deviation;
 10336  0026A2  EE20 F00A          	lfsr	2,10
 10337  0026A6  5016               	movf	Button_Deviation_Update@button^0,w,c
 10338  0026A8  26D9               	addwf	fsr2l,f,c
 10339  0026AA  5017               	movf	(Button_Deviation_Update@button+1)^0,w,c
 10340  0026AC  22DA               	addwfc	fsr2h,f,c
 10341  0026AE  C022  FFDF         	movff	Button_Deviation_Update@deviation,indf2
 10342  0026B2  0012               	return		;funcret
 10343  0026B4                     __end_of_Button_Deviation_Update:
 10344                           	callstack 0
 10345                           
 10346 ;; *************** function _MTOUCH_Button_SetNotPressedCallback *****************
 10347 ;; Defined at:
 10348 ;;		line 623 in file "mcc_generated_files/mtouch/mtouch_button.c"
 10349 ;; Parameters:    Size  Location     Type
 10350 ;;  callback        3   21[COMRAM] PTR FTN(enum E12909,)voi
 10351 ;;		 -> ProcessButtonRelease(1), 
 10352 ;; Auto vars:     Size  Location     Type
 10353 ;;		None
 10354 ;; Return value:  Size  Location     Type
 10355 ;;                  1    wreg      void 
 10356 ;; Registers used:
 10357 ;;		wreg, status,2, status,0
 10358 ;; Tracked objects:
 10359 ;;		On entry : 0/0
 10360 ;;		On exit  : 0/0
 10361 ;;		Unchanged: 0/0
 10362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10363 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10366 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10367 ;;Total ram usage:        3 bytes
 10368 ;; Hardware stack levels used:    1
 10369 ;; Hardware stack levels required when called:    6
 10370 ;; This function calls:
 10371 ;;		Nothing
 10372 ;; This function is called by:
 10373 ;;		_main
 10374 ;; This function uses a non-reentrant model
 10375 ;;
 10376                           
 10377                           	psect	text81
 10378  00418C                     __ptext81:
 10379                           	callstack 0
 10380  00418C                     _MTOUCH_Button_SetNotPressedCallback:
 10381                           	callstack 24
 10382  00418C                     
 10383                           ;mcc_generated_files/mtouch/mtouch_button.c: 623: void MTOUCH_Button_SetNotPressedCallba
      +                          ck(void (*callback)(enum mtouch_button_names));mcc_generated_files/mtouch/mtouch_button.
      +                          c: 624: {;mcc_generated_files/mtouch/mtouch_button.c: 625:     callback_notPressed = cal
      +                          lback;
 10384  00418C  C016  F0D6         	movff	MTOUCH_Button_SetNotPressedCallback@callback,_callback_notPressed
 10385  004190  C017  F0D7         	movff	MTOUCH_Button_SetNotPressedCallback@callback+1,_callback_notPressed+1
 10386  004194  C018  F0D8         	movff	MTOUCH_Button_SetNotPressedCallback@callback+2,_callback_notPressed+2
 10387  004198  0012               	return		;funcret
 10388  00419A                     __end_of_MTOUCH_Button_SetNotPressedCallback:
 10389                           	callstack 0
 10390                           
 10391 ;; *************** function _ApplicationTask *****************
 10392 ;; Defined at:
 10393 ;;		line 306 in file "application.c"
 10394 ;; Parameters:    Size  Location     Type
 10395 ;;		None
 10396 ;; Auto vars:     Size  Location     Type
 10397 ;;  motorSpeed      2   27[COMRAM] unsigned short 
 10398 ;; Return value:  Size  Location     Type
 10399 ;;                  1    wreg      void 
 10400 ;; Registers used:
 10401 ;;		wreg, status,2, status,0, cstack
 10402 ;; Tracked objects:
 10403 ;;		On entry : 0/0
 10404 ;;		On exit  : 0/0
 10405 ;;		Unchanged: 0/0
 10406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10408 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10409 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10410 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10411 ;;Total ram usage:        4 bytes
 10412 ;; Hardware stack levels used:    1
 10413 ;; Hardware stack levels required when called:    7
 10414 ;; This function calls:
 10415 ;;		_ClearButton
 10416 ;;		_ClearEvent
 10417 ;;		_GetButton
 10418 ;;		_GetEvent
 10419 ;;		_GetMotorSpeed
 10420 ;;		_PWM4_LoadDutyValue
 10421 ;; This function is called by:
 10422 ;;		_main
 10423 ;; This function uses a non-reentrant model
 10424 ;;
 10425                           
 10426                           	psect	text82
 10427  001AF4                     __ptext82:
 10428                           	callstack 0
 10429  001AF4                     _ApplicationTask:
 10430                           	callstack 23
 10431  001AF4                     
 10432                           ;application.c: 310:     switch (state)
 10433  001AF4  EF37  F00E         	goto	l5563
 10434  001AF8                     l5473:
 10435                           
 10436                           ;application.c: 315:         if (GetEvent() != NO_KEY)
 10437  001AF8  ECE5  F020         	call	_GetEvent	;wreg free
 10438  001AFC  0900               	iorlw	0
 10439  001AFE  B4D8               	btfsc	status,2,c
 10440  001B00  EF84  F00D         	goto	u4681
 10441  001B04  EF86  F00D         	goto	u4680
 10442  001B08                     u4681:
 10443  001B08  EF59  F00E         	goto	l1514
 10444  001B0C                     u4680:
 10445  001B0C                     
 10446                           ;application.c: 316:         {;application.c: 317:             buttonNo = GetButton();
 10447  001B0C  ECE8  F020         	call	_GetButton	;wreg free
 10448  001B10  6E3E               	movwf	_buttonNo^0,c
 10449  001B12                     
 10450                           ;application.c: 318:             if (buttonNo < MAX_KEYS)
 10451  001B12  0E04               	movlw	4
 10452  001B14  603E               	cpfslt	_buttonNo^0,c
 10453  001B16  EF8F  F00D         	goto	u4691
 10454  001B1A  EF91  F00D         	goto	u4690
 10455  001B1E                     u4691:
 10456  001B1E  EF96  F00D         	goto	l5481
 10457  001B22                     u4690:
 10458  001B22                     
 10459                           ;application.c: 319:             {;application.c: 320:                 state = (1);
 10460  001B22  0E00               	movlw	0
 10461  001B24  0100               	movlb	0	; () banked
 10462  001B26  6F95               	movwf	(_state+1)& (0+255),b
 10463  001B28  0E01               	movlw	1
 10464  001B2A  6F94               	movwf	_state& (0+255),b
 10465  001B2C                     l5481:
 10466                           
 10467                           ;application.c: 322:             ClearButton();
 10468  001B2C  ECDB  F020         	call	_ClearButton	;wreg free
 10469  001B30                     
 10470                           ;application.c: 323:             ClearEvent();
 10471  001B30  ECD7  F020         	call	_ClearEvent	;wreg free
 10472                           
 10473                           ;application.c: 324:         }
 10474  001B34  EF59  F00E         	goto	l1514
 10475  001B38                     l5485:
 10476                           
 10477                           ;application.c: 331:         if (buttonNo == BUTTON1)
 10478  001B38  043E               	decf	_buttonNo^0,w,c
 10479  001B3A  A4D8               	btfss	status,2,c
 10480  001B3C  EFA2  F00D         	goto	u4701
 10481  001B40  EFA4  F00D         	goto	u4700
 10482  001B44                     u4701:
 10483  001B44  EFAB  F00D         	goto	l5489
 10484  001B48                     u4700:
 10485  001B48                     
 10486                           ;application.c: 332:         {;application.c: 333:             state = (2);
 10487  001B48  0E00               	movlw	0
 10488  001B4A  0100               	movlb	0	; () banked
 10489  001B4C  6F95               	movwf	(_state+1)& (0+255),b
 10490  001B4E  0E02               	movlw	2
 10491  001B50  6F94               	movwf	_state& (0+255),b
 10492                           
 10493                           ;application.c: 334:         }
 10494  001B52  EFD0  F00D         	goto	l1463
 10495  001B56                     l5489:
 10496  001B56  0E02               	movlw	2
 10497  001B58  183E               	xorwf	_buttonNo^0,w,c
 10498  001B5A  A4D8               	btfss	status,2,c
 10499  001B5C  EFB2  F00D         	goto	u4711
 10500  001B60  EFB4  F00D         	goto	u4710
 10501  001B64                     u4711:
 10502  001B64  EFBB  F00D         	goto	l5493
 10503  001B68                     u4710:
 10504  001B68                     
 10505                           ;application.c: 336:         {;application.c: 337:             state = (3);
 10506  001B68  0E00               	movlw	0
 10507  001B6A  0100               	movlb	0	; () banked
 10508  001B6C  6F95               	movwf	(_state+1)& (0+255),b
 10509  001B6E  0E03               	movlw	3
 10510  001B70  6F94               	movwf	_state& (0+255),b
 10511                           
 10512                           ;application.c: 338:         }
 10513  001B72  EFD0  F00D         	goto	l1463
 10514  001B76                     l5493:
 10515  001B76  0E03               	movlw	3
 10516  001B78  183E               	xorwf	_buttonNo^0,w,c
 10517  001B7A  A4D8               	btfss	status,2,c
 10518  001B7C  EFC2  F00D         	goto	u4721
 10519  001B80  EFC4  F00D         	goto	u4720
 10520  001B84                     u4721:
 10521  001B84  EFCB  F00D         	goto	l5497
 10522  001B88                     u4720:
 10523  001B88                     
 10524                           ;application.c: 340:         {;application.c: 341:             state = (4);
 10525  001B88  0E00               	movlw	0
 10526  001B8A  0100               	movlb	0	; () banked
 10527  001B8C  6F95               	movwf	(_state+1)& (0+255),b
 10528  001B8E  0E04               	movlw	4
 10529  001B90  6F94               	movwf	_state& (0+255),b
 10530                           
 10531                           ;application.c: 342:         }
 10532  001B92  EFD0  F00D         	goto	l1463
 10533  001B96                     l5497:
 10534                           
 10535                           ;application.c: 344:         {;application.c: 345:             state = (0);
 10536  001B96  0E00               	movlw	0
 10537  001B98  0100               	movlb	0	; () banked
 10538  001B9A  6F95               	movwf	(_state+1)& (0+255),b
 10539  001B9C  0E00               	movlw	0
 10540  001B9E  6F94               	movwf	_state& (0+255),b
 10541  001BA0                     l1463:
 10542                           
 10543                           ; BSR set to: 0
 10544                           ;application.c: 349:         buttonNo = NO_KEY;
 10545  001BA0  0E00               	movlw	0
 10546  001BA2  6E3E               	movwf	_buttonNo^0,c
 10547                           
 10548                           ;application.c: 350:         break;
 10549  001BA4  EF59  F00E         	goto	l1514
 10550  001BA8                     l5499:
 10551                           
 10552                           ;application.c: 353:         if (motorState != (1))
 10553  001BA8  0434               	decf	_motorState^0,w,c
 10554  001BAA  1035               	iorwf	(_motorState+1)^0,w,c
 10555  001BAC  B4D8               	btfsc	status,2,c
 10556  001BAE  EFDB  F00D         	goto	u4731
 10557  001BB2  EFDD  F00D         	goto	u4730
 10558  001BB6                     u4731:
 10559  001BB6  EFF2  F00D         	goto	l5523
 10560  001BBA                     u4730:
 10561  001BBA                     
 10562                           ;application.c: 354:         {;application.c: 355:             motorState = (1);
 10563  001BBA  0E00               	movlw	0
 10564  001BBC  6E35               	movwf	(_motorState+1)^0,c
 10565  001BBE  0E01               	movlw	1
 10566  001BC0  6E34               	movwf	_motorState^0,c
 10567  001BC2  8885               	bsf	133,4,c	;volatile
 10568  001BC4                     
 10569                           ;application.c: 361:             PWM4_LoadDutyValue((180));
 10570  001BC4  0E00               	movlw	0
 10571  001BC6  6E17               	movwf	(PWM4_LoadDutyValue@dutyValue+1)^0,c
 10572  001BC8  0EB4               	movlw	180
 10573  001BCA  6E16               	movwf	PWM4_LoadDutyValue@dutyValue^0,c
 10574  001BCC  ECDB  F01E         	call	_PWM4_LoadDutyValue	;wreg free
 10575  001BD0  9C84               	bcf	132,6,c	;volatile
 10576  001BD2  8A84               	bsf	132,5,c	;volatile
 10577  001BD4  8884               	bsf	132,4,c	;volatile
 10578  001BD6  8C85               	bsf	133,6,c	;volatile
 10579  001BD8  8283               	bsf	131,1,c	;volatile
 10580  001BDA  8E84               	bsf	132,7,c	;volatile
 10581  001BDC  8483               	bsf	131,2,c	;volatile
 10582  001BDE  9A85               	bcf	133,5,c	;volatile
 10583  001BE0  EF59  F00E         	goto	l1514
 10584  001BE4                     l5523:
 10585                           
 10586                           ;application.c: 367:         {;application.c: 368:             state = (0);
 10587  001BE4  0E00               	movlw	0
 10588  001BE6  0100               	movlb	0	; () banked
 10589  001BE8  6F95               	movwf	(_state+1)& (0+255),b
 10590  001BEA  0E00               	movlw	0
 10591  001BEC  6F94               	movwf	_state& (0+255),b
 10592  001BEE  EF59  F00E         	goto	l1514
 10593  001BF2                     l5525:
 10594                           
 10595                           ;application.c: 373:         if (motorState == (1))
 10596  001BF2  0434               	decf	_motorState^0,w,c
 10597  001BF4  1035               	iorwf	(_motorState+1)^0,w,c
 10598  001BF6  A4D8               	btfss	status,2,c
 10599  001BF8  EF00  F00E         	goto	u4741
 10600  001BFC  EF02  F00E         	goto	u4740
 10601  001C00                     u4741:
 10602  001C00  EFF2  F00D         	goto	l5523
 10603  001C04                     u4740:
 10604  001C04                     
 10605                           ;application.c: 374:         {;application.c: 375:             motorState = (0);
 10606  001C04  0E00               	movlw	0
 10607  001C06  6E35               	movwf	(_motorState+1)^0,c
 10608  001C08  0E00               	movlw	0
 10609  001C0A  6E34               	movwf	_motorState^0,c
 10610  001C0C  9885               	bcf	133,4,c	;volatile
 10611  001C0E                     
 10612                           ;application.c: 381:             PWM4_LoadDutyValue((0));
 10613  001C0E  0E00               	movlw	0
 10614  001C10  6E17               	movwf	(PWM4_LoadDutyValue@dutyValue+1)^0,c
 10615  001C12  0E00               	movlw	0
 10616  001C14  6E16               	movwf	PWM4_LoadDutyValue@dutyValue^0,c
 10617  001C16  ECDB  F01E         	call	_PWM4_LoadDutyValue	;wreg free
 10618  001C1A  8C84               	bsf	132,6,c	;volatile
 10619  001C1C  8A84               	bsf	132,5,c	;volatile
 10620  001C1E  8884               	bsf	132,4,c	;volatile
 10621  001C20  8C85               	bsf	133,6,c	;volatile
 10622  001C22  8283               	bsf	131,1,c	;volatile
 10623  001C24  8E84               	bsf	132,7,c	;volatile
 10624  001C26  8A85               	bsf	133,5,c	;volatile
 10625  001C28  9483               	bcf	131,2,c	;volatile
 10626  001C2A  EF59  F00E         	goto	l1514
 10627  001C2E                     l5551:
 10628                           
 10629                           ;application.c: 393:         if (motorState == (1))
 10630  001C2E  0434               	decf	_motorState^0,w,c
 10631  001C30  1035               	iorwf	(_motorState+1)^0,w,c
 10632  001C32  A4D8               	btfss	status,2,c
 10633  001C34  EF1E  F00E         	goto	u4751
 10634  001C38  EF20  F00E         	goto	u4750
 10635  001C3C                     u4751:
 10636  001C3C  EFF2  F00D         	goto	l5523
 10637  001C40                     u4750:
 10638  001C40                     
 10639                           ;application.c: 394:         {;application.c: 396:             motorSpeed = GetMotorSpee
      +                          d(BUTTON.sliderADC_Val);
 10640  001C40  C08F  F016         	movff	_BUTTON+2,GetMotorSpeed@adcVal
 10641  001C44  C090  F017         	movff	_BUTTON+3,GetMotorSpeed@adcVal+1
 10642  001C48  EC5A  F00E         	call	_GetMotorSpeed	;wreg free
 10643  001C4C  C016  F01C         	movff	?_GetMotorSpeed,ApplicationTask@motorSpeed
 10644  001C50  C017  F01D         	movff	?_GetMotorSpeed+1,ApplicationTask@motorSpeed+1
 10645                           
 10646                           ;application.c: 399:             PWM4_LoadDutyValue(motorSpeed);
 10647  001C54  C01C  F016         	movff	ApplicationTask@motorSpeed,PWM4_LoadDutyValue@dutyValue
 10648  001C58  C01D  F017         	movff	ApplicationTask@motorSpeed+1,PWM4_LoadDutyValue@dutyValue+1
 10649  001C5C  ECDB  F01E         	call	_PWM4_LoadDutyValue	;wreg free
 10650  001C60                     
 10651                           ;application.c: 400:             BUTTON.sliderADC_Val = 0;
 10652  001C60  0E00               	movlw	0
 10653  001C62  0100               	movlb	0	; () banked
 10654  001C64  6F90               	movwf	(_BUTTON+3)& (0+255),b
 10655  001C66  0E00               	movlw	0
 10656  001C68  6F8F               	movwf	(_BUTTON+2)& (0+255),b
 10657                           
 10658                           ;application.c: 401:         }
 10659  001C6A  EFF2  F00D         	goto	l5523
 10660  001C6E                     l5563:
 10661  001C6E  C094  F01A         	movff	_state,??_ApplicationTask
 10662  001C72  C095  F01B         	movff	_state+1,??_ApplicationTask+1
 10663                           
 10664                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10665                           ; Switch size 1, requested type "simple"
 10666                           ; Number of cases is 1, Range of values is 0 to 0
 10667                           ; switch strategies available:
 10668                           ; Name         Instructions Cycles
 10669                           ; simple_byte            4     3 (average)
 10670                           ;	Chosen strategy is simple_byte
 10671  001C76  501B               	movf	(??_ApplicationTask+1)^0,w,c
 10672  001C78  0A00               	xorlw	0	; case 0
 10673  001C7A  B4D8               	btfsc	status,2,c
 10674  001C7C  EF42  F00E         	goto	l6723
 10675  001C80  EFF2  F00D         	goto	l5523
 10676  001C84                     l6723:
 10677                           
 10678                           ; Switch size 1, requested type "simple"
 10679                           ; Number of cases is 5, Range of values is 0 to 4
 10680                           ; switch strategies available:
 10681                           ; Name         Instructions Cycles
 10682                           ; simple_byte           16     9 (average)
 10683                           ;	Chosen strategy is simple_byte
 10684  001C84  501A               	movf	??_ApplicationTask^0,w,c
 10685  001C86  0A00               	xorlw	0	; case 0
 10686  001C88  B4D8               	btfsc	status,2,c
 10687  001C8A  EF7C  F00D         	goto	l5473
 10688  001C8E  0A01               	xorlw	1	; case 1
 10689  001C90  B4D8               	btfsc	status,2,c
 10690  001C92  EF9C  F00D         	goto	l5485
 10691  001C96  0A03               	xorlw	3	; case 2
 10692  001C98  B4D8               	btfsc	status,2,c
 10693  001C9A  EFD4  F00D         	goto	l5499
 10694  001C9E  0A01               	xorlw	1	; case 3
 10695  001CA0  B4D8               	btfsc	status,2,c
 10696  001CA2  EFF9  F00D         	goto	l5525
 10697  001CA6  0A07               	xorlw	7	; case 4
 10698  001CA8  B4D8               	btfsc	status,2,c
 10699  001CAA  EF17  F00E         	goto	l5551
 10700  001CAE  EFF2  F00D         	goto	l5523
 10701  001CB2                     l1514:
 10702  001CB2  0012               	return		;funcret
 10703  001CB4                     __end_of_ApplicationTask:
 10704                           	callstack 0
 10705                           
 10706 ;; *************** function _PWM4_LoadDutyValue *****************
 10707 ;; Defined at:
 10708 ;;		line 74 in file "mcc_generated_files/pwm4.c"
 10709 ;; Parameters:    Size  Location     Type
 10710 ;;  dutyValue       2   21[COMRAM] unsigned short 
 10711 ;; Auto vars:     Size  Location     Type
 10712 ;;		None
 10713 ;; Return value:  Size  Location     Type
 10714 ;;                  1    wreg      void 
 10715 ;; Registers used:
 10716 ;;		wreg, status,2, status,0
 10717 ;; Tracked objects:
 10718 ;;		On entry : 0/0
 10719 ;;		On exit  : 0/0
 10720 ;;		Unchanged: 0/0
 10721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10724 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10725 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10726 ;;Total ram usage:        4 bytes
 10727 ;; Hardware stack levels used:    1
 10728 ;; Hardware stack levels required when called:    6
 10729 ;; This function calls:
 10730 ;;		Nothing
 10731 ;; This function is called by:
 10732 ;;		_ApplicationTask
 10733 ;; This function uses a non-reentrant model
 10734 ;;
 10735                           
 10736                           	psect	text83
 10737  003DB6                     __ptext83:
 10738                           	callstack 0
 10739  003DB6                     _PWM4_LoadDutyValue:
 10740                           	callstack 23
 10741  003DB6                     
 10742                           ;mcc_generated_files/pwm4.c: 74:  void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm4.c: 75:  {;mcc_generated_files/pwm4.c: 77:      PWM4DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 10743  003DB6  C016  F018         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
 10744  003DBA  C017  F019         	movff	PWM4_LoadDutyValue@dutyValue+1,??_PWM4_LoadDutyValue+1
 10745  003DBE  90D8               	bcf	status,0,c
 10746  003DC0  3219               	rrcf	(??_PWM4_LoadDutyValue+1)^0,f,c
 10747  003DC2  3218               	rrcf	??_PWM4_LoadDutyValue^0,f,c
 10748  003DC4  90D8               	bcf	status,0,c
 10749  003DC6  3219               	rrcf	(??_PWM4_LoadDutyValue+1)^0,f,c
 10750  003DC8  3218               	rrcf	??_PWM4_LoadDutyValue^0,f,c
 10751  003DCA  5018               	movf	??_PWM4_LoadDutyValue^0,w,c
 10752  003DCC  6EA0               	movwf	160,c	;volatile
 10753                           
 10754                           ;mcc_generated_files/pwm4.c: 80:      PWM4DCL = (dutyValue & 0x0003)<<6;
 10755  003DCE  C016  F018         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
 10756  003DD2  0E03               	movlw	3
 10757  003DD4  1618               	andwf	??_PWM4_LoadDutyValue^0,f,c
 10758  003DD6  0E06               	movlw	6
 10759  003DD8  6E19               	movwf	(??_PWM4_LoadDutyValue+1)^0,c
 10760  003DDA                     u4495:
 10761  003DDA  90D8               	bcf	status,0,c
 10762  003DDC  3618               	rlcf	??_PWM4_LoadDutyValue^0,f,c
 10763  003DDE  2E19               	decfsz	(??_PWM4_LoadDutyValue+1)^0,f,c
 10764  003DE0  EFED  F01E         	goto	u4495
 10765  003DE4  5018               	movf	??_PWM4_LoadDutyValue^0,w,c
 10766  003DE6  6E9F               	movwf	159,c	;volatile
 10767  003DE8  0012               	return		;funcret
 10768  003DEA                     __end_of_PWM4_LoadDutyValue:
 10769                           	callstack 0
 10770                           
 10771 ;; *************** function _GetMotorSpeed *****************
 10772 ;; Defined at:
 10773 ;;		line 243 in file "application.c"
 10774 ;; Parameters:    Size  Location     Type
 10775 ;;  adcVal          2   21[COMRAM] unsigned short 
 10776 ;; Auto vars:     Size  Location     Type
 10777 ;;  retVal          2   23[COMRAM] unsigned short 
 10778 ;; Return value:  Size  Location     Type
 10779 ;;                  2   21[COMRAM] unsigned short 
 10780 ;; Registers used:
 10781 ;;		wreg, status,2, status,0
 10782 ;; Tracked objects:
 10783 ;;		On entry : 0/0
 10784 ;;		On exit  : 0/0
 10785 ;;		Unchanged: 0/0
 10786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10787 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10788 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10790 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10791 ;;Total ram usage:        4 bytes
 10792 ;; Hardware stack levels used:    1
 10793 ;; Hardware stack levels required when called:    6
 10794 ;; This function calls:
 10795 ;;		Nothing
 10796 ;; This function is called by:
 10797 ;;		_ApplicationTask
 10798 ;; This function uses a non-reentrant model
 10799 ;;
 10800                           
 10801                           	psect	text84
 10802  001CB4                     __ptext84:
 10803                           	callstack 0
 10804  001CB4                     _GetMotorSpeed:
 10805                           	callstack 23
 10806  001CB4                     
 10807                           ;application.c: 247:     if (adcVal < ((20)))
 10808  001CB4  5017               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10809  001CB6  E107               	bnz	u4501
 10810  001CB8  0E14               	movlw	20
 10811  001CBA  5C16               	subwf	GetMotorSpeed@adcVal^0,w,c
 10812  001CBC  B0D8               	btfsc	status,0,c
 10813  001CBE  EF63  F00E         	goto	u4501
 10814  001CC2  EF65  F00E         	goto	u4500
 10815  001CC6                     u4501:
 10816  001CC6  EF71  F00E         	goto	l5355
 10817  001CCA                     u4500:
 10818  001CCA  8C84               	bsf	132,6,c	;volatile
 10819  001CCC  8A84               	bsf	132,5,c	;volatile
 10820  001CCE  8884               	bsf	132,4,c	;volatile
 10821  001CD0  8C85               	bsf	133,6,c	;volatile
 10822  001CD2  8283               	bsf	131,1,c	;volatile
 10823  001CD4  8E84               	bsf	132,7,c	;volatile
 10824  001CD6                     l5353:
 10825                           
 10826                           ;application.c: 251:         retVal = (0);
 10827  001CD6  0E00               	movlw	0
 10828  001CD8  6E19               	movwf	(GetMotorSpeed@retVal+1)^0,c
 10829  001CDA  0E00               	movlw	0
 10830  001CDC  6E18               	movwf	GetMotorSpeed@retVal^0,c
 10831                           
 10832                           ;application.c: 252:     }
 10833  001CDE  EF30  F00F         	goto	l5391
 10834  001CE2                     l5355:
 10835  001CE2  5017               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10836  001CE4  E109               	bnz	u4510
 10837  001CE6  0E14               	movlw	20
 10838  001CE8  5C16               	subwf	GetMotorSpeed@adcVal^0,w,c
 10839  001CEA  A0D8               	btfss	status,0,c
 10840  001CEC  EF7A  F00E         	goto	u4511
 10841  001CF0  EF7C  F00E         	goto	u4510
 10842  001CF4                     u4511:
 10843  001CF4  EF93  F00E         	goto	l5361
 10844  001CF8                     u4510:
 10845  001CF8  5017               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10846  001CFA  E107               	bnz	u4521
 10847  001CFC  0E3C               	movlw	60
 10848  001CFE  5C16               	subwf	GetMotorSpeed@adcVal^0,w,c
 10849  001D00  B0D8               	btfsc	status,0,c
 10850  001D02  EF85  F00E         	goto	u4521
 10851  001D06  EF87  F00E         	goto	u4520
 10852  001D0A                     u4521:
 10853  001D0A  EF93  F00E         	goto	l5361
 10854  001D0E                     u4520:
 10855  001D0E  9C84               	bcf	132,6,c	;volatile
 10856  001D10  8A84               	bsf	132,5,c	;volatile
 10857  001D12  8884               	bsf	132,4,c	;volatile
 10858  001D14  8C85               	bsf	133,6,c	;volatile
 10859  001D16  8283               	bsf	131,1,c	;volatile
 10860  001D18  8E84               	bsf	132,7,c	;volatile
 10861  001D1A                     
 10862                           ;application.c: 257:         retVal = ((180));
 10863  001D1A  0E00               	movlw	0
 10864  001D1C  6E19               	movwf	(GetMotorSpeed@retVal+1)^0,c
 10865  001D1E  0EB4               	movlw	180
 10866  001D20  6E18               	movwf	GetMotorSpeed@retVal^0,c
 10867                           
 10868                           ;application.c: 258:     }
 10869  001D22  EF30  F00F         	goto	l5391
 10870  001D26                     l5361:
 10871  001D26  5017               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10872  001D28  E109               	bnz	u4530
 10873  001D2A  0E3C               	movlw	60
 10874  001D2C  5C16               	subwf	GetMotorSpeed@adcVal^0,w,c
 10875  001D2E  A0D8               	btfss	status,0,c
 10876  001D30  EF9C  F00E         	goto	u4531
 10877  001D34  EF9E  F00E         	goto	u4530
 10878  001D38                     u4531:
 10879  001D38  EFB5  F00E         	goto	l5367
 10880  001D3C                     u4530:
 10881  001D3C  5017               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10882  001D3E  E107               	bnz	u4541
 10883  001D40  0E64               	movlw	100
 10884  001D42  5C16               	subwf	GetMotorSpeed@adcVal^0,w,c
 10885  001D44  B0D8               	btfsc	status,0,c
 10886  001D46  EFA7  F00E         	goto	u4541
 10887  001D4A  EFA9  F00E         	goto	u4540
 10888  001D4E                     u4541:
 10889  001D4E  EFB5  F00E         	goto	l5367
 10890  001D52                     u4540:
 10891  001D52  9C84               	bcf	132,6,c	;volatile
 10892  001D54  9A84               	bcf	132,5,c	;volatile
 10893  001D56  8884               	bsf	132,4,c	;volatile
 10894  001D58  8C85               	bsf	133,6,c	;volatile
 10895  001D5A  8283               	bsf	131,1,c	;volatile
 10896  001D5C  8E84               	bsf	132,7,c	;volatile
 10897  001D5E                     
 10898                           ;application.c: 263:         retVal = (((180)) + (70));
 10899  001D5E  0E00               	movlw	0
 10900  001D60  6E19               	movwf	(GetMotorSpeed@retVal+1)^0,c
 10901  001D62  0EFA               	movlw	250
 10902  001D64  6E18               	movwf	GetMotorSpeed@retVal^0,c
 10903                           
 10904                           ;application.c: 264:     }
 10905  001D66  EF30  F00F         	goto	l5391
 10906  001D6A                     l5367:
 10907  001D6A  5017               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10908  001D6C  E109               	bnz	u4550
 10909  001D6E  0E64               	movlw	100
 10910  001D70  5C16               	subwf	GetMotorSpeed@adcVal^0,w,c
 10911  001D72  A0D8               	btfss	status,0,c
 10912  001D74  EFBE  F00E         	goto	u4551
 10913  001D78  EFC0  F00E         	goto	u4550
 10914  001D7C                     u4551:
 10915  001D7C  EFD7  F00E         	goto	l5373
 10916  001D80                     u4550:
 10917  001D80  5017               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10918  001D82  E107               	bnz	u4561
 10919  001D84  0E8C               	movlw	140
 10920  001D86  5C16               	subwf	GetMotorSpeed@adcVal^0,w,c
 10921  001D88  B0D8               	btfsc	status,0,c
 10922  001D8A  EFC9  F00E         	goto	u4561
 10923  001D8E  EFCB  F00E         	goto	u4560
 10924  001D92                     u4561:
 10925  001D92  EFD7  F00E         	goto	l5373
 10926  001D96                     u4560:
 10927  001D96  9C84               	bcf	132,6,c	;volatile
 10928  001D98  9A84               	bcf	132,5,c	;volatile
 10929  001D9A  9884               	bcf	132,4,c	;volatile
 10930  001D9C  8C85               	bsf	133,6,c	;volatile
 10931  001D9E  8283               	bsf	131,1,c	;volatile
 10932  001DA0  8E84               	bsf	132,7,c	;volatile
 10933  001DA2                     
 10934                           ;application.c: 269:         retVal = ((((180)) + (70)) + (70));
 10935  001DA2  0E01               	movlw	1
 10936  001DA4  6E19               	movwf	(GetMotorSpeed@retVal+1)^0,c
 10937  001DA6  0E40               	movlw	64
 10938  001DA8  6E18               	movwf	GetMotorSpeed@retVal^0,c
 10939                           
 10940                           ;application.c: 270:     }
 10941  001DAA  EF30  F00F         	goto	l5391
 10942  001DAE                     l5373:
 10943  001DAE  5017               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10944  001DB0  E109               	bnz	u4570
 10945  001DB2  0E8C               	movlw	140
 10946  001DB4  5C16               	subwf	GetMotorSpeed@adcVal^0,w,c
 10947  001DB6  A0D8               	btfss	status,0,c
 10948  001DB8  EFE0  F00E         	goto	u4571
 10949  001DBC  EFE2  F00E         	goto	u4570
 10950  001DC0                     u4571:
 10951  001DC0  EFF9  F00E         	goto	l5379
 10952  001DC4                     u4570:
 10953  001DC4  5017               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10954  001DC6  E107               	bnz	u4581
 10955  001DC8  0EB4               	movlw	180
 10956  001DCA  5C16               	subwf	GetMotorSpeed@adcVal^0,w,c
 10957  001DCC  B0D8               	btfsc	status,0,c
 10958  001DCE  EFEB  F00E         	goto	u4581
 10959  001DD2  EFED  F00E         	goto	u4580
 10960  001DD6                     u4581:
 10961  001DD6  EFF9  F00E         	goto	l5379
 10962  001DDA                     u4580:
 10963  001DDA  9C84               	bcf	132,6,c	;volatile
 10964  001DDC  9A84               	bcf	132,5,c	;volatile
 10965  001DDE  9884               	bcf	132,4,c	;volatile
 10966  001DE0  9C85               	bcf	133,6,c	;volatile
 10967  001DE2  8283               	bsf	131,1,c	;volatile
 10968  001DE4  8E84               	bsf	132,7,c	;volatile
 10969  001DE6                     
 10970                           ;application.c: 275:         retVal = (((((180)) + (70)) + (70)) + (70));
 10971  001DE6  0E01               	movlw	1
 10972  001DE8  6E19               	movwf	(GetMotorSpeed@retVal+1)^0,c
 10973  001DEA  0E86               	movlw	134
 10974  001DEC  6E18               	movwf	GetMotorSpeed@retVal^0,c
 10975                           
 10976                           ;application.c: 276:     }
 10977  001DEE  EF30  F00F         	goto	l5391
 10978  001DF2                     l5379:
 10979  001DF2  5017               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10980  001DF4  E109               	bnz	u4590
 10981  001DF6  0EB4               	movlw	180
 10982  001DF8  5C16               	subwf	GetMotorSpeed@adcVal^0,w,c
 10983  001DFA  A0D8               	btfss	status,0,c
 10984  001DFC  EF02  F00F         	goto	u4591
 10985  001E00  EF04  F00F         	goto	u4590
 10986  001E04                     u4591:
 10987  001E04  EF1B  F00F         	goto	l5385
 10988  001E08                     u4590:
 10989  001E08  5017               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 10990  001E0A  E107               	bnz	u4601
 10991  001E0C  0ED7               	movlw	215
 10992  001E0E  5C16               	subwf	GetMotorSpeed@adcVal^0,w,c
 10993  001E10  B0D8               	btfsc	status,0,c
 10994  001E12  EF0D  F00F         	goto	u4601
 10995  001E16  EF0F  F00F         	goto	u4600
 10996  001E1A                     u4601:
 10997  001E1A  EF1B  F00F         	goto	l5385
 10998  001E1E                     u4600:
 10999  001E1E  9C84               	bcf	132,6,c	;volatile
 11000  001E20  9A84               	bcf	132,5,c	;volatile
 11001  001E22  9884               	bcf	132,4,c	;volatile
 11002  001E24  9C85               	bcf	133,6,c	;volatile
 11003  001E26  9283               	bcf	131,1,c	;volatile
 11004  001E28  8E84               	bsf	132,7,c	;volatile
 11005  001E2A                     
 11006                           ;application.c: 281:         retVal = ((((((180)) + (70)) + (70)) + (70)) + (70));
 11007  001E2A  0E01               	movlw	1
 11008  001E2C  6E19               	movwf	(GetMotorSpeed@retVal+1)^0,c
 11009  001E2E  0ECC               	movlw	204
 11010  001E30  6E18               	movwf	GetMotorSpeed@retVal^0,c
 11011                           
 11012                           ;application.c: 282:     }
 11013  001E32  EF30  F00F         	goto	l5391
 11014  001E36                     l5385:
 11015  001E36  5017               	movf	(GetMotorSpeed@adcVal+1)^0,w,c
 11016  001E38  E109               	bnz	u4610
 11017  001E3A  0ED7               	movlw	215
 11018  001E3C  5C16               	subwf	GetMotorSpeed@adcVal^0,w,c
 11019  001E3E  A0D8               	btfss	status,0,c
 11020  001E40  EF24  F00F         	goto	u4611
 11021  001E44  EF26  F00F         	goto	u4610
 11022  001E48                     u4611:
 11023  001E48  EF6B  F00E         	goto	l5353
 11024  001E4C                     u4610:
 11025  001E4C  9C84               	bcf	132,6,c	;volatile
 11026  001E4E  9A84               	bcf	132,5,c	;volatile
 11027  001E50  9884               	bcf	132,4,c	;volatile
 11028  001E52  9C85               	bcf	133,6,c	;volatile
 11029  001E54  9283               	bcf	131,1,c	;volatile
 11030  001E56  9E84               	bcf	132,7,c	;volatile
 11031  001E58                     
 11032                           ;application.c: 287:         retVal = (530);
 11033  001E58  0E02               	movlw	2
 11034  001E5A  6E19               	movwf	(GetMotorSpeed@retVal+1)^0,c
 11035  001E5C  0E12               	movlw	18
 11036  001E5E  6E18               	movwf	GetMotorSpeed@retVal^0,c
 11037  001E60                     l5391:
 11038                           
 11039                           ;application.c: 293:     return retVal;
 11040  001E60  C018  F016         	movff	GetMotorSpeed@retVal,?_GetMotorSpeed
 11041  001E64  C019  F017         	movff	GetMotorSpeed@retVal+1,?_GetMotorSpeed+1
 11042  001E68  0012               	return		;funcret
 11043  001E6A                     __end_of_GetMotorSpeed:
 11044                           	callstack 0
 11045                           
 11046 ;; *************** function _GetEvent *****************
 11047 ;; Defined at:
 11048 ;;		line 175 in file "application.c"
 11049 ;; Parameters:    Size  Location     Type
 11050 ;;		None
 11051 ;; Auto vars:     Size  Location     Type
 11052 ;;		None
 11053 ;; Return value:  Size  Location     Type
 11054 ;;                  1    wreg      enum E13025
 11055 ;; Registers used:
 11056 ;;		wreg, status,2
 11057 ;; Tracked objects:
 11058 ;;		On entry : 0/0
 11059 ;;		On exit  : 0/0
 11060 ;;		Unchanged: 0/0
 11061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11066 ;;Total ram usage:        0 bytes
 11067 ;; Hardware stack levels used:    1
 11068 ;; Hardware stack levels required when called:    6
 11069 ;; This function calls:
 11070 ;;		Nothing
 11071 ;; This function is called by:
 11072 ;;		_ApplicationTask
 11073 ;; This function uses a non-reentrant model
 11074 ;;
 11075                           
 11076                           	psect	text85
 11077  0041CA                     __ptext85:
 11078                           	callstack 0
 11079  0041CA                     _GetEvent:
 11080                           	callstack 23
 11081  0041CA                     
 11082                           ;application.c: 177:     return BUTTON.keyStatus;
 11083  0041CA  0100               	movlb	0	; () banked
 11084  0041CC  518E               	movf	(_BUTTON+1)& (0+255),w,b
 11085  0041CE                     
 11086                           ; BSR set to: 0
 11087  0041CE  0012               	return		;funcret
 11088  0041D0                     __end_of_GetEvent:
 11089                           	callstack 0
 11090                           
 11091 ;; *************** function _GetButton *****************
 11092 ;; Defined at:
 11093 ;;		line 207 in file "application.c"
 11094 ;; Parameters:    Size  Location     Type
 11095 ;;		None
 11096 ;; Auto vars:     Size  Location     Type
 11097 ;;		None
 11098 ;; Return value:  Size  Location     Type
 11099 ;;                  1    wreg      enum E13031
 11100 ;; Registers used:
 11101 ;;		wreg, status,2
 11102 ;; Tracked objects:
 11103 ;;		On entry : 0/0
 11104 ;;		On exit  : 0/0
 11105 ;;		Unchanged: 0/0
 11106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11111 ;;Total ram usage:        0 bytes
 11112 ;; Hardware stack levels used:    1
 11113 ;; Hardware stack levels required when called:    6
 11114 ;; This function calls:
 11115 ;;		Nothing
 11116 ;; This function is called by:
 11117 ;;		_ApplicationTask
 11118 ;; This function uses a non-reentrant model
 11119 ;;
 11120                           
 11121                           	psect	text86
 11122  0041D0                     __ptext86:
 11123                           	callstack 0
 11124  0041D0                     _GetButton:
 11125                           	callstack 23
 11126  0041D0                     
 11127                           ;application.c: 209:     return BUTTON.key;
 11128  0041D0  0100               	movlb	0	; () banked
 11129  0041D2  518D               	movf	_BUTTON& (0+255),w,b
 11130  0041D4                     
 11131                           ; BSR set to: 0
 11132  0041D4  0012               	return		;funcret
 11133  0041D6                     __end_of_GetButton:
 11134                           	callstack 0
 11135                           
 11136 ;; *************** function _ClearEvent *****************
 11137 ;; Defined at:
 11138 ;;		line 192 in file "application.c"
 11139 ;; Parameters:    Size  Location     Type
 11140 ;;		None
 11141 ;; Auto vars:     Size  Location     Type
 11142 ;;		None
 11143 ;; Return value:  Size  Location     Type
 11144 ;;                  1    wreg      void 
 11145 ;; Registers used:
 11146 ;;		wreg, status,2
 11147 ;; Tracked objects:
 11148 ;;		On entry : 0/0
 11149 ;;		On exit  : 0/0
 11150 ;;		Unchanged: 0/0
 11151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11156 ;;Total ram usage:        0 bytes
 11157 ;; Hardware stack levels used:    1
 11158 ;; Hardware stack levels required when called:    6
 11159 ;; This function calls:
 11160 ;;		Nothing
 11161 ;; This function is called by:
 11162 ;;		_ApplicationTask
 11163 ;; This function uses a non-reentrant model
 11164 ;;
 11165                           
 11166                           	psect	text87
 11167  0041AE                     __ptext87:
 11168                           	callstack 0
 11169  0041AE                     _ClearEvent:
 11170                           	callstack 23
 11171  0041AE                     
 11172                           ;application.c: 194:     BUTTON.keyStatus = KEY_NO_ACTION;
 11173  0041AE  0E00               	movlw	0
 11174  0041B0  0100               	movlb	0	; () banked
 11175  0041B2  6F8E               	movwf	(_BUTTON+1)& (0+255),b
 11176  0041B4                     
 11177                           ; BSR set to: 0
 11178  0041B4  0012               	return		;funcret
 11179  0041B6                     __end_of_ClearEvent:
 11180                           	callstack 0
 11181                           
 11182 ;; *************** function _ClearButton *****************
 11183 ;; Defined at:
 11184 ;;		line 224 in file "application.c"
 11185 ;; Parameters:    Size  Location     Type
 11186 ;;		None
 11187 ;; Auto vars:     Size  Location     Type
 11188 ;;		None
 11189 ;; Return value:  Size  Location     Type
 11190 ;;                  1    wreg      void 
 11191 ;; Registers used:
 11192 ;;		wreg, status,2
 11193 ;; Tracked objects:
 11194 ;;		On entry : 0/0
 11195 ;;		On exit  : 0/0
 11196 ;;		Unchanged: 0/0
 11197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11202 ;;Total ram usage:        0 bytes
 11203 ;; Hardware stack levels used:    1
 11204 ;; Hardware stack levels required when called:    6
 11205 ;; This function calls:
 11206 ;;		Nothing
 11207 ;; This function is called by:
 11208 ;;		_ApplicationTask
 11209 ;; This function uses a non-reentrant model
 11210 ;;
 11211                           
 11212                           	psect	text88
 11213  0041B6                     __ptext88:
 11214                           	callstack 0
 11215  0041B6                     _ClearButton:
 11216                           	callstack 23
 11217  0041B6                     
 11218                           ;application.c: 226:     BUTTON.key = NO_KEY;
 11219  0041B6  0E00               	movlw	0
 11220  0041B8  0100               	movlb	0	; () banked
 11221  0041BA  6F8D               	movwf	_BUTTON& (0+255),b
 11222  0041BC                     
 11223                           ; BSR set to: 0
 11224  0041BC  0012               	return		;funcret
 11225  0041BE                     __end_of_ClearButton:
 11226                           	callstack 0
 11227                           
 11228 ;; *************** function _INTERRUPT_InterruptManager *****************
 11229 ;; Defined at:
 11230 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 11231 ;; Parameters:    Size  Location     Type
 11232 ;;		None
 11233 ;; Auto vars:     Size  Location     Type
 11234 ;;		None
 11235 ;; Return value:  Size  Location     Type
 11236 ;;                  1    wreg      void 
 11237 ;; Registers used:
 11238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11239 ;; Tracked objects:
 11240 ;;		On entry : 0/0
 11241 ;;		On exit  : 0/0
 11242 ;;		Unchanged: 0/0
 11243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11246 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11247 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11248 ;;Total ram usage:        6 bytes
 11249 ;; Hardware stack levels used:    1
 11250 ;; Hardware stack levels required when called:    5
 11251 ;; This function calls:
 11252 ;;		_ADCC_ThresholdISR
 11253 ;; This function is called by:
 11254 ;;		Interrupt level 2
 11255 ;; This function uses a non-reentrant model
 11256 ;;
 11257                           
 11258                           	psect	intcode
 11259  000008                     __pintcode:
 11260                           	callstack 0
 11261  000008                     _INTERRUPT_InterruptManager:
 11262                           	callstack 18
 11263                           
 11264                           ; BSR set to: 0
 11265                           ;incstack = 0
 11266  000008  824A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11267  00000A  CFFA F010          	movff	pclath,??_INTERRUPT_InterruptManager
 11268  00000E  CFFB F011          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 11269  000012  CFD9 F012          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 11270  000016  CFDA F013          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 11271  00001A  CFF3 F014          	movff	prodl,??_INTERRUPT_InterruptManager+4
 11272  00001E  CFF4 F015          	movff	prodh,??_INTERRUPT_InterruptManager+5
 11273  000022                     
 11274                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 11275  000022  ACF2               	btfss	242,6,c	;volatile
 11276  000024  EF16  F000         	goto	i2u497_41
 11277  000028  EF18  F000         	goto	i2u497_40
 11278  00002C                     i2u497_41:
 11279  00002C  EF29  F000         	goto	i2l1031
 11280  000030                     i2u497_40:
 11281  000030                     
 11282                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
 11283  000030  010E               	movlb	14	; () banked
 11284  000032  A3BE               	btfss	190,1,b	;volatile
 11285  000034  EF1E  F000         	goto	i2u498_41
 11286  000038  EF20  F000         	goto	i2u498_40
 11287  00003C                     i2u498_41:
 11288  00003C  EF29  F000         	goto	i2l1031
 11289  000040                     i2u498_40:
 11290  000040                     
 11291                           ; BSR set to: 14
 11292  000040  A3C6               	btfss	198,1,b	;volatile
 11293  000042  EF25  F000         	goto	i2u499_41
 11294  000046  EF27  F000         	goto	i2u499_40
 11295  00004A                     i2u499_41:
 11296  00004A  EF29  F000         	goto	i2l1031
 11297  00004E                     i2u499_40:
 11298  00004E                     
 11299                           ; BSR set to: 14
 11300                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             ADCC_ThresholdISR();
 11301  00004E  ECC0  F01E         	call	_ADCC_ThresholdISR	;wreg free
 11302  000052                     i2l1031:
 11303  000052  C015  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 11304  000056  C014  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 11305  00005A  C013  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 11306  00005E  C012  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 11307  000062  C011  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 11308  000066  C010  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 11309  00006A  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11310  00006C  0011               	retfie		f
 11311  00006E                     __end_of_INTERRUPT_InterruptManager:
 11312                           	callstack 0
 11313                           
 11314 ;; *************** function _ADCC_ThresholdISR *****************
 11315 ;; Defined at:
 11316 ;;		line 299 in file "mcc_generated_files/adcc.c"
 11317 ;; Parameters:    Size  Location     Type
 11318 ;;		None
 11319 ;; Auto vars:     Size  Location     Type
 11320 ;;		None
 11321 ;; Return value:  Size  Location     Type
 11322 ;;                  1    wreg      void 
 11323 ;; Registers used:
 11324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11325 ;; Tracked objects:
 11326 ;;		On entry : 0/0
 11327 ;;		On exit  : 0/0
 11328 ;;		Unchanged: 0/0
 11329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11334 ;;Total ram usage:        0 bytes
 11335 ;; Hardware stack levels used:    1
 11336 ;; Hardware stack levels required when called:    4
 11337 ;; This function calls:
 11338 ;;		Absolute function
 11339 ;;		_ADCC_DefaultInterruptHandler
 11340 ;;		_ADCC_ThresholdISR_mTouch
 11341 ;; This function is called by:
 11342 ;;		_INTERRUPT_InterruptManager
 11343 ;; This function uses a non-reentrant model
 11344 ;;
 11345                           
 11346                           	psect	text90
 11347  003D80                     __ptext90:
 11348                           	callstack 0
 11349  003D80                     _ADCC_ThresholdISR:
 11350                           	callstack 18
 11351  003D80                     
 11352                           ;mcc_generated_files/adcc.c: 302:     PIR1bits.ADTIF = 0;
 11353  003D80  010E               	movlb	14	; () banked
 11354  003D82  93C6               	bcf	198,1,b	;volatile
 11355  003D84                     
 11356                           ; BSR set to: 14
 11357                           ;mcc_generated_files/adcc.c: 304:     if (ADCC_ADTI_InterruptHandler)
 11358  003D84  0100               	movlb	0	; () banked
 11359  003D86  51FD               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 11360  003D88  11FE               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 11361  003D8A  11FF               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 11362  003D8C  B4D8               	btfsc	status,2,c
 11363  003D8E  EFCB  F01E         	goto	i2u466_41
 11364  003D92  EFCD  F01E         	goto	i2u466_40
 11365  003D96                     i2u466_41:
 11366  003D96  EFDA  F01E         	goto	i2l1213
 11367  003D9A                     i2u466_40:
 11368  003D9A                     
 11369                           ; BSR set to: 0
 11370                           ;mcc_generated_files/adcc.c: 305:         ADCC_ADTI_InterruptHandler();
 11371  003D9A  D802               	call	i2u467_48
 11372  003D9C  EFDA  F01E         	goto	i2u467_49
 11373  003DA0                     i2u467_48:
 11374  003DA0  0005               	push	
 11375  003DA2  6EFA               	movwf	pclath,c
 11376  003DA4  51FD               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 11377  003DA6  6EFD               	movwf	tosl,c
 11378  003DA8  51FE               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 11379  003DAA  6EFE               	movwf	tosh,c
 11380  003DAC  51FF               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 11381  003DAE  6EFF               	movwf	tosu,c
 11382  003DB0  50FA               	movf	pclath,w,c
 11383  003DB2  0012               	return		;indir
 11384  003DB4                     i2u467_49:
 11385  003DB4                     i2l1213:
 11386  003DB4  0012               	return		;funcret
 11387  003DB6                     __end_of_ADCC_ThresholdISR:
 11388                           	callstack 0
 11389                           
 11390 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 11391 ;; Defined at:
 11392 ;;		line 311 in file "mcc_generated_files/adcc.c"
 11393 ;; Parameters:    Size  Location     Type
 11394 ;;		None
 11395 ;; Auto vars:     Size  Location     Type
 11396 ;;		None
 11397 ;; Return value:  Size  Location     Type
 11398 ;;                  1    wreg      void 
 11399 ;; Registers used:
 11400 ;;		None
 11401 ;; Tracked objects:
 11402 ;;		On entry : 0/0
 11403 ;;		On exit  : 0/0
 11404 ;;		Unchanged: 0/0
 11405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11410 ;;Total ram usage:        0 bytes
 11411 ;; Hardware stack levels used:    1
 11412 ;; This function calls:
 11413 ;;		Nothing
 11414 ;; This function is called by:
 11415 ;;		_ADCC_Initialize
 11416 ;;		_ADCC_ThresholdISR
 11417 ;; This function uses a non-reentrant model
 11418 ;;
 11419                           
 11420                           	psect	text91
 11421  0041E8                     __ptext91:
 11422                           	callstack 0
 11423  0041E8                     _ADCC_DefaultInterruptHandler:
 11424                           	callstack 21
 11425  0041E8  0012               	return		;funcret
 11426  0041EA                     __end_of_ADCC_DefaultInterruptHandler:
 11427                           	callstack 0
 11428                           
 11429 ;; *************** function _ADCC_ThresholdISR_mTouch *****************
 11430 ;; Defined at:
 11431 ;;		line 524 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11432 ;; Parameters:    Size  Location     Type
 11433 ;;		None
 11434 ;; Auto vars:     Size  Location     Type
 11435 ;;		None
 11436 ;; Return value:  Size  Location     Type
 11437 ;;                  1    wreg      void 
 11438 ;; Registers used:
 11439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11440 ;; Tracked objects:
 11441 ;;		On entry : 0/0
 11442 ;;		On exit  : 0/0
 11443 ;;		Unchanged: 0/0
 11444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11449 ;;Total ram usage:        0 bytes
 11450 ;; Hardware stack levels used:    1
 11451 ;; Hardware stack levels required when called:    3
 11452 ;; This function calls:
 11453 ;;		_MTOUCH_Sensor_Service
 11454 ;; This function is called by:
 11455 ;;		_MTOUCH_Sensor_ADCC_Initialize
 11456 ;;		_ADCC_ThresholdISR
 11457 ;; This function uses a non-reentrant model
 11458 ;;
 11459                           
 11460                           	psect	text92
 11461  0041A4                     __ptext92:
 11462                           	callstack 0
 11463  0041A4                     _ADCC_ThresholdISR_mTouch:
 11464                           	callstack 18
 11465  0041A4                     
 11466                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 527:     PIR1bits.ADTIF = 0;
 11467  0041A4  010E               	movlb	14	; () banked
 11468  0041A6  93C6               	bcf	198,1,b	;volatile
 11469  0041A8                     
 11470                           ; BSR set to: 14
 11471                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 528:     MTOUCH_Sensor_Service();
 11472  0041A8  ECEA  F014         	call	_MTOUCH_Sensor_Service	;wreg free
 11473  0041AC  0012               	return		;funcret
 11474  0041AE                     __end_of_ADCC_ThresholdISR_mTouch:
 11475                           	callstack 0
 11476                           
 11477 ;; *************** function _MTOUCH_Sensor_Service *****************
 11478 ;; Defined at:
 11479 ;;		line 537 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11480 ;; Parameters:    Size  Location     Type
 11481 ;;		None
 11482 ;; Auto vars:     Size  Location     Type
 11483 ;;  sensor          2   13[COMRAM] PTR struct .
 11484 ;;		 -> mtouch_sensor(45), 
 11485 ;; Return value:  Size  Location     Type
 11486 ;;                  1    wreg      void 
 11487 ;; Registers used:
 11488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11489 ;; Tracked objects:
 11490 ;;		On entry : 0/0
 11491 ;;		On exit  : 0/0
 11492 ;;		Unchanged: 0/0
 11493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11495 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11496 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11497 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11498 ;;Total ram usage:        4 bytes
 11499 ;; Hardware stack levels used:    1
 11500 ;; Hardware stack levels required when called:    2
 11501 ;; This function calls:
 11502 ;;		_Sensor_autoCalibration
 11503 ;;		_Sensor_setSampled
 11504 ;;		i2_Sensor_SetTrisBit
 11505 ;;		i2_Sensor_isCalibrated
 11506 ;;		i2_Sensor_scheduleNextScan
 11507 ;;		i2_abs
 11508 ;; This function is called by:
 11509 ;;		_ADCC_ThresholdISR_mTouch
 11510 ;; This function uses a non-reentrant model
 11511 ;;
 11512                           
 11513                           	psect	text93
 11514  0029D4                     __ptext93:
 11515                           	callstack 0
 11516  0029D4                     _MTOUCH_Sensor_Service:
 11517                           	callstack 18
 11518  0029D4                     
 11519                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 539:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 541:     Sensor_SetTrisBit(currentScanSensor,0);
 11520  0029D4  0E00               	movlw	0
 11521  0029D6  6E01               	movwf	i2Sensor_SetTrisBit@TrisBit^0,c
 11522  0029D8  5048               	movf	_currentScanSensor^0,w,c
 11523  0029DA  EC3E  F01A         	call	i2_Sensor_SetTrisBit
 11524  0029DE                     
 11525                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 543:     if(scanInterrupted)
 11526  0029DE  5046               	movf	_scanInterrupted^0,w,c	;volatile
 11527  0029E0  B4D8               	btfsc	status,2,c
 11528  0029E2  EFF5  F014         	goto	i2u421_41
 11529  0029E6  EFF7  F014         	goto	i2u421_40
 11530  0029EA                     i2u421_41:
 11531  0029EA  EFFB  F014         	goto	i2l224
 11532  0029EE                     i2u421_40:
 11533  0029EE                     
 11534                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 544:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 545:         ADCON0bits.ADON = 0;
 11535  0029EE  010F               	movlb	15	; () banked
 11536  0029F0  9F5B               	bcf	91,7,b	;volatile
 11537                           
 11538                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 546:     }
 11539  0029F2  EF6A  F015         	goto	i2l5149
 11540  0029F6                     i2l224:
 11541                           
 11542                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 548:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 549:         ADCON0bits.ADON = 0;
 11543  0029F6  010F               	movlb	15	; () banked
 11544  0029F8  9F5B               	bcf	91,7,b	;volatile
 11545  0029FA                     
 11546                           ; BSR set to: 15
 11547                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 550:         sensor = &mtouch_sensor[curren
      +                          tScanSensor];
 11548  0029FA  5048               	movf	_currentScanSensor^0,w,c
 11549  0029FC  0D09               	mullw	9
 11550  0029FE  0E97               	movlw	low _mtouch_sensor
 11551  002A00  24F3               	addwf	243,w,c
 11552  002A02  6E0E               	movwf	MTOUCH_Sensor_Service@sensor^0,c
 11553  002A04  0E00               	movlw	high _mtouch_sensor
 11554  002A06  20F4               	addwfc	prodh,w,c
 11555  002A08  6E0F               	movwf	(MTOUCH_Sensor_Service@sensor+1)^0,c
 11556  002A0A                     
 11557                           ; BSR set to: 15
 11558                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 551:         if(!Sensor_isCalibrated(sensor
      +                          ))
 11559  002A0A  C00E  F001         	movff	MTOUCH_Sensor_Service@sensor,i2Sensor_isCalibrated@sensor
 11560  002A0E  C00F  F002         	movff	MTOUCH_Sensor_Service@sensor+1,i2Sensor_isCalibrated@sensor+1
 11561  002A12  EC1E  F020         	call	i2_Sensor_isCalibrated	;wreg free
 11562  002A16  0900               	iorlw	0
 11563  002A18  A4D8               	btfss	status,2,c
 11564  002A1A  EF11  F015         	goto	i2u422_41
 11565  002A1E  EF13  F015         	goto	i2u422_40
 11566  002A22                     i2u422_41:
 11567  002A22  EF1B  F015         	goto	i2l5137
 11568  002A26                     i2u422_40:
 11569  002A26                     
 11570                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 552:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 553:             Sensor_autoCalibration(sensor);
 11571  002A26  C00E  F005         	movff	MTOUCH_Sensor_Service@sensor,Sensor_autoCalibration@sensor
 11572  002A2A  C00F  F006         	movff	MTOUCH_Sensor_Service@sensor+1,Sensor_autoCalibration@sensor+1
 11573  002A2E  EC21  F012         	call	_Sensor_autoCalibration	;wreg free
 11574                           
 11575                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 554:         }
 11576  002A32  EF21  F015         	goto	i2l5139
 11577  002A36                     i2l5137:
 11578                           
 11579                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 556:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 557:             Sensor_setSampled(sensor);
 11580  002A36  C00E  F001         	movff	MTOUCH_Sensor_Service@sensor,Sensor_setSampled@sensor
 11581  002A3A  C00F  F002         	movff	MTOUCH_Sensor_Service@sensor+1,Sensor_setSampled@sensor+1
 11582  002A3E  ECB0  F020         	call	_Sensor_setSampled	;wreg free
 11583  002A42                     i2l5139:
 11584                           
 11585                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 560:         if((mtouch_sensor_packetsample
      +                          _t)
 11586  002A42  5048               	movf	_currentScanSensor^0,w,c
 11587  002A44  0D02               	mullw	2
 11588  002A46  0E7E               	movlw	low _packet_sample
 11589  002A48  24F3               	addwf	243,w,c
 11590  002A4A  6ED9               	movwf	fsr2l,c
 11591  002A4C  0E00               	movlw	high _packet_sample
 11592  002A4E  20F4               	addwfc	prodh,w,c
 11593  002A50  6EDA               	movwf	fsr2h,c
 11594  002A52  CFDE F00C          	movff	postinc2,??_MTOUCH_Sensor_Service
 11595  002A56  CFDD F00D          	movff	postdec2,??_MTOUCH_Sensor_Service+1
 11596  002A5A  506D               	movf	109,w,c	;volatile
 11597  002A5C  5C0C               	subwf	??_MTOUCH_Sensor_Service^0,w,c
 11598  002A5E  6E01               	movwf	i2abs@a^0,c
 11599  002A60  506E               	movf	110,w,c	;volatile
 11600  002A62  580D               	subwfb	(??_MTOUCH_Sensor_Service+1)^0,w,c
 11601  002A64  6E02               	movwf	(i2abs@a+1)^0,c
 11602  002A66  EC77  F01D         	call	i2_abs	;wreg free
 11603  002A6A  5002               	movf	(?i2_abs+1)^0,w,c
 11604  002A6C  E109               	bnz	i2u423_40
 11605  002A6E  0E65               	movlw	101
 11606  002A70  5C01               	subwf	?i2_abs^0,w,c
 11607  002A72  A0D8               	btfss	status,0,c
 11608  002A74  EF3E  F015         	goto	i2u423_41
 11609  002A78  EF40  F015         	goto	i2u423_40
 11610  002A7C                     i2u423_41:
 11611  002A7C  EF4C  F015         	goto	i2l5143
 11612  002A80                     i2u423_40:
 11613  002A80                     
 11614                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 563:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 564:             mtouch_sensor[currentScanSensor].active = 1;
 11615  002A80  5048               	movf	_currentScanSensor^0,w,c
 11616  002A82  0D09               	mullw	9
 11617  002A84  0E9F               	movlw	low (_mtouch_sensor+8)
 11618  002A86  24F3               	addwf	243,w,c
 11619  002A88  6ED9               	movwf	fsr2l,c
 11620  002A8A  0E00               	movlw	high (_mtouch_sensor+8)
 11621  002A8C  20F4               	addwfc	prodh,w,c
 11622  002A8E  6EDA               	movwf	fsr2h,c
 11623  002A90  0100               	movlb	0	; () banked
 11624  002A92  84DF               	bsf	indf2,2,c
 11625                           
 11626                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 565:         }
 11627  002A94  EF56  F015         	goto	i2l5145
 11628  002A98                     i2l5143:
 11629                           
 11630                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 567:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 568:             mtouch_sensor[currentScanSensor].active = 0;
 11631  002A98  5048               	movf	_currentScanSensor^0,w,c
 11632  002A9A  0D09               	mullw	9
 11633  002A9C  0E9F               	movlw	low (_mtouch_sensor+8)
 11634  002A9E  24F3               	addwf	243,w,c
 11635  002AA0  6ED9               	movwf	fsr2l,c
 11636  002AA2  0E00               	movlw	high (_mtouch_sensor+8)
 11637  002AA4  20F4               	addwfc	prodh,w,c
 11638  002AA6  6EDA               	movwf	fsr2h,c
 11639  002AA8  0100               	movlb	0	; () banked
 11640  002AAA  94DF               	bcf	indf2,2,c
 11641  002AAC                     i2l5145:
 11642                           
 11643                           ; BSR set to: 0
 11644                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 576:         if(!lowpowerActivated)
 11645  002AAC  5045               	movf	_lowpowerActivated^0,w,c
 11646  002AAE  A4D8               	btfss	status,2,c
 11647  002AB0  EF5C  F015         	goto	i2u424_41
 11648  002AB4  EF5E  F015         	goto	i2u424_40
 11649  002AB8                     i2u424_41:
 11650  002AB8  EF6A  F015         	goto	i2l5149
 11651  002ABC                     i2u424_40:
 11652  002ABC                     
 11653                           ; BSR set to: 0
 11654                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 577:             packet_sample[currentScanS
      +                          ensor] = ADFLTR;
 11655  002ABC  5048               	movf	_currentScanSensor^0,w,c
 11656  002ABE  0D02               	mullw	2
 11657  002AC0  0E7E               	movlw	low _packet_sample
 11658  002AC2  24F3               	addwf	243,w,c
 11659  002AC4  6ED9               	movwf	fsr2l,c
 11660  002AC6  0E00               	movlw	high _packet_sample
 11661  002AC8  20F4               	addwfc	prodh,w,c
 11662  002ACA  6EDA               	movwf	fsr2h,c
 11663  002ACC  CF6D FFDE          	movff	3949,postinc2	;volatile
 11664  002AD0  CF6E FFDD          	movff	3950,postdec2	;volatile
 11665  002AD4                     i2l5149:
 11666                           
 11667                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 579:     Sensor_scheduleNextScan();
 11668  002AD4  EC00  F010         	call	i2_Sensor_scheduleNextScan	;wreg free
 11669  002AD8  0012               	return		;funcret
 11670  002ADA                     __end_of_MTOUCH_Sensor_Service:
 11671                           	callstack 0
 11672                           
 11673 ;; *************** function i2_Sensor_scheduleNextScan *****************
 11674 ;; Defined at:
 11675 ;;		line 391 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11676 ;; Parameters:    Size  Location     Type
 11677 ;;		None
 11678 ;; Auto vars:     Size  Location     Type
 11679 ;;  sensor          2    8[COMRAM] PTR struct .
 11680 ;;		 -> mtouch_sensor(45), 
 11681 ;;  skipScan        1    7[COMRAM] _Bool 
 11682 ;;  state           1    6[COMRAM] _Bool 
 11683 ;; Return value:  Size  Location     Type
 11684 ;;                  1    wreg      void 
 11685 ;; Registers used:
 11686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11687 ;; Tracked objects:
 11688 ;;		On entry : 0/0
 11689 ;;		On exit  : 0/0
 11690 ;;		Unchanged: 0/0
 11691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11693 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11694 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11695 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11696 ;;Total ram usage:        6 bytes
 11697 ;; Hardware stack levels used:    1
 11698 ;; Hardware stack levels required when called:    1
 11699 ;; This function calls:
 11700 ;;		i2_MTOUCH_Sensor_isEnabled
 11701 ;;		i2_MTOUCH_Sensor_wasSampled
 11702 ;;		i2_Sensor_SetTrisBit
 11703 ;;		i2_Sensor_isCalibrated
 11704 ;;		i2_Sensor_isCalibratingAcqTime
 11705 ;; This function is called by:
 11706 ;;		_MTOUCH_Sensor_Service
 11707 ;; This function uses a non-reentrant model
 11708 ;;
 11709                           
 11710                           	psect	text94
 11711  002000                     __ptext94:
 11712                           	callstack 0
 11713  002000                     i2_Sensor_scheduleNextScan:
 11714                           	callstack 18
 11715  002000                     
 11716                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 393:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 394:     _Bool skipScan = (_Bool)0;
 11717  002000  0E00               	movlw	0
 11718  002002  6E08               	movwf	i2Sensor_scheduleNextScan@skipScan^0,c
 11719                           
 11720                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 395:     _Bool state = (_Bool)GIE;
 11721  002004  0E00               	movlw	0
 11722  002006  BEF2               	btfsc	4082,7,c	;volatile
 11723  002008  0E01               	movlw	1
 11724  00200A  6E07               	movwf	i2Sensor_scheduleNextScan@state^0,c
 11725                           
 11726                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 398:     while(MTOUCH_Sensor_wasSampled(cur
      +                          rentScanSensor) || !MTOUCH_Sensor_isEnabled(currentScanSensor))
 11727  00200C  EF1A  F010         	goto	i2l5021
 11728  002010                     i2l5017:
 11729                           
 11730                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 399:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 400:         if(++currentScanSensor == 5u)
 11731  002010  2A48               	incf	_currentScanSensor^0,f,c
 11732  002012  0E05               	movlw	5
 11733  002014  1848               	xorwf	_currentScanSensor^0,w,c
 11734  002016  A4D8               	btfss	status,2,c
 11735  002018  EF10  F010         	goto	i2u406_41
 11736  00201C  EF12  F010         	goto	i2u406_40
 11737  002020                     i2u406_41:
 11738  002020  EF1A  F010         	goto	i2l5021
 11739  002024                     i2u406_40:
 11740  002024                     
 11741                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 401:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 402:             currentScanSensor = 0;
 11742  002024  0E00               	movlw	0
 11743  002026  6E48               	movwf	_currentScanSensor^0,c
 11744                           
 11745                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 403:             sampling_flag = 0;
 11746  002028  0E00               	movlw	0
 11747  00202A  6E47               	movwf	_sampling_flag^0,c
 11748                           
 11749                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 404:             skipScan = 1;
 11750  00202C  0E01               	movlw	1
 11751  00202E  6E08               	movwf	i2Sensor_scheduleNextScan@skipScan^0,c
 11752                           
 11753                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 405:             break;
 11754  002030  EF30  F010         	goto	i2l5025
 11755  002034                     i2l5021:
 11756                           
 11757                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 398:     while(MTOUCH_Sensor_wasSampled(cur
      +                          rentScanSensor) || !MTOUCH_Sensor_isEnabled(currentScanSensor))
 11758  002034  5048               	movf	_currentScanSensor^0,w,c
 11759  002036  ECF4  F01D         	call	i2_MTOUCH_Sensor_wasSampled
 11760  00203A  0900               	iorlw	0
 11761  00203C  A4D8               	btfss	status,2,c
 11762  00203E  EF23  F010         	goto	i2u407_41
 11763  002042  EF25  F010         	goto	i2u407_40
 11764  002046                     i2u407_41:
 11765  002046  EF08  F010         	goto	i2l5017
 11766  00204A                     i2u407_40:
 11767  00204A  5048               	movf	_currentScanSensor^0,w,c
 11768  00204C  EC13  F01E         	call	i2_MTOUCH_Sensor_isEnabled
 11769  002050  0900               	iorlw	0
 11770  002052  B4D8               	btfsc	status,2,c
 11771  002054  EF2E  F010         	goto	i2u408_41
 11772  002058  EF30  F010         	goto	i2u408_40
 11773  00205C                     i2u408_41:
 11774  00205C  EF08  F010         	goto	i2l5017
 11775  002060                     i2u408_40:
 11776  002060                     i2l5025:
 11777                           
 11778                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 410:     if(skipScan==0)
 11779  002060  5008               	movf	i2Sensor_scheduleNextScan@skipScan^0,w,c
 11780  002062  A4D8               	btfss	status,2,c
 11781  002064  EF36  F010         	goto	i2u409_41
 11782  002068  EF38  F010         	goto	i2u409_40
 11783  00206C                     i2u409_41:
 11784  00206C  EFCA  F010         	goto	i2l197
 11785  002070                     i2u409_40:
 11786  002070                     
 11787                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 411:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 412:         sensor = &mtouch_sensor[currentScanSensor];
 11788  002070  5048               	movf	_currentScanSensor^0,w,c
 11789  002072  0D09               	mullw	9
 11790  002074  0E97               	movlw	low _mtouch_sensor
 11791  002076  24F3               	addwf	243,w,c
 11792  002078  6E09               	movwf	i2Sensor_scheduleNextScan@sensor^0,c
 11793  00207A  0E00               	movlw	high _mtouch_sensor
 11794  00207C  20F4               	addwfc	prodh,w,c
 11795  00207E  6E0A               	movwf	(i2Sensor_scheduleNextScan@sensor+1)^0,c
 11796  002080                     
 11797                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 413:         if(Sensor_isCalibrated(sensor)
      +                          )
 11798  002080  C009  F001         	movff	i2Sensor_scheduleNextScan@sensor,i2Sensor_isCalibrated@sensor
 11799  002084  C00A  F002         	movff	i2Sensor_scheduleNextScan@sensor+1,i2Sensor_isCalibrated@sensor+1
 11800  002088  EC1E  F020         	call	i2_Sensor_isCalibrated	;wreg free
 11801  00208C  0900               	iorlw	0
 11802  00208E  B4D8               	btfsc	status,2,c
 11803  002090  EF4C  F010         	goto	i2u410_41
 11804  002094  EF4E  F010         	goto	i2u410_40
 11805  002098                     i2u410_41:
 11806  002098  EF61  F010         	goto	i2l5033
 11807  00209C                     i2u410_40:
 11808  00209C                     
 11809                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 414:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 415:             ADACQ = (mtouch_sensor_time_t)sensor->acquisition_time;
 11810  00209C  EE20 F003          	lfsr	2,3
 11811  0020A0  5009               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 11812  0020A2  26D9               	addwf	fsr2l,f,c
 11813  0020A4  500A               	movf	(i2Sensor_scheduleNextScan@sensor+1)^0,w,c
 11814  0020A6  22DA               	addwfc	fsr2h,f,c
 11815  0020A8  50DF               	movf	indf2,w,c
 11816  0020AA  010F               	movlb	15	; () banked
 11817  0020AC  6F57               	movwf	87,b	;volatile
 11818                           
 11819                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 416:             ADPRE = (mtouch_sensor_tim
      +                          e_t)sensor->precharge_time;
 11820  0020AE  EE20 F002          	lfsr	2,2
 11821  0020B2  5009               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 11822  0020B4  26D9               	addwf	fsr2l,f,c
 11823  0020B6  500A               	movf	(i2Sensor_scheduleNextScan@sensor+1)^0,w,c
 11824  0020B8  22DA               	addwfc	fsr2h,f,c
 11825  0020BA  50DF               	movf	indf2,w,c
 11826  0020BC  6F59               	movwf	89,b	;volatile
 11827                           
 11828                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 417:         }
 11829  0020BE  EF87  F010         	goto	i2l5039
 11830  0020C2                     i2l5033:
 11831                           
 11832                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 419:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 420:             if(Sensor_isCalibratingAcqTime(sensor))
 11833  0020C2  C009  F001         	movff	i2Sensor_scheduleNextScan@sensor,i2Sensor_isCalibratingAcqTime@sensor
 11834  0020C6  C00A  F002         	movff	i2Sensor_scheduleNextScan@sensor+1,i2Sensor_isCalibratingAcqTime@sensor+1
 11835  0020CA  EC2E  F020         	call	i2_Sensor_isCalibratingAcqTime	;wreg free
 11836  0020CE  0900               	iorlw	0
 11837  0020D0  B4D8               	btfsc	status,2,c
 11838  0020D2  EF6D  F010         	goto	i2u411_41
 11839  0020D6  EF6F  F010         	goto	i2u411_40
 11840  0020DA                     i2u411_41:
 11841  0020DA  EF82  F010         	goto	i2l5037
 11842  0020DE                     i2u411_40:
 11843  0020DE                     
 11844                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 421:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 422:                 ADPRE = (mtouch_sensor_time_t)sensor->precharge
      +                          _time;
 11845  0020DE  EE20 F002          	lfsr	2,2
 11846  0020E2  5009               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 11847  0020E4  26D9               	addwf	fsr2l,f,c
 11848  0020E6  500A               	movf	(i2Sensor_scheduleNextScan@sensor+1)^0,w,c
 11849  0020E8  22DA               	addwfc	fsr2h,f,c
 11850  0020EA  50DF               	movf	indf2,w,c
 11851  0020EC  010F               	movlb	15	; () banked
 11852  0020EE  6F59               	movwf	89,b	;volatile
 11853                           
 11854                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 423:                 ADACQ = (mtouch_sensor
      +                          _time_t)sensor->acquisition_time;
 11855  0020F0  EE20 F003          	lfsr	2,3
 11856  0020F4  5009               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 11857  0020F6  26D9               	addwf	fsr2l,f,c
 11858  0020F8  500A               	movf	(i2Sensor_scheduleNextScan@sensor+1)^0,w,c
 11859  0020FA  22DA               	addwfc	fsr2h,f,c
 11860  0020FC  50DF               	movf	indf2,w,c
 11861  0020FE  6F57               	movwf	87,b	;volatile
 11862                           
 11863                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 424:             }
 11864  002100  EF87  F010         	goto	i2l5039
 11865  002104                     i2l5037:
 11866                           
 11867                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 426:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 427:                 ADPRE = ((mtouch_sensor_time_t)((mtouch_sensor_
      +                          time_t)48 << (uint8_t)2));
 11868  002104  0EC0               	movlw	192
 11869  002106  010F               	movlb	15	; () banked
 11870  002108  6F59               	movwf	89,b	;volatile
 11871                           
 11872                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 428:                 ADACQ = ((mtouch_senso
      +                          r_time_t)((mtouch_sensor_time_t)48 << (uint8_t)2));
 11873  00210A  0EC0               	movlw	192
 11874  00210C  6F57               	movwf	87,b	;volatile
 11875  00210E                     i2l5039:
 11876                           
 11877                           ; BSR set to: 15
 11878                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 432:         ADPRE +=(uint8_t)sample_delay;
 11879  00210E  5043               	movf	_sample_delay^0,w,c	;volatile
 11880  002110  2759               	addwf	89,f,b	;volatile
 11881  002112                     
 11882                           ; BSR set to: 15
 11883                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 433:         ADPCH = (uint8_t)sensor->adpch
      +                          ;
 11884  002112  EE20 F001          	lfsr	2,1
 11885  002116  5009               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 11886  002118  26D9               	addwf	fsr2l,f,c
 11887  00211A  500A               	movf	(i2Sensor_scheduleNextScan@sensor+1)^0,w,c
 11888  00211C  22DA               	addwfc	fsr2h,f,c
 11889  00211E  50DF               	movf	indf2,w,c
 11890  002120  6F5A               	movwf	90,b	;volatile
 11891  002122                     
 11892                           ; BSR set to: 15
 11893                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 434:         ADRPT = (uint8_t)(sensor->over
      +                          sampling>>1);
 11894  002122  EE20 F004          	lfsr	2,4
 11895  002126  5009               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 11896  002128  26D9               	addwf	fsr2l,f,c
 11897  00212A  500A               	movf	(i2Sensor_scheduleNextScan@sensor+1)^0,w,c
 11898  00212C  22DA               	addwfc	fsr2h,f,c
 11899  00212E  50DF               	movf	indf2,w,c
 11900  002130  6E05               	movwf	??i2_Sensor_scheduleNextScan^0,c
 11901  002132  90D8               	bcf	status,0,c
 11902  002134  3005               	rrcf	??i2_Sensor_scheduleNextScan^0,w,c
 11903  002136  6E61               	movwf	97,c	;volatile
 11904  002138                     
 11905                           ; BSR set to: 15
 11906                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 435:         ADCAP = (uint8_t)sensor->addca
      +                          p;
 11907  002138  EE20 F005          	lfsr	2,5
 11908  00213C  5009               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 11909  00213E  26D9               	addwf	fsr2l,f,c
 11910  002140  500A               	movf	(i2Sensor_scheduleNextScan@sensor+1)^0,w,c
 11911  002142  22DA               	addwfc	fsr2h,f,c
 11912  002144  50DF               	movf	indf2,w,c
 11913  002146  6F58               	movwf	88,b	;volatile
 11914  002148                     
 11915                           ; BSR set to: 15
 11916                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 436:         ADCON0bits.ADON = 1;
 11917  002148  8F5B               	bsf	91,7,b	;volatile
 11918  00214A                     
 11919                           ; BSR set to: 15
 11920                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 437:         sampling_flag= 1;
 11921  00214A  0E01               	movlw	1
 11922  00214C  6E47               	movwf	_sampling_flag^0,c
 11923  00214E                     
 11924                           ; BSR set to: 15
 11925                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 438:         Sensor_SetTrisBit(currentScanS
      +                          ensor,1);
 11926  00214E  0E01               	movlw	1
 11927  002150  6E01               	movwf	i2Sensor_SetTrisBit@TrisBit^0,c
 11928  002152  5048               	movf	_currentScanSensor^0,w,c
 11929  002154  EC3E  F01A         	call	i2_Sensor_SetTrisBit
 11930  002158                     
 11931                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 439:         GIE = 0;
 11932  002158  9EF2               	bcf	4082,7,c	;volatile
 11933  00215A                     
 11934                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 440:         ADCON0bits.GO = 1;
 11935  00215A  010F               	movlb	15	; () banked
 11936  00215C  815B               	bsf	91,0,b	;volatile
 11937  00215E                     
 11938                           ; BSR set to: 15
 11939                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 441:         ADACC = ((mtouch_sensor_packet
      +                          sample_t)(sensor->oversampling)<<9);
 11940  00215E  EE20 F004          	lfsr	2,4
 11941  002162  5009               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 11942  002164  26D9               	addwf	fsr2l,f,c
 11943  002166  500A               	movf	(i2Sensor_scheduleNextScan@sensor+1)^0,w,c
 11944  002168  22DA               	addwfc	fsr2h,f,c
 11945  00216A  50DF               	movf	indf2,w,c
 11946  00216C  6E05               	movwf	??i2_Sensor_scheduleNextScan^0,c
 11947  00216E  6A06               	clrf	(??i2_Sensor_scheduleNextScan+1)^0,c
 11948  002170  0E09               	movlw	9
 11949  002172                     i2u412_45:
 11950  002172  90D8               	bcf	status,0,c
 11951  002174  3605               	rlcf	??i2_Sensor_scheduleNextScan^0,f,c
 11952  002176  3606               	rlcf	(??i2_Sensor_scheduleNextScan+1)^0,f,c
 11953  002178  2EE8               	decfsz	wreg,f,c
 11954  00217A  EFB9  F010         	goto	i2u412_45
 11955  00217E  C005  FF6B         	movff	??i2_Sensor_scheduleNextScan,3947	;volatile
 11956  002182  C006  FF6C         	movff	??i2_Sensor_scheduleNextScan+1,3948	;volatile
 11957  002186                     
 11958                           ; BSR set to: 15
 11959                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 442:         GIE = state;
 11960  002186  B007               	btfsc	i2Sensor_scheduleNextScan@state^0,0,c
 11961  002188  D002               	bra	i2u413_45
 11962  00218A  9EF2               	bcf	4082,7,c	;volatile
 11963  00218C  D001               	bra	i2u413_46
 11964  00218E                     i2u413_45:
 11965  00218E  8EF2               	bsf	4082,7,c	;volatile
 11966  002190                     i2u413_46:
 11967  002190                     
 11968                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 443:         scanInterrupted = 0;
 11969  002190  0E00               	movlw	0
 11970  002192  6E46               	movwf	_scanInterrupted^0,c	;volatile
 11971  002194                     i2l197:
 11972  002194  0012               	return		;funcret
 11973  002196                     __end_ofi2_Sensor_scheduleNextScan:
 11974                           	callstack 0
 11975                           
 11976 ;; *************** function i2_Sensor_isCalibrated *****************
 11977 ;; Defined at:
 11978 ;;		line 857 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11979 ;; Parameters:    Size  Location     Type
 11980 ;;  sensor          2    0[COMRAM] PTR struct .
 11981 ;;		 -> mtouch_sensor(45), 
 11982 ;; Auto vars:     Size  Location     Type
 11983 ;;		None
 11984 ;; Return value:  Size  Location     Type
 11985 ;;                  1    wreg      _Bool 
 11986 ;; Registers used:
 11987 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11988 ;; Tracked objects:
 11989 ;;		On entry : 0/0
 11990 ;;		On exit  : 0/0
 11991 ;;		Unchanged: 0/0
 11992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11993 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11996 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11997 ;;Total ram usage:        2 bytes
 11998 ;; Hardware stack levels used:    1
 11999 ;; This function calls:
 12000 ;;		Nothing
 12001 ;; This function is called by:
 12002 ;;		_MTOUCH_Sensor_Service
 12003 ;;		i2_Sensor_scheduleNextScan
 12004 ;; This function uses a non-reentrant model
 12005 ;;
 12006                           
 12007                           	psect	text95
 12008  00403C                     __ptext95:
 12009                           	callstack 0
 12010  00403C                     i2_Sensor_isCalibrated:
 12011                           	callstack 18
 12012  00403C                     
 12013                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 857: static __attribute__((inline)) _Bool S
      +                          ensor_isCalibrated(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          858: {;mcc_generated_files/mtouch/mtouch_sensor.c: 859:     return (_Bool)sensor->calibr
      +                          ated;
 12014  00403C  EE20 F008          	lfsr	2,8
 12015  004040  5001               	movf	i2Sensor_isCalibrated@sensor^0,w,c
 12016  004042  26D9               	addwf	fsr2l,f,c
 12017  004044  5002               	movf	(i2Sensor_isCalibrated@sensor+1)^0,w,c
 12018  004046  22DA               	addwfc	fsr2h,f,c
 12019  004048  B6DF               	btfsc	indf2,3,c
 12020  00404A  EF29  F020         	goto	i2u341_41
 12021  00404E  EF2C  F020         	goto	i2u341_40
 12022  004052                     i2u341_41:
 12023  004052  0E01               	movlw	1
 12024  004054  EF2D  F020         	goto	i2u341_46
 12025  004058                     i2u341_40:
 12026  004058  0E00               	movlw	0
 12027  00405A                     i2u341_46:
 12028  00405A  0012               	return		;funcret
 12029  00405C                     __end_ofi2_Sensor_isCalibrated:
 12030                           	callstack 0
 12031                           
 12032 ;; *************** function i2_Sensor_SetTrisBit *****************
 12033 ;; Defined at:
 12034 ;;		line 236 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12035 ;; Parameters:    Size  Location     Type
 12036 ;;  sensor          1    wreg     enum E12845
 12037 ;;  TrisBit         1    0[COMRAM] unsigned char 
 12038 ;; Auto vars:     Size  Location     Type
 12039 ;;  sensor          1    3[COMRAM] enum E12845
 12040 ;; Return value:  Size  Location     Type
 12041 ;;                  1    wreg      void 
 12042 ;; Registers used:
 12043 ;;		wreg, status,2, status,0
 12044 ;; Tracked objects:
 12045 ;;		On entry : 0/0
 12046 ;;		On exit  : 0/0
 12047 ;;		Unchanged: 0/0
 12048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12049 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12050 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12051 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12052 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12053 ;;Total ram usage:        4 bytes
 12054 ;; Hardware stack levels used:    1
 12055 ;; This function calls:
 12056 ;;		Nothing
 12057 ;; This function is called by:
 12058 ;;		_MTOUCH_Sensor_Service
 12059 ;;		i2_Sensor_scheduleNextScan
 12060 ;; This function uses a non-reentrant model
 12061 ;;
 12062                           
 12063                           	psect	text96
 12064  00347C                     __ptext96:
 12065                           	callstack 0
 12066  00347C                     i2_Sensor_SetTrisBit:
 12067                           	callstack 18
 12068                           
 12069                           ;incstack = 0
 12070                           ;i2Sensor_SetTrisBit@sensor stored from wreg
 12071  00347C  6E04               	movwf	i2Sensor_SetTrisBit@sensor^0,c
 12072  00347E                     
 12073                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 236: static void Sensor_SetTrisBit(enum mto
      +                          uch_sensor_names sensor,uint8_t TrisBit);mcc_generated_files/mtouch/mtouch_sensor.c: 237
      +                          : {;mcc_generated_files/mtouch/mtouch_sensor.c: 238:     switch(sensor)
 12074  00347E  EF64  F01A         	goto	i2l4623
 12075  003482                     i2l144:
 12076                           
 12077                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 241:             TRISAbits.TRISA2 = TrisBit
      +                          ;
 12078  003482  B001               	btfsc	i2Sensor_SetTrisBit@TrisBit^0,0,c
 12079  003484  D002               	bra	i2u334_45
 12080  003486  9487               	bcf	135,2,c	;volatile
 12081  003488  D001               	bra	i2u334_46
 12082  00348A                     i2u334_45:
 12083  00348A  8487               	bsf	135,2,c	;volatile
 12084  00348C                     i2u334_46:
 12085                           
 12086                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 242:             break;
 12087  00348C  EF85  F01A         	goto	i2l151
 12088  003490                     i2l146:
 12089                           
 12090                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 244:             TRISDbits.TRISD7 = TrisBit
      +                          ;
 12091  003490  B001               	btfsc	i2Sensor_SetTrisBit@TrisBit^0,0,c
 12092  003492  D002               	bra	i2u335_45
 12093  003494  9E8A               	bcf	138,7,c	;volatile
 12094  003496  D001               	bra	i2u335_46
 12095  003498                     i2u335_45:
 12096  003498  8E8A               	bsf	138,7,c	;volatile
 12097  00349A                     i2u335_46:
 12098                           
 12099                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 245:             break;
 12100  00349A  EF85  F01A         	goto	i2l151
 12101  00349E                     i2l147:
 12102                           
 12103                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 247:             TRISAbits.TRISA4 = TrisBit
      +                          ;
 12104  00349E  B001               	btfsc	i2Sensor_SetTrisBit@TrisBit^0,0,c
 12105  0034A0  D002               	bra	i2u336_45
 12106  0034A2  9887               	bcf	135,4,c	;volatile
 12107  0034A4  D001               	bra	i2u336_46
 12108  0034A6                     i2u336_45:
 12109  0034A6  8887               	bsf	135,4,c	;volatile
 12110  0034A8                     i2u336_46:
 12111                           
 12112                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 248:             break;
 12113  0034A8  EF85  F01A         	goto	i2l151
 12114  0034AC                     i2l148:
 12115                           
 12116                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 250:             TRISAbits.TRISA5 = TrisBit
      +                          ;
 12117  0034AC  B001               	btfsc	i2Sensor_SetTrisBit@TrisBit^0,0,c
 12118  0034AE  D002               	bra	i2u337_45
 12119  0034B0  9A87               	bcf	135,5,c	;volatile
 12120  0034B2  D001               	bra	i2u337_46
 12121  0034B4                     i2u337_45:
 12122  0034B4  8A87               	bsf	135,5,c	;volatile
 12123  0034B6                     i2u337_46:
 12124                           
 12125                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 251:             break;
 12126  0034B6  EF85  F01A         	goto	i2l151
 12127  0034BA                     i2l149:
 12128                           
 12129                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 253:             TRISBbits.TRISB4 = TrisBit
      +                          ;
 12130  0034BA  B001               	btfsc	i2Sensor_SetTrisBit@TrisBit^0,0,c
 12131  0034BC  D002               	bra	i2u338_45
 12132  0034BE  9888               	bcf	136,4,c	;volatile
 12133  0034C0  D001               	bra	i2u338_46
 12134  0034C2                     i2u338_45:
 12135  0034C2  8888               	bsf	136,4,c	;volatile
 12136  0034C4                     i2u338_46:
 12137                           
 12138                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 254:             break;
 12139  0034C4  EF85  F01A         	goto	i2l151
 12140  0034C8                     i2l4623:
 12141  0034C8  5004               	movf	i2Sensor_SetTrisBit@sensor^0,w,c
 12142  0034CA  6E02               	movwf	??i2_Sensor_SetTrisBit^0,c
 12143  0034CC  6A03               	clrf	(??i2_Sensor_SetTrisBit+1)^0,c
 12144                           
 12145                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12146                           ; Switch size 1, requested type "simple"
 12147                           ; Number of cases is 1, Range of values is 0 to 0
 12148                           ; switch strategies available:
 12149                           ; Name         Instructions Cycles
 12150                           ; simple_byte            4     3 (average)
 12151                           ;	Chosen strategy is simple_byte
 12152  0034CE  5003               	movf	(??i2_Sensor_SetTrisBit+1)^0,w,c
 12153  0034D0  0A00               	xorlw	0	; case 0
 12154  0034D2  B4D8               	btfsc	status,2,c
 12155  0034D4  EF6E  F01A         	goto	i2l6725
 12156  0034D8  EF85  F01A         	goto	i2l151
 12157  0034DC                     i2l6725:
 12158                           
 12159                           ; Switch size 1, requested type "simple"
 12160                           ; Number of cases is 5, Range of values is 0 to 4
 12161                           ; switch strategies available:
 12162                           ; Name         Instructions Cycles
 12163                           ; simple_byte           16     9 (average)
 12164                           ;	Chosen strategy is simple_byte
 12165  0034DC  5002               	movf	??i2_Sensor_SetTrisBit^0,w,c
 12166  0034DE  0A00               	xorlw	0	; case 0
 12167  0034E0  B4D8               	btfsc	status,2,c
 12168  0034E2  EF41  F01A         	goto	i2l144
 12169  0034E6  0A01               	xorlw	1	; case 1
 12170  0034E8  B4D8               	btfsc	status,2,c
 12171  0034EA  EF48  F01A         	goto	i2l146
 12172  0034EE  0A03               	xorlw	3	; case 2
 12173  0034F0  B4D8               	btfsc	status,2,c
 12174  0034F2  EF4F  F01A         	goto	i2l147
 12175  0034F6  0A01               	xorlw	1	; case 3
 12176  0034F8  B4D8               	btfsc	status,2,c
 12177  0034FA  EF56  F01A         	goto	i2l148
 12178  0034FE  0A07               	xorlw	7	; case 4
 12179  003500  B4D8               	btfsc	status,2,c
 12180  003502  EF5D  F01A         	goto	i2l149
 12181  003506  EF85  F01A         	goto	i2l151
 12182  00350A                     i2l151:
 12183  00350A  0012               	return		;funcret
 12184  00350C                     __end_ofi2_Sensor_SetTrisBit:
 12185                           	callstack 0
 12186                           
 12187 ;; *************** function i2_MTOUCH_Sensor_wasSampled *****************
 12188 ;; Defined at:
 12189 ;;		line 897 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12190 ;; Parameters:    Size  Location     Type
 12191 ;;  sensor          1    wreg     enum E12845
 12192 ;; Auto vars:     Size  Location     Type
 12193 ;;  sensor          1    0[COMRAM] enum E12845
 12194 ;; Return value:  Size  Location     Type
 12195 ;;                  1    wreg      _Bool 
 12196 ;; Registers used:
 12197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12198 ;; Tracked objects:
 12199 ;;		On entry : 0/0
 12200 ;;		On exit  : 0/0
 12201 ;;		Unchanged: 0/0
 12202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12204 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12206 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12207 ;;Total ram usage:        1 bytes
 12208 ;; Hardware stack levels used:    1
 12209 ;; This function calls:
 12210 ;;		Nothing
 12211 ;; This function is called by:
 12212 ;;		i2_Sensor_scheduleNextScan
 12213 ;; This function uses a non-reentrant model
 12214 ;;
 12215                           
 12216                           	psect	text97
 12217  003BE8                     __ptext97:
 12218                           	callstack 0
 12219  003BE8                     i2_MTOUCH_Sensor_wasSampled:
 12220                           	callstack 18
 12221                           
 12222                           ;incstack = 0
 12223                           ;i2MTOUCH_Sensor_wasSampled@sensor stored from wreg
 12224  003BE8  6E01               	movwf	i2MTOUCH_Sensor_wasSampled@sensor^0,c
 12225  003BEA                     
 12226                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 897: _Bool MTOUCH_Sensor_wasSampled(enum mt
      +                          ouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 898: {;mcc_generat
      +                          ed_files/mtouch/mtouch_sensor.c: 899:     if(sensor < 5u)
 12227  003BEA  0E05               	movlw	5
 12228  003BEC  6001               	cpfslt	i2MTOUCH_Sensor_wasSampled@sensor^0,c
 12229  003BEE  EFFB  F01D         	goto	i2u343_41
 12230  003BF2  EFFD  F01D         	goto	i2u343_40
 12231  003BF6                     i2u343_41:
 12232  003BF6  EF11  F01E         	goto	i2l4657
 12233  003BFA                     i2u343_40:
 12234  003BFA                     
 12235                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 900:         return (_Bool)mtouch_sensor[se
      +                          nsor].sampled;
 12236  003BFA  5001               	movf	i2MTOUCH_Sensor_wasSampled@sensor^0,w,c
 12237  003BFC  0D09               	mullw	9
 12238  003BFE  0E9F               	movlw	low (_mtouch_sensor+8)
 12239  003C00  24F3               	addwf	243,w,c
 12240  003C02  6ED9               	movwf	fsr2l,c
 12241  003C04  0E00               	movlw	high (_mtouch_sensor+8)
 12242  003C06  20F4               	addwfc	prodh,w,c
 12243  003C08  6EDA               	movwf	fsr2h,c
 12244  003C0A  0100               	movlb	0	; () banked
 12245  003C0C  B2DF               	btfsc	indf2,1,c
 12246  003C0E  EF0B  F01E         	goto	i2u344_41
 12247  003C12  EF0E  F01E         	goto	i2u344_40
 12248  003C16                     i2u344_41:
 12249  003C16  0E01               	movlw	1
 12250  003C18  EF0F  F01E         	goto	i2u344_46
 12251  003C1C                     i2u344_40:
 12252  003C1C  0E00               	movlw	0
 12253  003C1E                     i2u344_46:
 12254  003C1E  EF12  F01E         	goto	i2l356
 12255  003C22                     i2l4657:
 12256                           
 12257                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 902:         return 0;
 12258  003C22  0E00               	movlw	0
 12259  003C24                     i2l356:
 12260  003C24  0012               	return		;funcret
 12261  003C26                     __end_ofi2_MTOUCH_Sensor_wasSampled:
 12262                           	callstack 0
 12263                           
 12264 ;; *************** function i2_MTOUCH_Sensor_isEnabled *****************
 12265 ;; Defined at:
 12266 ;;		line 785 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12267 ;; Parameters:    Size  Location     Type
 12268 ;;  sensor          1    wreg     enum E12845
 12269 ;; Auto vars:     Size  Location     Type
 12270 ;;  sensor          1    0[COMRAM] enum E12845
 12271 ;; Return value:  Size  Location     Type
 12272 ;;                  1    wreg      _Bool 
 12273 ;; Registers used:
 12274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12275 ;; Tracked objects:
 12276 ;;		On entry : 0/0
 12277 ;;		On exit  : 0/0
 12278 ;;		Unchanged: 0/0
 12279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12281 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12283 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12284 ;;Total ram usage:        1 bytes
 12285 ;; Hardware stack levels used:    1
 12286 ;; This function calls:
 12287 ;;		Nothing
 12288 ;; This function is called by:
 12289 ;;		i2_Sensor_scheduleNextScan
 12290 ;; This function uses a non-reentrant model
 12291 ;;
 12292                           
 12293                           	psect	text98
 12294  003C26                     __ptext98:
 12295                           	callstack 0
 12296  003C26                     i2_MTOUCH_Sensor_isEnabled:
 12297                           	callstack 18
 12298                           
 12299                           ;incstack = 0
 12300                           ;i2MTOUCH_Sensor_isEnabled@sensor stored from wreg
 12301  003C26  6E01               	movwf	i2MTOUCH_Sensor_isEnabled@sensor^0,c
 12302  003C28                     
 12303                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 785: _Bool MTOUCH_Sensor_isEnabled(enum mto
      +                          uch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 786: {;mcc_generate
      +                          d_files/mtouch/mtouch_sensor.c: 787:     if(sensor < 5u)
 12304  003C28  0E05               	movlw	5
 12305  003C2A  6001               	cpfslt	i2MTOUCH_Sensor_isEnabled@sensor^0,c
 12306  003C2C  EF1A  F01E         	goto	i2u339_41
 12307  003C30  EF1C  F01E         	goto	i2u339_40
 12308  003C34                     i2u339_41:
 12309  003C34  EF30  F01E         	goto	i2l4637
 12310  003C38                     i2u339_40:
 12311  003C38                     
 12312                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 788:         return (_Bool)mtouch_sensor[se
      +                          nsor].enabled;
 12313  003C38  5001               	movf	i2MTOUCH_Sensor_isEnabled@sensor^0,w,c
 12314  003C3A  0D09               	mullw	9
 12315  003C3C  0E9F               	movlw	low (_mtouch_sensor+8)
 12316  003C3E  24F3               	addwf	243,w,c
 12317  003C40  6ED9               	movwf	fsr2l,c
 12318  003C42  0E00               	movlw	high (_mtouch_sensor+8)
 12319  003C44  20F4               	addwfc	prodh,w,c
 12320  003C46  6EDA               	movwf	fsr2h,c
 12321  003C48  0100               	movlb	0	; () banked
 12322  003C4A  B0DF               	btfsc	indf2,0,c
 12323  003C4C  EF2A  F01E         	goto	i2u340_41
 12324  003C50  EF2D  F01E         	goto	i2u340_40
 12325  003C54                     i2u340_41:
 12326  003C54  0E01               	movlw	1
 12327  003C56  EF2E  F01E         	goto	i2u340_46
 12328  003C5A                     i2u340_40:
 12329  003C5A  0E00               	movlw	0
 12330  003C5C                     i2u340_46:
 12331  003C5C  EF31  F01E         	goto	i2l308
 12332  003C60                     i2l4637:
 12333                           
 12334                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 790:         return 0;
 12335  003C60  0E00               	movlw	0
 12336  003C62                     i2l308:
 12337  003C62  0012               	return		;funcret
 12338  003C64                     __end_ofi2_MTOUCH_Sensor_isEnabled:
 12339                           	callstack 0
 12340                           
 12341 ;; *************** function _Sensor_setSampled *****************
 12342 ;; Defined at:
 12343 ;;		line 910 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12344 ;; Parameters:    Size  Location     Type
 12345 ;;  sensor          2    0[COMRAM] PTR struct .
 12346 ;;		 -> mtouch_sensor(45), 
 12347 ;; Auto vars:     Size  Location     Type
 12348 ;;		None
 12349 ;; Return value:  Size  Location     Type
 12350 ;;                  1    wreg      void 
 12351 ;; Registers used:
 12352 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12353 ;; Tracked objects:
 12354 ;;		On entry : 0/0
 12355 ;;		On exit  : 0/0
 12356 ;;		Unchanged: 0/0
 12357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12361 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12362 ;;Total ram usage:        2 bytes
 12363 ;; Hardware stack levels used:    1
 12364 ;; This function calls:
 12365 ;;		Nothing
 12366 ;; This function is called by:
 12367 ;;		_MTOUCH_Sensor_Service
 12368 ;; This function uses a non-reentrant model
 12369 ;;
 12370                           
 12371                           	psect	text99
 12372  004160                     __ptext99:
 12373                           	callstack 0
 12374  004160                     _Sensor_setSampled:
 12375                           	callstack 19
 12376  004160                     
 12377                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 910: static __attribute__((inline)) void Se
      +                          nsor_setSampled(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 911
      +                          : {;mcc_generated_files/mtouch/mtouch_sensor.c: 912:     sensor->sampled = 1;
 12378  004160  EE20 F008          	lfsr	2,8
 12379  004164  5001               	movf	Sensor_setSampled@sensor^0,w,c
 12380  004166  26D9               	addwf	fsr2l,f,c
 12381  004168  5002               	movf	(Sensor_setSampled@sensor+1)^0,w,c
 12382  00416A  22DA               	addwfc	fsr2h,f,c
 12383  00416C  82DF               	bsf	indf2,1,c
 12384  00416E  0012               	return		;funcret
 12385  004170                     __end_of_Sensor_setSampled:
 12386                           	callstack 0
 12387                           
 12388 ;; *************** function _Sensor_autoCalibration *****************
 12389 ;; Defined at:
 12390 ;;		line 454 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12391 ;; Parameters:    Size  Location     Type
 12392 ;;  sensor          2    4[COMRAM] PTR struct .
 12393 ;;		 -> mtouch_sensor(45), 
 12394 ;; Auto vars:     Size  Location     Type
 12395 ;;  name            1   10[COMRAM] enum E12845
 12396 ;; Return value:  Size  Location     Type
 12397 ;;                  1    wreg      enum E12851
 12398 ;; Registers used:
 12399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12400 ;; Tracked objects:
 12401 ;;		On entry : 0/0
 12402 ;;		On exit  : 0/0
 12403 ;;		Unchanged: 0/0
 12404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12405 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12407 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12408 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12409 ;;Total ram usage:        7 bytes
 12410 ;; Hardware stack levels used:    1
 12411 ;; Hardware stack levels required when called:    1
 12412 ;; This function calls:
 12413 ;;		_Sensor_setCalibratAcqTime
 12414 ;;		_Sensor_setCalibrated
 12415 ;;		i2_Sensor_isCalibratingAcqTime
 12416 ;;		i2_abs
 12417 ;; This function is called by:
 12418 ;;		_MTOUCH_Sensor_Service
 12419 ;; This function uses a non-reentrant model
 12420 ;;
 12421                           
 12422                           	psect	text100
 12423  002442                     __ptext100:
 12424                           	callstack 0
 12425  002442                     _Sensor_autoCalibration:
 12426                           	callstack 18
 12427  002442                     
 12428                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 454: static enum mtouch_sensor_error Sensor
      +                          _autoCalibration(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 45
      +                          5: {;mcc_generated_files/mtouch/mtouch_sensor.c: 456:     enum mtouch_sensor_names name 
      +                          = sensor->sensor_name;
 12429  002442  C005  FFD9         	movff	Sensor_autoCalibration@sensor,fsr2l
 12430  002446  C006  FFDA         	movff	Sensor_autoCalibration@sensor+1,fsr2h
 12431  00244A  50DF               	movf	indf2,w,c
 12432  00244C  6E0B               	movwf	Sensor_autoCalibration@name^0,c
 12433  00244E                     
 12434                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 459:     if(!Sensor_isCalibratingAcqTime(se
      +                          nsor))
 12435  00244E  C005  F001         	movff	Sensor_autoCalibration@sensor,i2Sensor_isCalibratingAcqTime@sensor
 12436  002452  C006  F002         	movff	Sensor_autoCalibration@sensor+1,i2Sensor_isCalibratingAcqTime@sensor+1
 12437  002456  EC2E  F020         	call	i2_Sensor_isCalibratingAcqTime	;wreg free
 12438  00245A  0900               	iorlw	0
 12439  00245C  A4D8               	btfss	status,2,c
 12440  00245E  EF33  F012         	goto	i2u358_41
 12441  002462  EF35  F012         	goto	i2u358_40
 12442  002466                     i2u358_41:
 12443  002466  EF67  F012         	goto	i2l4761
 12444  00246A                     i2u358_40:
 12445  00246A                     
 12446                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 460:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 461:         if(ADFLTR > ((mtouch_sensor_packetsample_t)(sensor->oversamplin
      +                          g)<<9))
 12447  00246A  EE20 F004          	lfsr	2,4
 12448  00246E  5005               	movf	Sensor_autoCalibration@sensor^0,w,c
 12449  002470  26D9               	addwf	fsr2l,f,c
 12450  002472  5006               	movf	(Sensor_autoCalibration@sensor+1)^0,w,c
 12451  002474  22DA               	addwfc	fsr2h,f,c
 12452  002476  50DF               	movf	indf2,w,c
 12453  002478  6E07               	movwf	??_Sensor_autoCalibration^0,c
 12454  00247A  6A08               	clrf	(??_Sensor_autoCalibration+1)^0,c
 12455  00247C  0E09               	movlw	9
 12456  00247E                     i2u359_45:
 12457  00247E  90D8               	bcf	status,0,c
 12458  002480  3607               	rlcf	??_Sensor_autoCalibration^0,f,c
 12459  002482  3608               	rlcf	(??_Sensor_autoCalibration+1)^0,f,c
 12460  002484  2EE8               	decfsz	wreg,f,c
 12461  002486  EF3F  F012         	goto	i2u359_45
 12462  00248A  506D               	movf	109,w,c	;volatile
 12463  00248C  5C07               	subwf	??_Sensor_autoCalibration^0,w,c
 12464  00248E  506E               	movf	110,w,c	;volatile
 12465  002490  5808               	subwfb	(??_Sensor_autoCalibration+1)^0,w,c
 12466  002492  B0D8               	btfsc	status,0,c
 12467  002494  EF4E  F012         	goto	i2u360_41
 12468  002498  EF50  F012         	goto	i2u360_40
 12469  00249C                     i2u360_41:
 12470  00249C  EF5F  F012         	goto	i2l4757
 12471  0024A0                     i2u360_40:
 12472  0024A0                     
 12473                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 462:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 463:             if(++(sensor->addcap) >= (mtouch_sensor_addcap_t)31)
 12474  0024A0  EE20 F005          	lfsr	2,5
 12475  0024A4  5005               	movf	Sensor_autoCalibration@sensor^0,w,c
 12476  0024A6  26D9               	addwf	fsr2l,f,c
 12477  0024A8  5006               	movf	(Sensor_autoCalibration@sensor+1)^0,w,c
 12478  0024AA  22DA               	addwfc	fsr2h,f,c
 12479  0024AC  2ADF               	incf	indf2,f,c
 12480  0024AE  0E1E               	movlw	30
 12481  0024B0  64DF               	cpfsgt	indf2,c
 12482  0024B2  EF5D  F012         	goto	i2u361_41
 12483  0024B6  EF5F  F012         	goto	i2u361_40
 12484  0024BA                     i2u361_41:
 12485  0024BA  EFC4  F012         	goto	i2l204
 12486  0024BE                     i2u361_40:
 12487  0024BE                     i2l4757:
 12488                           
 12489                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 464:                 Sensor_setCalibratAcqT
      +                          ime(sensor);
 12490  0024BE  C005  F001         	movff	Sensor_autoCalibration@sensor,Sensor_setCalibratAcqTime@sensor
 12491  0024C2  C006  F002         	movff	Sensor_autoCalibration@sensor+1,Sensor_setCalibratAcqTime@sensor+1
 12492  0024C6  EC0D  F01F         	call	_Sensor_setCalibratAcqTime	;wreg free
 12493  0024CA  EFC4  F012         	goto	i2l209
 12494  0024CE                     i2l4761:
 12495                           
 12496                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 473:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 474:         if((mtouch_sensor_packetsample_t)abs(packet_sample[name] - ADFL
      +                          TR) < ((mtouch_sensor_packetsample_t)(sensor->oversampling)<<1))
 12497  0024CE  EE20 F004          	lfsr	2,4
 12498  0024D2  5005               	movf	Sensor_autoCalibration@sensor^0,w,c
 12499  0024D4  26D9               	addwf	fsr2l,f,c
 12500  0024D6  5006               	movf	(Sensor_autoCalibration@sensor+1)^0,w,c
 12501  0024D8  22DA               	addwfc	fsr2h,f,c
 12502  0024DA  50DF               	movf	indf2,w,c
 12503  0024DC  6E07               	movwf	??_Sensor_autoCalibration^0,c
 12504  0024DE  6A08               	clrf	(??_Sensor_autoCalibration+1)^0,c
 12505  0024E0  90D8               	bcf	status,0,c
 12506  0024E2  3607               	rlcf	??_Sensor_autoCalibration^0,f,c
 12507  0024E4  3608               	rlcf	(??_Sensor_autoCalibration+1)^0,f,c
 12508  0024E6  500B               	movf	Sensor_autoCalibration@name^0,w,c
 12509  0024E8  0D02               	mullw	2
 12510  0024EA  0E7E               	movlw	low _packet_sample
 12511  0024EC  24F3               	addwf	243,w,c
 12512  0024EE  6ED9               	movwf	fsr2l,c
 12513  0024F0  0E00               	movlw	high _packet_sample
 12514  0024F2  20F4               	addwfc	prodh,w,c
 12515  0024F4  6EDA               	movwf	fsr2h,c
 12516  0024F6  CFDE F009          	movff	postinc2,??_Sensor_autoCalibration+2
 12517  0024FA  CFDD F00A          	movff	postdec2,??_Sensor_autoCalibration+3
 12518  0024FE  506D               	movf	109,w,c	;volatile
 12519  002500  5C09               	subwf	(??_Sensor_autoCalibration+2)^0,w,c
 12520  002502  6E01               	movwf	i2abs@a^0,c
 12521  002504  506E               	movf	110,w,c	;volatile
 12522  002506  580A               	subwfb	(??_Sensor_autoCalibration+3)^0,w,c
 12523  002508  6E02               	movwf	(i2abs@a+1)^0,c
 12524  00250A  EC77  F01D         	call	i2_abs	;wreg free
 12525  00250E  5007               	movf	??_Sensor_autoCalibration^0,w,c
 12526  002510  5C01               	subwf	?i2_abs^0,w,c
 12527  002512  5008               	movf	(??_Sensor_autoCalibration+1)^0,w,c
 12528  002514  5802               	subwfb	(?i2_abs+1)^0,w,c
 12529  002516  B0D8               	btfsc	status,0,c
 12530  002518  EF90  F012         	goto	i2u362_41
 12531  00251C  EF92  F012         	goto	i2u362_40
 12532  002520                     i2u362_41:
 12533  002520  EFA2  F012         	goto	i2l4767
 12534  002524                     i2u362_40:
 12535  002524                     
 12536                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 475:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 476:             sensor->precharge_time = ((mtouch_sensor_time_t)((mtouc
      +                          h_sensor_time_t)48 << (uint8_t)2));
 12537  002524  EE20 F002          	lfsr	2,2
 12538  002528  5005               	movf	Sensor_autoCalibration@sensor^0,w,c
 12539  00252A  26D9               	addwf	fsr2l,f,c
 12540  00252C  5006               	movf	(Sensor_autoCalibration@sensor+1)^0,w,c
 12541  00252E  22DA               	addwfc	fsr2h,f,c
 12542  002530  0EC0               	movlw	192
 12543  002532  6EDF               	movwf	indf2,c
 12544  002534                     i2l4765:
 12545                           
 12546                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 477:             Sensor_setCalibrated(senso
      +                          r);
 12547  002534  C005  F001         	movff	Sensor_autoCalibration@sensor,Sensor_setCalibrated@sensor
 12548  002538  C006  F002         	movff	Sensor_autoCalibration@sensor+1,Sensor_setCalibrated@sensor+1
 12549  00253C  EC5C  F020         	call	_Sensor_setCalibrated	;wreg free
 12550                           
 12551                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 478:         }
 12552  002540  EFC4  F012         	goto	i2l209
 12553  002544                     i2l4767:
 12554                           
 12555                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 480:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 481:             if((sensor->acquisition_time) >= (mtouch_sensor_time_t)
      +                          (((mtouch_sensor_time_t)((mtouch_sensor_time_t)48 << (uint8_t)2)) - ((mtouch_sensor_time
      +                          _t)2 << (uint8_t)2)))
 12556  002544  EE20 F003          	lfsr	2,3
 12557  002548  5005               	movf	Sensor_autoCalibration@sensor^0,w,c
 12558  00254A  26D9               	addwf	fsr2l,f,c
 12559  00254C  5006               	movf	(Sensor_autoCalibration@sensor+1)^0,w,c
 12560  00254E  22DA               	addwfc	fsr2h,f,c
 12561  002550  0EB7               	movlw	183
 12562  002552  64DF               	cpfsgt	indf2,c
 12563  002554  EFAE  F012         	goto	i2u363_41
 12564  002558  EFB0  F012         	goto	i2u363_40
 12565  00255C                     i2u363_41:
 12566  00255C  EFBA  F012         	goto	i2l4773
 12567  002560                     i2u363_40:
 12568  002560                     
 12569                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 482:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 483:                 sensor->precharge_time = ((mtouch_sensor_time_t
      +                          )((mtouch_sensor_time_t)48 << (uint8_t)2));
 12570  002560  EE20 F002          	lfsr	2,2
 12571  002564  5005               	movf	Sensor_autoCalibration@sensor^0,w,c
 12572  002566  26D9               	addwf	fsr2l,f,c
 12573  002568  5006               	movf	(Sensor_autoCalibration@sensor+1)^0,w,c
 12574  00256A  22DA               	addwfc	fsr2h,f,c
 12575  00256C  0EC0               	movlw	192
 12576  00256E  6EDF               	movwf	indf2,c
 12577  002570  EF9A  F012         	goto	i2l4765
 12578  002574                     i2l4773:
 12579                           
 12580                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 487:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 490:                 sensor->acquisition_time += ((mtouch_sensor_tim
      +                          e_t)2 << (uint8_t)2);
 12581  002574  EE20 F003          	lfsr	2,3
 12582  002578  5005               	movf	Sensor_autoCalibration@sensor^0,w,c
 12583  00257A  26D9               	addwf	fsr2l,f,c
 12584  00257C  5006               	movf	(Sensor_autoCalibration@sensor+1)^0,w,c
 12585  00257E  22DA               	addwfc	fsr2h,f,c
 12586  002580  0E08               	movlw	8
 12587  002582  26DF               	addwf	indf2,f,c
 12588  002584  EFC4  F012         	goto	i2l209
 12589  002588                     i2l204:
 12590  002588                     i2l209:
 12591  002588  0012               	return		;funcret
 12592  00258A                     __end_of_Sensor_autoCalibration:
 12593                           	callstack 0
 12594                           
 12595 ;; *************** function i2_abs *****************
 12596 ;; Defined at:
 12597 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
 12598 ;; Parameters:    Size  Location     Type
 12599 ;;  a               2    0[COMRAM] int 
 12600 ;; Auto vars:     Size  Location     Type
 12601 ;;		None
 12602 ;; Return value:  Size  Location     Type
 12603 ;;                  2    0[COMRAM] int 
 12604 ;; Registers used:
 12605 ;;		wreg, status,2, status,0
 12606 ;; Tracked objects:
 12607 ;;		On entry : 0/0
 12608 ;;		On exit  : 0/0
 12609 ;;		Unchanged: 0/0
 12610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12613 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12614 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12615 ;;Total ram usage:        4 bytes
 12616 ;; Hardware stack levels used:    1
 12617 ;; This function calls:
 12618 ;;		Nothing
 12619 ;; This function is called by:
 12620 ;;		_Sensor_autoCalibration
 12621 ;;		_MTOUCH_Sensor_Service
 12622 ;; This function uses a non-reentrant model
 12623 ;;
 12624                           
 12625                           	psect	text101
 12626  003AEE                     __ptext101:
 12627                           	callstack 0
 12628  003AEE                     i2_abs:
 12629                           	callstack 19
 12630  003AEE  BE02               	btfsc	(i2abs@a+1)^0,7,c
 12631  003AF0  EF84  F01D         	goto	i2u345_40
 12632  003AF4  5002               	movf	(i2abs@a+1)^0,w,c
 12633  003AF6  E106               	bnz	i2u345_41
 12634  003AF8  0401               	decf	i2abs@a^0,w,c
 12635  003AFA  B0D8               	btfsc	status,0,c
 12636  003AFC  EF82  F01D         	goto	i2u345_41
 12637  003B00  EF84  F01D         	goto	i2u345_40
 12638  003B04                     i2u345_41:
 12639  003B04  EF92  F01D         	goto	i2l2192
 12640  003B08                     i2u345_40:
 12641  003B08  C001  F003         	movff	i2abs@a,??i2_abs
 12642  003B0C  C002  F004         	movff	i2abs@a+1,??i2_abs+1
 12643  003B10  1E03               	comf	??i2_abs^0,f,c
 12644  003B12  1E04               	comf	(??i2_abs+1)^0,f,c
 12645  003B14  4A03               	infsnz	??i2_abs^0,f,c
 12646  003B16  2A04               	incf	(??i2_abs+1)^0,f,c
 12647  003B18  C003  F001         	movff	??i2_abs,?i2_abs
 12648  003B1C  C004  F002         	movff	??i2_abs+1,?i2_abs+1
 12649  003B20  EF96  F01D         	goto	i2l2195
 12650  003B24                     i2l2192:
 12651  003B24  C001  F001         	movff	i2abs@a,?i2_abs
 12652  003B28  C002  F002         	movff	i2abs@a+1,?i2_abs+1
 12653  003B2C                     i2l2195:
 12654  003B2C  0012               	return		;funcret
 12655  003B2E                     __end_ofi2_abs:
 12656                           	callstack 0
 12657                           
 12658 ;; *************** function i2_Sensor_isCalibratingAcqTime *****************
 12659 ;; Defined at:
 12660 ;;		line 875 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12661 ;; Parameters:    Size  Location     Type
 12662 ;;  sensor          2    0[COMRAM] PTR struct .
 12663 ;;		 -> mtouch_sensor(45), 
 12664 ;; Auto vars:     Size  Location     Type
 12665 ;;		None
 12666 ;; Return value:  Size  Location     Type
 12667 ;;                  1    wreg      _Bool 
 12668 ;; Registers used:
 12669 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12670 ;; Tracked objects:
 12671 ;;		On entry : 0/0
 12672 ;;		On exit  : 0/0
 12673 ;;		Unchanged: 0/0
 12674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12675 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12678 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12679 ;;Total ram usage:        2 bytes
 12680 ;; Hardware stack levels used:    1
 12681 ;; This function calls:
 12682 ;;		Nothing
 12683 ;; This function is called by:
 12684 ;;		_Sensor_autoCalibration
 12685 ;;		i2_Sensor_scheduleNextScan
 12686 ;; This function uses a non-reentrant model
 12687 ;;
 12688                           
 12689                           	psect	text102
 12690  00405C                     __ptext102:
 12691                           	callstack 0
 12692  00405C                     i2_Sensor_isCalibratingAcqTime:
 12693                           	callstack 18
 12694  00405C                     
 12695                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 875: static __attribute__((inline)) _Bool S
      +                          ensor_isCalibratingAcqTime(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_se
      +                          nsor.c: 876: {;mcc_generated_files/mtouch/mtouch_sensor.c: 877:     return (_Bool)sensor
      +                          ->acqTime_cal;
 12696  00405C  EE20 F008          	lfsr	2,8
 12697  004060  5001               	movf	i2Sensor_isCalibratingAcqTime@sensor^0,w,c
 12698  004062  26D9               	addwf	fsr2l,f,c
 12699  004064  5002               	movf	(i2Sensor_isCalibratingAcqTime@sensor+1)^0,w,c
 12700  004066  22DA               	addwfc	fsr2h,f,c
 12701  004068  B8DF               	btfsc	indf2,4,c
 12702  00406A  EF39  F020         	goto	i2u342_41
 12703  00406E  EF3C  F020         	goto	i2u342_40
 12704  004072                     i2u342_41:
 12705  004072  0E01               	movlw	1
 12706  004074  EF3D  F020         	goto	i2u342_46
 12707  004078                     i2u342_40:
 12708  004078  0E00               	movlw	0
 12709  00407A                     i2u342_46:
 12710  00407A  0012               	return		;funcret
 12711  00407C                     __end_ofi2_Sensor_isCalibratingAcqTime:
 12712                           	callstack 0
 12713                           
 12714 ;; *************** function _Sensor_setCalibrated *****************
 12715 ;; Defined at:
 12716 ;;		line 862 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12717 ;; Parameters:    Size  Location     Type
 12718 ;;  sensor          2    0[COMRAM] PTR struct .
 12719 ;;		 -> mtouch_sensor(45), 
 12720 ;; Auto vars:     Size  Location     Type
 12721 ;;		None
 12722 ;; Return value:  Size  Location     Type
 12723 ;;                  1    wreg      void 
 12724 ;; Registers used:
 12725 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12726 ;; Tracked objects:
 12727 ;;		On entry : 0/0
 12728 ;;		On exit  : 0/0
 12729 ;;		Unchanged: 0/0
 12730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12731 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12734 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12735 ;;Total ram usage:        2 bytes
 12736 ;; Hardware stack levels used:    1
 12737 ;; This function calls:
 12738 ;;		Nothing
 12739 ;; This function is called by:
 12740 ;;		_Sensor_autoCalibration
 12741 ;; This function uses a non-reentrant model
 12742 ;;
 12743                           
 12744                           	psect	text103
 12745  0040B8                     __ptext103:
 12746                           	callstack 0
 12747  0040B8                     _Sensor_setCalibrated:
 12748                           	callstack 18
 12749  0040B8                     
 12750                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 862: static void Sensor_setCalibrated(mtouc
      +                          h_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 863: {;mcc_generated_fil
      +                          es/mtouch/mtouch_sensor.c: 864:     sensor->calibrated = 1;
 12751  0040B8  EE20 F008          	lfsr	2,8
 12752  0040BC  5001               	movf	Sensor_setCalibrated@sensor^0,w,c
 12753  0040BE  26D9               	addwf	fsr2l,f,c
 12754  0040C0  5002               	movf	(Sensor_setCalibrated@sensor+1)^0,w,c
 12755  0040C2  22DA               	addwfc	fsr2h,f,c
 12756  0040C4  86DF               	bsf	indf2,3,c
 12757                           
 12758                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 865:     sensor->acqTime_cal = 0;
 12759  0040C6  EE20 F008          	lfsr	2,8
 12760  0040CA  5001               	movf	Sensor_setCalibrated@sensor^0,w,c
 12761  0040CC  26D9               	addwf	fsr2l,f,c
 12762  0040CE  5002               	movf	(Sensor_setCalibrated@sensor+1)^0,w,c
 12763  0040D0  22DA               	addwfc	fsr2h,f,c
 12764  0040D2  98DF               	bcf	indf2,4,c
 12765  0040D4  0012               	return		;funcret
 12766  0040D6                     __end_of_Sensor_setCalibrated:
 12767                           	callstack 0
 12768                           
 12769 ;; *************** function _Sensor_setCalibratAcqTime *****************
 12770 ;; Defined at:
 12771 ;;		line 868 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12772 ;; Parameters:    Size  Location     Type
 12773 ;;  sensor          2    0[COMRAM] PTR struct .
 12774 ;;		 -> mtouch_sensor(45), 
 12775 ;; Auto vars:     Size  Location     Type
 12776 ;;		None
 12777 ;; Return value:  Size  Location     Type
 12778 ;;                  1    wreg      void 
 12779 ;; Registers used:
 12780 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12781 ;; Tracked objects:
 12782 ;;		On entry : 0/0
 12783 ;;		On exit  : 0/0
 12784 ;;		Unchanged: 0/0
 12785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12786 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12789 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12790 ;;Total ram usage:        2 bytes
 12791 ;; Hardware stack levels used:    1
 12792 ;; This function calls:
 12793 ;;		Nothing
 12794 ;; This function is called by:
 12795 ;;		_Sensor_autoCalibration
 12796 ;; This function uses a non-reentrant model
 12797 ;;
 12798                           
 12799                           	psect	text104
 12800  003E1A                     __ptext104:
 12801                           	callstack 0
 12802  003E1A                     _Sensor_setCalibratAcqTime:
 12803                           	callstack 18
 12804  003E1A                     
 12805                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 868: static void Sensor_setCalibratAcqTime(
      +                          mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 869: {;mcc_generate
      +                          d_files/mtouch/mtouch_sensor.c: 870:     sensor->acqTime_cal = 1;
 12806  003E1A  EE20 F008          	lfsr	2,8
 12807  003E1E  5001               	movf	Sensor_setCalibratAcqTime@sensor^0,w,c
 12808  003E20  26D9               	addwf	fsr2l,f,c
 12809  003E22  5002               	movf	(Sensor_setCalibratAcqTime@sensor+1)^0,w,c
 12810  003E24  22DA               	addwfc	fsr2h,f,c
 12811  003E26  88DF               	bsf	indf2,4,c
 12812                           
 12813                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 871:     sensor->acquisition_time = ((mtouc
      +                          h_sensor_time_t)((mtouch_sensor_time_t)1 << (uint8_t)2));
 12814  003E28  EE20 F003          	lfsr	2,3
 12815  003E2C  5001               	movf	Sensor_setCalibratAcqTime@sensor^0,w,c
 12816  003E2E  26D9               	addwf	fsr2l,f,c
 12817  003E30  5002               	movf	(Sensor_setCalibratAcqTime@sensor+1)^0,w,c
 12818  003E32  22DA               	addwfc	fsr2h,f,c
 12819  003E34  0E04               	movlw	4
 12820  003E36  6EDF               	movwf	indf2,c
 12821                           
 12822                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 872:     sensor->precharge_time = ((mtouch_
      +                          sensor_time_t)((mtouch_sensor_time_t)48 << (uint8_t)2));
 12823  003E38  EE20 F002          	lfsr	2,2
 12824  003E3C  5001               	movf	Sensor_setCalibratAcqTime@sensor^0,w,c
 12825  003E3E  26D9               	addwf	fsr2l,f,c
 12826  003E40  5002               	movf	(Sensor_setCalibratAcqTime@sensor+1)^0,w,c
 12827  003E42  22DA               	addwfc	fsr2h,f,c
 12828  003E44  0EC0               	movlw	192
 12829  003E46  6EDF               	movwf	indf2,c
 12830  003E48  0012               	return		;funcret
 12831  003E4A                     __end_of_Sensor_setCalibratAcqTime:
 12832                           	callstack 0
 12833                           
 12834                           	psect	text105
 12835  000000                     __ptext105:
 12836                           	callstack 0
 12837  000000                     
 12838                           	psect	rparam
 12839  0000                     
 12840                           	psect	temp
 12841  00004A                     btemp:
 12842                           	callstack 0
 12843  00004A                     	ds	1
 12844  0000                     int$flags	set	btemp
 12845  0000                     wtemp8	set	btemp+1
 12846  0000                     ttemp5	set	btemp+1
 12847  0000                     ttemp6	set	btemp+4
 12848  0000                     ttemp7	set	btemp+8
 12849                           
 12850                           	psect	idloc
 12851                           
 12852                           ;Config register IDLOC0 @ 0x200000
 12853                           ;	unspecified, using default values
 12854  200000                     	org	2097152
 12855  200000  FFFF               	dw	65535
 12856                           
 12857                           ;Config register IDLOC1 @ 0x200002
 12858                           ;	unspecified, using default values
 12859  200002                     	org	2097154
 12860  200002  FFFF               	dw	65535
 12861                           
 12862                           ;Config register IDLOC2 @ 0x200004
 12863                           ;	unspecified, using default values
 12864  200004                     	org	2097156
 12865  200004  FFFF               	dw	65535
 12866                           
 12867                           ;Config register IDLOC3 @ 0x200006
 12868                           ;	unspecified, using default values
 12869  200006                     	org	2097158
 12870  200006  FFFF               	dw	65535
 12871                           
 12872                           ;Config register IDLOC4 @ 0x200008
 12873                           ;	unspecified, using default values
 12874  200008                     	org	2097160
 12875  200008  FFFF               	dw	65535
 12876                           
 12877                           ;Config register IDLOC5 @ 0x20000A
 12878                           ;	unspecified, using default values
 12879  20000A                     	org	2097162
 12880  20000A  FFFF               	dw	65535
 12881                           
 12882                           ;Config register IDLOC6 @ 0x20000C
 12883                           ;	unspecified, using default values
 12884  20000C                     	org	2097164
 12885  20000C  FFFF               	dw	65535
 12886                           
 12887                           ;Config register IDLOC7 @ 0x20000E
 12888                           ;	unspecified, using default values
 12889  20000E                     	org	2097166
 12890  20000E  FFFF               	dw	65535
 12891                           
 12892                           ;Config register IDLOC8 @ 0x200010
 12893                           ;	unspecified, using default values
 12894  200010                     	org	2097168
 12895  200010  FFFF               	dw	65535
 12896                           
 12897                           ;Config register IDLOC9 @ 0x200012
 12898                           ;	unspecified, using default values
 12899  200012                     	org	2097170
 12900  200012  FFFF               	dw	65535
 12901                           
 12902                           ;Config register IDLOC10 @ 0x200014
 12903                           ;	unspecified, using default values
 12904  200014                     	org	2097172
 12905  200014  FFFF               	dw	65535
 12906                           
 12907                           ;Config register IDLOC11 @ 0x200016
 12908                           ;	unspecified, using default values
 12909  200016                     	org	2097174
 12910  200016  FFFF               	dw	65535
 12911                           
 12912                           ;Config register IDLOC12 @ 0x200018
 12913                           ;	unspecified, using default values
 12914  200018                     	org	2097176
 12915  200018  FFFF               	dw	65535
 12916                           
 12917                           ;Config register IDLOC13 @ 0x20001A
 12918                           ;	unspecified, using default values
 12919  20001A                     	org	2097178
 12920  20001A  FFFF               	dw	65535
 12921                           
 12922                           ;Config register IDLOC14 @ 0x20001C
 12923                           ;	unspecified, using default values
 12924  20001C                     	org	2097180
 12925  20001C  FFFF               	dw	65535
 12926                           
 12927                           ;Config register IDLOC15 @ 0x20001E
 12928                           ;	unspecified, using default values
 12929  20001E                     	org	2097182
 12930  20001E  FFFF               	dw	65535
 12931                           
 12932                           ;Config register IDLOC16 @ 0x200020
 12933                           ;	unspecified, using default values
 12934  200020                     	org	2097184
 12935  200020  FFFF               	dw	65535
 12936                           
 12937                           ;Config register IDLOC17 @ 0x200022
 12938                           ;	unspecified, using default values
 12939  200022                     	org	2097186
 12940  200022  FFFF               	dw	65535
 12941                           
 12942                           ;Config register IDLOC18 @ 0x200024
 12943                           ;	unspecified, using default values
 12944  200024                     	org	2097188
 12945  200024  FFFF               	dw	65535
 12946                           
 12947                           ;Config register IDLOC19 @ 0x200026
 12948                           ;	unspecified, using default values
 12949  200026                     	org	2097190
 12950  200026  FFFF               	dw	65535
 12951                           
 12952                           ;Config register IDLOC20 @ 0x200028
 12953                           ;	unspecified, using default values
 12954  200028                     	org	2097192
 12955  200028  FFFF               	dw	65535
 12956                           
 12957                           ;Config register IDLOC21 @ 0x20002A
 12958                           ;	unspecified, using default values
 12959  20002A                     	org	2097194
 12960  20002A  FFFF               	dw	65535
 12961                           
 12962                           ;Config register IDLOC22 @ 0x20002C
 12963                           ;	unspecified, using default values
 12964  20002C                     	org	2097196
 12965  20002C  FFFF               	dw	65535
 12966                           
 12967                           ;Config register IDLOC23 @ 0x20002E
 12968                           ;	unspecified, using default values
 12969  20002E                     	org	2097198
 12970  20002E  FFFF               	dw	65535
 12971                           
 12972                           ;Config register IDLOC24 @ 0x200030
 12973                           ;	unspecified, using default values
 12974  200030                     	org	2097200
 12975  200030  FFFF               	dw	65535
 12976                           
 12977                           ;Config register IDLOC25 @ 0x200032
 12978                           ;	unspecified, using default values
 12979  200032                     	org	2097202
 12980  200032  FFFF               	dw	65535
 12981                           
 12982                           ;Config register IDLOC26 @ 0x200034
 12983                           ;	unspecified, using default values
 12984  200034                     	org	2097204
 12985  200034  FFFF               	dw	65535
 12986                           
 12987                           ;Config register IDLOC27 @ 0x200036
 12988                           ;	unspecified, using default values
 12989  200036                     	org	2097206
 12990  200036  FFFF               	dw	65535
 12991                           
 12992                           ;Config register IDLOC28 @ 0x200038
 12993                           ;	unspecified, using default values
 12994  200038                     	org	2097208
 12995  200038  FFFF               	dw	65535
 12996                           
 12997                           ;Config register IDLOC29 @ 0x20003A
 12998                           ;	unspecified, using default values
 12999  20003A                     	org	2097210
 13000  20003A  FFFF               	dw	65535
 13001                           
 13002                           ;Config register IDLOC30 @ 0x20003C
 13003                           ;	unspecified, using default values
 13004  20003C                     	org	2097212
 13005  20003C  FFFF               	dw	65535
 13006                           
 13007                           ;Config register IDLOC31 @ 0x20003E
 13008                           ;	unspecified, using default values
 13009  20003E                     	org	2097214
 13010  20003E  FFFF               	dw	65535
 13011                           
 13012                           ;Config register IDLOC32 @ 0x200040
 13013                           ;	unspecified, using default values
 13014  200040                     	org	2097216
 13015  200040  FFFF               	dw	65535
 13016                           
 13017                           ;Config register IDLOC33 @ 0x200042
 13018                           ;	unspecified, using default values
 13019  200042                     	org	2097218
 13020  200042  FFFF               	dw	65535
 13021                           
 13022                           ;Config register IDLOC34 @ 0x200044
 13023                           ;	unspecified, using default values
 13024  200044                     	org	2097220
 13025  200044  FFFF               	dw	65535
 13026                           
 13027                           ;Config register IDLOC35 @ 0x200046
 13028                           ;	unspecified, using default values
 13029  200046                     	org	2097222
 13030  200046  FFFF               	dw	65535
 13031                           
 13032                           ;Config register IDLOC36 @ 0x200048
 13033                           ;	unspecified, using default values
 13034  200048                     	org	2097224
 13035  200048  FFFF               	dw	65535
 13036                           
 13037                           ;Config register IDLOC37 @ 0x20004A
 13038                           ;	unspecified, using default values
 13039  20004A                     	org	2097226
 13040  20004A  FFFF               	dw	65535
 13041                           
 13042                           ;Config register IDLOC38 @ 0x20004C
 13043                           ;	unspecified, using default values
 13044  20004C                     	org	2097228
 13045  20004C  FFFF               	dw	65535
 13046                           
 13047                           ;Config register IDLOC39 @ 0x20004E
 13048                           ;	unspecified, using default values
 13049  20004E                     	org	2097230
 13050  20004E  FFFF               	dw	65535
 13051                           
 13052                           ;Config register IDLOC40 @ 0x200050
 13053                           ;	unspecified, using default values
 13054  200050                     	org	2097232
 13055  200050  FFFF               	dw	65535
 13056                           
 13057                           ;Config register IDLOC41 @ 0x200052
 13058                           ;	unspecified, using default values
 13059  200052                     	org	2097234
 13060  200052  FFFF               	dw	65535
 13061                           
 13062                           ;Config register IDLOC42 @ 0x200054
 13063                           ;	unspecified, using default values
 13064  200054                     	org	2097236
 13065  200054  FFFF               	dw	65535
 13066                           
 13067                           ;Config register IDLOC43 @ 0x200056
 13068                           ;	unspecified, using default values
 13069  200056                     	org	2097238
 13070  200056  FFFF               	dw	65535
 13071                           
 13072                           ;Config register IDLOC44 @ 0x200058
 13073                           ;	unspecified, using default values
 13074  200058                     	org	2097240
 13075  200058  FFFF               	dw	65535
 13076                           
 13077                           ;Config register IDLOC45 @ 0x20005A
 13078                           ;	unspecified, using default values
 13079  20005A                     	org	2097242
 13080  20005A  FFFF               	dw	65535
 13081                           
 13082                           ;Config register IDLOC46 @ 0x20005C
 13083                           ;	unspecified, using default values
 13084  20005C                     	org	2097244
 13085  20005C  FFFF               	dw	65535
 13086                           
 13087                           ;Config register IDLOC47 @ 0x20005E
 13088                           ;	unspecified, using default values
 13089  20005E                     	org	2097246
 13090  20005E  FFFF               	dw	65535
 13091                           
 13092                           ;Config register IDLOC48 @ 0x200060
 13093                           ;	unspecified, using default values
 13094  200060                     	org	2097248
 13095  200060  FFFF               	dw	65535
 13096                           
 13097                           ;Config register IDLOC49 @ 0x200062
 13098                           ;	unspecified, using default values
 13099  200062                     	org	2097250
 13100  200062  FFFF               	dw	65535
 13101                           
 13102                           ;Config register IDLOC50 @ 0x200064
 13103                           ;	unspecified, using default values
 13104  200064                     	org	2097252
 13105  200064  FFFF               	dw	65535
 13106                           
 13107                           ;Config register IDLOC51 @ 0x200066
 13108                           ;	unspecified, using default values
 13109  200066                     	org	2097254
 13110  200066  FFFF               	dw	65535
 13111                           
 13112                           ;Config register IDLOC52 @ 0x200068
 13113                           ;	unspecified, using default values
 13114  200068                     	org	2097256
 13115  200068  FFFF               	dw	65535
 13116                           
 13117                           ;Config register IDLOC53 @ 0x20006A
 13118                           ;	unspecified, using default values
 13119  20006A                     	org	2097258
 13120  20006A  FFFF               	dw	65535
 13121                           
 13122                           ;Config register IDLOC54 @ 0x20006C
 13123                           ;	unspecified, using default values
 13124  20006C                     	org	2097260
 13125  20006C  FFFF               	dw	65535
 13126                           
 13127                           ;Config register IDLOC55 @ 0x20006E
 13128                           ;	unspecified, using default values
 13129  20006E                     	org	2097262
 13130  20006E  FFFF               	dw	65535
 13131                           
 13132                           ;Config register IDLOC56 @ 0x200070
 13133                           ;	unspecified, using default values
 13134  200070                     	org	2097264
 13135  200070  FFFF               	dw	65535
 13136                           
 13137                           ;Config register IDLOC57 @ 0x200072
 13138                           ;	unspecified, using default values
 13139  200072                     	org	2097266
 13140  200072  FFFF               	dw	65535
 13141                           
 13142                           ;Config register IDLOC58 @ 0x200074
 13143                           ;	unspecified, using default values
 13144  200074                     	org	2097268
 13145  200074  FFFF               	dw	65535
 13146                           
 13147                           ;Config register IDLOC59 @ 0x200076
 13148                           ;	unspecified, using default values
 13149  200076                     	org	2097270
 13150  200076  FFFF               	dw	65535
 13151                           
 13152                           ;Config register IDLOC60 @ 0x200078
 13153                           ;	unspecified, using default values
 13154  200078                     	org	2097272
 13155  200078  FFFF               	dw	65535
 13156                           
 13157                           ;Config register IDLOC61 @ 0x20007A
 13158                           ;	unspecified, using default values
 13159  20007A                     	org	2097274
 13160  20007A  FFFF               	dw	65535
 13161                           
 13162                           ;Config register IDLOC62 @ 0x20007C
 13163                           ;	unspecified, using default values
 13164  20007C                     	org	2097276
 13165  20007C  FFFF               	dw	65535
 13166                           
 13167                           ;Config register IDLOC63 @ 0x20007E
 13168                           ;	unspecified, using default values
 13169  20007E                     	org	2097278
 13170  20007E  FFFF               	dw	65535
 13171                           
 13172                           ;Config register IDLOC64 @ 0x200080
 13173                           ;	unspecified, using default values
 13174  200080                     	org	2097280
 13175  200080  FFFF               	dw	65535
 13176                           
 13177                           ;Config register IDLOC65 @ 0x200082
 13178                           ;	unspecified, using default values
 13179  200082                     	org	2097282
 13180  200082  FFFF               	dw	65535
 13181                           
 13182                           ;Config register IDLOC66 @ 0x200084
 13183                           ;	unspecified, using default values
 13184  200084                     	org	2097284
 13185  200084  FFFF               	dw	65535
 13186                           
 13187                           ;Config register IDLOC67 @ 0x200086
 13188                           ;	unspecified, using default values
 13189  200086                     	org	2097286
 13190  200086  FFFF               	dw	65535
 13191                           
 13192                           ;Config register IDLOC68 @ 0x200088
 13193                           ;	unspecified, using default values
 13194  200088                     	org	2097288
 13195  200088  FFFF               	dw	65535
 13196                           
 13197                           ;Config register IDLOC69 @ 0x20008A
 13198                           ;	unspecified, using default values
 13199  20008A                     	org	2097290
 13200  20008A  FFFF               	dw	65535
 13201                           
 13202                           ;Config register IDLOC70 @ 0x20008C
 13203                           ;	unspecified, using default values
 13204  20008C                     	org	2097292
 13205  20008C  FFFF               	dw	65535
 13206                           
 13207                           ;Config register IDLOC71 @ 0x20008E
 13208                           ;	unspecified, using default values
 13209  20008E                     	org	2097294
 13210  20008E  FFFF               	dw	65535
 13211                           
 13212                           ;Config register IDLOC72 @ 0x200090
 13213                           ;	unspecified, using default values
 13214  200090                     	org	2097296
 13215  200090  FFFF               	dw	65535
 13216                           
 13217                           ;Config register IDLOC73 @ 0x200092
 13218                           ;	unspecified, using default values
 13219  200092                     	org	2097298
 13220  200092  FFFF               	dw	65535
 13221                           
 13222                           ;Config register IDLOC74 @ 0x200094
 13223                           ;	unspecified, using default values
 13224  200094                     	org	2097300
 13225  200094  FFFF               	dw	65535
 13226                           
 13227                           ;Config register IDLOC75 @ 0x200096
 13228                           ;	unspecified, using default values
 13229  200096                     	org	2097302
 13230  200096  FFFF               	dw	65535
 13231                           
 13232                           ;Config register IDLOC76 @ 0x200098
 13233                           ;	unspecified, using default values
 13234  200098                     	org	2097304
 13235  200098  FFFF               	dw	65535
 13236                           
 13237                           ;Config register IDLOC77 @ 0x20009A
 13238                           ;	unspecified, using default values
 13239  20009A                     	org	2097306
 13240  20009A  FFFF               	dw	65535
 13241                           
 13242                           ;Config register IDLOC78 @ 0x20009C
 13243                           ;	unspecified, using default values
 13244  20009C                     	org	2097308
 13245  20009C  FFFF               	dw	65535
 13246                           
 13247                           ;Config register IDLOC79 @ 0x20009E
 13248                           ;	unspecified, using default values
 13249  20009E                     	org	2097310
 13250  20009E  FFFF               	dw	65535
 13251                           
 13252                           ;Config register IDLOC80 @ 0x2000A0
 13253                           ;	unspecified, using default values
 13254  2000A0                     	org	2097312
 13255  2000A0  FFFF               	dw	65535
 13256                           
 13257                           ;Config register IDLOC81 @ 0x2000A2
 13258                           ;	unspecified, using default values
 13259  2000A2                     	org	2097314
 13260  2000A2  FFFF               	dw	65535
 13261                           
 13262                           ;Config register IDLOC82 @ 0x2000A4
 13263                           ;	unspecified, using default values
 13264  2000A4                     	org	2097316
 13265  2000A4  FFFF               	dw	65535
 13266                           
 13267                           ;Config register IDLOC83 @ 0x2000A6
 13268                           ;	unspecified, using default values
 13269  2000A6                     	org	2097318
 13270  2000A6  FFFF               	dw	65535
 13271                           
 13272                           ;Config register IDLOC84 @ 0x2000A8
 13273                           ;	unspecified, using default values
 13274  2000A8                     	org	2097320
 13275  2000A8  FFFF               	dw	65535
 13276                           
 13277                           ;Config register IDLOC85 @ 0x2000AA
 13278                           ;	unspecified, using default values
 13279  2000AA                     	org	2097322
 13280  2000AA  FFFF               	dw	65535
 13281                           
 13282                           ;Config register IDLOC86 @ 0x2000AC
 13283                           ;	unspecified, using default values
 13284  2000AC                     	org	2097324
 13285  2000AC  FFFF               	dw	65535
 13286                           
 13287                           ;Config register IDLOC87 @ 0x2000AE
 13288                           ;	unspecified, using default values
 13289  2000AE                     	org	2097326
 13290  2000AE  FFFF               	dw	65535
 13291                           
 13292                           ;Config register IDLOC88 @ 0x2000B0
 13293                           ;	unspecified, using default values
 13294  2000B0                     	org	2097328
 13295  2000B0  FFFF               	dw	65535
 13296                           
 13297                           ;Config register IDLOC89 @ 0x2000B2
 13298                           ;	unspecified, using default values
 13299  2000B2                     	org	2097330
 13300  2000B2  FFFF               	dw	65535
 13301                           
 13302                           ;Config register IDLOC90 @ 0x2000B4
 13303                           ;	unspecified, using default values
 13304  2000B4                     	org	2097332
 13305  2000B4  FFFF               	dw	65535
 13306                           
 13307                           ;Config register IDLOC91 @ 0x2000B6
 13308                           ;	unspecified, using default values
 13309  2000B6                     	org	2097334
 13310  2000B6  FFFF               	dw	65535
 13311                           
 13312                           ;Config register IDLOC92 @ 0x2000B8
 13313                           ;	unspecified, using default values
 13314  2000B8                     	org	2097336
 13315  2000B8  FFFF               	dw	65535
 13316                           
 13317                           ;Config register IDLOC93 @ 0x2000BA
 13318                           ;	unspecified, using default values
 13319  2000BA                     	org	2097338
 13320  2000BA  FFFF               	dw	65535
 13321                           
 13322                           ;Config register IDLOC94 @ 0x2000BC
 13323                           ;	unspecified, using default values
 13324  2000BC                     	org	2097340
 13325  2000BC  FFFF               	dw	65535
 13326                           
 13327                           ;Config register IDLOC95 @ 0x2000BE
 13328                           ;	unspecified, using default values
 13329  2000BE                     	org	2097342
 13330  2000BE  FFFF               	dw	65535
 13331                           
 13332                           ;Config register IDLOC96 @ 0x2000C0
 13333                           ;	unspecified, using default values
 13334  2000C0                     	org	2097344
 13335  2000C0  FFFF               	dw	65535
 13336                           
 13337                           ;Config register IDLOC97 @ 0x2000C2
 13338                           ;	unspecified, using default values
 13339  2000C2                     	org	2097346
 13340  2000C2  FFFF               	dw	65535
 13341                           
 13342                           ;Config register IDLOC98 @ 0x2000C4
 13343                           ;	unspecified, using default values
 13344  2000C4                     	org	2097348
 13345  2000C4  FFFF               	dw	65535
 13346                           
 13347                           ;Config register IDLOC99 @ 0x2000C6
 13348                           ;	unspecified, using default values
 13349  2000C6                     	org	2097350
 13350  2000C6  FFFF               	dw	65535
 13351                           
 13352                           ;Config register IDLOC100 @ 0x2000C8
 13353                           ;	unspecified, using default values
 13354  2000C8                     	org	2097352
 13355  2000C8  FFFF               	dw	65535
 13356                           
 13357                           ;Config register IDLOC101 @ 0x2000CA
 13358                           ;	unspecified, using default values
 13359  2000CA                     	org	2097354
 13360  2000CA  FFFF               	dw	65535
 13361                           
 13362                           ;Config register IDLOC102 @ 0x2000CC
 13363                           ;	unspecified, using default values
 13364  2000CC                     	org	2097356
 13365  2000CC  FFFF               	dw	65535
 13366                           
 13367                           ;Config register IDLOC103 @ 0x2000CE
 13368                           ;	unspecified, using default values
 13369  2000CE                     	org	2097358
 13370  2000CE  FFFF               	dw	65535
 13371                           
 13372                           ;Config register IDLOC104 @ 0x2000D0
 13373                           ;	unspecified, using default values
 13374  2000D0                     	org	2097360
 13375  2000D0  FFFF               	dw	65535
 13376                           
 13377                           ;Config register IDLOC105 @ 0x2000D2
 13378                           ;	unspecified, using default values
 13379  2000D2                     	org	2097362
 13380  2000D2  FFFF               	dw	65535
 13381                           
 13382                           ;Config register IDLOC106 @ 0x2000D4
 13383                           ;	unspecified, using default values
 13384  2000D4                     	org	2097364
 13385  2000D4  FFFF               	dw	65535
 13386                           
 13387                           ;Config register IDLOC107 @ 0x2000D6
 13388                           ;	unspecified, using default values
 13389  2000D6                     	org	2097366
 13390  2000D6  FFFF               	dw	65535
 13391                           
 13392                           ;Config register IDLOC108 @ 0x2000D8
 13393                           ;	unspecified, using default values
 13394  2000D8                     	org	2097368
 13395  2000D8  FFFF               	dw	65535
 13396                           
 13397                           ;Config register IDLOC109 @ 0x2000DA
 13398                           ;	unspecified, using default values
 13399  2000DA                     	org	2097370
 13400  2000DA  FFFF               	dw	65535
 13401                           
 13402                           ;Config register IDLOC110 @ 0x2000DC
 13403                           ;	unspecified, using default values
 13404  2000DC                     	org	2097372
 13405  2000DC  FFFF               	dw	65535
 13406                           
 13407                           ;Config register IDLOC111 @ 0x2000DE
 13408                           ;	unspecified, using default values
 13409  2000DE                     	org	2097374
 13410  2000DE  FFFF               	dw	65535
 13411                           
 13412                           ;Config register IDLOC112 @ 0x2000E0
 13413                           ;	unspecified, using default values
 13414  2000E0                     	org	2097376
 13415  2000E0  FFFF               	dw	65535
 13416                           
 13417                           ;Config register IDLOC113 @ 0x2000E2
 13418                           ;	unspecified, using default values
 13419  2000E2                     	org	2097378
 13420  2000E2  FFFF               	dw	65535
 13421                           
 13422                           ;Config register IDLOC114 @ 0x2000E4
 13423                           ;	unspecified, using default values
 13424  2000E4                     	org	2097380
 13425  2000E4  FFFF               	dw	65535
 13426                           
 13427                           ;Config register IDLOC115 @ 0x2000E6
 13428                           ;	unspecified, using default values
 13429  2000E6                     	org	2097382
 13430  2000E6  FFFF               	dw	65535
 13431                           
 13432                           ;Config register IDLOC116 @ 0x2000E8
 13433                           ;	unspecified, using default values
 13434  2000E8                     	org	2097384
 13435  2000E8  FFFF               	dw	65535
 13436                           
 13437                           ;Config register IDLOC117 @ 0x2000EA
 13438                           ;	unspecified, using default values
 13439  2000EA                     	org	2097386
 13440  2000EA  FFFF               	dw	65535
 13441                           
 13442                           ;Config register IDLOC118 @ 0x2000EC
 13443                           ;	unspecified, using default values
 13444  2000EC                     	org	2097388
 13445  2000EC  FFFF               	dw	65535
 13446                           
 13447                           ;Config register IDLOC119 @ 0x2000EE
 13448                           ;	unspecified, using default values
 13449  2000EE                     	org	2097390
 13450  2000EE  FFFF               	dw	65535
 13451                           
 13452                           ;Config register IDLOC120 @ 0x2000F0
 13453                           ;	unspecified, using default values
 13454  2000F0                     	org	2097392
 13455  2000F0  FFFF               	dw	65535
 13456                           
 13457                           ;Config register IDLOC121 @ 0x2000F2
 13458                           ;	unspecified, using default values
 13459  2000F2                     	org	2097394
 13460  2000F2  FFFF               	dw	65535
 13461                           
 13462                           ;Config register IDLOC122 @ 0x2000F4
 13463                           ;	unspecified, using default values
 13464  2000F4                     	org	2097396
 13465  2000F4  FFFF               	dw	65535
 13466                           
 13467                           ;Config register IDLOC123 @ 0x2000F6
 13468                           ;	unspecified, using default values
 13469  2000F6                     	org	2097398
 13470  2000F6  FFFF               	dw	65535
 13471                           
 13472                           ;Config register IDLOC124 @ 0x2000F8
 13473                           ;	unspecified, using default values
 13474  2000F8                     	org	2097400
 13475  2000F8  FFFF               	dw	65535
 13476                           
 13477                           ;Config register IDLOC125 @ 0x2000FA
 13478                           ;	unspecified, using default values
 13479  2000FA                     	org	2097402
 13480  2000FA  FFFF               	dw	65535
 13481                           
 13482                           ;Config register IDLOC126 @ 0x2000FC
 13483                           ;	unspecified, using default values
 13484  2000FC                     	org	2097404
 13485  2000FC  FFFF               	dw	65535
 13486                           
 13487                           ;Config register IDLOC127 @ 0x2000FE
 13488                           ;	unspecified, using default values
 13489  2000FE                     	org	2097406
 13490  2000FE  FFFF               	dw	65535
 13491                           
 13492                           	psect	config
 13493                           
 13494                           ;Config register CONFIG1L @ 0x300000
 13495                           ;	External Oscillator mode Selection bits
 13496                           ;	FEXTOSC = OFF, Oscillator not enabled
 13497                           ;	Power-up default value for COSC bits
 13498                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
 13499  300000                     	org	3145728
 13500  300000  EC                 	db	236
 13501                           
 13502                           ;Config register CONFIG1H @ 0x300001
 13503                           ;	Clock Out Enable bit
 13504                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 13505                           ;	Clock Switch Enable bit
 13506                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 13507                           ;	Fail-Safe Clock Monitor Enable bit
 13508                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 13509  300001                     	org	3145729
 13510  300001  FF                 	db	255
 13511                           
 13512                           ;Config register CONFIG2L @ 0x300002
 13513                           ;	Master Clear Enable bit
 13514                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
 13515                           ;	Power-up Timer Enable bit
 13516                           ;	PWRTE = OFF, Power up timer disabled
 13517                           ;	Low-power BOR enable bit
 13518                           ;	LPBOREN = OFF, Low power BOR is disabled
 13519                           ;	Brown-out Reset Enable bits
 13520                           ;	BOREN = NOSLP, Brown-out Reset enabled while running, disabled in Sleep; SBOREN is ign
      +                          ored
 13521  300002                     	org	3145730
 13522  300002  BF                 	db	191
 13523                           
 13524                           ;Config register CONFIG2H @ 0x300003
 13525                           ;	Brown Out Reset Voltage selection bits
 13526                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
 13527                           ;	ZCD Disable bit
 13528                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 13529                           ;	PPSLOCK bit One-Way Set Enable bit
 13530                           ;	PPS1WAY = OFF, PPSLOCK bit can be set and cleared repeatedly (subject to the unlock se
      +                          quence)
 13531                           ;	Stack Full/Underflow Reset Enable bit
 13532                           ;	STVREN = ON, Stack full/underflow will cause Reset
 13533                           ;	Extended Instruction Set Enable bit
 13534                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 13535  300003                     	org	3145731
 13536  300003  F7                 	db	247
 13537                           
 13538                           ;Config register CONFIG3L @ 0x300004
 13539                           ;	WDT Period Select bits
 13540                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13541                           ;	WDT operating mode
 13542                           ;	WDTE = OFF, WDT Disabled
 13543  300004                     	org	3145732
 13544  300004  9F                 	db	159
 13545                           
 13546                           ;Config register CONFIG3H @ 0x300005
 13547                           ;	WDT Window Select bits
 13548                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 13549                           ;	WDT input clock selector
 13550                           ;	WDTCCS = SC, Software Control
 13551  300005                     	org	3145733
 13552  300005  FF                 	db	255
 13553                           
 13554                           ;Config register CONFIG4L @ 0x300006
 13555                           ;	Write Protection Block 0
 13556                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 13557                           ;	Write Protection Block 1
 13558                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 13559                           ;	Write Protection Block 2
 13560                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 13561                           ;	Write Protection Block 3
 13562                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 13563                           ;	Write Protection Block 4
 13564                           ;	WRT4 = 0x1, unprogrammed default
 13565                           ;	Write Protection Block 5
 13566                           ;	WRT5 = 0x1, unprogrammed default
 13567                           ;	Write Protection Block 6
 13568                           ;	WRT6 = 0x1, unprogrammed default
 13569                           ;	Write Protection Block 7
 13570                           ;	WRT7 = 0x1, unprogrammed default
 13571  300006                     	org	3145734
 13572  300006  FF                 	db	255
 13573                           
 13574                           ;Config register CONFIG4H @ 0x300007
 13575                           ;	Configuration Register Write Protection bit
 13576                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 13577                           ;	Boot Block Write Protection bit
 13578                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 13579                           ;	Data EEPROM Write Protection bit
 13580                           ;	WRTD = OFF, Data EEPROM not write-protected
 13581                           ;	Scanner Enable bit
 13582                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 13583                           ;	Low Voltage Programming Enable bit
 13584                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 13585  300007                     	org	3145735
 13586  300007  FF                 	db	255
 13587                           
 13588                           ;Config register CONFIG5L @ 0x300008
 13589                           ;	UserNVM Program Memory Code Protection bit
 13590                           ;	CP = OFF, UserNVM code protection disabled
 13591                           ;	DataNVM Memory Code Protection bit
 13592                           ;	CPD = OFF, DataNVM code protection disabled
 13593  300008                     	org	3145736
 13594  300008  FF                 	db	255
 13595                           
 13596                           ;Config register CONFIG5H @ 0x300009
 13597                           ;	unspecified, using default values
 13598  300009                     	org	3145737
 13599  300009  FF                 	db	255
 13600                           
 13601                           ;Config register CONFIG6L @ 0x30000A
 13602                           ;	Table Read Protection Block 0
 13603                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 13604                           ;	Table Read Protection Block 1
 13605                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 13606                           ;	Table Read Protection Block 2
 13607                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 13608                           ;	Table Read Protection Block 3
 13609                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 13610                           ;	Table Read Protection Block 4
 13611                           ;	EBTR4 = 0x1, unprogrammed default
 13612                           ;	Table Read Protection Block 5
 13613                           ;	EBTR5 = 0x1, unprogrammed default
 13614                           ;	Table Read Protection Block 6
 13615                           ;	EBTR6 = 0x1, unprogrammed default
 13616                           ;	Table Read Protection Block 7
 13617                           ;	EBTR7 = 0x1, unprogrammed default
 13618  30000A                     	org	3145738
 13619  30000A  FF                 	db	255
 13620                           
 13621                           ;Config register CONFIG6H @ 0x30000B
 13622                           ;	Boot Block Table Read Protection bit
 13623                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 13624  30000B                     	org	3145739
 13625  30000B  FF                 	db	255
 13626                           tosu	equ	0xFFF
 13627                           tosh	equ	0xFFE
 13628                           tosl	equ	0xFFD
 13629                           stkptr	equ	0xFFC
 13630                           pclatu	equ	0xFFB
 13631                           pclath	equ	0xFFA
 13632                           pcl	equ	0xFF9
 13633                           tblptru	equ	0xFF8
 13634                           tblptrh	equ	0xFF7
 13635                           tblptrl	equ	0xFF6
 13636                           tablat	equ	0xFF5
 13637                           prodh	equ	0xFF4
 13638                           prodl	equ	0xFF3
 13639                           indf0	equ	0xFEF
 13640                           postinc0	equ	0xFEE
 13641                           postdec0	equ	0xFED
 13642                           preinc0	equ	0xFEC
 13643                           plusw0	equ	0xFEB
 13644                           fsr0h	equ	0xFEA
 13645                           fsr0l	equ	0xFE9
 13646                           wreg	equ	0xFE8
 13647                           indf1	equ	0xFE7
 13648                           postinc1	equ	0xFE6
 13649                           postdec1	equ	0xFE5
 13650                           preinc1	equ	0xFE4
 13651                           plusw1	equ	0xFE3
 13652                           fsr1h	equ	0xFE2
 13653                           fsr1l	equ	0xFE1
 13654                           bsr	equ	0xFE0
 13655                           indf2	equ	0xFDF
 13656                           postinc2	equ	0xFDE
 13657                           postdec2	equ	0xFDD
 13658                           preinc2	equ	0xFDC
 13659                           plusw2	equ	0xFDB
 13660                           fsr2h	equ	0xFDA
 13661                           fsr2l	equ	0xFD9
 13662                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    130
    Data        47
    BSS         207
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     51      73
    BANK0           160     10     160
    BANK1           256     22     107
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    Button_StateMachine$0	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    memcpy@d1	PTR void  size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), mtouch_sensor(BANK0[45]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), mtouch_sensor(BANK0[45]), 

    memcpy@s1	PTR const void  size(2) Largest target is 85
		 -> mtouch_button_init(CODE[85]), mtouch_sensor_init(CODE[45]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 85
		 -> mtouch_button_init(CODE[85]), mtouch_sensor_init(CODE[45]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), ADCC_ThresholdISR_mTouch(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), ADCC_DefaultInterruptHandler(), ADCC_ThresholdISR_mTouch(), 

    MTOUCH_Slider_SetPositionChangedCallback@callback	PTR FTN(enum E12944,)void  size(3) Largest target is 1
		 -> ProcessSliderChange(), 

    Slider_Initialize@slider	PTR struct . size(2) Largest target is 17
		 -> mtouch_slider(BANK0[17]), 

    Slider_Service@slider	PTR struct . size(2) Largest target is 17
		 -> mtouch_slider(BANK0[17]), 

    calculate_position@slider	PTR struct . size(2) Largest target is 17
		 -> mtouch_slider(BANK0[17]), 

    calculate_contact_size@slider	PTR struct . size(2) Largest target is 17
		 -> mtouch_slider(BANK0[17]), 

    calculate_raw_position@slider	PTR struct . size(2) Largest target is 17
		 -> mtouch_slider(BANK0[17]), 

    Slider_FindRight@slider	PTR struct . size(2) Largest target is 17
		 -> mtouch_slider(BANK0[17]), 

    Slider_FindLeft@slider	PTR struct . size(2) Largest target is 17
		 -> mtouch_slider(BANK0[17]), 

    Slider_FindMiddle@slider	PTR struct . size(2) Largest target is 17
		 -> mtouch_slider(BANK0[17]), 

    moving_average_filter@slider	PTR struct . size(2) Largest target is 17
		 -> mtouch_slider(BANK0[17]), 

    positional_hysteresis@slider	PTR struct . size(2) Largest target is 17
		 -> mtouch_slider(BANK0[17]), 

    get_difference@slider	PTR struct . size(2) Largest target is 17
		 -> mtouch_slider(BANK0[17]), 

    callback_released	PTR FTN(enum E12944,)void  size(3) Largest target is 1
		 -> Slider_DefaultCallback(), 

    callback_pressed@mtouch_slider$F1229	PTR FTN(enum E12944,)void  size(3) Largest target is 1
		 -> Slider_DefaultCallback(), 

    callback_position_changed	PTR FTN(enum E12944,)void  size(3) Largest target is 1
		 -> ProcessSliderChange(), Slider_DefaultCallback(), 

    MTOUCH_Button_SetNotPressedCallback@callback	PTR FTN(enum E12909,)void  size(3) Largest target is 1
		 -> ProcessButtonRelease(), 

    Button_Check_AKS_Block@check_button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_Check_AKS_Block@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_Baseline_Update@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_Baseline_Initialize@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_Reading_Update_Helper@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_Reading_Update@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_Unscaled_Deviation_Get@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_Deviation_Update@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_Tick_helper@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_State_Pressed@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_State_NotPressed@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_State_Initializing@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_Service@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    MTOUCH_Button_Initialize@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), 

    Button_StateMachine	PTR FTN(PTR struct .,)void [3] size(3) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    callback_notPressed	PTR FTN(enum E12909,)void  size(3) Largest target is 1
		 -> ProcessButtonRelease(), Button_DefaultCallback(), 

    callback_pressed	PTR FTN(enum E12909,)void  size(3) Largest target is 1
		 -> Button_DefaultCallback(), 

    Sensor_setSampled@sensor	PTR struct . size(2) Largest target is 45
		 -> mtouch_sensor(BANK0[45]), 

    Sensor_Sampled_Reset@sensor	PTR struct . size(2) Largest target is 45
		 -> mtouch_sensor(BANK0[45]), 

    MTOUCH_Sensor_Sampled_ResetAll@sensor	PTR struct . size(2) Largest target is 45
		 -> mtouch_sensor(BANK0[45]), 

    Sensor_isCalibratingAcqTime@sensor	PTR struct . size(2) Largest target is 45
		 -> mtouch_sensor(BANK0[45]), 

    Sensor_setCalibratAcqTime@sensor	PTR struct . size(2) Largest target is 45
		 -> mtouch_sensor(BANK0[45]), 

    Sensor_setCalibrated@sensor	PTR struct . size(2) Largest target is 45
		 -> mtouch_sensor(BANK0[45]), 

    Sensor_isCalibrated@sensor	PTR struct . size(2) Largest target is 45
		 -> mtouch_sensor(BANK0[45]), 

    Sensor_RawSample_Update@sensor	PTR struct . size(2) Largest target is 45
		 -> mtouch_sensor(BANK0[45]), 

    MTOUCH_Sensor_Service@sensor	PTR struct . size(2) Largest target is 45
		 -> mtouch_sensor(BANK0[45]), 

    Sensor_autoCalibration@sensor	PTR struct . size(2) Largest target is 45
		 -> mtouch_sensor(BANK0[45]), 

    Sensor_scheduleNextScan@sensor	PTR struct . size(2) Largest target is 45
		 -> mtouch_sensor(BANK0[45]), 

    sp__memcpy	PTR void  size(2) Largest target is 85
		 -> mtouch_button(BANK1[85]), mtouch_sensor(BANK0[45]), 

    callback_sampled	PTR FTN(enum E12845,)void  size(3) Largest target is 1
		 -> Sensor_DefaultCallback(), 


Critical Paths under _main in COMRAM

    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _MTOUCH_Service_Mainloop->_MTOUCH_Slider_ServiceAll
    _MTOUCH_Tick->_MTOUCH_Button_Tick
    _MTOUCH_Button_Tick->_Button_Tick_helper
    _calculate_position->_moving_average_filter
    _positional_hysteresis->_get_difference
    _moving_average_filter->_get_difference
    _calculate_raw_position->_interpolate
    _interpolate->_divide
    _calculate_contact_size->_Slider_FindMiddle
    _Slider_FindRight->_MTOUCH_Button_Deviation_Get
    _Slider_FindMiddle->_MTOUCH_Button_Deviation_Get
    _Slider_FindLeft->_MTOUCH_Button_Deviation_Get
    _ProcessSliderChange->_MTOUCH_Slider_Position_Get
    _Sensor_FrequencyHopping->_Sensor_FrequencyHopping_Autotune_Process
    _Sensor_FrequencyHopping_Autotune_Process->_abs
    _MTOUCH_Sensor_postAcquisitionProcess->_Sensor_RawSample_Update
    _Sensor_RawSample_Update->_medianFilter
    _MTOUCH_Sensor_isSamplingComplete->_Sensor_scheduleNextScan
    _Sensor_scheduleNextScan->_Sensor_SetTrisBit
    _MTOUCH_Initialize->_MTOUCH_Button_InitializeAll
    _MTOUCH_Initialize->_MTOUCH_Sensor_InitializeAll
    _MTOUCH_Slider_InitializeAll->_Slider_Initialize
    _MTOUCH_Sensor_ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
    _MTOUCH_Sensor_InitializeAll->_memcpy
    _MTOUCH_Sensor_Initialize->_Sensor_Sampled_Reset
    _MTOUCH_Button_InitializeAll->_memcpy
    _MTOUCH_Button_ServiceAll->_Button_Service
    _Button_Service->_Button_State_Pressed
    _Button_State_NotPressed->_Button_Check_AKS_Block
    _MTOUCH_Button_Initialize->_MTOUCH_Sensor_Calibrate
    _Button_Check_AKS_Block->_Button_Unscaled_Deviation_Get
    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Button_Reading_Update->_Button_Reading_Update_Helper
    _Button_Reading_Update_Helper->_MTOUCH_Sensor_RawSample_Get
    _ApplicationTask->_GetMotorSpeed
    _ApplicationTask->_PWM4_LoadDutyValue

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _ADCC_ThresholdISR_mTouch->_MTOUCH_Sensor_Service
    _MTOUCH_Sensor_Service->_Sensor_autoCalibration
    i2_Sensor_scheduleNextScan->i2_Sensor_SetTrisBit
    _Sensor_autoCalibration->i2_abs

Critical Paths under _main in BANK0

    _calculate_position->_calculate_raw_position

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _MTOUCH_Slider_ServiceAll->_Slider_Service
    _Slider_Service->_calculate_position

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   27530
                    _ApplicationTask
_MTOUCH_Button_SetNotPressedCallback
            _MTOUCH_Service_Mainloop
_MTOUCH_Slider_SetPositionChangedCal
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2877
                    _ADCC_Initialize
               _INTERRUPT_Initialize
                  _MTOUCH_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM4_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     174
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Slider_SetPositionChangedCallback             3     0      3      98
                                             21 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Service_Mainloop                              0     0      0   23790
           _MTOUCH_Button_ServiceAll
                  _MTOUCH_Initialize
            _MTOUCH_Sensor_SampleAll
     _MTOUCH_Sensor_Sampled_ResetAll
           _MTOUCH_Slider_ServiceAll
                        _MTOUCH_Tick
                 _MTOUCH_needReburst
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_needReburst                                   1     1      0      15
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Tick                                          0     0      0     232
                 _MTOUCH_Button_Tick
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_Tick                                   1     1      0     232
                                             25 COMRAM     1     1      0
                 _Button_Tick_helper
 ---------------------------------------------------------------------------------
 (4) _Button_Tick_helper                                   4     2      2     164
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Slider_ServiceAll                             1     1      0   12280
                                             50 COMRAM     1     1      0
                     _Slider_Service
 ---------------------------------------------------------------------------------
 (3) _Slider_Service                                      14    14      0   12181
                                              8 BANK1     14    14      0
            _MTOUCH_Button_isPressed
                _ProcessSliderChange *
             _Slider_DefaultCallback *
             _calculate_contact_size
                 _calculate_position
 ---------------------------------------------------------------------------------
 (4) _calculate_position                                   8     6      2    9551
                                              0 BANK1      8     6      2
             _calculate_raw_position
              _moving_average_filter
              _positional_hysteresis
 ---------------------------------------------------------------------------------
 (5) _positional_hysteresis                               15    11      4    1813
                                             34 COMRAM    15    11      4
                     _get_difference
 ---------------------------------------------------------------------------------
 (5) _moving_average_filter                               16    12      4    1667
                                             34 COMRAM    16    12      4
                     _get_difference
 ---------------------------------------------------------------------------------
 (6) _get_difference                                      13     7      6     893
                                             21 COMRAM    13     7      6
 ---------------------------------------------------------------------------------
 (5) _calculate_raw_position                              17    15      2    5659
                                             41 COMRAM     7     5      2
                                              0 BANK0     10    10      0
                             _divide
                        _interpolate
 ---------------------------------------------------------------------------------
 (6) _interpolate                                         13     6      7    2753
                                             28 COMRAM    13     6      7
                             _divide
 ---------------------------------------------------------------------------------
 (7) _divide                                               7     2      5    1823
                                             21 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) _calculate_contact_size                               6     4      2    1444
                                             34 COMRAM     6     4      2
                    _Slider_FindLeft
                  _Slider_FindMiddle
                   _Slider_FindRight
 ---------------------------------------------------------------------------------
 (5) _Slider_FindRight                                    10     8      2     310
                                             22 COMRAM    10     8      2
        _MTOUCH_Button_Deviation_Get
 ---------------------------------------------------------------------------------
 (5) _Slider_FindMiddle                                   12    10      2     508
                                             22 COMRAM    12    10      2
        _MTOUCH_Button_Deviation_Get
 ---------------------------------------------------------------------------------
 (5) _Slider_FindLeft                                      4     2      2     341
                                             22 COMRAM     4     2      2
        _MTOUCH_Button_Deviation_Get
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Button_Deviation_Get                          1     1      0      62
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Slider_DefaultCallback                               1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _ProcessSliderChange                                  1     1      0      62
         _MTOUCH_Slider_Position_Get
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Slider_Position_Get                           3     1      2      62
                                             21 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_isPressed                              2     2      0      62
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Sensor_SampleAll                              0     0      0    2760
   _MTOUCH_Sensor_isSamplingComplete
_MTOUCH_Sensor_postAcquisitionProces
            _Sensor_FrequencyHopping
 ---------------------------------------------------------------------------------
 (3) _Sensor_FrequencyHopping                              0     0      0     719
_Sensor_FrequencyHopping_Autotune_Pr
             _Sensor_setSamplePeriod
 ---------------------------------------------------------------------------------
 (4) _Sensor_setSamplePeriod                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Sensor_FrequencyHopping_Autotune_Process            16    16      0     719
                                             25 COMRAM    16    16      0
                                _abs
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     242
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_postAcquisitionProcess                 1     1      0     761
                                             33 COMRAM     1     1      0
             _Sensor_DefaultCallback
            _Sensor_RawSample_Update
 ---------------------------------------------------------------------------------
 (4) _Sensor_RawSample_Update                              4     2      2     649
                                             29 COMRAM     4     2      2
                       _medianFilter
 ---------------------------------------------------------------------------------
 (5) _medianFilter                                         8     6      2     462
                                             21 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _Sensor_DefaultCallback                               1     1      0       0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_isSamplingComplete                     1     1      0    1280
                                             31 COMRAM     1     1      0
            _MTOUCH_Sensor_isEnabled
           _MTOUCH_Sensor_isSampling
           _MTOUCH_Sensor_wasSampled
            _Sensor_scheduleNextScan
 ---------------------------------------------------------------------------------
 (4) _Sensor_scheduleNextScan                              6     6      0    1044
                                             25 COMRAM     6     6      0
            _MTOUCH_Sensor_isEnabled
           _MTOUCH_Sensor_wasSampled
                  _Sensor_SetTrisBit
                _Sensor_isCalibrated
        _Sensor_isCalibratingAcqTime
 ---------------------------------------------------------------------------------
 (5) _Sensor_isCalibratingAcqTime                          2     0      2     148
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _Sensor_isCalibrated                                  2     0      2     148
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _Sensor_SetTrisBit                                    4     3      1     258
                                             21 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_isEnabled                              1     1      0      44
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_isSampling                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Initialize                                    0     0      0    2703
        _MTOUCH_Button_InitializeAll
        _MTOUCH_Sensor_InitializeAll
     _MTOUCH_Sensor_Sampled_ResetAll
      _MTOUCH_Sensor_Scan_Initialize
        _MTOUCH_Slider_InitializeAll
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Slider_InitializeAll                          1     1      0     267
                                             24 COMRAM     1     1      0
                  _Slider_Initialize
 ---------------------------------------------------------------------------------
 (4) _Slider_Initialize                                    3     3      0     199
                                             21 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Scan_Initialize                        0     0      0     174
      _MTOUCH_Sensor_ADCC_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_ADCC_Initialize                        0     0      0     174
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (5) _ADCC_SetADTIInterruptHandler                         3     0      3     174
                                             21 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Sampled_ResetAll                       2     2      0     242
                                             23 COMRAM     2     2      0
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_InitializeAll                          1     1      0    1071
                                             32 COMRAM     1     1      0
           _MTOUCH_Sensor_Initialize
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_Initialize                             1     1      0     373
                                             23 COMRAM     1     1      0
            _MTOUCH_Sensor_Calibrate
               _MTOUCH_Sensor_Enable
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (4) _Sensor_Sampled_Reset                                 2     0      2     174
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Enable                                 1     1      0      44
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_InitializeAll                          1     1      0     949
                                             32 COMRAM     1     1      0
           _MTOUCH_Button_Initialize
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6     599
                                             21 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Button_ServiceAll                             1     1      0    5558
                                              0 BANK0      1     1      0
                     _Button_Service
 ---------------------------------------------------------------------------------
 (3) _Button_Service                                       4     4      0    5459
                                             47 COMRAM     4     4      0
            _Button_Deviation_Update
              _Button_Reading_Update
          _Button_State_Initializing *
            _Button_State_NotPressed *
               _Button_State_Pressed *
           _MTOUCH_Button_Initialize
         _MTOUCH_Sensor_isCalibrated
           _MTOUCH_Sensor_wasSampled
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_wasSampled                             1     1      0      62
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_isCalibrated                           1     1      0      62
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Button_State_Pressed                                 7     5      2     657
                                             40 COMRAM     7     5      2
             _Button_DefaultCallback *
           _MTOUCH_Button_Initialize
               _ProcessButtonRelease *
 ---------------------------------------------------------------------------------
 (5) _ProcessButtonRelease                                 3     3      0      31
                                             21 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _Button_State_NotPressed                              5     3      2    2232
                                             40 COMRAM     5     3      2
             _Button_Baseline_Update
             _Button_Check_AKS_Block
             _Button_DefaultCallback
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_Initialize                             3     3      0     251
                                             22 COMRAM     3     3      0
            _MTOUCH_Sensor_Calibrate
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Calibrate                              1     1      0      62
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Button_DefaultCallback                               1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _Button_Check_AKS_Block                              11     9      2     902
                                             29 COMRAM    11     9      2
      _Button_Unscaled_Deviation_Get
 ---------------------------------------------------------------------------------
 (6) _Button_Unscaled_Deviation_Get                        8     6      2     242
                                             21 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _Button_State_Initializing                            6     4      2     952
                                             40 COMRAM     6     4      2
         _Button_Baseline_Initialize
             _Button_Baseline_Update
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Update                               6     4      2     428
                                             21 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Initialize                           6     4      2     245
                                             24 COMRAM     6     4      2
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (4) _Button_Reading_Update                                2     0      2     611
                                             28 COMRAM     2     0      2
       _Button_Reading_Update_Helper
 ---------------------------------------------------------------------------------
 (5) _Button_Reading_Update_Helper                         4     2      2     459
                                             24 COMRAM     4     2      2
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_RawSample_Get                          3     1      2      62
                                             21 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _Button_Deviation_Update                             16    14      2     350
                                             21 COMRAM    16    14      2
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Button_SetNotPressedCallback                  3     0      3      98
                                             21 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _ApplicationTask                                      4     4      0     667
                                             25 COMRAM     4     4      0
                        _ClearButton
                         _ClearEvent
                          _GetButton
                           _GetEvent
                      _GetMotorSpeed
                 _PWM4_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM4_LoadDutyValue                                   4     2      2     272
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _GetMotorSpeed                                        4     2      2     371
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _GetEvent                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetButton                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearEvent                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearButton                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           6     6      0    2220
                                             15 COMRAM     6     6      0
                  _ADCC_ThresholdISR
 ---------------------------------------------------------------------------------
 (9) _ADCC_ThresholdISR                                    0     0      0    2220
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
           _ADCC_ThresholdISR_mTouch *
 ---------------------------------------------------------------------------------
 (10) _ADCC_ThresholdISR_mTouch                            0     0      0    2220
              _MTOUCH_Sensor_Service
 ---------------------------------------------------------------------------------
 (11) _MTOUCH_Sensor_Service                               4     4      0    2220
                                             11 COMRAM     4     4      0
             _Sensor_autoCalibration
                  _Sensor_setSampled
                i2_Sensor_SetTrisBit
              i2_Sensor_isCalibrated
          i2_Sensor_scheduleNextScan
                              i2_abs
 ---------------------------------------------------------------------------------
 (12) i2_Sensor_scheduleNextScan                           6     6      0     688
                                              4 COMRAM     6     6      0
          i2_MTOUCH_Sensor_isEnabled
         i2_MTOUCH_Sensor_wasSampled
                i2_Sensor_SetTrisBit
              i2_Sensor_isCalibrated
      i2_Sensor_isCalibratingAcqTime
 ---------------------------------------------------------------------------------
 (13) i2_Sensor_isCalibrated                               2     0      2      74
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_Sensor_SetTrisBit                                 4     3      1     184
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (13) i2_MTOUCH_Sensor_wasSampled                          1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_MTOUCH_Sensor_isEnabled                           1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _Sensor_setSampled                                   2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _Sensor_autoCalibration                              7     5      2     991
                                              4 COMRAM     7     5      2
          _Sensor_setCalibratAcqTime
               _Sensor_setCalibrated
      i2_Sensor_isCalibratingAcqTime
                              i2_abs
 ---------------------------------------------------------------------------------
 (12) i2_abs                                               4     2      2     118
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) i2_Sensor_isCalibratingAcqTime                       2     0      2      74
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _Sensor_setCalibrated                                2     0      2     196
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _Sensor_setCalibratAcqTime                           2     0      2     218
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ApplicationTask
     _ClearButton
     _ClearEvent
     _GetButton
     _GetEvent
     _GetMotorSpeed
     _PWM4_LoadDutyValue
   _MTOUCH_Button_SetNotPressedCallback
   _MTOUCH_Service_Mainloop
     _MTOUCH_Button_ServiceAll
       _Button_Service
         _Button_Deviation_Update
         _Button_Reading_Update
           _Button_Reading_Update_Helper
             _MTOUCH_Sensor_RawSample_Get
         _Button_State_Initializing *
           _Button_Baseline_Initialize
             _MTOUCH_Sensor_RawSample_Get
           _Button_Baseline_Update
         _Button_State_NotPressed *
           _Button_Baseline_Update
           _Button_Check_AKS_Block
             _Button_Unscaled_Deviation_Get
           _Button_DefaultCallback
           _MTOUCH_Button_Initialize
             _MTOUCH_Sensor_Calibrate
         _Button_State_Pressed *
           _Button_DefaultCallback *
           _MTOUCH_Button_Initialize *
             _MTOUCH_Sensor_Calibrate
           _ProcessButtonRelease *
         _MTOUCH_Button_Initialize *
           _MTOUCH_Sensor_Calibrate
         _MTOUCH_Sensor_isCalibrated *
         _MTOUCH_Sensor_wasSampled *
     _MTOUCH_Initialize
       _MTOUCH_Button_InitializeAll
         _MTOUCH_Button_Initialize
           _MTOUCH_Sensor_Calibrate
         _memcpy
       _MTOUCH_Sensor_InitializeAll
         _MTOUCH_Sensor_Initialize
           _MTOUCH_Sensor_Calibrate
           _MTOUCH_Sensor_Enable
           _Sensor_Sampled_Reset
         _memcpy
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
       _MTOUCH_Sensor_Scan_Initialize
         _MTOUCH_Sensor_ADCC_Initialize
           _ADCC_SetADTIInterruptHandler
       _MTOUCH_Slider_InitializeAll
         _Slider_Initialize
     _MTOUCH_Sensor_SampleAll
       _MTOUCH_Sensor_isSamplingComplete
         _MTOUCH_Sensor_isEnabled
         _MTOUCH_Sensor_isSampling
         _MTOUCH_Sensor_wasSampled
         _Sensor_scheduleNextScan
           _MTOUCH_Sensor_isEnabled
           _MTOUCH_Sensor_wasSampled
           _Sensor_SetTrisBit
           _Sensor_isCalibrated
           _Sensor_isCalibratingAcqTime
       _MTOUCH_Sensor_postAcquisitionProcess
         _Sensor_DefaultCallback
         _Sensor_RawSample_Update
           _medianFilter
       _Sensor_FrequencyHopping
         _Sensor_FrequencyHopping_Autotune_Process
           _abs
         _Sensor_setSamplePeriod
     _MTOUCH_Sensor_Sampled_ResetAll
       _Sensor_Sampled_Reset
     _MTOUCH_Slider_ServiceAll
       _Slider_Service
         _MTOUCH_Button_isPressed
         _ProcessSliderChange *
           _MTOUCH_Slider_Position_Get
         _Slider_DefaultCallback *
         _calculate_contact_size *
           _Slider_FindLeft
             _MTOUCH_Button_Deviation_Get
           _Slider_FindMiddle
             _MTOUCH_Button_Deviation_Get
           _Slider_FindRight
             _MTOUCH_Button_Deviation_Get
         _calculate_position *
           _calculate_raw_position
             _divide
             _interpolate
               _divide
           _moving_average_filter
             _get_difference
           _positional_hysteresis
             _get_difference
     _MTOUCH_Tick
       _MTOUCH_Button_Tick
         _Button_Tick_helper
     _MTOUCH_needReburst
   _MTOUCH_Slider_SetPositionChangedCallback
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _INTERRUPT_Initialize
     _MTOUCH_Initialize
       _MTOUCH_Button_InitializeAll
         _MTOUCH_Button_Initialize
           _MTOUCH_Sensor_Calibrate
         _memcpy
       _MTOUCH_Sensor_InitializeAll
         _MTOUCH_Sensor_Initialize
           _MTOUCH_Sensor_Calibrate
           _MTOUCH_Sensor_Enable
           _Sensor_Sampled_Reset
         _memcpy
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
       _MTOUCH_Sensor_Scan_Initialize
         _MTOUCH_Sensor_ADCC_Initialize
           _ADCC_SetADTIInterruptHandler
       _MTOUCH_Slider_InitializeAll
         _Slider_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM4_Initialize
     _TMR2_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _ADCC_ThresholdISR
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCC_ThresholdISR_mTouch *
       _MTOUCH_Sensor_Service
         _Sensor_autoCalibration
           _Sensor_setCalibratAcqTime
           _Sensor_setCalibrated
           i2_Sensor_isCalibratingAcqTime
           i2_abs
         _Sensor_setSampled
         i2_Sensor_SetTrisBit
         i2_Sensor_isCalibrated
         i2_Sensor_scheduleNextScan
           i2_MTOUCH_Sensor_isEnabled
           i2_MTOUCH_Sensor_wasSampled
           i2_Sensor_SetTrisBit
           i2_Sensor_isCalibrated
           i2_Sensor_isCalibratingAcqTime
         i2_abs

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E1E      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     16      6B       8       41.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      A      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     33      49       1       77.7%
BITBANK14           1F      0       0      33        0.0%
BANK14              1F      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     154       6        0.0%
DATA                 0      0     154       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Sep 29 15:27:27 2020

                                  calculate_raw_position@ref_node 00F3  
                                    ?_MTOUCH_Sensor_RawSample_Get 0016  
                                  MTOUCH_Slider_ServiceAll@slider 0033  
                                                _Slider_FindRight 2F2E  
                                             _ProcessSliderChange 40F2  
                                         ?_Sensor_autoCalibration 0005  
                                               _Slider_FindMiddle 30A8  
                                       _Sensor_setCalibratAcqTime 3E1A  
                          positional_hysteresis@filtered_position 002C  
                                                             l140 3FB6  
                                                             l151 347A  
                                                             l215 38E0  
                                                             l304 3F20  
                                                             l144 33F2  
                                                             l330 3F48  
                                                             l154 3A1E  
                                                             l146 3400  
                                                             l170 3F6E  
                                                             l147 340E  
                                                             l235 3EF8  
                                                             l308 3B6A  
                                                             l148 341C  
                                                             l149 342A  
                                                             l253 1912  
                                                             l245 37E4  
                                  calculate_raw_position@position 00FB  
                                                             l334 3BE6  
                                                             l166 3730  
                                                             l239 3D7E  
                                                             l159 3C9C  
                                                             l360 415E  
                                                             l352 3932  
                                                             l264 41A2  
                                                             l185 41C8  
                                                             l450 3CD6  
                                                             l338 403A  
                                                             l290 1AF2  
                                                             l603 41E6  
                                                             l347 401A  
                                                             l356 3BA8  
                                                             l460 2E5C  
                                                             l276 1A16  
                                                             l445 3602  
                                                             l197 1FFE  
                                                             l293 41E4  
                                                             l366 41E0  
                                                             l710 2BBC  
                                                             l471 167E  
                                                             l455 3FFA  
                                                             l544 26B2  
                                                             l528 3AAC  
                                                             l609 4198  
                                                             l641 414E  
                                                             l466 2D80  
                                                             l538 3ED0  
                                                             l490 3EA4  
                                                             l563 3E18  
                                                             l571 378E  
                                                             l547 388E  
                                                             l475 1720  
                                                             l731 292C  
                                                             l651 41C2  
                                                             l740 2C9E  
                                                             l812 1526  
                                                             l485 28CC  
                                                             l709 2BB4  
                                                             l733 2980  
                                                             l718 30A6  
                                                             l734 299E  
                                                             l726 22F0  
                                                             l654 41DC  
                                                             l735 29D2  
                                                             l495 36CC  
                                                             l647 3982  
                                                             l568 320A  
                                                             l576 27C2  
                                                             l816 3350  
                                                             l746 3154  
                                                             l930 4122  
                                                             l747 315C  
                                                             l756 2F2C  
                                                             l764 2FF0  
                                                             l693 2B9C  
                                                             l933 40F0  
                                                             l598 2440  
                                                             l782 1272  
                                                             l927 3FD8  
                                                             l848 3D46  
                                                             l880 417C  
                                                             l793 33EA  
                                                             l874 3F92  
                                                             l788 32B4  
                                                             l869 40B6  
                                                             l877 41E2  
                                                             _GIE 007F97  
                                                             _PR2 000FBB  
                                              ?_Slider_FindMiddle 0017  
                                                             _abs 3AAE  
                                         __size_of_PMD_Initialize 001C  
                                                 _TMR2_Initialize 407C  
                                                 _PWM4_Initialize 4124  
                                                             prod 000FF3  
                                                             tosl 000FFD  
                                                             wreg 000FE8  
                                ??_MTOUCH_Sensor_Sampled_ResetAll 0018  
                                 ?_MTOUCH_Sensor_Sampled_ResetAll 0001  
                                __size_of_MTOUCH_Sensor_SampleAll 0026  
                                                    divide@result 001B  
                               __size_of_MTOUCH_Sensor_Initialize 0024  
                                       ?_MTOUCH_Sensor_Initialize 0001  
                                 __size_of_Sensor_setSamplePeriod 0028  
                                          ?_positional_hysteresis 0023  
                                             ??_Slider_FindMiddle 0019  
                                          _calculate_contact_size 320C  
                                                            l1022 41D8  
                                                            l1008 3590  
                                                            l1042 4138  
                                                            ?_abs 0016  
                                                            l1045 3DE8  
                                                            l1216 418A  
                                                            l1128 3668  
                                                            l1401 1D9A  
                                                            l2201 383A  
                                                            l1411 1DDA  
                                                            l1403 1D9C  
                                                            l1421 1DE4  
                                                            l1413 1DDC  
                                                            l1405 1D9E  
                                                            l1342 41CE  
                                                            l1246 4098  
                                                            l1351 41BC  
                                                            l1431 1E24  
                                                            l1415 1DDE  
                                                            l1407 1DA0  
                                            ?_ProcessSliderChange 0001  
                                                            l1336 3A6C  
                                                            l1345 41B4  
                                                            l1441 1E4E  
                                                            l1433 1E26  
                                                            l1425 1E1E  
                                                            l1417 1DE0  
                                                            l1361 1CD0  
                                                            l1514 1CB2  
                                                            l1443 1E50  
                                                            l1435 1E28  
                                                            l1427 1E20  
                                                            l1419 1DE2  
                                                            l1371 1D10  
                                                            l1363 1CD2  
                                                            l1355 1CCA  
                                                            l1339 410A  
                                                            l1348 41D4  
                                                            l1452 1E68  
                                                            l1445 1E52  
                                                            l1429 1E22  
                                                            l1373 1D12  
                                                            l1365 1CD4  
                                                            l1357 1CCC  
                                                            l1447 1E54  
                                                            l1439 1E4C  
                                                            l1391 1D5A  
                                                            l1383 1D52  
                                                            l1375 1D14  
                                                            l1359 1CCE  
                                                            l1463 1BA0  
                                                            l2192 3AE4  
                                                            l1449 1E56  
                                                            l1393 1D5C  
                                                            l1385 1D54  
                                                            l1377 1D16  
                                                            l1369 1D0E  
                                                            l5001 32E8  
                                                            l1387 1D56  
                                                            l1379 1D18  
                                                            l5003 32F8  
                                                            l2195 3AEC  
                                                            l3403 41DA  
                                                            l3411 40D6  
                                                            l1397 1D96  
                                                            l1389 1D58  
                                                            l5005 3314  
                                                            l4301 3AC8  
                                                            l3421 3578  
                                                            l3413 350C  
                                                            l1399 1D98  
                                                            l5007 3328  
                                                            l4311 17A8  
                                                            l5103 419A  
                                                            l3431 410C  
                                                            l3423 357E  
                                                            l3415 3572  
                                                            l5009 333C  
                                                            l4321 1830  
                                                            l4313 17DE  
                                                            l4305 1724  
                                                            l5121 38D0  
                                                            l5113 3894  
                                                            l5105 419E  
                                                            l6001 2200  
                                                            l5201 3E94  
                                                            l3409 41D6  
                                                            l3425 3580  
                                                            l3417 3574  
                                                            l3441 4124  
                                                            l4251 4150  
                                                            l5123 41C4  
                                                            l5211 40A6  
                                                            l5203 409A  
                                                            l4323 1866  
                                                            l4315 1814  
                                                            l4307 177C  
                                                            l5115 38B4  
                                                            l5107 3890  
                                                            l6011 2270  
                                                            l6003 2204  
                                                            l3427 3582  
                                                            l3419 3576  
                                                            l3443 407C  
                                                            l4253 33EE  
                                                            l4341 18D8  
                                                            l4333 189E  
                                                            l4309 1798  
                                                            l5117 38C8  
                                                            l6101 2FE0  
                                                            l6013 2280  
                                                            l6021 22E8  
                                                            l6005 2214  
                                                            l3429 3584  
                                                            l3445 4090  
                                                            l4247 3EFC  
                                                            l5151 38E2  
                                                            l4263 417E  
                                                            l5207 409E  
                                                            l5119 38CE  
                                                            l6103 2FE8  
                                                            l6111 0FB6  
                                                            l6031 2918  
                                                            l6015 22B0  
                                                            l6007 2244  
                                                            l4249 3F0C  
                                                            l5209 40A4  
                                                            l4257 3438  
                                                            l6201 1E8E  
                                                            l4329 1882  
                                                            l6121 102E  
                                                            l6113 0FC2  
                                                            l6041 2996  
                                                            l6033 2938  
                                                            l6025 28CE  
                                                            l6009 2264  
                                                            l5155 3906  
                                                            l6211 1EEA  
                                                            l6203 1E9E  
                                                            l6051 30C0  
                                                            l6131 10CA  
                                                            l6123 1058  
                                                            l6115 0FCA  
                                                            l6107 0F84  
                                                            l6035 2946  
                                                            l6043 29CA  
                                                            l6027 28E2  
                                                            l6019 22D4  
                                                            l5331 3656  
                                                            l5341 41AE  
                                                            l5501 1BBA  
                                                            l6301 15F8  
                                                            l5157 3912  
                                                            l4285 3B68  
                                                            l4277 3B30  
                                                            l4293 3FFC  
                                                            l6221 1F78  
                                                            l6213 1F06  
                                                            l6205 1EB4  
                                                            l6053 30D4  
                                                            l6061 310E  
                                                            l6141 112E  
                                                            l6133 10E0  
                                                            l6125 1068  
                                                            l6117 0FDA  
                                                            l6109 0FA6  
                                                            l6037 2956  
                                                            l6029 2906  
                                                            l5325 41BE  
                                                            l5333 3658  
                                                            l5343 41D0  
                                                            l5351 1CB4  
                                                            l5335 3DB6  
                                                            l5511 1BD4  
                                                            l5503 1BC2  
                                                            l6303 1614  
                                                            l6311 166A  
                                                            l5159 391A  
                                                            l2775 41DE  
                                                            l4279 3B40  
                                                            l6231 1FB4  
                                                            l6223 1F7C  
                                                            l6215 1F2C  
                                                            l6207 1ECA  
                                                            l6071 2EA0  
                                                            l6063 2E5E  
                                                            l6055 30E2  
                                                            l6047 30A8  
                                                            l6151 1182  
                                                            l6143 114C  
                                                            l6135 10E8  
                                                            l6127 1084  
                                                            l6119 1002  
                                                            l6039 2988  
                                                            l5191 3E7A  
                                                            l5327 3604  
                                                            l5337 41CA  
                                                            l5361 1D26  
                                                            l5353 1CD6  
                                                            l5521 1BDE  
                                                            l5513 1BD6  
                                                            l5505 1BC4  
                                                            l6321 1700  
                                                            l6313 169A  
                                                            l4289 401C  
                                                            l6241 1FF0  
                                                            l6233 1FB8  
                                                            l6225 1F8C  
                                                            l6217 1F48  
                                                            l6209 1EDA  
                                                            l6401 3716  
                                                            l6081 2F0E  
                                                            l6073 2ECE  
                                                            l6065 2E6E  
                                                            l6057 3100  
                                                            l6049 30B0  
                                                            l6161 123E  
                                                            l6153 118E  
                                                            l6145 1152  
                                                            l6137 1104  
                                                            l6129 10A6  
                                                            l5329 3652  
                                                            l5347 41B6  
                                                            l5371 1DA2  
                                                            l5363 1D3C  
                                                            l5355 1CE2  
                                                            l5531 1C0E  
                                                            l5515 1BD8  
                                                            l5507 1BD0  
                                                            l5523 1BE4  
                                                            l6171 3A34  
                                                            l6331 281E  
                                                            l6323 1714  
                                                            l6315 16B6  
                                                            l6307 1634  
                                                            l6243 1FFA  
                                                            l6235 1FC2  
                                                            l6227 1FA2  
                                                            l6219 1F6E  
                                                            l4299 3AAE  
                                                            l4811 19A4  
                                                            l4803 1920  
                                                            l6083 2F1C  
                                                            l6075 2EEC  
                                                            l6067 2E72  
                                                            l6059 310C  
                                                            l6091 2F8A  
                                                            l6163 126A  
                                                            l6155 119A  
                                                            l6147 115A  
                                                            l6139 1126  
                                                            l5381 1E08  
                                                            l5373 1DAE  
                                                            l5365 1D5E  
                                                            l5357 1CF8  
                                                            l5349 1CB4  
                                                            l5541 1C22  
                                                            l5533 1C1A  
                                                            l5525 1BF2  
                                                            l5517 1BDA  
                                                            l5509 1BD2  
                                                            l5445 418C  
                                                            l6261 3DFA  
                                                            l6333 286E  
                                                            l6325 27C4  
                                                            l6309 1658  
                                                            l6253 3BE4  
                                                            l6245 3BAC  
                                                            l6421 3CBE  
                                                            l6413 3C9E  
                                                            l6237 1FC4  
                                                            l6229 1FB2  
                                                            l6405 371C  
                                                            l4821 19F8  
                                                            l4813 19B4  
                                                            l4805 1984  
                                                            l6181 3A70  
                                                            l6085 2F24  
                                                            l6077 2EF4  
                                                            l6069 2E84  
                                                            l6093 2FA6  
                                                            l6341 3266  
                                                            l6149 116C  
                                                            l6157 11D0  
                                                            l6501 1508  
                                                            l5197 3E7E  
                                                            l5383 1E2A  
                                                            l5375 1DC4  
                                                            l5367 1D6A  
                                                            l5359 1D1A  
                                                            l5391 1E60  
                                                            l5551 1C2E  
                                                            l5543 1C24  
                                                            l5535 1C1C  
                                                            l5527 1C04  
                                                            l5519 1BDC  
                                                            l5471 1AF4  
                                                            l6271 265E  
                                                            l6263 3E06  
                                                            l6175 3A42  
                                                            l6167 3A22  
                                                            l6335 28A6  
                                                            l6327 27E6  
                                                            l6319 16CE  
                                                            l6247 3BBC  
                                                            l6431 2DB6  
                                                            l6423 3CC4  
                                                            l6415 3CBA  
                                                            l6239 1FC8  
                                                            l6407 371E  
                                                            l4831 1A1E  
                                                            l4823 1A08  
                                                            l4815 19CA  
                                                            l4807 199A  
                                                            l6183 3A80  
                                                            l6079 2F00  
                                                            l6095 2FB8  
                                                            l6343 3276  
                                                            l6159 11F8  
                                                            l6503 151A  
                                                            l5199 3E92  
                                                            l5447 4170  
                                                            l5385 1E36  
                                                            l5377 1DE6  
                                                            l5369 1D80  
                                                            l5553 1C40  
                                                            l5545 1C26  
                                                            l5537 1C1E  
                                                            l5529 1C0C  
                                                            l5481 1B2C  
                                                            l5473 1AF8  
                                                            l6273 266E  
                                                            l6265 3E0C  
                                                            l6257 3DEA  
                                                            l6169 3A26  
                                                            l6329 27F4  
                                                            l6281 2CC4  
                                                            l6441 2E1A  
                                                            l6433 2DD8  
                                                            l6521 3FDA  
                                                            l6425 3CC6  
                                                            l6193 3F96  
                                                            l4681 39D2  
                                                            l6409 372E  
                                                            l4841 1A58  
                                                            l4825 1A12  
                                                            l4817 19E8  
                                                            l4809 19A2  
                                                            l6513 3F64  
                                                            l6097 2FC4  
                                                            l6089 2F2E  
                                                            l6345 3282  
                                                            l6337 320C  
                                                            l5801 2B28  
                                                            l6361 33B0  
                                                            l6353 3352  
                                                            l6505 1520  
                                                            l5387 1E58  
                                                            l5379 1DF2  
                                                            l5555 1C60  
                                                            l5547 1C28  
                                                            l5539 1C20  
                                                            l5491 1B68  
                                                            l5483 1B30  
                                                            l5475 1B0C  
                                                            l5563 1C6E  
                                                            l6275 2692  
                                                            l6267 258A  
                                                            l6259 3DF8  
                                                            l6283 2CD4  
                                                            l6291 1528  
                                                            l6435 2DE4  
                                                            l6427 2D84  
                                                            l6531 3FEA  
                                                            l4691 37FA  
                                                            l4683 3A08  
                                                            l4843 1A68  
                                                            l4835 1A34  
                                                            l4819 19E8  
                                                            l6515 3F68  
                                                            l6507 3F4A  
                                                            l6371 40FC  
                                                            l6099 2FD2  
                                                            l6347 32A4  
                                                            l6339 3248  
                                                            l5811 2B52  
                                                            l5803 2B2A  
                                                            l6363 33C6  
                                                            l6355 3366  
                                                            l6451 12C2  
                                                            l6443 1278  
                                                            l5493 1B76  
                                                            l5485 1B38  
                                                            l5477 1B12  
                                                            l6277 26A2  
                                                            l6269 263E  
                                                            l6285 2CE0  
                                                            l6293 1560  
                                                            l6437 2DF0  
                                                            l6429 2D94  
                                                            l4693 380C  
                                                            l6381 3C84  
                                                            l6373 3C64  
                                                            l4685 3A0C  
                                                            l6533 413A  
                                                            l6197 1E6A  
                                                            l4781 37B4  
                                                            l4861 1AC8  
                                                            l4853 1A8C  
                                                            l4845 1A78  
                                                            l4837 1A52  
                                                            l6517 3F6C  
                                                            l6509 3F5E  
                                                            l6189 3AAA  
                                                            l6349 32AC  
                                                            l5821 2B8A  
                                                            l5813 2B68  
                                                            l5805 2B34  
                                                            l6365 33E2  
                                                            l6357 3388  
                                                            l6461 136C  
                                                            l6453 12DE  
                                                            l6445 1286  
                                                            l6541 3F70  
                                                            l5495 1B88  
                                                            l5487 1B48  
                                                            l5479 1B22  
                                                            l5831 3D4A  
                                                            l6287 2CF2  
                                                            l6279 2CA0  
                                                            l6295 1596  
                                                            l5911 3BA6  
                                                            l5903 3B6E  
                                                            l6439 2E0C  
                                                            l6527 3FE0  
                                                            l4695 3810  
                                                            l6383 3C8A  
                                                            l6375 3C80  
                                                            l4687 3A0E  
                                                            l6535 4142  
                                                            l6199 1E7A  
                                                            l4783 37B6  
                                                            l4863 1AE4  
                                                            l4855 1A9C  
                                                            l4847 1A88  
                                                            l4839 1A56  
                                                            l4791 3ED2  
                                                            l5823 2BA0  
                                                            l5815 2B70  
                                                            l5807 2B46  
                                                            l6359 3394  
                                                            l6471 13C6  
                                                            l6463 138C  
                                                            l6455 12F6  
                                                            l6447 1296  
                                                            l6551 3934  
                                                            l6631 3CE0  
                                                            l5497 1B96  
                                                            l5489 1B56  
                                                            l5833 3D5A  
                                                            l5921 35C8  
                                                            l6721 3A56  
                                                            l6289 2D16  
                                                            l6297 15AA  
                                                            l5905 3B7E  
                                                            l6529 3FE6  
                                                            l4697 381C  
                                                            l4689 37E6  
                                                            l6385 3C8C  
                                                            l6537 4146  
                                                            l6393 36D2  
                                                            l4785 37CA  
                                                            l4777 3790  
                                                            l4857 1A9E  
                                                            l4793 3EE4  
                                                            l6369 40F2  
                                                            l5825 2BB0  
                                                            l5817 2B74  
                                                            l5809 2B50  
                                                            l6481 1464  
                                                            l6473 13D0  
                                                            l6465 1394  
                                                            l6457 131C  
                                                            l6449 12A6  
                                                            l6545 3F7A  
                                                            l4961 36B8  
                                                            l6561 3950  
                                                            l6553 3944  
                                                            l6633 3CF0  
                                                            l6625 3CD8  
                                                            l6723 1C84  
                                                            l5499 1BA8  
                                                            l5931 26B4  
                                                            l5827 3F24  
                                                            l5923 35DC  
                                                            l5915 3594  
                                                            l6299 15BC  
                                                            l4699 3820  
                                                            l6539 414A  
                                                            l6395 36E8  
                                                            l6387 36CE  
                                                            l4787 37D0  
                                                            l4779 37A6  
                                                            l4859 1AB2  
                                                            l4795 3EE8  
                                                            l5851 3ECE  
                                                            l5843 3EA8  
                                                            l5819 2B7A  
                                                            l6491 14CC  
                                                            l6483 1474  
                                                            l6475 13DE  
                                                            l6467 13AA  
                                                            l6459 133E  
                                                            l6547 3F80  
                                                            l6571 3978  
                                                            l6563 3964  
                                                            l6555 3948  
                                                            l6635 3D00  
                                                            l6627 3CDC  
                                                            l5933 26C2  
                                                            l5941 22F2  
                                                            l5829 3F34  
                                                            l5925 35F0  
                                                            l5917 35A4  
                                                            l6397 36FE  
                                                            l4797 1914  
                                                            l5845 3EB8  
                                                            l5861 300C  
                                                            l6493 14CE  
                                                            l6485 147E  
                                                            l6469 13C0  
                                                            l6477 141E  
                                                            l6549 3F82  
                                                            l4957 366A  
                                                            l6573 397C  
                                                            l6557 394C  
                                                            l6637 3D04  
                                                            l6629 3CDE  
                                                            l5839 3D76  
                                                            l5927 3732  
                                                            l5935 26C4  
                                                            l5855 383C  
                                                            l5951 2350  
                                                            l5943 2302  
                                                            l5919 35B4  
                                                            l6719 344C  
                                                            l6399 3712  
                                                            l5871 3092  
                                                            l5863 3028  
                                                            l6495 14E2  
                                                            l6479 1430  
                                                            l6487 1492  
                                                            l4959 3688  
                                                            l6575 3980  
                                                            l6567 396A  
                                                            l6559 3950  
                                                            l6591 3FC4  
                                                            l5929 376C  
                                                            l5937 2740  
                                                            l5945 232C  
                                                            l5793 2AFA  
                                                            l5785 2ADA  
                                                            l5881 2BFE  
                                                            l5865 3036  
                                                            l5873 309E  
                                                            l6497 1502  
                                                            l6489 14A6  
                                                            l6569 3972  
                                                            l6593 3FC8  
                                                            l6585 3FB8  
                                                            l5939 2746  
                                                            l5955 2376  
                                                            l5947 2334  
                                                            l4995 32B8  
                                                            l5891 3D12  
                                                            l5795 2AFC  
                                                            l5787 2AE2  
                                                            l5883 2C48  
                                                            l5867 3064  
                                                            l5859 2FF2  
                                                            l6499 1506  
                                                            l6595 3FCC  
                                                            l6587 3FBC  
                                                            l5981 315E  
                                                            l5965 23B8  
                                                            l5957 2394  
                                                            l4997 32C8  
                                                            l5893 3D22  
                                                            l5797 2B06  
                                                            l5789 2AE4  
                                                            l5885 2C72  
                                                            l5877 2BBE  
                                                            l5869 3074  
                                                            l6597 3FD0  
                                                            l6589 3FC0  
                                                            l5983 317A  
                                                            l5967 23E2  
                                                            l5959 23B2  
                                                            l5975 241E  
                                                            l4999 32D8  
                                                            l5799 2B14  
                                                            l5887 2C96  
                                                            l5879 2BD4  
                                                            l5991 219A  
                                                            l6599 3FD4  
                                                            l5985 31AE  
                                                            l5969 23FC  
                                                            l5977 243E  
                                                            l5993 21AA  
                                                            l5987 31E4  
                                                            l5899 3D3E  
                                                            l5995 21BE  
                                                            l5997 21E2  
                                                            l5989 2196  
                                                            l5999 21F0  
                                   ?_Button_Reading_Update_Helper 0019  
                                                            _LATA 000F82  
                                                            _LATB 000F83  
                                                            _LATC 000F84  
                                                            u4000 3688  
                                                            _LATD 000F85  
                                                            u4001 3684  
                                                            _LATE 000F86  
                                                            u4010 36B8  
                                                            u4011 36B4  
                                                            u4200 38E0  
                                                            u5000 2AF6  
                                                            u4201 38DC  
                                                            u5001 2AF2  
                                                            u4050 32C8  
                                                            u5010 2B14  
                                                            _T2PR 000FBB  
                                                            u4051 32C4  
                                                            u5011 2B10  
                                                            u5100 3EB8  
                                                            u5020 2B24  
                                                            u5101 3EB4  
                                                            u5021 2B20  
                                                            u5110 3868  
                                                            u2710 3F0C  
                                                            u5030 2B42  
                                                            u2711 3F08  
                                                            u5031 2B3E  
                                                            u5200 3BA0  
                                                            u2800 3B62  
                                                            u5040 2B68  
                                                            u5120 3028  
                                                            u6000 3388  
                                                            u4320 3EA4  
                                                            u5201 3B9A  
                                                            u2801 3B5C  
                                                            u5041 2B64  
                                                            u5121 3024  
                                                            u6001 3384  
                                                            u4321 3EA0  
                                                            u6010 3C9C  
                                                            u4250 3902  
                                                            u4330 40B6  
                                                            u2810 4038  
                                                            u5050 2B8A  
                                                            u5130 3036  
                                                            u5115 385E  
                                                            u6011 3C98  
                                                            u4251 38FE  
                                                            u4331 40B2  
                                                            u2811 4032  
                                                            u5051 2B86  
                                                            u5131 3032  
                                                            u4500 1CCA  
                                                            u5220 26C2  
                                                            u5300 241A  
                                                            u4260 3932  
                                                            u2820 4018  
                                                            u6020 36E8  
                                                            u3700 1A08  
                                                            u5060 2B98  
                                                            u5140 3064  
                                                            u4501 1CC6  
                                                            u5221 26BE  
                                                            u5301 2416  
                                                            u4261 392E  
                                                            u2725 33FA  
                                                            u2821 4012  
                                                            u6021 36E4  
                                                            u3701 1A04  
                                                            u5061 2B94  
                                                            u5141 3060  
                                                            u4510 1CF8  
                                                            u5230 26F0  
                                                            u5310 243E  
                                                            u5206 3BA2  
                                                            u2806 3B64  
                                                            u2726 33FC  
                                                            u6030 36FE  
                                                            u4190 38B4  
                                                            u2830 3AC8  
                                                            u3710 1A30  
                                                            u5070 2BB0  
                                                            u5150 3092  
                                                            u6110 1296  
                                                            u4511 1CF4  
                                                            u5215 377A  
                                                            u5311 243A  
                                                            u4255 38F4  
                                                            u2735 3408  
                                                            u6031 36FA  
                                                            u4191 38B0  
                                                            u2831 3AC4  
                                                            u3711 1A2C  
                                                            u5071 2BAC  
                                                            u5151 308E  
                                                            u6111 1292  
                                                            u4600 1E1E  
                                                            u4520 1D0E  
                                                            u5320 317A  
                                                            u5240 2772  
                                                            u5080 3F34  
                                                            u2736 340A  
                                                            u2816 403A  
                                                            u6040 3712  
                                                            u2840 1798  
                                                            u3640 37B4  
                                                            u3720 1A52  
                                                            u5160 2BD4  
                                                            u5400 2946  
                                                            u6200 1464  
                                                            u6120 12C2  
                                                            u4601 1E1A  
                                                            u4521 1D0A  
                                                            u5321 3176  
                                                            u5081 3F30  
                                                            u4265 3924  
                                                            u2745 3416  
                                                            u6041 370E  
                                                            u2841 1794  
                                                            u3641 37B0  
                                                            u3721 1A4E  
                                                            u5161 2BD0  
                                                            u5401 2942  
                                                            u6201 1460  
                                                            u6121 12BE  
                                                            u4610 1E4C  
                                                            u4530 1D3C  
                                                            u5090 3D5A  
                                                            u5250 234C  
                                                            u3490 383A  
                                                            u2746 3418  
                                                            u2826 401A  
                                                            u6050 372E  
                                                            u2850 17DE  
                                                            u3730 1A68  
                                                            u3650 3EE4  
                                                            u5410 3100  
                                                            u5330 21F0  
                                                            u6210 14CC  
                                                            u6130 12DE  
                                                            u4611 1E48  
                                                            u4531 1D38  
                                                            u5091 3D56  
                                                            u5235 26E6  
                                                            u5315 2430  
                                                            u5251 2348  
                                                            u3491 3836  
                                                            u2755 3424  
                                                            u6051 372A  
                                                            u2851 17DA  
                                                            u3731 1A64  
                                                            u3651 3EE0  
                                                            u5411 30FC  
                                                            u5331 21EC  
                                                            u6211 14C8  
                                                            u6131 12DA  
                                                            u4540 1D52  
                                                            u4700 1B48  
                                                            u5260 2372  
                                                            u6108 2E48  
                                                            u6060 3CD6  
                                                            u2756 3426  
                                                            u2860 1814  
                                                            u3740 1A78  
                                                            u3660 199A  
                                                            u5180 3D22  
                                                            u5420 3154  
                                                            u5500 0FB6  
                                                            u5340 2214  
                                                            _PMD0 000EDC  
                                                            u4541 1D4E  
                                                            u4701 1B44  
                                                            u5245 2768  
                                                            u5261 236E  
                                                            u6109 2E5C  
                                                            u6061 3CD2  
                                                            u2765 3432  
                                                            u2861 1810  
                                                            u3741 1A74  
                                                            u3661 1996  
                                                            u5181 3D1E  
                                                            u5421 3150  
                                                            u5501 0FB2  
                                                            u5341 2210  
                                                            _PMD1 000EDD  
                                                            u4550 1D80  
                                                            u4710 1B68  
                                                            u5270 2394  
                                                            u5190 3B7E  
                                                            u6070 2DB6  
                                                            u2790 3B40  
                                                            u2766 3434  
                                                            u2870 1866  
                                                            u3750 1AAE  
                                                            u3670 19B4  
                                                            u6230 3F5E  
                                                            u5430 2E84  
                                                            u5174 2C16  
                                                            u5510 0FDA  
                                                            u5350 2244  
                                                            u6150 136C  
                                                            _PMD2 000EDE  
                                                            u4551 1D7C  
                                                            u4711 1B64  
                                                            u5271 2390  
                                                            u5255 233E  
                                                            u5191 3B7A  
                                                            u6071 2DB2  
                                                            u2791 3B3C  
                                                            u2871 1862  
                                                            u3751 1AAA  
                                                            u3671 19B0  
                                                            u6231 3F5A  
                                                            u5431 2E80  
                                                            u5175 2C10  
                                                            u5511 0FD6  
                                                            u5351 2240  
                                                            u6151 1368  
                                                            _PMD3 000EDF  
                                                            u4560 1D96  
                                                            u4720 1B88  
                                                            u5280 23B2  
                                                            u6080 2DD8  
                                                            u6240 3FFA  
                                                            u2880 18D4  
                                                            u3760 1AC8  
                                                            u3680 19CA  
                                                            u5440 2EA0  
                                                            u5600 1182  
                                                            u5360 2280  
                                                            u6160 138C  
                                                            u6144 130E  
                                                            _PMD4 000EE0  
                                                            u4561 1D92  
                                                            u4721 1B84  
                                                            u5281 23AE  
                                                            u6081 2DD4  
                                                            u6241 3FF6  
                                                            u2881 18D0  
                                                            u3761 1AC4  
                                                            u3681 19C6  
                                                            u5441 2E9C  
                                                            u5601 117E  
                                                            u5361 227C  
                                                            u6161 1388  
                                                            u6145 1308  
                                                            _PMD5 000EE1  
                                                            u4570 1DC4  
                                                            u4730 1BBA  
                                                            u5290 23FC  
                                                            u6090 2E0C  
                                                            u2890 190E  
                                                            u3770 1AE4  
                                                            u3690 19E8  
                                                            u5450 2EEC  
                                                            u5370 22B0  
                                                            u6170 13C0  
                                                            u6250 3F92  
                                                            u4571 1DC0  
                                                            u4731 1BB6  
                                                            u5291 23F8  
                                                            u6091 2E08  
                                                            u2891 190A  
                                                            u3771 1AE0  
                                                            u3691 19E4  
                                                            u5451 2EE8  
                                                            u5371 22AC  
                                                            u6171 13BC  
                                                            u6251 3F8E  
                                                            u4580 1DDA  
                                                            u4740 1C04  
                                                            u5700 1ECA  
                                                            u5460 2F1C  
                                                            u5540 1068  
                                                            u5524 0FF0  
                                                            u5380 2918  
                                                            u6228 14E8  
                                                            u6180 141E  
                                                            u6260 3944  
                                                            u4581 1DD6  
                                                            u4741 1C00  
                                                            u5701 1EC6  
                                                            u5461 2F18  
                                                            u5541 1064  
                                                            u5525 0FEA  
                                                            u5381 2914  
                                                            u6229 1502  
                                                            u6181 141A  
                                                            u6261 3940  
                                                            u4590 1E08  
                                                            u4750 1C40  
                                                            u5710 1EDA  
                                                            u5470 2F8A  
                                                            u5630 123E  
                                                            u5614 11EA  
                                                            u5550 1084  
                                                            u5534 1020  
                                                            u5390 292C  
                                                            u6190 1430  
                                                            u6270 3964  
                                                            u4591 1E04  
                                                            u4495 3DDA  
                                                            u4751 1C3C  
                                                            u5711 1ED6  
                                                            u5471 2F86  
                                                            u5631 123A  
                                                            u5615 11E4  
                                                            u5551 1080  
                                                            u5535 101A  
                                                            u5391 2928  
                                                            u6191 142C  
                                                            u6271 3960  
                                                            u4680 1B0C  
                                                            u5720 1F06  
                                                            u5480 2FA6  
                                                            u5624 1218  
                                                            u5560 10E0  
                                                            u4681 1B08  
                                                            u5721 1F02  
                                                            u5481 2FA2  
                                                            u5625 1212  
                                                            u5561 10DC  
                                                            u4690 1B22  
                                                            u5810 265E  
                                                            u5730 1F48  
                                                            u5650 3A80  
                                                            u5490 2FE0  
                                                            u5570 1104  
                                                            u4691 1B1E  
                                                            u5811 265A  
                                                            u5731 1F44  
                                                            u5651 3A7C  
                                                            u5491 2FDC  
                                                            u5571 1100  
                                                            u5820 2692  
                                                            u5900 1630  
                                                            u5660 3AA4  
                                                            u5644 1256  
                                                            u5580 1126  
                                                            u5821 268E  
                                                            u5805 2614  
                                                            u5901 162C  
                                                            u5661 3A9E  
                                                            u5645 1250  
                                                            u5581 1122  
                                                            u5806 261E  
                                                            u5830 2CC4  
                                                            u5910 169A  
                                                            u5670 3AA6  
                                                            u5590 116C  
                                                            u5807 262E  
                                                            u5831 2CC0  
                                                            u5911 1696  
                                                            u5591 1168  
                                                            u5840 2D16  
                                                            u5920 16B6  
                                                            u5760 3BBC  
                                                            u5680 1E8E  
                                                            u5841 2D12  
                                                            u5921 16B2  
                                                            u5761 3BB8  
                                                            u5745 1FDC  
                                                            u5681 1E8A  
                                                            u5850 2D42  
                                                            u5930 1700  
                                                            u5770 3BDE  
                                                            u5690 1EB4  
                                                            u5931 16FC  
                                                            u5771 3BD8  
                                                            u5755 1FF8  
                                                            u5691 1EB0  
                                                            u5780 3DF8  
                                                            u5940 27E6  
                                                            u5860 1560  
                                                            u5756 1FFA  
                                                            u5781 3DF4  
                                                            u5941 27E2  
                                                            u5861 155C  
                                                            u5790 25B6  
                                                            u5870 1596  
                                                            u5855 2D38  
                                                            u5871 1592  
                                                            u5960 286E  
                                                            u5880 15F8  
                                                            u5776 3BE0  
                                                            u5961 286A  
                                                            u5881 15F4  
                                                            u5890 1614  
                                                            u5795 25AC  
                                                            u5891 1610  
                                                            u5980 3266  
                                                            u5981 3262  
                                                            u5958 27FA  
                                                            u5990 32A4  
                                                            u5959 281A  
                                                            u5991 32A0  
                                                            u5978 28AC  
                                                            u5979 28CC  
                                      Button_State_Pressed@button 0029  
                                                            _TMR2 000FBA  
                                                            _WPUA 000F0B  
                                                            _WPUB 000F13  
                                                            _WPUC 000F1B  
                                                            _WPUD 000F20  
                                                            _WPUE 000F28  
                                             _sensor_medianBuffer 0060  
                                              _MTOUCH_needReburst 41DA  
                                                            abs@a 0016  
                                                            _main 3CD8  
                            __size_of_MTOUCH_Button_InitializeAll 003A  
                                                            fsr1h 000FE2  
                                                            fsr2h 000FDA  
                                                            indf1 000FE7  
                                                            indf2 000FDF  
                                                            fsr1l 000FE1  
                                                            fsr2l 000FD9  
                                                            btemp 004A  
                            __size_of_MTOUCH_Sensor_InitializeAll 003A  
                                  get_difference@current_position 001A  
                                     moving_average_filter@slider 0023  
                                                      _ClearEvent 41AE  
                                                            prodh 000FF4  
                                                            prodl 000FF3  
                                                            start 006E  
                              __size_ofi2_Sensor_scheduleNextScan 0196  
                                       ??_Sensor_FrequencyHopping 002A  
                                             ?_MTOUCH_needReburst 0001  
                            MTOUCH_Slider_Position_Get@sliderName 0018  
                                                    ___param_bank 000000  
                                    fp__Button_State_Initializing 0000  
                                                   ?_medianFilter 0016  
                                __end_of_MTOUCH_Slider_ServiceAll 3F94  
                                  __end_of_Sensor_autoCalibration 258A  
                                         __size_of_Slider_Service 02B4  
                                            get_difference@slider 0016  
                                        ?_MTOUCH_Service_Mainloop 0001  
                                __size_of_MTOUCH_Button_isPressed 0040  
                                   __size_of_Button_State_Pressed 010A  
                                         ?_Button_Check_AKS_Block 001E  
                                                           ??_abs 0018  
                                       __end_of_Slider_FindMiddle 315E  
                          MTOUCH_Sensor_isSamplingComplete@sensor 0020  
                                     ?_Button_Baseline_Initialize 0019  
Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter 0091  
                                   ??_MTOUCH_Sensor_RawSample_Get 0018  
                                   Sensor_RawSample_Update@sensor 001E  
                                   Sensor_RawSample_Update@result 0020  
                                   __size_of_ProcessButtonRelease 004E  
                                  __size_of_OSCILLATOR_Initialize 0018  
                                   __end_of_OSCILLATOR_Initialize 4124  
                                         __end_of_ApplicationTask 1CB4  
                                               _Slider_Initialize 32B6  
                             __end_of_Sensor_isCalibratingAcqTime 401C  
                                  ?i2_Sensor_isCalibratingAcqTime 0001  
                                     _Sensor_isCalibratingAcqTime 3FFC  
                                                           _ADACC 000F6B  
                                                           _ADACQ 000F57  
                                                           _ADCAP 000F58  
                                                           _ADACT 000F51  
                                                           ?_main 0001  
                                                           _ADCLK 000F52  
                                                           _ADCNT 000F62  
                                                           _ADPCH 000F5A  
                                                           _ADREF 000F53  
                                                           _ADPRE 000F59  
                                                           _ADRPT 000F61  
                                                           _T2CON 000FBC  
                                                           _T2HLT 000FBD  
                                         __size_of_Button_Service 00DC  
                                      _ADCC_ADTI_InterruptHandler 00FD  
                                                           _T2TMR 000FBA  
                                                           _T2RST 000FBF  
                                                           i2l204 2588  
                                                           i2l221 41AC  
                                                           i2l151 350A  
                                                           i2l231 2AD8  
                                                           i2l144 3482  
                                                           i2l224 29F6  
                                                           i2l209 2588  
                                                           i2l146 3490  
                                                           i2l147 349E  
                                                           i2l308 3C62  
                                                           i2l148 34AC  
                                                           i2l341 40D4  
                                                           i2l149 34BA  
                                                           i2l344 3E48  
                                                           i2l338 405A  
                                                           i2l347 407A  
                                                           i2l363 416E  
                                                           i2l356 3C24  
                                                           i2l197 2194  
                                                           _OSCEN 000ED7  
                                              _PWM4_LoadDutyValue 3DB6  
                                              ?_Slider_Initialize 0001  
                                                           _TRISA 000F87  
                                                           _TRISB 000F88  
                                                           _TRISC 000F89  
                                                           _TRISD 000F8A  
                                                           _TRISE 000F8B  
                               MTOUCH_Slider_InitializeAll@slider 0019  
                                                           i2_abs 3AEE  
                                 __size_of_Button_DefaultCallback 0002  
                                             i2_Sensor_SetTrisBit 347C  
                                            ??_MTOUCH_needReburst 0016  
                                     __size_of_calculate_position 009A  
                                 __size_of_Sensor_DefaultCallback 0002  
                           __end_of_MTOUCH_Sensor_Scan_Initialize 41CA  
                          __size_of_MTOUCH_Sensor_Scan_Initialize 0006  
                                   _MTOUCH_Sensor_Scan_Initialize 41C4  
                                         Sensor_setSampled@sensor 0001  
                                           ??_ProcessSliderChange 0019  
                                 __end_of_Sensor_scheduleNextScan 2000  
                                             ?_PWM4_LoadDutyValue 0016  
                                             ??_Slider_Initialize 0016  
                                        __size_of_Slider_FindLeft 00D0  
                                                           _state 0094  
                                __size_of_Button_State_NotPressed 01FA  
                                        ??_calculate_raw_position 002C  
                                                           pclath 000FFA  
                                                     _ClearButton 41B6  
                                                           tablat 000FF5  
                                            _Sensor_Sampled_Reset 4150  
                                                           plusw2 000FDB  
                          moving_average_filter@filtered_position 002B  
                                                           ttemp5 004B  
                                                           ttemp6 004E  
                                                           ttemp7 0052  
                              __end_of_MTOUCH_Slider_Position_Get 3D48  
                                      _MTOUCH_Slider_Position_Get 3D10  
                                                           status 000FD8  
                                __size_of_MTOUCH_Sensor_isEnabled 003E  
                                                           wtemp8 004B  
                                                  divide@exponent 001A  
                                          ?i2_Sensor_isCalibrated 0001  
                                            ?i2_Sensor_SetTrisBit 0001  
                                                __end_of_GetEvent 41D0  
                                                    ?_interpolate 001D  
                                                  ??_medianFilter 0018  
                                                 __initialization 3984  
                                          _Sensor_setSamplePeriod 3ED2  
                                  __end_of_Button_Check_AKS_Block 2442  
                                                    __end_of_main 3D10  
                                            _Sensor_setCalibrated 40B8  
                                            ??_PWM4_LoadDutyValue 0018  
                                       __end_of_Slider_Initialize 3352  
                                         __end_of_PWM4_Initialize 413A  
                                         __end_of_TMR2_Initialize 409A  
                                     ?_INTERRUPT_InterruptManager 0001  
                                __end_of_MTOUCH_Button_Initialize 3604  
                                                          ??_main 0034  
                                                ??_get_difference 001C  
                                              __size_of_GetButton 0006  
                                                   __activetblptr 000003  
                                         _MTOUCH_Sensor_Calibrate 3F22  
                                         ??_Button_Reading_Update 001F  
                                                          ?i2_abs 0001  
                                __end_of_ADCC_ThresholdISR_mTouch 41AE  
                            MTOUCH_Sensor_Sampled_ResetAll@sensor 0018  
                                        ?_Button_Deviation_Update 0016  
                                                    ?_MTOUCH_Tick 0001  
                                    Button_Baseline_Update@button 0016  
                                                          _ADACCH 000F6C  
                                                          _ADACCL 000F6B  
                                                          _ADCON0 000F5B  
                                                          _ADCON1 000F54  
                                                          _ADCON2 000F55  
                                                          _ADCON3 000F56  
                                                          _ADFLTR 000F6D  
                                                          _ADERRH 000F6A  
                                                          _ADERRL 000F69  
                            __size_of_MTOUCH_Sensor_RawSample_Get 0038  
                                                          _ADLTHH 000F66  
                                                          _ADLTHL 000F65  
                                                          _ADRESH 000F5F  
                                                          _ADRESL 000F5E  
                                                          _ADSTAT 000F60  
                                                          _ADUTHH 000F68  
                                                          _ADUTHL 000F67  
                                               interpolate@delta1 001D  
                                               interpolate@delta2 001F  
                                               interpolate@delta3 0021  
                                                          _ANSELA 000F0C  
                                                          _ANSELB 000F14  
                                                          _ANSELC 000F1C  
                                                          _ANSELD 000F21  
                                                          _ANSELE 000F29  
                                                          _RA3PPS 000EE5  
                                     positional_hysteresis@slider 0023  
                                           __end_of_GetMotorSpeed 1E6A  
                                                          _ODCONA 000F0A  
                                                          _ODCONB 000F12  
                                                          _ODCONC 000F1A  
                                                          _ODCOND 000F1F  
                                                          _ODCONE 000F27  
                                                          i2l1031 0052  
                                                          i2l1213 3DB4  
                                                          i2l1219 41E8  
                                                          _BUTTON 008D  
                                                          i2l2192 3B24  
                                                          i2l2195 3B2C  
                                                          i2l5021 2034  
                                                          i2l4303 40B8  
                                                          i2l5031 209C  
                                                          i2l5023 204A  
                                                          i2l5015 2000  
                                                          i2l5041 2112  
                                                          i2l5033 20C2  
                                                          i2l5025 2060  
                                                          i2l5017 2010  
                                                          i2l5051 214E  
                                                          i2l5043 2122  
                                                          i2l5035 20DE  
                                                          i2l5027 2070  
                                                          i2l5019 2024  
                                                          i2l5131 29FA  
                                                          i2l5061 2190  
                                                          i2l5053 2158  
                                                          i2l5045 2138  
                                                          i2l5037 2104  
                                                          i2l5029 2080  
                                                          i2l5141 2A80  
                                                          i2l5133 2A0A  
                                                          i2l5125 29D4  
                                                          i2l5055 215A  
                                                          i2l5047 2148  
                                                          i2l5039 210E  
                                                          i2l5143 2A98  
                                                          i2l5135 2A26  
                                                          i2l5127 29DE  
                                                          i2l5057 215E  
                                                          i2l5049 214A  
                                                          i2l5145 2AAC  
                                                          i2l5137 2A36  
                                                          i2l5129 29EE  
                                                          i2l5059 2186  
                                                          i2l5147 2ABC  
                                                          i2l5139 2A42  
                                                          i2l5149 2AD4  
                                                          i2l4631 3C38  
                                                          i2l4623 34C8  
                                                          i2l4297 3E1A  
                                                          i2l4641 403C  
                                                          _INLVLA 000F08  
                                                          _INLVLB 000F10  
                                                          i2l4651 3BFA  
                                                          i2l4619 347E  
                                                          i2l5291 41A4  
                                           ?_Sensor_Sampled_Reset 0016  
                                                          _INLVLC 000F18  
                                                          _INLVLD 000F1D  
                                                          i2l4645 405C  
                                                          i2l4661 3AEE  
                                                          i2l4637 3C60  
                                                          i2l4629 3C28  
                                                          i2l5293 41A8  
                                                          _INLVLE 000F25  
                                                          i2l4663 3B08  
                                                          i2l4751 244E  
                                                          i2l4753 246A  
                                                          i2l4761 24CE  
                                                          i2l4657 3C22  
                                                          i2l4649 3BEA  
                                                          i2l5465 3D80  
                                                          i2l4763 2524  
                                                          i2l4755 24A0  
                                                          i2l5467 3D84  
                                                          i2l4773 2574  
                                                          i2l4765 2534  
                                                          i2l4757 24BE  
                                                          i2l4749 2442  
                                                          i2l5469 3D9A  
                                                          i2l4767 2544  
                                                          i2l4769 2560  
                                                          i2l5683 0022  
                                                          i2l4789 4160  
                                                          i2l6725 34DC  
                                                          i2l5685 0030  
                                                          i2l5687 0040  
                                                          i2l5689 004E  
                                       ProcessSliderChange@slider 0001  
                             __end_of_MTOUCH_Slider_InitializeAll 40B8  
                                     _MTOUCH_Slider_InitializeAll 409A  
                                                          _OSCFRQ 000ED9  
                                               interpolate@rtnval 0028  
                               MTOUCH_Button_InitializeAll@button 0021  
                                                          i2abs@a 0001  
                                                     ?_ClearEvent 0001  
                                  ??_Button_Reading_Update_Helper 001B  
                                           ??i2_Sensor_SetTrisBit 0002  
                                          _Button_DefaultCallback 41E6  
                                 __end_of_MTOUCH_Service_Mainloop 3984  
                                             _Sensor_isCalibrated 401C  
                                     MTOUCH_Sensor_Service@sensor 000E  
                                          _Sensor_DefaultCallback 41E4  
                                                   _packet_sample 007E  
                                           ?_Sensor_setCalibrated 0001  
                                               _ADCC_ThresholdISR 3D80  
                                    Sensor_DefaultCallback@sensor 0001  
                                  __size_of_moving_average_filter 0106  
                                   __end_of_moving_average_filter 29D4  
                                      __size_of_Slider_FindMiddle 00B6  
                                                          _divide 2ADA  
                                                          _memcpy 37E6  
                                              ?_ADCC_ThresholdISR 0001  
                                                          clear_0 39AA  
                                                          clear_1 39B6  
                                                          clear_2 39C2  
                                __end_of_MTOUCH_Button_ServiceAll 3FFC  
                                  __size_of_MTOUCH_Sensor_Service 0106  
                                                ?_ApplicationTask 0001  
                                        _MTOUCH_Slider_ServiceAll 3F70  
                                   __end_of_MTOUCH_Sensor_Service 2ADA  
                                    Sensor_autoCalibration@sensor 0005  
                                  i2Sensor_scheduleNextScan@state 0007  
                                                 _ADCC_Initialize 3604  
                                                  _PMD_Initialize 40D6  
                                                   _middle_signal 0036  
                                         _MTOUCH_Sensor_SampleAll 3F4A  
                                    Button_DefaultCallback@button 0001  
                                             ??_ADCC_ThresholdISR 0010  
                                                    __mediumconst 0000  
                                            ?_Sensor_isCalibrated 0016  
                                                          tblptrh 000FF7  
                                                          tblptrl 000FF6  
                                                          tblptru 000FF8  
                                        ?_Sensor_RawSample_Update 001E  
                                         ?_Button_Baseline_Update 0016  
                    ADCC_SetADTIInterruptHandler@InterruptHandler 0016  
                              __size_of_Sensor_setCalibratAcqTime 0030  
                              calculate_contact_size@contact_size 0027  
                                 MTOUCH_Sensor_RawSample_Get@name 0018  
                                        __end_of_Slider_FindRight 2FF2  
                                   __size_of_INTERRUPT_Initialize 0004  
                                               _SYSTEM_Initialize 3FB8  
                                 __size_of_calculate_raw_position 02F0  
                                                      __accesstop 0060  
                                         __end_of__initialization 39C8  
                             __size_of_Button_Baseline_Initialize 005E  
                                  ?_MTOUCH_Sensor_Scan_Initialize 0001  
                                              ?_SYSTEM_Initialize 0001  
                                             _Button_StateMachine 00C4  
                                               __end_of_GetButton 41D6  
                                                   ___rparam_used 000001  
                                      __end_of_Button_Tick_helper 36CE  
                                               ??_Slider_FindLeft 0019  
                                   Slider_FindMiddle@channelDelta 001E  
                        calculate_raw_position@interpolation_bits 00F9  
                                   MTOUCH_Sensor_Calibrate@sensor 0016  
                                       __end_of_ADCC_ThresholdISR 3DB6  
                                                   __end_ofi2_abs 3B2E  
                               __size_of_MTOUCH_Sensor_isSampling 0004  
                                       ?_MTOUCH_Sensor_isSampling 0001  
                                                  __pcstackCOMRAM 0001  
                                                  _Slider_Service 1274  
                                         _MTOUCH_Button_isPressed 3A6E  
                                                    __pidataBANK0 3E4A  
                     __end_of_MTOUCH_Button_SetNotPressedCallback 419A  
                    __size_of_MTOUCH_Button_SetNotPressedCallback 000E  
                           ??_MTOUCH_Button_SetNotPressedCallback 0019  
                            ?_MTOUCH_Button_SetNotPressedCallback 0016  
                             _MTOUCH_Button_SetNotPressedCallback 418C  
                                                 divide@numerator 0016  
                                             ??_SYSTEM_Initialize 0022  
                                  ?_Button_Unscaled_Deviation_Get 0016  
                                      __end_of_MTOUCH_Button_Tick 3EA6  
                                      __size_of_Slider_Initialize 009C  
                                __end_of_MTOUCH_Sensor_Initialize 3FB8  
                                       ??_MTOUCH_Sensor_Calibrate 0016  
                                __size_of_Sensor_scheduleNextScan 0196  
                                                ?_TMR2_Initialize 0001  
                                                ?_PWM4_Initialize 0001  
                                    ??i2_MTOUCH_Sensor_wasSampled 0001  
                                        calculate_position@slider 0155  
                                 __end_of_Button_Deviation_Update 26B4  
                                          __end_of_PMD_Initialize 40F2  
                                     PWM4_LoadDutyValue@dutyValue 0016  
                                                  _Button_Service 2D82  
                                      ?_Button_State_Initializing 0029  
                                            Button_Service@button 0032  
                                             __size_of_ClearEvent 0008  
                                                         ??i2_abs 0003  
                                         ??_positional_hysteresis 0027  
                                           ??_Sensor_isCalibrated 0018  
                                  __end_of_Button_Baseline_Update 27C4  
                                         ?_calculate_contact_size 0023  
       Sensor_FrequencyHopping_Autotune_Process@selectedFrequency 0028  
                                        _MTOUCH_Button_Initialize 3592  
                                        ??_Slider_DefaultCallback 0016  
                                                       ?_GetEvent 0001  
                                            __end_of_medianFilter 1914  
                                         _Button_State_NotPressed 1528  
                                   __size_of_MTOUCH_Sensor_Enable 0028  
                                      fp__Button_State_NotPressed 0000  
                                       __end_of_SYSTEM_Initialize 3FDA  
                                               _lowpowerActivated 0045  
                                MTOUCH_Sensor_isCalibrated@sensor 0016  
                                          ??_Sensor_Sampled_Reset 0018  
                                        _ADCC_ThresholdISR_mTouch 41A4  
                                     fp__ADCC_ThresholdISR_mTouch 0000  
                              __size_ofi2_MTOUCH_Sensor_isEnabled 003E  
                                                      __pbssBANK0 0060  
                                                      __pbssBANK1 0100  
                                      ?i2_MTOUCH_Sensor_isEnabled 0001  
                                         _MTOUCH_Sensor_isEnabled 3B2E  
                              calculate_raw_position@deadband_set 00F4  
                                      __end_of_mtouch_button_init 0F56  
                                          __end_of_Slider_Service 1528  
                             __size_ofi2_MTOUCH_Sensor_wasSampled 003E  
                                          ??_Sensor_setCalibrated 0003  
                             calculate_position@filtered_position 0159  
                                         Sensor_SetTrisBit@sensor 0019  
                                         __end_of_ADCC_Initialize 366A  
                                            __size_of_interpolate 00E2  
                                  MTOUCH_Sensor_wasSampled@sensor 0016  
                                i2MTOUCH_Sensor_wasSampled@sensor 0001  
                                                         ?_divide 0016  
                                                         _ADFLTRH 000F6E  
                                                         _ADFLTRL 000F6D  
                                          __end_of_Button_Service 2E5E  
                                                         ?_memcpy 0016  
                                          _calculate_raw_position 0F84  
                                                         _ADPREVH 000F5D  
                                                         _ADPREVL 000F5C  
                             __end_of_MTOUCH_Button_InitializeAll 3CD8  
                                     _MTOUCH_Button_InitializeAll 3C9E  
                            __end_of_ADCC_SetADTIInterruptHandler 418C  
                           __size_of_ADCC_SetADTIInterruptHandler 000E  
                                    _ADCC_SetADTIInterruptHandler 417E  
                                                         _ADSTPTH 000F64  
                                                         _ADSTPTL 000F63  
                             __end_of_MTOUCH_Sensor_InitializeAll 3C9E  
                                     _MTOUCH_Sensor_InitializeAll 3C64  
                                       ??_MTOUCH_Sensor_SampleAll 002A  
                                                 ?_PMD_Initialize 0001  
                                 __end_of_Sensor_RawSample_Update 37E6  
                               __size_of_MTOUCH_Sensor_wasSampled 003E  
                                       ?_MTOUCH_Sensor_wasSampled 0001  
                                  __end_of_calculate_contact_size 32B6  
                                       Sensor_isCalibrated@sensor 0016  
                               __end_of_Button_State_Initializing 2D82  
                                        _MTOUCH_Button_ServiceAll 3FDA  
                                      calculate_raw_position@size 00FA  
                                                         _OSCCON1 000ED3  
                                                         _OSCCON3 000ED5  
                                                      ??_GetEvent 0016  
                                                         _OSCTUNE 000ED8  
                                __size_of_MTOUCH_Service_Mainloop 0050  
                                                         _PWM4DCH 000FA0  
                                                         _PWM4DCL 000F9F  
                                                         _PWM4CON 000FA1  
                                                         _SLRCONA 000F09  
                                                         _SLRCONB 000F11  
                                                         _SLRCONC 000F19  
                                                         _SLRCOND 000F1E  
                                                         _SLRCONE 000F26  
                                    __end_of_Button_State_Pressed 28CE  
                                    ?_MTOUCH_Button_Deviation_Get 0001  
                                      i2Sensor_SetTrisBit@TrisBit 0001  
                                Button_Baseline_Initialize@button 0019  
                                    __end_of_ProcessButtonRelease 3A6E  
                                 Sensor_setCalibratAcqTime@sensor 0001  
                                            __size_of_MTOUCH_Tick 0006  
                                                    ?_ClearButton 0001  
                            __size_of_Sensor_isCalibratingAcqTime 0020  
                                 ??i2_Sensor_isCalibratingAcqTime 0003  
                                         ??i2_Sensor_isCalibrated 0003  
                               __end_ofi2_MTOUCH_Sensor_isEnabled 3C64  
                           positional_hysteresis@current_position 0025  
                                     ?_MTOUCH_Slider_Position_Get 0016  
                                         ?_Sensor_setSamplePeriod 0001  
                                       ??_MTOUCH_Button_isPressed 0016  
                                                      _freq_index 0044  
                                                 ?_Slider_Service 0001  
                                                         __Hparam 0000  
                                               _Sensor_SetTrisBit 33EC  
                                      __size_of_ADCC_ThresholdISR 0036  
                                                         __Lparam 0000  
                                       fp__Button_DefaultCallback 0000  
                MTOUCH_Slider_SetPositionChangedCallback@callback 0016  
                                              ?_Sensor_SetTrisBit 0016  
                __end_of_MTOUCH_Slider_SetPositionChangedCallback 417E  
               __size_of_MTOUCH_Slider_SetPositionChangedCallback 000E  
                      ??_MTOUCH_Slider_SetPositionChangedCallback 0019  
                       ?_MTOUCH_Slider_SetPositionChangedCallback 0016  
                        _MTOUCH_Slider_SetPositionChangedCallback 4170  
                                       fp__Sensor_DefaultCallback 0000  
                                  MTOUCH_Button_Initialize@button 0018  
                                                    __psmallconst 0F00  
                                                 __size_of_divide 00E4  
                                                 ?_Button_Service 0001  
                                                         __pcinit 3984  
                                                 __size_of_memcpy 0056  
                                                         __ramtop 0F00  
                                                 _scanInterrupted 0046  
                                                         __ptext0 3CD8  
                                                         __ptext1 3FB8  
                                                         __ptext2 407C  
                                                         __ptext3 4124  
                                                         __ptext4 40D6  
                                                         __ptext5 350C  
                                                         __ptext6 410C  
                                                         __ptext7 41D6  
                                                         __ptext8 3604  
                                                         __ptext9 4170  
                                     Button_Reading_Update@button 001D  
                                             ??_Sensor_SetTrisBit 0017  
                                   ?_ADCC_SetADTIInterruptHandler 0016  
                                        _MTOUCH_Sensor_Initialize 3F94  
                                     __end_of_ProcessSliderChange 410C  
                                           _OSCILLATOR_Initialize 410C  
                                                       _T2CONbits 000FBC  
                                                    __size_of_abs 0040  
                                      __end_of_calculate_position 33EC  
                                       ??_Button_State_NotPressed 002B  
                                        ??_PIN_MANAGER_Initialize 0016  
                                                       _T2HLTbits 000FBD  
                                  __size_of_Button_Reading_Update 0030  
                                     __size_of_MTOUCH_needReburst 0004  
                                         Slider_Initialize@slider 0017  
                                   __end_of_Button_Reading_Update 3E1A  
                               MTOUCH_Sensor_InitializeAll@sensor 0021  
                                 __size_of_Slider_DefaultCallback 0002  
                                                _callback_sampled 00DF  
                                       ??_MTOUCH_Sensor_isEnabled 0016  
                                      __size_of_SYSTEM_Initialize 0022  
                                    Button_Check_AKS_Block@button 001E  
                                                _callback_pressed 00D9  
                                  MTOUCH_Sensor_Initialize@sensor 0018  
                                   Sensor_scheduleNextScan@sensor 001E  
                                 i2Sensor_scheduleNextScan@sensor 0009  
                                            end_of_initialization 39C8  
                                        Slider_Service@sliderName 0168  
                                   ??_MTOUCH_Button_Deviation_Get 0016  
                                                       _T2RSTbits 000FBF  
                                        Slider_FindRight@ref_node 0020  
                                         ?_Button_DefaultCallback 0001  
                                                         memcpy@d 001C  
                                                         memcpy@n 001A  
                                                         memcpy@s 001E  
                                  __end_of_Sensor_setSamplePeriod 3EFA  
                                      __end_of_mtouch_sensor_init 0F83  
                                        ?_Sensor_FrequencyHopping 0001  
                                                    ??_ClearEvent 0016  
                                       __end_of_Sensor_SetTrisBit 347C  
                                  calculate_position@raw_position 015B  
                                             GetMotorSpeed@adcVal 0016  
                                         ?_Sensor_DefaultCallback 0001  
                                __size_of_Button_Deviation_Update 012A  
                                    calculate_raw_position@slider 002A  
                                   positional_hysteresis@distance 0030  
                                    ??_MTOUCH_Sensor_isCalibrated 0016  
                                      ??_MTOUCH_Slider_ServiceAll 0033  
                                             GetMotorSpeed@retVal 0018  
                             __end_of_MTOUCH_Sensor_RawSample_Get 3D80  
                                     _MTOUCH_Sensor_RawSample_Get 3D48  
                                    calculate_contact_size@slider 0023  
                                                      _resol_bits 0049  
                                                         postdec1 000FE5  
                                                         postdec2 000FDD  
                                                         postinc0 000FEE  
                                                         postinc1 000FE6  
                                                         postinc2 000FDE  
                                                      _motorState 0034  
                                     __size_of_PWM4_LoadDutyValue 0034  
                                      ?i2_Sensor_scheduleNextScan 0001  
                                         _Sensor_scheduleNextScan 1E6A  
                                             _mtouch_request_init 0041  
                                                ?_ADCC_Initialize 0001  
                              __end_ofi2_MTOUCH_Sensor_wasSampled 3C26  
                                      i2_MTOUCH_Sensor_wasSampled 3BE8  
                  Sensor_FrequencyHopping_Autotune_Process@sensor 0027  
                                   positional_hysteresis@polarity 002F  
                                           __size_of_medianFilter 01F2  
                                              __end_of_ClearEvent 41B6  
                                   Button_Deviation_Update@button 0016  
                                                       _TRISAbits 000F87  
                                                       _TRISBbits 000F88  
                                                       _TRISDbits 000F8A  
                                   MTOUCH_Sensor_isEnabled@sensor 0016  
                                 i2MTOUCH_Sensor_isEnabled@sensor 0001  
                                      MTOUCH_Sensor_Enable@sensor 0016  
                                                 _Slider_FindLeft 2E5E  
                                             _callback_notPressed 00D6  
                                __end_of_MTOUCH_Sensor_isSampling 41E2  
                             __size_of_MTOUCH_Sensor_isCalibrated 003E  
                                  __end_of_Button_DefaultCallback 41E8  
                                     __end_ofi2_Sensor_SetTrisBit 350C  
                               Slider_Service@valid_contact_found 0162  
                                               ?_Slider_FindRight 0017  
                                              get_difference@diff 0021  
                                      Sensor_setCalibrated@sensor 0001  
                                  __end_of_Sensor_DefaultCallback 41E6  
                                        ??_Sensor_autoCalibration 0007  
                                              ??_Slider_FindRight 0019  
                       calculate_raw_position@interpolation_scale 00F6  
                                              medianFilter@sensor 001D  
                                  moving_average_filter@dist_temp 002F  
                                __size_of_Sensor_RawSample_Update 0056  
                           __end_ofi2_Sensor_isCalibratingAcqTime 407C  
                          __size_ofi2_Sensor_isCalibratingAcqTime 0020  
                                   i2_Sensor_isCalibratingAcqTime 405C  
                                          _Slider_DefaultCallback 41E2  
                                                       _GetButton 41D0  
                                                    _medianFilter 1722  
                            __size_of_MTOUCH_Button_Deviation_Get 002C  
                                    __end_of_INTERRUPT_Initialize 41DA  
                                            _Button_State_Pressed 27C4  
                                  ??_ADCC_DefaultInterruptHandler 0001  
                           __end_of_MTOUCH_Sensor_ADCC_Initialize 3A20  
                          __size_of_MTOUCH_Sensor_ADCC_Initialize 004E  
                                   _MTOUCH_Sensor_ADCC_Initialize 39D2  
                               __end_ofi2_Sensor_scheduleNextScan 2196  
                                      ??_MTOUCH_Button_Initialize 0017  
                                            _ProcessButtonRelease 3A20  
                     MTOUCH_Button_SetNotPressedCallback@callback 0016  
                __end_of_Sensor_FrequencyHopping_Autotune_Process 1AF4  
               __size_of_Sensor_FrequencyHopping_Autotune_Process 01E0  
                      ??_Sensor_FrequencyHopping_Autotune_Process 001A  
                       ?_Sensor_FrequencyHopping_Autotune_Process 0001  
                        _Sensor_FrequencyHopping_Autotune_Process 1914  
                                 ??_MTOUCH_Sensor_Scan_Initialize 0019  
                                                  __end_of_divide 2BBE  
                                           _moving_average_filter 28CE  
                                          __size_of_GetMotorSpeed 01B6  
                                              _Button_Tick_helper 366A  
                                                  __end_of_memcpy 383C  
                                          ?_OSCILLATOR_Initialize 0001  
                                             MTOUCH_Button_Tick@i 001A  
                                      ??_ADCC_ThresholdISR_mTouch 0010  
                                     ??_Button_State_Initializing 002B  
                                           _MTOUCH_Sensor_Service 29D4  
                                             start_initialization 3984  
                                         _MTOUCH_Service_Mainloop 3934  
                                 __size_of_PIN_MANAGER_Initialize 0086  
                                  __size_of_positional_hysteresis 015C  
                                              _MTOUCH_Button_Tick 3E7A  
                                 ??_Button_Unscaled_Deviation_Get 0018  
                                             ?_Button_Tick_helper 0016  
                                                     __end_of_abs 3AEE  
                                   __end_of_positional_hysteresis 22F2  
                                        __size_of_ApplicationTask 01C0  
                                 __end_of_Sensor_FrequencyHopping 41A4  
                                               __size_of_GetEvent 0006  
                                         __size_of_get_difference 00B6  
                                     ??i2_MTOUCH_Sensor_isEnabled 0001  
                                             ?_MTOUCH_Button_Tick 0001  
                                 Button_State_Initializing@button 0029  
                                        ??_Button_Check_AKS_Block 0020  
                                      __size_of_Sensor_SetTrisBit 0090  
                                            __size_of_ClearButton 0008  
                                         medianFilter@bufferIndex 0088  
                                _wheel_sensor_middle_channel_zero 003F  
                                __end_of_MTOUCH_Sensor_wasSampled 3BAA  
                                       ??_Sensor_scheduleNextScan 001A  
                                            ??_Button_Tick_helper 0018  
                                    __end_of_MTOUCH_Sensor_Enable 3F22  
                                 get_difference@previous_position 0018  
                                         ?_calculate_raw_position 002A  
                                                      ?_GetButton 0001  
                                                ??_PMD_Initialize 0016  
             Sensor_FrequencyHopping_Autotune_Process@maxVariance 0025  
                                           ?_Button_State_Pressed 0029  
                                                     _CCPTMRSbits 000FAD  
                                                        ??_divide 001B  
                                           ?_ProcessButtonRelease 0001  
                                      ??_MTOUCH_Button_ServiceAll 0034  
                                                     __pdataBANK0 00C4  
                                                        ??_memcpy 001C  
                                      ProcessButtonRelease@button 0018  
                                     __end_of_Sensor_isCalibrated 403C  
                                    ??_Button_Baseline_Initialize 001B  
                                          Slider_FindRight@slider 0017  
                                            ??_MTOUCH_Button_Tick 001A  
                                              _mtouch_button_init 0F01  
                                      Sensor_Sampled_Reset@sensor 0016  
                                         __end_of_Slider_FindLeft 2F2E  
                                    ?_Sensor_isCalibratingAcqTime 0016  
                                                     __pbssCOMRAM 0034  
                                                   _sampling_flag 0047  
                                                   __pcstackBANK0 00F3  
                                                   __pcstackBANK1 0155  
                        __end_of_MTOUCH_Sensor_isSamplingComplete 3732  
                       __size_of_MTOUCH_Sensor_isSamplingComplete 0064  
                              ??_MTOUCH_Sensor_isSamplingComplete 0020  
                               ?_MTOUCH_Sensor_isSamplingComplete 0001  
                                _MTOUCH_Sensor_isSamplingComplete 36CE  
                                        __size_of_PWM4_Initialize 0016  
                                        __size_of_TMR2_Initialize 001E  
                                         Slider_FindLeft@ref_node 001A  
                                        Sensor_SetTrisBit@TrisBit 0016  
                                  MTOUCH_Button_ServiceAll@button 00F3  
                                                ??_Slider_Service 015D  
                                   __size_of_Sensor_Sampled_Reset 0010  
                                                   _GetMotorSpeed 1CB4  
                                         _Button_Deviation_Update 258A  
                                      ?_Sensor_setCalibratAcqTime 0001  
                                  __size_ofi2_Sensor_isCalibrated 0020  
                                   __end_ofi2_Sensor_isCalibrated 405C  
                                       _Button_State_Initializing 2CA0  
                                        _MTOUCH_Sensor_isSampling 41DE  
                              __end_of_MTOUCH_Sensor_isCalibrated 3BE8  
                                      _MTOUCH_Sensor_isCalibrated 3BAA  
                                                       __pnvBANK0 00FD  
                                 __size_of_Sensor_autoCalibration 0148  
                                               _Sensor_setSampled 4160  
                                  __end_of_calculate_raw_position 1274  
                                           Slider_FindLeft@slider 0017  
                                                   ??_interpolate 0024  
                                          _PIN_MANAGER_Initialize 350C  
                                                ??_Button_Service 0030  
                                        ?_MTOUCH_Sensor_Calibrate 0001  
                                              ?_Sensor_setSampled 0001  
                                   Slider_FindMiddle@maximumDelta 0020  
                                                       __pintcode 0008  
                              Button_Reading_Update_Helper@button 0019  
                                      ??_MTOUCH_Sensor_Initialize 0018  
                          positional_hysteresis@previous_position 002A  
                                   __size_of_Sensor_setCalibrated 001E  
                                                       __ptext100 2442  
                                                       __ptext101 3AEE  
                                                       __ptext102 405C  
                                                       __ptext103 40B8  
                                                       __ptext104 3E1A  
                                                       __ptext105 0000  
                                       ApplicationTask@motorSpeed 001C  
                                          ?_moving_average_filter 0023  
                                       i2_MTOUCH_Sensor_isEnabled 3C26  
                                    ??_INTERRUPT_InterruptManager 0010  
                                             ??_Sensor_setSampled 0003  
                                       ??_MTOUCH_Service_Mainloop 0034  
                                get_difference@rollover_threshold 001F  
                                          ?_MTOUCH_Sensor_Service 0001  
                                                     __smallconst 0F00  
                                  ?_MTOUCH_Sensor_ADCC_Initialize 0001  
                                                  __size_ofi2_abs 0040  
                    __end_of_MTOUCH_Sensor_postAcquisitionProcess 38E2  
                   __size_of_MTOUCH_Sensor_postAcquisitionProcess 0052  
                          ??_MTOUCH_Sensor_postAcquisitionProcess 0022  
                           ?_MTOUCH_Sensor_postAcquisitionProcess 0001  
                            _MTOUCH_Sensor_postAcquisitionProcess 3890  
                                   ??_Sensor_isCalibratingAcqTime 0018  
                                                   ??_MTOUCH_Tick 001B  
                                       i2Sensor_SetTrisBit@sensor 0004  
                                                        _T2CLKCON 000FBE  
                                               _sliderGroupStatus 0096  
                                            _INTERRUPT_Initialize 41D6  
            Button_Check_AKS_Block@surplus_deviation_check_button 0025  
                                              Slider_FindMiddle@i 0022  
                                          fp__ProcessSliderChange 0000  
                                                  ?_GetMotorSpeed 0016  
                           __end_of_Button_Unscaled_Deviation_Get 3890  
                          __size_of_Button_Unscaled_Deviation_Get 0054  
                                   _Button_Unscaled_Deviation_Get 383C  
                              Button_Check_AKS_Block@check_button 0027  
                                       __end_of_Sensor_setSampled 4170  
                                              _calculate_position 3352  
                                    ?_MTOUCH_Slider_InitializeAll 0001  
                                 positional_hysteresis@hyst_width 002E  
                                                        _LATBbits 000F83  
                                                        _LATCbits 000F84  
                                                        _LATDbits 000F85  
                                               ??_ApplicationTask 001A  
                                 __size_of_Button_Check_AKS_Block 0150  
                                         _Sensor_RawSample_Update 3790  
                               __end_of_Sensor_setCalibratAcqTime 3E4A  
                                                        _PIE1bits 000EBE  
                             __size_of_INTERRUPT_InterruptManager 0066  
                                                        i2u410_40 209C  
                                                        i2u410_41 2098  
                                                        i2u411_40 20DE  
                                                        i2u411_41 20DA  
                                                        i2u340_40 3C5A  
                                                        i2u340_41 3C54  
                                                        i2u412_45 2172  
                                                        i2u340_46 3C5C  
                                                        i2u341_40 4058  
                                                        i2u421_40 29EE  
                                                        i2u341_41 4052  
                                                        i2u421_41 29EA  
                                                        i2u413_45 218E  
                                                        i2u341_46 405A  
                                                        i2u413_46 2190  
                                                        i2u342_40 4078  
                                                        i2u406_40 2024  
                                                        i2u422_40 2A26  
                                                        i2u342_41 4072  
                                                        i2u406_41 2020  
                                                        i2u422_41 2A22  
                                                        i2u334_45 348A  
                                                        i2u342_46 407A  
                                                        i2u334_46 348C  
                                                        i2u343_40 3BFA  
                                                        i2u407_40 204A  
                                                        i2u423_40 2A80  
                                                        i2u343_41 3BF6  
                                                        i2u407_41 2046  
                                                        i2u423_41 2A7C  
                                                        i2u335_45 3498  
                                                        i2u335_46 349A  
                                                        i2u360_40 24A0  
                                                        i2u344_40 3C1C  
                                                        i2u408_40 2060  
                                                        i2u424_40 2ABC  
                                                        i2u360_41 249C  
                                                        i2u344_41 3C16  
                                                        i2u408_41 205C  
                                                        i2u424_41 2AB8  
                                                        i2u336_45 34A6  
                                                        i2u344_46 3C1E  
                                                        i2u336_46 34A8  
                                                        i2u345_40 3B08  
                                                        i2u361_40 24BE  
                                                        i2u409_40 2070  
                                                        i2u345_41 3B04  
                                                        i2u361_41 24BA  
                                                        i2u409_41 206C  
                                                        _PIR1bits 000EC6  
                                                        i2u337_45 34B4  
                                                        i2u337_46 34B6  
                                                        i2u362_40 2524  
                                                        i2u362_41 2520  
                                                        i2u338_45 34C2  
                                                        i2u338_46 34C4  
                                                        i2u363_40 2560  
                                                        i2u339_40 3C38  
                                                        i2u363_41 255C  
                                                        i2u339_41 3C34  
                                                        i2u358_40 246A  
                                                        i2u358_41 2466  
                                                        _PIR4bits 000EC9  
                                                        i2u359_45 247E  
                                                        i2u466_40 3D9A  
                                                        i2u466_41 3D96  
                                                        i2u467_48 3DA0  
                                                        i2u467_49 3DB4  
                                          ??_Button_State_Pressed 002B  
                                                        i2u497_40 0030  
                                                        i2u497_41 002C  
                                                        i2u498_40 0040  
                                                        i2u498_41 003C  
                                                        i2u499_40 004E  
                                                        i2u499_41 004A  
                                             ?_calculate_position 0155  
                                                     ??_GetButton 0016  
                          __end_of_MTOUCH_Sensor_Sampled_ResetAll 3934  
                         __size_of_MTOUCH_Sensor_Sampled_ResetAll 0052  
                                  _MTOUCH_Sensor_Sampled_ResetAll 38E2  
                                             interpolate@num_bits 0023  
                                          ??_ProcessButtonRelease 0016  
                                        ?_MTOUCH_Sensor_SampleAll 0001  
                                       fp__Slider_DefaultCallback 0000  
                                              _mtouch_sensor_init 0F56  
                                     ??i2_Sensor_scheduleNextScan 0005  
                                     ?i2_MTOUCH_Sensor_wasSampled 0001  
                                        _MTOUCH_Sensor_wasSampled 3B6C  
                                              _mtouch_time_toScan 0042  
                                __size_of_Sensor_FrequencyHopping 000A  
                                        ??_Button_Baseline_Update 0018  
                                             __end_of_interpolate 2CA0  
          Sensor_FrequencyHopping_Autotune_Process@frequencyIndex 0029  
                                                      _ADCON0bits 000F5B  
                                                      _ADCON1bits 000F54  
                                                      _ADCON2bits 000F55  
                                                      _ADCON3bits 000F56  
                           Button_Check_AKS_Block@currentAKSGroup 0024  
                                          _Sensor_autoCalibration 2442  
                                                ?_Slider_FindLeft 0017  
                                      __end_of_MTOUCH_needReburst 41DE  
                                            ??_calculate_position 0033  
                                                        _GetEvent 41CA  
                          moving_average_filter@previous_position 002D  
                                            _MTOUCH_Sensor_Enable 3EFA  
                                       _callback_position_changed 00D3  
                                                       copy_data0 3998  
                                        Button_Tick_helper@button 0016  
                                       ??_Button_Deviation_Update 0018  
                                           ?_INTERRUPT_Initialize 0001  
                                    __size_of_ProcessSliderChange 001A  
                                           _Button_Reading_Update 3DEA  
                                                  _get_difference 2FF2  
                                        ?_MTOUCH_Button_isPressed 0001  
                                               ??_TMR2_Initialize 0016  
                                               ??_PWM4_Initialize 0016  
                                             __end_of_MTOUCH_Tick 41C4  
                                               _MTOUCH_Initialize 413A  
                                 __end_of_MTOUCH_Sensor_Calibrate 3F4A  
                                         ?_Slider_DefaultCallback 0001  
                                                     _left_signal 003A  
                                   ??_MTOUCH_Slider_InitializeAll 0019  
                                                      _ADSTATbits 000F60  
                                              ?_MTOUCH_Initialize 0001  
                                                        __Hrparam 0000  
                                      __end_of_PWM4_LoadDutyValue 3DEA  
                                                       memcpy@tmp 0020  
                                                        __Lrparam 0000  
                                         Slider_FindMiddle@slider 0017  
                                                    _sample_delay 0043  
                                      Slider_Service@group_status 0161  
                                                     _middle_node 0040  
                                               divide@denominator 0018  
                        MTOUCH_Sensor_postAcquisitionProcess@name 0022  
                                        ??_calculate_contact_size 0025  
                                         ??_OSCILLATOR_Initialize 0016  
                              __end_of_Button_Baseline_Initialize 3790  
                                      _Button_Baseline_Initialize 3732  
                                             ??_MTOUCH_Initialize 0022  
                                       __size_of_Slider_FindRight 00C4  
                                        ?_Button_State_NotPressed 0029  
                                          _Button_Check_AKS_Block 22F2  
                                     i2Sensor_isCalibrated@sensor 0001  
                                              Button_Service@name 0031  
                                        ?_MTOUCH_Sensor_isEnabled 0001  
                               __size_of_MTOUCH_Slider_ServiceAll 0024  
                                        __size_of_ADCC_Initialize 0066  
                                       ?_MTOUCH_Slider_ServiceAll 0001  
                             __end_of_MTOUCH_Button_Deviation_Get 3ED2  
                                     _MTOUCH_Button_Deviation_Get 3EA6  
                                          __end_of_get_difference 30A8  
                                           ?_MTOUCH_Sensor_Enable 0001  
                                                        __ptext10 3934  
                                                        __ptext11 41DA  
                                                        __ptext20 2FF2  
                                                        __ptext12 41BE  
                                                        __ptext21 0F84  
                                                        __ptext13 3E7A  
                                                        __ptext30 41E2  
                                                        __ptext22 2BBE  
                                                        __ptext14 366A  
                                                        __ptext31 3D10  
                                                        __ptext23 2ADA  
                                                        __ptext15 3F70  
                                                        __ptext40 1722  
                                                        __ptext32 3A6E  
                                                        __ptext24 320C  
                                                        __ptext16 1274  
                                                        __ptext41 41E4  
                                                        __ptext33 3F4A  
                                                        __ptext25 2F2E  
                                                        __ptext17 3352  
                                                        __ptext50 409A  
                                                        __ptext42 36CE  
                                                        __ptext34 419A  
                                                        __ptext26 30A8  
                                                        __ptext18 2196  
                                                        __ptext51 32B6  
                                                        __ptext43 1E6A  
                                                        __ptext35 3ED2  
                                                        __ptext27 2E5E  
                                                        __ptext19 28CE  
                                                        __ptext60 3C9E  
                                                        __ptext52 41C4  
                                                        __ptext44 3FFC  
                                                        __ptext36 1914  
                                                        __ptext28 3EA6  
                                                        __ptext61 37E6  
                                                        __ptext53 39D2  
                                                        __ptext45 401C  
                                                        __ptext37 3AAE  
                                                        __ptext29 40F2  
                                                        __ptext70 3A20  
                                                        __ptext62 3FDA  
                                                        __ptext54 417E  
                                                        __ptext46 33EC  
                                                        __ptext38 3890  
                                                        __ptext71 3592  
                                                        __ptext63 2D82  
                                                        __ptext55 38E2  
                                                        __ptext47 3B2E  
                                                        __ptext39 3790  
                                                        __ptext80 258A  
                                                        __ptext72 3F22  
                                                        __ptext64 3B6C  
                                                        __ptext56 3C64  
                                                        __ptext48 41DE  
                                                        __ptext81 418C  
                                                        __ptext73 22F2  
                                                        __ptext65 3BAA  
                                                        __ptext57 3F94  
                                                        __ptext49 413A  
                                                        __ptext90 3D80  
                                                        __ptext82 1AF4  
                                                        __ptext74 383C  
                                                        __ptext66 1528  
                                                        __ptext58 4150  
                                                        __ptext91 41E8  
                                                        __ptext83 3DB6  
                                                        __ptext75 26B4  
                                                        __ptext67 2CA0  
                                                        __ptext59 3EFA  
                                                        __ptext92 41A4  
                                                        __ptext84 1CB4  
                                                        __ptext76 3732  
                                                        __ptext68 27C4  
                                                        __ptext93 29D4  
                                                        __ptext85 41CA  
                                                        __ptext77 3DEA  
                                                        __ptext69 41E6  
                                                        __ptext94 2000  
                                                        __ptext86 41D0  
                                                        __ptext78 315E  
                                                        __ptext95 403C  
                                                        __ptext87 41AE  
                                                        __ptext79 3D48  
                                                        __ptext96 347C  
                                                        __ptext88 41B6  
                                                        __ptext97 3BE8  
                                                        __ptext98 3C26  
                                                        __ptext99 4160  
                                                 ??_GetMotorSpeed 0018  
                                    Slider_DefaultCallback@slider 0001  
                                       i2_Sensor_scheduleNextScan 2000  
                                                    _right_signal 0038  
                                       __end_of_MTOUCH_Initialize 4150  
                                       ??_Sensor_RawSample_Update 0020  
                                                        _freq_hop 00DC  
                                  __end_of_Slider_DefaultCallback 41E4  
                                      __size_of_Sensor_setSampled 0010  
                                               _currentScanSensor 0048  
                                                        _buttonNo 003E  
                                                   __size_of_main 0038  
                                 __end_of_MTOUCH_Sensor_SampleAll 3F70  
                                      Sensor_autoCalibration@name 000B  
                                    __size_ofi2_Sensor_SetTrisBit 0090  
                                                     _interpolate 2BBE  
                                          Slider_Service@position 0163  
                                                        int$flags 004A  
                                               _callback_released 00CD  
                              __size_of_Button_State_Initializing 00E2  
                              __end_of_INTERRUPT_InterruptManager 006E  
                                      _INTERRUPT_InterruptManager 0008  
                                 __size_of_Button_Baseline_Update 0110  
                                    ?_MTOUCH_Button_InitializeAll 0001  
                                    ?_MTOUCH_Sensor_InitializeAll 0001  
                            __size_of_MTOUCH_Slider_InitializeAll 001E  
             Button_Check_AKS_Block@surplus_deviation_this_button 0022  
                                                   _mtouch_button 0100  
                                                      _INTCONbits 000FF2  
                                                   _mtouch_slider 00E2  
                                                   _mtouch_sensor 0097  
                                                        memcpy@d1 0016  
                                                        memcpy@s1 0018  
                                 __end_of_MTOUCH_Button_isPressed 3AAE  
                                        ??_Sensor_setSamplePeriod 0016  
                                      ??_MTOUCH_Sensor_isSampling 0016  
                                      calculate_position@position 0157  
                                          ??_INTERRUPT_Initialize 0016  
                                                 ?_get_difference 0016  
                                                     _MTOUCH_Tick 41BE  
                                          ?_Button_Reading_Update 001D  
                                     Slider_Initialize@sliderName 0016  
                                Button_Deviation_Update@deviation 0022  
                                    MTOUCH_Button_Initialize@name 0017  
                               __size_of_MTOUCH_Button_Initialize 0072  
                                                   ??_ClearButton 0016  
                                           _positional_hysteresis 2196  
                            __end_of_ADCC_DefaultInterruptHandler 41EA  
                           __size_of_ADCC_DefaultInterruptHandler 0002  
                                    _ADCC_DefaultInterruptHandler 41E8  
                                                        intlevel2 0000  
                                       ?_MTOUCH_Button_Initialize 0001  
                                         ?_PIN_MANAGER_Initialize 0001  
                               __size_of_ADCC_ThresholdISR_mTouch 000A  
                                     ??_Sensor_setCalibratAcqTime 0003  
                                       ?_ADCC_ThresholdISR_mTouch 0001  
                                    ??_MTOUCH_Slider_Position_Get 0018  
                             Button_Unscaled_Deviation_Get@button 0016  
                                     ?_MTOUCH_Sensor_isCalibrated 0001  
                Sensor_FrequencyHopping_Autotune_Process@variance 0023  
                            _callback_pressed@mtouch_slider$F1229 00D0  
                                    Sensor_scheduleNextScan@state 001C  
                                           Slider_Service@segment 0166  
                           moving_average_filter@current_position 0025  
                                         ??_moving_average_filter 0027  
                                     __size_of_Button_Tick_helper 0064  
                                 __end_of_Button_State_NotPressed 1722  
                                         _Sensor_FrequencyHopping 419A  
                                         ??_MTOUCH_Sensor_Service 000C  
                                 __size_of_calculate_contact_size 00AA  
                                                     _resol_value 003C  
                                    __end_of_Sensor_Sampled_Reset 4160  
                                         fp__Button_State_Pressed 0000  
                                 __end_of_MTOUCH_Sensor_isEnabled 3B6C  
                                         fp__ProcessButtonRelease 0000  
                                     __size_of_MTOUCH_Button_Tick 002C  
                                 Sensor_scheduleNextScan@skipScan 001D  
                               i2Sensor_scheduleNextScan@skipScan 0008  
                                   ??_MTOUCH_Button_InitializeAll 0021  
                                        ??_Button_DefaultCallback 0016  
                                   ??_MTOUCH_Sensor_InitializeAll 0021  
                                __size_of_MTOUCH_Sensor_Calibrate 0028  
                                 MTOUCH_Button_Deviation_Get@name 0016  
                                          ??_MTOUCH_Sensor_Enable 0016  
                                            Slider_Service@slider 0169  
       Sensor_FrequencyHopping_Autotune_Process@newfrequencyFound 0022  
                               Sensor_isCalibratingAcqTime@sensor 0016  
                             i2Sensor_isCalibratingAcqTime@sensor 0001  
                                    __size_of_Sensor_isCalibrated 0020  
                                                 _ApplicationTask 1AF4  
                                        ??_Sensor_DefaultCallback 0016  
                                   moving_average_filter@distance 0031  
                                            Slider_Service@status 0165  
                                    __end_of_Sensor_setCalibrated 40D6  
                            __end_of_Button_Reading_Update_Helper 320C  
                           __size_of_Button_Reading_Update_Helper 00AE  
                                    _Button_Reading_Update_Helper 315E  
                             __size_of_MTOUCH_Slider_Position_Get 0038  
                                  calculate_raw_position@deadband 00F7  
                               __size_of_MTOUCH_Button_ServiceAll 0022  
                                       ?_MTOUCH_Button_ServiceAll 0001  
                                   Button_State_NotPressed@button 0029  
                                      __size_of_MTOUCH_Initialize 0016  
                                  ??_ADCC_SetADTIInterruptHandler 0019  
                                  __end_of_PIN_MANAGER_Initialize 3592  
                                               ??_ADCC_Initialize 0019  
                                          _Button_Baseline_Update 26B4  
                                 fp__ADCC_DefaultInterruptHandler 0000  
                                   ?_ADCC_DefaultInterruptHandler 0001  
                                        ?_Sensor_scheduleNextScan 0001  
                                 ??_MTOUCH_Sensor_ADCC_Initialize 0019  
                                     MTOUCH_Button_isPressed@name 0017  
                                      ??_MTOUCH_Sensor_wasSampled 0016  
                                             __end_of_ClearButton 41BE  
                                           i2_Sensor_isCalibrated 403C  
